name: Release

on:
  push:
    tags:
      - 'v*'

env:
  PROVIDER: yandex
  GO_VERSION: "1.22"
  NODE_VERSION: "18"
  PYTHON_VERSION: "3.11"
  DOTNET_VERSION: "8.0"

jobs:
  build-provider:
    name: Build Provider Binary
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.12.0
        with:
          repo: pulumi/pulumictl

      - name: Get Version
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Build Provider
        run: |
          make provider
          tar -czf provider-binary.tar.gz bin/

      - name: Upload Provider Binary
        uses: actions/upload-artifact@v4
        with:
          name: provider-binary
          path: provider-binary.tar.gz

  build-sdks:
    name: Build Node.js SDK
    runs-on: ubuntu-latest
    needs: build-provider
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://npm.pkg.github.com'
          scope: '@airoh'

      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.12.0
        with:
          repo: pulumi/pulumictl

      - name: Download Provider Binary
        uses: actions/download-artifact@v4
        with:
          name: provider-binary

      - name: Extract Provider Binary
        run: tar -xzf provider-binary.tar.gz

      - name: Build Node.js SDK
        run: make build_nodejs

      - name: Package Node.js SDK
        run: tar -czf nodejs-sdk.tar.gz -C sdk/nodejs/bin .

      - name: Upload Node.js SDK
        uses: actions/upload-artifact@v4
        with:
          name: nodejs-sdk
          path: nodejs-sdk.tar.gz

  publish-npm:
    name: Publish to GitHub Packages
    runs-on: ubuntu-latest
    needs: build-sdks
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://npm.pkg.github.com'

      - name: Download Node.js SDK
        uses: actions/download-artifact@v4
        with:
          name: nodejs-sdk

      - name: Extract SDK
        run: |
          mkdir -p publish
          tar -xzf nodejs-sdk.tar.gz -C publish

      - name: Publish to GitHub Packages
        working-directory: publish
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-provider, build-sdks]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Get Version
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Generate Release Notes
        run: |
          cat > release-notes.md << 'EOF'
          ## Pulumi Yandex Provider ${{ steps.version.outputs.version }}
          
          ### What's New
          - Based on Terraform Yandex Provider v0.160.0
          - 107 resources (46 new resources)
          - 96 data sources (39 new data sources)
          
          ### Installation
          
          #### Node.js/TypeScript (Published to GitHub Packages)
          
          **Configure npm:**
          ```bash
          echo "@airoh:registry=https://npm.pkg.github.com" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=YOUR_GITHUB_TOKEN" >> ~/.npmrc
          ```
          
          **Install:**
          ```bash
          npm install @airoh/pulumi-yandex@${{ steps.version.outputs.version }}
          ```
          
          #### Other SDKs (Available as Release Assets)
          - Python SDK: Download from release assets
          - Go SDK: Download from release assets
          - .NET SDK: Download from release assets
          
          ### Documentation
          See the [README](https://github.com/airoh-io/pulumi-yandex) and [QUICK_START.md](https://github.com/airoh-io/pulumi-yandex/blob/master/QUICK_START.md) for complete documentation.
          EOF

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          body_path: release-notes.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}