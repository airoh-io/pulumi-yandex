// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetAlbVirtualHost
    {
        /// <summary>
        /// Get information about a Yandex ALB Virtual Host. For more information, see [Yandex Cloud Application Load Balancer](https://yandex.cloud/docs/application-load-balancer/quickstart).
        /// 
        /// This data source is used to define [Application Load Balancer Virtual Host](https://yandex.cloud/docs/application-load-balancer/concepts/http-router) that can be used by other resources.
        /// 
        /// &gt; One of `virtual_host_id` or `name` with `http_router_id` should be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var my_vhost = Yandex.GetAlbVirtualHost.Invoke(new()
        ///     {
        ///         Name = yandex_alb_virtual_host.My_vh.Name,
        ///         HttpRouterId = yandex_alb_virtual_host.My_router.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAlbVirtualHostResult> InvokeAsync(GetAlbVirtualHostArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAlbVirtualHostResult>("yandex:index/getAlbVirtualHost:getAlbVirtualHost", args ?? new GetAlbVirtualHostArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex ALB Virtual Host. For more information, see [Yandex Cloud Application Load Balancer](https://yandex.cloud/docs/application-load-balancer/quickstart).
        /// 
        /// This data source is used to define [Application Load Balancer Virtual Host](https://yandex.cloud/docs/application-load-balancer/concepts/http-router) that can be used by other resources.
        /// 
        /// &gt; One of `virtual_host_id` or `name` with `http_router_id` should be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var my_vhost = Yandex.GetAlbVirtualHost.Invoke(new()
        ///     {
        ///         Name = yandex_alb_virtual_host.My_vh.Name,
        ///         HttpRouterId = yandex_alb_virtual_host.My_router.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAlbVirtualHostResult> Invoke(GetAlbVirtualHostInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAlbVirtualHostResult>("yandex:index/getAlbVirtualHost:getAlbVirtualHost", args ?? new GetAlbVirtualHostInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex ALB Virtual Host. For more information, see [Yandex Cloud Application Load Balancer](https://yandex.cloud/docs/application-load-balancer/quickstart).
        /// 
        /// This data source is used to define [Application Load Balancer Virtual Host](https://yandex.cloud/docs/application-load-balancer/concepts/http-router) that can be used by other resources.
        /// 
        /// &gt; One of `virtual_host_id` or `name` with `http_router_id` should be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var my_vhost = Yandex.GetAlbVirtualHost.Invoke(new()
        ///     {
        ///         Name = yandex_alb_virtual_host.My_vh.Name,
        ///         HttpRouterId = yandex_alb_virtual_host.My_router.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAlbVirtualHostResult> Invoke(GetAlbVirtualHostInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAlbVirtualHostResult>("yandex:index/getAlbVirtualHost:getAlbVirtualHost", args ?? new GetAlbVirtualHostInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAlbVirtualHostArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the HTTP router to which the virtual host belongs.
        /// </summary>
        [Input("httpRouterId")]
        public string? HttpRouterId { get; set; }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The ID of a specific Virtual Host. Virtual Host ID is concatenation of HTTP Router ID and Virtual Host name with `/` symbol between them. For Example, `http_router_id/vhost_name`.
        /// </summary>
        [Input("virtualHostId")]
        public string? VirtualHostId { get; set; }

        public GetAlbVirtualHostArgs()
        {
        }
        public static new GetAlbVirtualHostArgs Empty => new GetAlbVirtualHostArgs();
    }

    public sealed class GetAlbVirtualHostInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the HTTP router to which the virtual host belongs.
        /// </summary>
        [Input("httpRouterId")]
        public Input<string>? HttpRouterId { get; set; }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of a specific Virtual Host. Virtual Host ID is concatenation of HTTP Router ID and Virtual Host name with `/` symbol between them. For Example, `http_router_id/vhost_name`.
        /// </summary>
        [Input("virtualHostId")]
        public Input<string>? VirtualHostId { get; set; }

        public GetAlbVirtualHostInvokeArgs()
        {
        }
        public static new GetAlbVirtualHostInvokeArgs Empty => new GetAlbVirtualHostInvokeArgs();
    }


    [OutputType]
    public sealed class GetAlbVirtualHostResult
    {
        /// <summary>
        /// A list of domains (host/authority header) that will be matched to this virtual host. Wildcard hosts are supported in the form of '*.foo.com' or '*-bar.foo.com'. If not specified, all domains will be matched.
        /// </summary>
        public readonly ImmutableArray<string> Authorities;
        /// <summary>
        /// The ID of the HTTP router to which the virtual host belongs.
        /// </summary>
        public readonly string HttpRouterId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Apply the following modifications to the Request/Response header.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAlbVirtualHostModifyRequestHeaderResult> ModifyRequestHeaders;
        public readonly ImmutableArray<Outputs.GetAlbVirtualHostModifyResponseHeaderResult> ModifyResponseHeaders;
        /// <summary>
        /// The resource name.
        /// </summary>
        public readonly string Name;
        public readonly ImmutableArray<Outputs.GetAlbVirtualHostRateLimitResult> RateLimits;
        public readonly ImmutableArray<Outputs.GetAlbVirtualHostRouteOptionResult> RouteOptions;
        public readonly ImmutableArray<Outputs.GetAlbVirtualHostRouteResult> Routes;
        /// <summary>
        /// The ID of a specific Virtual Host. Virtual Host ID is concatenation of HTTP Router ID and Virtual Host name with `/` symbol between them. For Example, `http_router_id/vhost_name`.
        /// </summary>
        public readonly string VirtualHostId;

        [OutputConstructor]
        private GetAlbVirtualHostResult(
            ImmutableArray<string> authorities,

            string httpRouterId,

            string id,

            ImmutableArray<Outputs.GetAlbVirtualHostModifyRequestHeaderResult> modifyRequestHeaders,

            ImmutableArray<Outputs.GetAlbVirtualHostModifyResponseHeaderResult> modifyResponseHeaders,

            string name,

            ImmutableArray<Outputs.GetAlbVirtualHostRateLimitResult> rateLimits,

            ImmutableArray<Outputs.GetAlbVirtualHostRouteOptionResult> routeOptions,

            ImmutableArray<Outputs.GetAlbVirtualHostRouteResult> routes,

            string virtualHostId)
        {
            Authorities = authorities;
            HttpRouterId = httpRouterId;
            Id = id;
            ModifyRequestHeaders = modifyRequestHeaders;
            ModifyResponseHeaders = modifyResponseHeaders;
            Name = name;
            RateLimits = rateLimits;
            RouteOptions = routeOptions;
            Routes = routes;
            VirtualHostId = virtualHostId;
        }
    }
}
