// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetComputeDiskPlacementGroup
    {
        /// <summary>
        /// Get information about a Yandex Compute Disk Placement group. For more information, see [the official documentation](https://yandex.cloud/docs/compute/concepts/disk#nr-disks).
        /// 
        /// &gt; One of `group_id` or `name` should be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myGroup = Yandex.GetComputeDiskPlacementGroup.Invoke(new()
        ///     {
        ///         GroupId = "some_group_id",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["placementGroupName"] = myGroup.Apply(getComputeDiskPlacementGroupResult =&gt; getComputeDiskPlacementGroupResult.Name),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetComputeDiskPlacementGroupResult> InvokeAsync(GetComputeDiskPlacementGroupArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetComputeDiskPlacementGroupResult>("yandex:index/getComputeDiskPlacementGroup:getComputeDiskPlacementGroup", args ?? new GetComputeDiskPlacementGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex Compute Disk Placement group. For more information, see [the official documentation](https://yandex.cloud/docs/compute/concepts/disk#nr-disks).
        /// 
        /// &gt; One of `group_id` or `name` should be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myGroup = Yandex.GetComputeDiskPlacementGroup.Invoke(new()
        ///     {
        ///         GroupId = "some_group_id",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["placementGroupName"] = myGroup.Apply(getComputeDiskPlacementGroupResult =&gt; getComputeDiskPlacementGroupResult.Name),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetComputeDiskPlacementGroupResult> Invoke(GetComputeDiskPlacementGroupInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetComputeDiskPlacementGroupResult>("yandex:index/getComputeDiskPlacementGroup:getComputeDiskPlacementGroup", args ?? new GetComputeDiskPlacementGroupInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex Compute Disk Placement group. For more information, see [the official documentation](https://yandex.cloud/docs/compute/concepts/disk#nr-disks).
        /// 
        /// &gt; One of `group_id` or `name` should be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myGroup = Yandex.GetComputeDiskPlacementGroup.Invoke(new()
        ///     {
        ///         GroupId = "some_group_id",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["placementGroupName"] = myGroup.Apply(getComputeDiskPlacementGroupResult =&gt; getComputeDiskPlacementGroupResult.Name),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetComputeDiskPlacementGroupResult> Invoke(GetComputeDiskPlacementGroupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetComputeDiskPlacementGroupResult>("yandex:index/getComputeDiskPlacementGroup:getComputeDiskPlacementGroup", args ?? new GetComputeDiskPlacementGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetComputeDiskPlacementGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The resource description.
        /// </summary>
        [Input("description")]
        public string? Description { get; set; }

        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public string? FolderId { get; set; }

        /// <summary>
        /// The ID of a specific group.
        /// </summary>
        [Input("groupId")]
        public string? GroupId { get; set; }

        [Input("labels")]
        private Dictionary<string, string>? _labels;

        /// <summary>
        /// A set of key/value label pairs which assigned to resource.
        /// </summary>
        public Dictionary<string, string> Labels
        {
            get => _labels ?? (_labels = new Dictionary<string, string>());
            set => _labels = value;
        }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.
        /// </summary>
        [Input("zone")]
        public string? Zone { get; set; }

        public GetComputeDiskPlacementGroupArgs()
        {
        }
        public static new GetComputeDiskPlacementGroupArgs Empty => new GetComputeDiskPlacementGroupArgs();
    }

    public sealed class GetComputeDiskPlacementGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The resource description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        /// <summary>
        /// The ID of a specific group.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A set of key/value label pairs which assigned to resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public GetComputeDiskPlacementGroupInvokeArgs()
        {
        }
        public static new GetComputeDiskPlacementGroupInvokeArgs Empty => new GetComputeDiskPlacementGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetComputeDiskPlacementGroupResult
    {
        /// <summary>
        /// The creation timestamp of the resource.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The resource description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        public readonly string FolderId;
        /// <summary>
        /// The ID of a specific group.
        /// </summary>
        public readonly string GroupId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A set of key/value label pairs which assigned to resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Labels;
        /// <summary>
        /// The resource name.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Status of the Disk Placement Group.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.
        /// </summary>
        public readonly string? Zone;

        [OutputConstructor]
        private GetComputeDiskPlacementGroupResult(
            string createdAt,

            string? description,

            string folderId,

            string groupId,

            string id,

            ImmutableDictionary<string, string>? labels,

            string? name,

            string status,

            string? zone)
        {
            CreatedAt = createdAt;
            Description = description;
            FolderId = folderId;
            GroupId = groupId;
            Id = id;
            Labels = labels;
            Name = name;
            Status = status;
            Zone = zone;
        }
    }
}
