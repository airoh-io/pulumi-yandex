// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetComputeGpuCluster
    {
        /// <summary>
        /// Get information about a Yandex Compute GPU cluster. For more information, see [the official documentation](https://yandex.cloud/docs/compute/concepts/gpu-cluster).
        /// 
        /// &gt; One of `gpu_cluster_id` or `name` should be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myGpuCluster = Yandex.GetComputeGpuCluster.Invoke(new()
        ///     {
        ///         GpuClusterId = "some_gpu_cluster_id",
        ///     });
        /// 
        ///     // You can use "data.yandex_compute_gpu_cluster.my_gpu_cluster.id" identifier 
        ///     // as reference to the existing resource.
        ///     // ...
        ///     var @default = new Yandex.ComputeInstance("default", new()
        ///     {
        ///         GpuClusterId = myGpuCluster.Apply(getComputeGpuClusterResult =&gt; getComputeGpuClusterResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetComputeGpuClusterResult> InvokeAsync(GetComputeGpuClusterArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetComputeGpuClusterResult>("yandex:index/getComputeGpuCluster:getComputeGpuCluster", args ?? new GetComputeGpuClusterArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex Compute GPU cluster. For more information, see [the official documentation](https://yandex.cloud/docs/compute/concepts/gpu-cluster).
        /// 
        /// &gt; One of `gpu_cluster_id` or `name` should be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myGpuCluster = Yandex.GetComputeGpuCluster.Invoke(new()
        ///     {
        ///         GpuClusterId = "some_gpu_cluster_id",
        ///     });
        /// 
        ///     // You can use "data.yandex_compute_gpu_cluster.my_gpu_cluster.id" identifier 
        ///     // as reference to the existing resource.
        ///     // ...
        ///     var @default = new Yandex.ComputeInstance("default", new()
        ///     {
        ///         GpuClusterId = myGpuCluster.Apply(getComputeGpuClusterResult =&gt; getComputeGpuClusterResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetComputeGpuClusterResult> Invoke(GetComputeGpuClusterInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetComputeGpuClusterResult>("yandex:index/getComputeGpuCluster:getComputeGpuCluster", args ?? new GetComputeGpuClusterInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex Compute GPU cluster. For more information, see [the official documentation](https://yandex.cloud/docs/compute/concepts/gpu-cluster).
        /// 
        /// &gt; One of `gpu_cluster_id` or `name` should be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myGpuCluster = Yandex.GetComputeGpuCluster.Invoke(new()
        ///     {
        ///         GpuClusterId = "some_gpu_cluster_id",
        ///     });
        /// 
        ///     // You can use "data.yandex_compute_gpu_cluster.my_gpu_cluster.id" identifier 
        ///     // as reference to the existing resource.
        ///     // ...
        ///     var @default = new Yandex.ComputeInstance("default", new()
        ///     {
        ///         GpuClusterId = myGpuCluster.Apply(getComputeGpuClusterResult =&gt; getComputeGpuClusterResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetComputeGpuClusterResult> Invoke(GetComputeGpuClusterInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetComputeGpuClusterResult>("yandex:index/getComputeGpuCluster:getComputeGpuCluster", args ?? new GetComputeGpuClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetComputeGpuClusterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public string? FolderId { get; set; }

        /// <summary>
        /// ID of the GPU cluster.
        /// </summary>
        [Input("gpuClusterId")]
        public string? GpuClusterId { get; set; }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetComputeGpuClusterArgs()
        {
        }
        public static new GetComputeGpuClusterArgs Empty => new GetComputeGpuClusterArgs();
    }

    public sealed class GetComputeGpuClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        /// <summary>
        /// ID of the GPU cluster.
        /// </summary>
        [Input("gpuClusterId")]
        public Input<string>? GpuClusterId { get; set; }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetComputeGpuClusterInvokeArgs()
        {
        }
        public static new GetComputeGpuClusterInvokeArgs Empty => new GetComputeGpuClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetComputeGpuClusterResult
    {
        /// <summary>
        /// The creation timestamp of the resource.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The resource description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        public readonly string FolderId;
        /// <summary>
        /// ID of the GPU cluster.
        /// </summary>
        public readonly string GpuClusterId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Type of interconnect between nodes to use in GPU cluster. Type `INFINIBAND` is set by default, and it is the only one available at the moment.
        /// </summary>
        public readonly string InterconnectType;
        /// <summary>
        /// A set of key/value label pairs which assigned to resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// The resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The status of the GPU cluster.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.
        /// </summary>
        public readonly string Zone;

        [OutputConstructor]
        private GetComputeGpuClusterResult(
            string createdAt,

            string description,

            string folderId,

            string gpuClusterId,

            string id,

            string interconnectType,

            ImmutableDictionary<string, string> labels,

            string name,

            string status,

            string zone)
        {
            CreatedAt = createdAt;
            Description = description;
            FolderId = folderId;
            GpuClusterId = gpuClusterId;
            Id = id;
            InterconnectType = interconnectType;
            Labels = labels;
            Name = name;
            Status = status;
            Zone = zone;
        }
    }
}
