// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetComputeInstance
    {
        /// <summary>
        /// Get information about a Yandex Compute instance. For more information, see [the official documentation](https://yandex.cloud/docs/compute/concepts/vm).
        /// 
        /// &gt; One of `instance_id` or `name` should be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myInstance = Yandex.GetComputeInstance.Invoke(new()
        ///     {
        ///         InstanceId = "some_instance_id",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["instanceExternalIp"] = myInstance.Apply(getComputeInstanceResult =&gt; getComputeInstanceResult.NetworkInterfaces[0]?.NatIpAddress),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetComputeInstanceResult> InvokeAsync(GetComputeInstanceArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetComputeInstanceResult>("yandex:index/getComputeInstance:getComputeInstance", args ?? new GetComputeInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex Compute instance. For more information, see [the official documentation](https://yandex.cloud/docs/compute/concepts/vm).
        /// 
        /// &gt; One of `instance_id` or `name` should be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myInstance = Yandex.GetComputeInstance.Invoke(new()
        ///     {
        ///         InstanceId = "some_instance_id",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["instanceExternalIp"] = myInstance.Apply(getComputeInstanceResult =&gt; getComputeInstanceResult.NetworkInterfaces[0]?.NatIpAddress),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetComputeInstanceResult> Invoke(GetComputeInstanceInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetComputeInstanceResult>("yandex:index/getComputeInstance:getComputeInstance", args ?? new GetComputeInstanceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex Compute instance. For more information, see [the official documentation](https://yandex.cloud/docs/compute/concepts/vm).
        /// 
        /// &gt; One of `instance_id` or `name` should be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myInstance = Yandex.GetComputeInstance.Invoke(new()
        ///     {
        ///         InstanceId = "some_instance_id",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["instanceExternalIp"] = myInstance.Apply(getComputeInstanceResult =&gt; getComputeInstanceResult.NetworkInterfaces[0]?.NatIpAddress),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetComputeInstanceResult> Invoke(GetComputeInstanceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetComputeInstanceResult>("yandex:index/getComputeInstance:getComputeInstance", args ?? new GetComputeInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetComputeInstanceArgs : global::Pulumi.InvokeArgs
    {
        [Input("filesystems")]
        private List<Inputs.GetComputeInstanceFilesystemArgs>? _filesystems;
        public List<Inputs.GetComputeInstanceFilesystemArgs> Filesystems
        {
            get => _filesystems ?? (_filesystems = new List<Inputs.GetComputeInstanceFilesystemArgs>());
            set => _filesystems = value;
        }

        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public string? FolderId { get; set; }

        /// <summary>
        /// ID of the GPU cluster to attach this instance to.
        /// </summary>
        [Input("gpuClusterId")]
        public string? GpuClusterId { get; set; }

        /// <summary>
        /// The ID of a specific instance.
        /// </summary>
        [Input("instanceId")]
        public string? InstanceId { get; set; }

        [Input("localDisks")]
        private List<Inputs.GetComputeInstanceLocalDiskArgs>? _localDisks;
        public List<Inputs.GetComputeInstanceLocalDiskArgs> LocalDisks
        {
            get => _localDisks ?? (_localDisks = new List<Inputs.GetComputeInstanceLocalDiskArgs>());
            set => _localDisks = value;
        }

        /// <summary>
        /// Time between notification via metadata service and maintenance. E.g., `60s`.
        /// </summary>
        [Input("maintenanceGracePeriod")]
        public string? MaintenanceGracePeriod { get; set; }

        /// <summary>
        /// Behavior on maintenance events. Can be: `unspecified`, `migrate`, `restart`. The default is `unspecified`.
        /// </summary>
        [Input("maintenancePolicy")]
        public string? MaintenancePolicy { get; set; }

        [Input("metadataOptions")]
        public Inputs.GetComputeInstanceMetadataOptionsArgs? MetadataOptions { get; set; }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        [Input("placementPolicy")]
        public Inputs.GetComputeInstancePlacementPolicyArgs? PlacementPolicy { get; set; }

        /// <summary>
        /// [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
        /// </summary>
        [Input("serviceAccountId")]
        public string? ServiceAccountId { get; set; }

        public GetComputeInstanceArgs()
        {
        }
        public static new GetComputeInstanceArgs Empty => new GetComputeInstanceArgs();
    }

    public sealed class GetComputeInstanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filesystems")]
        private InputList<Inputs.GetComputeInstanceFilesystemInputArgs>? _filesystems;
        public InputList<Inputs.GetComputeInstanceFilesystemInputArgs> Filesystems
        {
            get => _filesystems ?? (_filesystems = new InputList<Inputs.GetComputeInstanceFilesystemInputArgs>());
            set => _filesystems = value;
        }

        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        /// <summary>
        /// ID of the GPU cluster to attach this instance to.
        /// </summary>
        [Input("gpuClusterId")]
        public Input<string>? GpuClusterId { get; set; }

        /// <summary>
        /// The ID of a specific instance.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        [Input("localDisks")]
        private InputList<Inputs.GetComputeInstanceLocalDiskInputArgs>? _localDisks;
        public InputList<Inputs.GetComputeInstanceLocalDiskInputArgs> LocalDisks
        {
            get => _localDisks ?? (_localDisks = new InputList<Inputs.GetComputeInstanceLocalDiskInputArgs>());
            set => _localDisks = value;
        }

        /// <summary>
        /// Time between notification via metadata service and maintenance. E.g., `60s`.
        /// </summary>
        [Input("maintenanceGracePeriod")]
        public Input<string>? MaintenanceGracePeriod { get; set; }

        /// <summary>
        /// Behavior on maintenance events. Can be: `unspecified`, `migrate`, `restart`. The default is `unspecified`.
        /// </summary>
        [Input("maintenancePolicy")]
        public Input<string>? MaintenancePolicy { get; set; }

        [Input("metadataOptions")]
        public Input<Inputs.GetComputeInstanceMetadataOptionsInputArgs>? MetadataOptions { get; set; }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("placementPolicy")]
        public Input<Inputs.GetComputeInstancePlacementPolicyInputArgs>? PlacementPolicy { get; set; }

        /// <summary>
        /// [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
        /// </summary>
        [Input("serviceAccountId")]
        public Input<string>? ServiceAccountId { get; set; }

        public GetComputeInstanceInvokeArgs()
        {
        }
        public static new GetComputeInstanceInvokeArgs Empty => new GetComputeInstanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetComputeInstanceResult
    {
        public readonly ImmutableArray<Outputs.GetComputeInstanceBootDiskResult> BootDisks;
        /// <summary>
        /// The creation timestamp of the resource.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The resource description.
        /// </summary>
        public readonly string Description;
        public readonly ImmutableArray<Outputs.GetComputeInstanceFilesystemResult> Filesystems;
        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        public readonly string FolderId;
        /// <summary>
        /// The fully qualified DNS name of this instance.
        /// </summary>
        public readonly string Fqdn;
        /// <summary>
        /// ID of the GPU cluster to attach this instance to.
        /// </summary>
        public readonly string GpuClusterId;
        public readonly ImmutableArray<Outputs.GetComputeInstanceHardwareGenerationResult> HardwareGenerations;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The ID of a specific instance.
        /// </summary>
        public readonly string InstanceId;
        /// <summary>
        /// A set of key/value label pairs which assigned to resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        public readonly ImmutableArray<Outputs.GetComputeInstanceLocalDiskResult> LocalDisks;
        /// <summary>
        /// Time between notification via metadata service and maintenance. E.g., `60s`.
        /// </summary>
        public readonly string MaintenanceGracePeriod;
        /// <summary>
        /// Behavior on maintenance events. Can be: `unspecified`, `migrate`, `restart`. The default is `unspecified`.
        /// </summary>
        public readonly string MaintenancePolicy;
        /// <summary>
        /// Metadata key/value pairs to make available from within the instance.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Metadata;
        public readonly Outputs.GetComputeInstanceMetadataOptionsResult MetadataOptions;
        /// <summary>
        /// The resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Type of network acceleration. Can be `standard` or `software_accelerated`. The default is `standard`.
        /// </summary>
        public readonly string NetworkAccelerationType;
        public readonly ImmutableArray<Outputs.GetComputeInstanceNetworkInterfaceResult> NetworkInterfaces;
        public readonly Outputs.GetComputeInstancePlacementPolicyResult? PlacementPolicy;
        /// <summary>
        /// The type of virtual machine to create.
        /// </summary>
        public readonly string PlatformId;
        public readonly ImmutableArray<Outputs.GetComputeInstanceResourceResult> Resources;
        public readonly ImmutableArray<Outputs.GetComputeInstanceSchedulingPolicyResult> SchedulingPolicies;
        public readonly ImmutableArray<Outputs.GetComputeInstanceSecondaryDiskResult> SecondaryDisks;
        /// <summary>
        /// [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
        /// </summary>
        public readonly string? ServiceAccountId;
        /// <summary>
        /// The status of this instance.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.
        /// </summary>
        public readonly string Zone;

        [OutputConstructor]
        private GetComputeInstanceResult(
            ImmutableArray<Outputs.GetComputeInstanceBootDiskResult> bootDisks,

            string createdAt,

            string description,

            ImmutableArray<Outputs.GetComputeInstanceFilesystemResult> filesystems,

            string folderId,

            string fqdn,

            string gpuClusterId,

            ImmutableArray<Outputs.GetComputeInstanceHardwareGenerationResult> hardwareGenerations,

            string id,

            string instanceId,

            ImmutableDictionary<string, string> labels,

            ImmutableArray<Outputs.GetComputeInstanceLocalDiskResult> localDisks,

            string maintenanceGracePeriod,

            string maintenancePolicy,

            ImmutableDictionary<string, string> metadata,

            Outputs.GetComputeInstanceMetadataOptionsResult metadataOptions,

            string name,

            string networkAccelerationType,

            ImmutableArray<Outputs.GetComputeInstanceNetworkInterfaceResult> networkInterfaces,

            Outputs.GetComputeInstancePlacementPolicyResult? placementPolicy,

            string platformId,

            ImmutableArray<Outputs.GetComputeInstanceResourceResult> resources,

            ImmutableArray<Outputs.GetComputeInstanceSchedulingPolicyResult> schedulingPolicies,

            ImmutableArray<Outputs.GetComputeInstanceSecondaryDiskResult> secondaryDisks,

            string? serviceAccountId,

            string status,

            string zone)
        {
            BootDisks = bootDisks;
            CreatedAt = createdAt;
            Description = description;
            Filesystems = filesystems;
            FolderId = folderId;
            Fqdn = fqdn;
            GpuClusterId = gpuClusterId;
            HardwareGenerations = hardwareGenerations;
            Id = id;
            InstanceId = instanceId;
            Labels = labels;
            LocalDisks = localDisks;
            MaintenanceGracePeriod = maintenanceGracePeriod;
            MaintenancePolicy = maintenancePolicy;
            Metadata = metadata;
            MetadataOptions = metadataOptions;
            Name = name;
            NetworkAccelerationType = networkAccelerationType;
            NetworkInterfaces = networkInterfaces;
            PlacementPolicy = placementPolicy;
            PlatformId = platformId;
            Resources = resources;
            SchedulingPolicies = schedulingPolicies;
            SecondaryDisks = secondaryDisks;
            ServiceAccountId = serviceAccountId;
            Status = status;
            Zone = zone;
        }
    }
}
