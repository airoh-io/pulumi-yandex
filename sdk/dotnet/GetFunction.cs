// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetFunction
    {
        /// <summary>
        /// Get information about a Yandex Cloud Function. For more information about Yandex Cloud Functions, see [Yandex Cloud Functions](https://yandex.cloud/docs/functions).
        /// This data source is used to define [Yandex Cloud Function](https://yandex.cloud/docs/functions/concepts/function) that can be used by other resources.
        /// 
        /// &gt; Either `function_id` or `name` must be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myFunction = Yandex.GetFunction.Invoke(new()
        ///     {
        ///         FunctionId = "d4e45**********pqvd3",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetFunctionResult> InvokeAsync(GetFunctionArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFunctionResult>("yandex:index/getFunction:getFunction", args ?? new GetFunctionArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex Cloud Function. For more information about Yandex Cloud Functions, see [Yandex Cloud Functions](https://yandex.cloud/docs/functions).
        /// This data source is used to define [Yandex Cloud Function](https://yandex.cloud/docs/functions/concepts/function) that can be used by other resources.
        /// 
        /// &gt; Either `function_id` or `name` must be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myFunction = Yandex.GetFunction.Invoke(new()
        ///     {
        ///         FunctionId = "d4e45**********pqvd3",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFunctionResult> Invoke(GetFunctionInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFunctionResult>("yandex:index/getFunction:getFunction", args ?? new GetFunctionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex Cloud Function. For more information about Yandex Cloud Functions, see [Yandex Cloud Functions](https://yandex.cloud/docs/functions).
        /// This data source is used to define [Yandex Cloud Function](https://yandex.cloud/docs/functions/concepts/function) that can be used by other resources.
        /// 
        /// &gt; Either `function_id` or `name` must be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myFunction = Yandex.GetFunction.Invoke(new()
        ///     {
        ///         FunctionId = "d4e45**********pqvd3",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFunctionResult> Invoke(GetFunctionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetFunctionResult>("yandex:index/getFunction:getFunction", args ?? new GetFunctionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFunctionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The maximum number of requests processed by a function instance at the same time.
        /// </summary>
        [Input("concurrency")]
        public int? Concurrency { get; set; }

        [Input("connectivity")]
        public Inputs.GetFunctionConnectivityArgs? Connectivity { get; set; }

        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public string? FolderId { get; set; }

        /// <summary>
        /// Yandex Cloud Function id used to define function.
        /// </summary>
        [Input("functionId")]
        public string? FunctionId { get; set; }

        [Input("metadataOptions")]
        public Inputs.GetFunctionMetadataOptionsArgs? MetadataOptions { get; set; }

        [Input("mounts")]
        private List<Inputs.GetFunctionMountArgs>? _mounts;
        public List<Inputs.GetFunctionMountArgs> Mounts
        {
            get => _mounts ?? (_mounts = new List<Inputs.GetFunctionMountArgs>());
            set => _mounts = value;
        }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        [Input("secrets")]
        private List<Inputs.GetFunctionSecretArgs>? _secrets;
        public List<Inputs.GetFunctionSecretArgs> Secrets
        {
            get => _secrets ?? (_secrets = new List<Inputs.GetFunctionSecretArgs>());
            set => _secrets = value;
        }

        [Input("storageMounts")]
        private List<Inputs.GetFunctionStorageMountArgs>? _storageMounts;
        [Obsolete(@"to manage storage_mountss, please switch to using a separate resource type mounts")]
        public List<Inputs.GetFunctionStorageMountArgs> StorageMounts
        {
            get => _storageMounts ?? (_storageMounts = new List<Inputs.GetFunctionStorageMountArgs>());
            set => _storageMounts = value;
        }

        public GetFunctionArgs()
        {
        }
        public static new GetFunctionArgs Empty => new GetFunctionArgs();
    }

    public sealed class GetFunctionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The maximum number of requests processed by a function instance at the same time.
        /// </summary>
        [Input("concurrency")]
        public Input<int>? Concurrency { get; set; }

        [Input("connectivity")]
        public Input<Inputs.GetFunctionConnectivityInputArgs>? Connectivity { get; set; }

        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        /// <summary>
        /// Yandex Cloud Function id used to define function.
        /// </summary>
        [Input("functionId")]
        public Input<string>? FunctionId { get; set; }

        [Input("metadataOptions")]
        public Input<Inputs.GetFunctionMetadataOptionsInputArgs>? MetadataOptions { get; set; }

        [Input("mounts")]
        private InputList<Inputs.GetFunctionMountInputArgs>? _mounts;
        public InputList<Inputs.GetFunctionMountInputArgs> Mounts
        {
            get => _mounts ?? (_mounts = new InputList<Inputs.GetFunctionMountInputArgs>());
            set => _mounts = value;
        }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("secrets")]
        private InputList<Inputs.GetFunctionSecretInputArgs>? _secrets;
        public InputList<Inputs.GetFunctionSecretInputArgs> Secrets
        {
            get => _secrets ?? (_secrets = new InputList<Inputs.GetFunctionSecretInputArgs>());
            set => _secrets = value;
        }

        [Input("storageMounts")]
        private InputList<Inputs.GetFunctionStorageMountInputArgs>? _storageMounts;
        [Obsolete(@"to manage storage_mountss, please switch to using a separate resource type mounts")]
        public InputList<Inputs.GetFunctionStorageMountInputArgs> StorageMounts
        {
            get => _storageMounts ?? (_storageMounts = new InputList<Inputs.GetFunctionStorageMountInputArgs>());
            set => _storageMounts = value;
        }

        public GetFunctionInvokeArgs()
        {
        }
        public static new GetFunctionInvokeArgs Empty => new GetFunctionInvokeArgs();
    }


    [OutputType]
    public sealed class GetFunctionResult
    {
        public readonly ImmutableArray<Outputs.GetFunctionAsyncInvocationResult> AsyncInvocations;
        /// <summary>
        /// The maximum number of requests processed by a function instance at the same time.
        /// </summary>
        public readonly int Concurrency;
        public readonly Outputs.GetFunctionConnectivityResult? Connectivity;
        /// <summary>
        /// The creation timestamp of the resource.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The resource description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Entrypoint for Yandex Cloud Function.
        /// </summary>
        public readonly string Entrypoint;
        /// <summary>
        /// A set of key/value environment variables for Yandex Cloud Function. Each key must begin with a letter (A-Z, a-z).
        /// </summary>
        public readonly ImmutableDictionary<string, string> Environment;
        /// <summary>
        /// Execution timeout in seconds for Yandex Cloud Function.
        /// </summary>
        public readonly string ExecutionTimeout;
        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        public readonly string? FolderId;
        /// <summary>
        /// Yandex Cloud Function id used to define function.
        /// </summary>
        public readonly string? FunctionId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Image size for Yandex Cloud Function.
        /// </summary>
        public readonly int ImageSize;
        /// <summary>
        /// A set of key/value label pairs which assigned to resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        public readonly ImmutableArray<Outputs.GetFunctionLogOptionResult> LogOptions;
        /// <summary>
        /// Memory in megabytes (**aligned to 128MB**) for Yandex Cloud Function.
        /// </summary>
        public readonly int Memory;
        public readonly Outputs.GetFunctionMetadataOptionsResult MetadataOptions;
        public readonly ImmutableArray<Outputs.GetFunctionMountResult> Mounts;
        /// <summary>
        /// The resource name.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Runtime for Yandex Cloud Function.
        /// </summary>
        public readonly string Runtime;
        public readonly ImmutableArray<Outputs.GetFunctionSecretResult> Secrets;
        /// <summary>
        /// [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
        /// </summary>
        public readonly string ServiceAccountId;
        public readonly ImmutableArray<Outputs.GetFunctionStorageMountResult> StorageMounts;
        /// <summary>
        /// Tags for Yandex Cloud Function. Tag `$latest` isn't returned.
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// Tmpfs size for Yandex Cloud Function.
        /// </summary>
        public readonly int TmpfsSize;
        /// <summary>
        /// Version of Yandex Cloud Function.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetFunctionResult(
            ImmutableArray<Outputs.GetFunctionAsyncInvocationResult> asyncInvocations,

            int concurrency,

            Outputs.GetFunctionConnectivityResult? connectivity,

            string createdAt,

            string description,

            string entrypoint,

            ImmutableDictionary<string, string> environment,

            string executionTimeout,

            string? folderId,

            string? functionId,

            string id,

            int imageSize,

            ImmutableDictionary<string, string> labels,

            ImmutableArray<Outputs.GetFunctionLogOptionResult> logOptions,

            int memory,

            Outputs.GetFunctionMetadataOptionsResult metadataOptions,

            ImmutableArray<Outputs.GetFunctionMountResult> mounts,

            string? name,

            string runtime,

            ImmutableArray<Outputs.GetFunctionSecretResult> secrets,

            string serviceAccountId,

            ImmutableArray<Outputs.GetFunctionStorageMountResult> storageMounts,

            ImmutableArray<string> tags,

            int tmpfsSize,

            string version)
        {
            AsyncInvocations = asyncInvocations;
            Concurrency = concurrency;
            Connectivity = connectivity;
            CreatedAt = createdAt;
            Description = description;
            Entrypoint = entrypoint;
            Environment = environment;
            ExecutionTimeout = executionTimeout;
            FolderId = folderId;
            FunctionId = functionId;
            Id = id;
            ImageSize = imageSize;
            Labels = labels;
            LogOptions = logOptions;
            Memory = memory;
            MetadataOptions = metadataOptions;
            Mounts = mounts;
            Name = name;
            Runtime = runtime;
            Secrets = secrets;
            ServiceAccountId = serviceAccountId;
            StorageMounts = storageMounts;
            Tags = tags;
            TmpfsSize = tmpfsSize;
            Version = version;
        }
    }
}
