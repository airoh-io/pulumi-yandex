// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetFunctionTrigger
    {
        /// <summary>
        /// Get information about a Yandex Cloud Function Trigger. For more information about Yandex Cloud Functions, see [Yandex Cloud Functions](https://yandex.cloud/docs/functions/).
        /// 
        /// This data source is used to define [Yandex Cloud Functions Trigger](https://yandex.cloud/docs/functions/concepts/trigger) that can be used by other resources.
        /// 
        /// &gt; Either `trigger_id` or `name` must be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myTrigger = Yandex.GetFunctionTrigger.Invoke(new()
        ///     {
        ///         TriggerId = "a1scn**********3ur32",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetFunctionTriggerResult> InvokeAsync(GetFunctionTriggerArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFunctionTriggerResult>("yandex:index/getFunctionTrigger:getFunctionTrigger", args ?? new GetFunctionTriggerArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex Cloud Function Trigger. For more information about Yandex Cloud Functions, see [Yandex Cloud Functions](https://yandex.cloud/docs/functions/).
        /// 
        /// This data source is used to define [Yandex Cloud Functions Trigger](https://yandex.cloud/docs/functions/concepts/trigger) that can be used by other resources.
        /// 
        /// &gt; Either `trigger_id` or `name` must be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myTrigger = Yandex.GetFunctionTrigger.Invoke(new()
        ///     {
        ///         TriggerId = "a1scn**********3ur32",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFunctionTriggerResult> Invoke(GetFunctionTriggerInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFunctionTriggerResult>("yandex:index/getFunctionTrigger:getFunctionTrigger", args ?? new GetFunctionTriggerInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex Cloud Function Trigger. For more information about Yandex Cloud Functions, see [Yandex Cloud Functions](https://yandex.cloud/docs/functions/).
        /// 
        /// This data source is used to define [Yandex Cloud Functions Trigger](https://yandex.cloud/docs/functions/concepts/trigger) that can be used by other resources.
        /// 
        /// &gt; Either `trigger_id` or `name` must be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myTrigger = Yandex.GetFunctionTrigger.Invoke(new()
        ///     {
        ///         TriggerId = "a1scn**********3ur32",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFunctionTriggerResult> Invoke(GetFunctionTriggerInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetFunctionTriggerResult>("yandex:index/getFunctionTrigger:getFunctionTrigger", args ?? new GetFunctionTriggerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFunctionTriggerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public string? FolderId { get; set; }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Yandex Cloud Functions Trigger id used to define trigger.
        /// </summary>
        [Input("triggerId")]
        public string? TriggerId { get; set; }

        public GetFunctionTriggerArgs()
        {
        }
        public static new GetFunctionTriggerArgs Empty => new GetFunctionTriggerArgs();
    }

    public sealed class GetFunctionTriggerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Yandex Cloud Functions Trigger id used to define trigger.
        /// </summary>
        [Input("triggerId")]
        public Input<string>? TriggerId { get; set; }

        public GetFunctionTriggerInvokeArgs()
        {
        }
        public static new GetFunctionTriggerInvokeArgs Empty => new GetFunctionTriggerInvokeArgs();
    }


    [OutputType]
    public sealed class GetFunctionTriggerResult
    {
        public readonly ImmutableArray<Outputs.GetFunctionTriggerContainerRegistryResult> ContainerRegistries;
        public readonly ImmutableArray<Outputs.GetFunctionTriggerContainerResult> Containers;
        /// <summary>
        /// The creation timestamp of the resource.
        /// </summary>
        public readonly string CreatedAt;
        public readonly ImmutableArray<Outputs.GetFunctionTriggerDataStreamResult> DataStreams;
        /// <summary>
        /// The resource description.
        /// </summary>
        public readonly string Description;
        public readonly ImmutableArray<Outputs.GetFunctionTriggerDlqResult> Dlqs;
        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        public readonly string? FolderId;
        public readonly ImmutableArray<Outputs.GetFunctionTriggerFunctionResult> Functions;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetFunctionTriggerIotResult> Iots;
        /// <summary>
        /// A set of key/value label pairs which assigned to resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        public readonly ImmutableArray<Outputs.GetFunctionTriggerLogGroupResult> LogGroups;
        public readonly ImmutableArray<Outputs.GetFunctionTriggerLoggingResult> Loggings;
        public readonly ImmutableArray<Outputs.GetFunctionTriggerMailResult> Mails;
        public readonly ImmutableArray<Outputs.GetFunctionTriggerMessageQueueResult> MessageQueues;
        /// <summary>
        /// The resource name.
        /// </summary>
        public readonly string? Name;
        public readonly ImmutableArray<Outputs.GetFunctionTriggerObjectStorageResult> ObjectStorages;
        public readonly ImmutableArray<Outputs.GetFunctionTriggerTimerResult> Timers;
        /// <summary>
        /// Yandex Cloud Functions Trigger id used to define trigger.
        /// </summary>
        public readonly string? TriggerId;

        [OutputConstructor]
        private GetFunctionTriggerResult(
            ImmutableArray<Outputs.GetFunctionTriggerContainerRegistryResult> containerRegistries,

            ImmutableArray<Outputs.GetFunctionTriggerContainerResult> containers,

            string createdAt,

            ImmutableArray<Outputs.GetFunctionTriggerDataStreamResult> dataStreams,

            string description,

            ImmutableArray<Outputs.GetFunctionTriggerDlqResult> dlqs,

            string? folderId,

            ImmutableArray<Outputs.GetFunctionTriggerFunctionResult> functions,

            string id,

            ImmutableArray<Outputs.GetFunctionTriggerIotResult> iots,

            ImmutableDictionary<string, string> labels,

            ImmutableArray<Outputs.GetFunctionTriggerLogGroupResult> logGroups,

            ImmutableArray<Outputs.GetFunctionTriggerLoggingResult> loggings,

            ImmutableArray<Outputs.GetFunctionTriggerMailResult> mails,

            ImmutableArray<Outputs.GetFunctionTriggerMessageQueueResult> messageQueues,

            string? name,

            ImmutableArray<Outputs.GetFunctionTriggerObjectStorageResult> objectStorages,

            ImmutableArray<Outputs.GetFunctionTriggerTimerResult> timers,

            string? triggerId)
        {
            ContainerRegistries = containerRegistries;
            Containers = containers;
            CreatedAt = createdAt;
            DataStreams = dataStreams;
            Description = description;
            Dlqs = dlqs;
            FolderId = folderId;
            Functions = functions;
            Id = id;
            Iots = iots;
            Labels = labels;
            LogGroups = logGroups;
            Loggings = loggings;
            Mails = mails;
            MessageQueues = messageQueues;
            Name = name;
            ObjectStorages = objectStorages;
            Timers = timers;
            TriggerId = triggerId;
        }
    }
}
