// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetIamUser
    {
        /// <summary>
        /// Get information about a Yandex IAM user account. For more information about accounts, see [Yandex Cloud IAM accounts](https://yandex.cloud/docs/iam/concepts/#accounts).
        /// 
        /// This data source is used to define [IAM User](https://yandex.cloud/docs/iam/concepts/#passport) that can be used by other resources.
        /// 
        /// &gt; Either `login` or `user_id` must be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var admin = Yandex.GetIamUser.Invoke(new()
        ///     {
        ///         Login = "my-yandex-login",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetIamUserResult> InvokeAsync(GetIamUserArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIamUserResult>("yandex:index/getIamUser:getIamUser", args ?? new GetIamUserArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex IAM user account. For more information about accounts, see [Yandex Cloud IAM accounts](https://yandex.cloud/docs/iam/concepts/#accounts).
        /// 
        /// This data source is used to define [IAM User](https://yandex.cloud/docs/iam/concepts/#passport) that can be used by other resources.
        /// 
        /// &gt; Either `login` or `user_id` must be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var admin = Yandex.GetIamUser.Invoke(new()
        ///     {
        ///         Login = "my-yandex-login",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetIamUserResult> Invoke(GetIamUserInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIamUserResult>("yandex:index/getIamUser:getIamUser", args ?? new GetIamUserInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex IAM user account. For more information about accounts, see [Yandex Cloud IAM accounts](https://yandex.cloud/docs/iam/concepts/#accounts).
        /// 
        /// This data source is used to define [IAM User](https://yandex.cloud/docs/iam/concepts/#passport) that can be used by other resources.
        /// 
        /// &gt; Either `login` or `user_id` must be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var admin = Yandex.GetIamUser.Invoke(new()
        ///     {
        ///         Login = "my-yandex-login",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetIamUserResult> Invoke(GetIamUserInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetIamUserResult>("yandex:index/getIamUser:getIamUser", args ?? new GetIamUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIamUserArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Login name used to sign in to Yandex Passport.
        /// </summary>
        [Input("login")]
        public string? Login { get; set; }

        /// <summary>
        /// User ID used to manage IAM access bindings.
        /// </summary>
        [Input("userId")]
        public string? UserId { get; set; }

        public GetIamUserArgs()
        {
        }
        public static new GetIamUserArgs Empty => new GetIamUserArgs();
    }

    public sealed class GetIamUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Login name used to sign in to Yandex Passport.
        /// </summary>
        [Input("login")]
        public Input<string>? Login { get; set; }

        /// <summary>
        /// User ID used to manage IAM access bindings.
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        public GetIamUserInvokeArgs()
        {
        }
        public static new GetIamUserInvokeArgs Empty => new GetIamUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetIamUserResult
    {
        /// <summary>
        /// Email address of user account.
        /// </summary>
        public readonly string DefaultEmail;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Login name used to sign in to Yandex Passport.
        /// </summary>
        public readonly string Login;
        /// <summary>
        /// User ID used to manage IAM access bindings.
        /// </summary>
        public readonly string UserId;

        [OutputConstructor]
        private GetIamUserResult(
            string defaultEmail,

            string id,

            string login,

            string userId)
        {
            DefaultEmail = defaultEmail;
            Id = id;
            Login = login;
            UserId = userId;
        }
    }
}
