// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetKubernetesNodeGroup
    {
        /// <summary>
        /// Get information about a Yandex Kubernetes Node Group. For more information, see
        /// [the official documentation](https://cloud.yandex.com/docs/managed-kubernetes/concepts/#node-group).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var myNodeGroup = Output.Create(Yandex.GetKubernetesNodeGroup.InvokeAsync(new Yandex.GetKubernetesNodeGroupArgs
        ///         {
        ///             NodeGroupId = "some_k8s_node_group_id",
        ///         }));
        ///         this.MyNodeGroup_status = myNodeGroup.Apply(myNodeGroup =&gt; myNodeGroup.Status);
        ///     }
        /// 
        ///     [Output("myNodeGroup.status")]
        ///     public Output&lt;string&gt; MyNodeGroup_status { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetKubernetesNodeGroupResult> InvokeAsync(GetKubernetesNodeGroupArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetKubernetesNodeGroupResult>("yandex:index/getKubernetesNodeGroup:getKubernetesNodeGroup", args ?? new GetKubernetesNodeGroupArgs(), options.WithVersion());
    }


    public sealed class GetKubernetesNodeGroupArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Folder that the resource belongs to. If value is omitted, the default provider folder is used.
        /// </summary>
        [Input("folderId")]
        public string? FolderId { get; set; }

        /// <summary>
        /// Name of a specific Kubernetes node group.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// ID of a specific Kubernetes node group.
        /// </summary>
        [Input("nodeGroupId")]
        public string? NodeGroupId { get; set; }

        public GetKubernetesNodeGroupArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetKubernetesNodeGroupResult
    {
        /// <summary>
        /// This argument specify subnets (zones), that will be used by node group compute instances. The structure is documented below.
        /// </summary>
        public readonly Outputs.GetKubernetesNodeGroupAllocationPolicyResult AllocationPolicy;
        /// <summary>
        /// A list of allowed unsafe sysctl parameters for this node group. For more details see [documentation](https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/).
        /// </summary>
        public readonly ImmutableArray<string> AllowedUnsafeSysctls;
        /// <summary>
        /// The ID of the Kubernetes cluster that this node group belongs to.
        /// </summary>
        public readonly string ClusterId;
        /// <summary>
        /// The Kubernetes node group creation timestamp.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// Deploy policy of the node group. The structure is documented below.
        /// </summary>
        public readonly Outputs.GetKubernetesNodeGroupDeployPolicyResult DeployPolicy;
        /// <summary>
        /// A description of the Kubernetes node group.
        /// </summary>
        public readonly string Description;
        public readonly string FolderId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// ID of instance group that is used to manage this Kubernetes node group.
        /// </summary>
        public readonly string InstanceGroupId;
        /// <summary>
        /// Template used to create compute instances in this Kubernetes node group. The structure is documented below.
        /// </summary>
        public readonly Outputs.GetKubernetesNodeGroupInstanceTemplateResult InstanceTemplate;
        /// <summary>
        /// A map of labels applied to this instance.
        /// * `resources.0.memory` - The memory size allocated to the instance.
        /// * `resources.0.cores` - Number of CPU cores allocated to the instance.
        /// * `resources.0.core_fraction` - Baseline core performance as a percent.
        /// * `resources.0.gpus` - Number of GPU cores allocated to the instance.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Information about maintenance policy for this Kubernetes node group. The structure is documented below.
        /// </summary>
        public readonly Outputs.GetKubernetesNodeGroupMaintenancePolicyResult MaintenancePolicy;
        public readonly string Name;
        public readonly string NodeGroupId;
        /// <summary>
        /// A set of key/value label pairs, that are assigned to all the nodes of this Kubernetes node group.
        /// </summary>
        public readonly ImmutableDictionary<string, string> NodeLabels;
        /// <summary>
        /// A list of Kubernetes taints, that are applied to all the nodes of this Kubernetes node group.
        /// </summary>
        public readonly ImmutableArray<string> NodeTaints;
        /// <summary>
        /// Scale policy of the node group. The structure is documented below.
        /// </summary>
        public readonly Outputs.GetKubernetesNodeGroupScalePolicyResult ScalePolicy;
        /// <summary>
        /// Status of the Kubernetes node group.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Information about Kubernetes node group version. The structure is documented below.
        /// </summary>
        public readonly Outputs.GetKubernetesNodeGroupVersionInfoResult VersionInfo;

        [OutputConstructor]
        private GetKubernetesNodeGroupResult(
            Outputs.GetKubernetesNodeGroupAllocationPolicyResult allocationPolicy,

            ImmutableArray<string> allowedUnsafeSysctls,

            string clusterId,

            string createdAt,

            Outputs.GetKubernetesNodeGroupDeployPolicyResult deployPolicy,

            string description,

            string folderId,

            string id,

            string instanceGroupId,

            Outputs.GetKubernetesNodeGroupInstanceTemplateResult instanceTemplate,

            ImmutableDictionary<string, string> labels,

            Outputs.GetKubernetesNodeGroupMaintenancePolicyResult maintenancePolicy,

            string name,

            string nodeGroupId,

            ImmutableDictionary<string, string> nodeLabels,

            ImmutableArray<string> nodeTaints,

            Outputs.GetKubernetesNodeGroupScalePolicyResult scalePolicy,

            string status,

            Outputs.GetKubernetesNodeGroupVersionInfoResult versionInfo)
        {
            AllocationPolicy = allocationPolicy;
            AllowedUnsafeSysctls = allowedUnsafeSysctls;
            ClusterId = clusterId;
            CreatedAt = createdAt;
            DeployPolicy = deployPolicy;
            Description = description;
            FolderId = folderId;
            Id = id;
            InstanceGroupId = instanceGroupId;
            InstanceTemplate = instanceTemplate;
            Labels = labels;
            MaintenancePolicy = maintenancePolicy;
            Name = name;
            NodeGroupId = nodeGroupId;
            NodeLabels = nodeLabels;
            NodeTaints = nodeTaints;
            ScalePolicy = scalePolicy;
            Status = status;
            VersionInfo = versionInfo;
        }
    }
}
