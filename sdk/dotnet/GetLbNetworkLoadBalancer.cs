// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetLbNetworkLoadBalancer
    {
        /// <summary>
        /// Get information about a Yandex Load Balancer network load balancer. For more information, see [the official documentation](https://yandex.cloud/docs/load-balancer/concepts/).
        /// 
        /// This data source is used to define [Load Balancer Network Load Balancers](https://yandex.cloud/docs/load-balancer/concepts/) that can be used by other resources.
        /// 
        /// &gt; One of `network_load_balancer_id` or `name` should be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myNlb = Yandex.GetLbNetworkLoadBalancer.Invoke(new()
        ///     {
        ///         NetworkLoadBalancerId = "my-network-load-balancer",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetLbNetworkLoadBalancerResult> InvokeAsync(GetLbNetworkLoadBalancerArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLbNetworkLoadBalancerResult>("yandex:index/getLbNetworkLoadBalancer:getLbNetworkLoadBalancer", args ?? new GetLbNetworkLoadBalancerArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex Load Balancer network load balancer. For more information, see [the official documentation](https://yandex.cloud/docs/load-balancer/concepts/).
        /// 
        /// This data source is used to define [Load Balancer Network Load Balancers](https://yandex.cloud/docs/load-balancer/concepts/) that can be used by other resources.
        /// 
        /// &gt; One of `network_load_balancer_id` or `name` should be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myNlb = Yandex.GetLbNetworkLoadBalancer.Invoke(new()
        ///     {
        ///         NetworkLoadBalancerId = "my-network-load-balancer",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetLbNetworkLoadBalancerResult> Invoke(GetLbNetworkLoadBalancerInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLbNetworkLoadBalancerResult>("yandex:index/getLbNetworkLoadBalancer:getLbNetworkLoadBalancer", args ?? new GetLbNetworkLoadBalancerInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex Load Balancer network load balancer. For more information, see [the official documentation](https://yandex.cloud/docs/load-balancer/concepts/).
        /// 
        /// This data source is used to define [Load Balancer Network Load Balancers](https://yandex.cloud/docs/load-balancer/concepts/) that can be used by other resources.
        /// 
        /// &gt; One of `network_load_balancer_id` or `name` should be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myNlb = Yandex.GetLbNetworkLoadBalancer.Invoke(new()
        ///     {
        ///         NetworkLoadBalancerId = "my-network-load-balancer",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetLbNetworkLoadBalancerResult> Invoke(GetLbNetworkLoadBalancerInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetLbNetworkLoadBalancerResult>("yandex:index/getLbNetworkLoadBalancer:getLbNetworkLoadBalancer", args ?? new GetLbNetworkLoadBalancerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLbNetworkLoadBalancerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public string? FolderId { get; set; }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Network load balancer ID.
        /// </summary>
        [Input("networkLoadBalancerId")]
        public string? NetworkLoadBalancerId { get; set; }

        public GetLbNetworkLoadBalancerArgs()
        {
        }
        public static new GetLbNetworkLoadBalancerArgs Empty => new GetLbNetworkLoadBalancerArgs();
    }

    public sealed class GetLbNetworkLoadBalancerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Network load balancer ID.
        /// </summary>
        [Input("networkLoadBalancerId")]
        public Input<string>? NetworkLoadBalancerId { get; set; }

        public GetLbNetworkLoadBalancerInvokeArgs()
        {
        }
        public static new GetLbNetworkLoadBalancerInvokeArgs Empty => new GetLbNetworkLoadBalancerInvokeArgs();
    }


    [OutputType]
    public sealed class GetLbNetworkLoadBalancerResult
    {
        /// <summary>
        /// Flag that marks the network load balancer as available to zonal shift.
        /// </summary>
        public readonly bool AllowZonalShift;
        public readonly ImmutableArray<Outputs.GetLbNetworkLoadBalancerAttachedTargetGroupResult> AttachedTargetGroups;
        /// <summary>
        /// The creation timestamp of the resource.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The `true` value means that resource is protected from accidental deletion.
        /// </summary>
        public readonly bool DeletionProtection;
        /// <summary>
        /// The resource description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        public readonly string FolderId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A set of key/value label pairs which assigned to resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        public readonly ImmutableArray<Outputs.GetLbNetworkLoadBalancerListenerResult> Listeners;
        /// <summary>
        /// The resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Network load balancer ID.
        /// </summary>
        public readonly string NetworkLoadBalancerId;
        /// <summary>
        /// ID of the availability zone where the network load balancer resides. If omitted, default region is being used.
        /// </summary>
        public readonly string RegionId;
        /// <summary>
        /// Type of the network load balancer. Must be one of 'external' or 'internal'. The default is 'external'.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetLbNetworkLoadBalancerResult(
            bool allowZonalShift,

            ImmutableArray<Outputs.GetLbNetworkLoadBalancerAttachedTargetGroupResult> attachedTargetGroups,

            string createdAt,

            bool deletionProtection,

            string description,

            string folderId,

            string id,

            ImmutableDictionary<string, string> labels,

            ImmutableArray<Outputs.GetLbNetworkLoadBalancerListenerResult> listeners,

            string name,

            string networkLoadBalancerId,

            string regionId,

            string type)
        {
            AllowZonalShift = allowZonalShift;
            AttachedTargetGroups = attachedTargetGroups;
            CreatedAt = createdAt;
            DeletionProtection = deletionProtection;
            Description = description;
            FolderId = folderId;
            Id = id;
            Labels = labels;
            Listeners = listeners;
            Name = name;
            NetworkLoadBalancerId = networkLoadBalancerId;
            RegionId = regionId;
            Type = type;
        }
    }
}
