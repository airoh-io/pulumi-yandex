// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetLoadtestingAgent
    {
        /// <summary>
        /// Get information about a Yandex Load Testing Agent.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myAgent = Yandex.GetLoadtestingAgent.Invoke(new()
        ///     {
        ///         AgentId = "some_agent_id",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["instanceExternalIp"] = myAgent.Apply(getLoadtestingAgentResult =&gt; getLoadtestingAgentResult.ComputeInstances[0]?.NetworkInterfaces[0]?.NatIpAddress),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetLoadtestingAgentResult> InvokeAsync(GetLoadtestingAgentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLoadtestingAgentResult>("yandex:index/getLoadtestingAgent:getLoadtestingAgent", args ?? new GetLoadtestingAgentArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex Load Testing Agent.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myAgent = Yandex.GetLoadtestingAgent.Invoke(new()
        ///     {
        ///         AgentId = "some_agent_id",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["instanceExternalIp"] = myAgent.Apply(getLoadtestingAgentResult =&gt; getLoadtestingAgentResult.ComputeInstances[0]?.NetworkInterfaces[0]?.NatIpAddress),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetLoadtestingAgentResult> Invoke(GetLoadtestingAgentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLoadtestingAgentResult>("yandex:index/getLoadtestingAgent:getLoadtestingAgent", args ?? new GetLoadtestingAgentInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex Load Testing Agent.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myAgent = Yandex.GetLoadtestingAgent.Invoke(new()
        ///     {
        ///         AgentId = "some_agent_id",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["instanceExternalIp"] = myAgent.Apply(getLoadtestingAgentResult =&gt; getLoadtestingAgentResult.ComputeInstances[0]?.NetworkInterfaces[0]?.NatIpAddress),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetLoadtestingAgentResult> Invoke(GetLoadtestingAgentInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetLoadtestingAgentResult>("yandex:index/getLoadtestingAgent:getLoadtestingAgent", args ?? new GetLoadtestingAgentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLoadtestingAgentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of a specific load testing agent.
        /// </summary>
        [Input("agentId", required: true)]
        public string AgentId { get; set; } = null!;

        [Input("logSettings")]
        public Inputs.GetLoadtestingAgentLogSettingsArgs? LogSettings { get; set; }

        public GetLoadtestingAgentArgs()
        {
        }
        public static new GetLoadtestingAgentArgs Empty => new GetLoadtestingAgentArgs();
    }

    public sealed class GetLoadtestingAgentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of a specific load testing agent.
        /// </summary>
        [Input("agentId", required: true)]
        public Input<string> AgentId { get; set; } = null!;

        [Input("logSettings")]
        public Input<Inputs.GetLoadtestingAgentLogSettingsInputArgs>? LogSettings { get; set; }

        public GetLoadtestingAgentInvokeArgs()
        {
        }
        public static new GetLoadtestingAgentInvokeArgs Empty => new GetLoadtestingAgentInvokeArgs();
    }


    [OutputType]
    public sealed class GetLoadtestingAgentResult
    {
        /// <summary>
        /// The ID of a specific load testing agent.
        /// </summary>
        public readonly string AgentId;
        /// <summary>
        /// Compute Instance ID.
        /// </summary>
        public readonly string ComputeInstanceId;
        public readonly ImmutableArray<Outputs.GetLoadtestingAgentComputeInstanceResult> ComputeInstances;
        /// <summary>
        /// The resource description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        public readonly string FolderId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A set of key/value label pairs which assigned to resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        public readonly Outputs.GetLoadtestingAgentLogSettingsResult? LogSettings;
        /// <summary>
        /// The resource name.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private GetLoadtestingAgentResult(
            string agentId,

            string computeInstanceId,

            ImmutableArray<Outputs.GetLoadtestingAgentComputeInstanceResult> computeInstances,

            string description,

            string folderId,

            string id,

            ImmutableDictionary<string, string> labels,

            Outputs.GetLoadtestingAgentLogSettingsResult? logSettings,

            string name)
        {
            AgentId = agentId;
            ComputeInstanceId = computeInstanceId;
            ComputeInstances = computeInstances;
            Description = description;
            FolderId = folderId;
            Id = id;
            Labels = labels;
            LogSettings = logSettings;
            Name = name;
        }
    }
}
