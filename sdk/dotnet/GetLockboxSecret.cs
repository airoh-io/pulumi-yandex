// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetLockboxSecret
    {
        /// <summary>
        /// Get information about Yandex Cloud Lockbox secret. For more information, see [the official documentation](https://yandex.cloud/docs/lockbox/).
        /// 
        /// &gt; One of `secret_id` or `name` should be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var mySecret = Yandex.GetLockboxSecret.Invoke(new()
        ///     {
        ///         SecretId = "some ID",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["mySecretCreatedAt"] = mySecret.Apply(getLockboxSecretResult =&gt; getLockboxSecretResult.CreatedAt),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetLockboxSecretResult> InvokeAsync(GetLockboxSecretArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLockboxSecretResult>("yandex:index/getLockboxSecret:getLockboxSecret", args ?? new GetLockboxSecretArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about Yandex Cloud Lockbox secret. For more information, see [the official documentation](https://yandex.cloud/docs/lockbox/).
        /// 
        /// &gt; One of `secret_id` or `name` should be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var mySecret = Yandex.GetLockboxSecret.Invoke(new()
        ///     {
        ///         SecretId = "some ID",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["mySecretCreatedAt"] = mySecret.Apply(getLockboxSecretResult =&gt; getLockboxSecretResult.CreatedAt),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetLockboxSecretResult> Invoke(GetLockboxSecretInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLockboxSecretResult>("yandex:index/getLockboxSecret:getLockboxSecret", args ?? new GetLockboxSecretInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about Yandex Cloud Lockbox secret. For more information, see [the official documentation](https://yandex.cloud/docs/lockbox/).
        /// 
        /// &gt; One of `secret_id` or `name` should be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var mySecret = Yandex.GetLockboxSecret.Invoke(new()
        ///     {
        ///         SecretId = "some ID",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["mySecretCreatedAt"] = mySecret.Apply(getLockboxSecretResult =&gt; getLockboxSecretResult.CreatedAt),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetLockboxSecretResult> Invoke(GetLockboxSecretInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetLockboxSecretResult>("yandex:index/getLockboxSecret:getLockboxSecret", args ?? new GetLockboxSecretInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLockboxSecretArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public string? FolderId { get; set; }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The Yandex Cloud Lockbox secret ID.
        /// </summary>
        [Input("secretId")]
        public string? SecretId { get; set; }

        public GetLockboxSecretArgs()
        {
        }
        public static new GetLockboxSecretArgs Empty => new GetLockboxSecretArgs();
    }

    public sealed class GetLockboxSecretInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Yandex Cloud Lockbox secret ID.
        /// </summary>
        [Input("secretId")]
        public Input<string>? SecretId { get; set; }

        public GetLockboxSecretInvokeArgs()
        {
        }
        public static new GetLockboxSecretInvokeArgs Empty => new GetLockboxSecretInvokeArgs();
    }


    [OutputType]
    public sealed class GetLockboxSecretResult
    {
        /// <summary>
        /// The creation timestamp of the resource.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// Current secret version.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLockboxSecretCurrentVersionResult> CurrentVersions;
        /// <summary>
        /// The `true` value means that resource is protected from accidental deletion.
        /// </summary>
        public readonly bool DeletionProtection;
        /// <summary>
        /// The resource description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        public readonly string FolderId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The KMS key used to encrypt the Yandex Cloud Lockbox secret.
        /// </summary>
        public readonly string KmsKeyId;
        /// <summary>
        /// A set of key/value label pairs which assigned to resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// The resource name.
        /// </summary>
        public readonly string Name;
        public readonly ImmutableArray<Outputs.GetLockboxSecretPasswordPayloadSpecificationResult> PasswordPayloadSpecifications;
        /// <summary>
        /// The Yandex Cloud Lockbox secret ID.
        /// </summary>
        public readonly string? SecretId;
        /// <summary>
        /// The Yandex Cloud Lockbox secret status.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetLockboxSecretResult(
            string createdAt,

            ImmutableArray<Outputs.GetLockboxSecretCurrentVersionResult> currentVersions,

            bool deletionProtection,

            string description,

            string folderId,

            string id,

            string kmsKeyId,

            ImmutableDictionary<string, string> labels,

            string name,

            ImmutableArray<Outputs.GetLockboxSecretPasswordPayloadSpecificationResult> passwordPayloadSpecifications,

            string? secretId,

            string status)
        {
            CreatedAt = createdAt;
            CurrentVersions = currentVersions;
            DeletionProtection = deletionProtection;
            Description = description;
            FolderId = folderId;
            Id = id;
            KmsKeyId = kmsKeyId;
            Labels = labels;
            Name = name;
            PasswordPayloadSpecifications = passwordPayloadSpecifications;
            SecretId = secretId;
            Status = status;
        }
    }
}
