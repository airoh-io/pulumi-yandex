// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetMdbKafkaCluster
    {
        /// <summary>
        /// Get information about a Yandex Managed Kafka cluster. For more information, see [the official documentation](https://yandex.cloud/docs/managed-kafka/concepts).
        /// 
        /// &gt; Either `cluster_id` or `name` should be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myCluster = Yandex.GetMdbKafkaCluster.Invoke(new()
        ///     {
        ///         Name = "test",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["networkId"] = myCluster.Apply(getMdbKafkaClusterResult =&gt; getMdbKafkaClusterResult.NetworkId),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetMdbKafkaClusterResult> InvokeAsync(GetMdbKafkaClusterArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMdbKafkaClusterResult>("yandex:index/getMdbKafkaCluster:getMdbKafkaCluster", args ?? new GetMdbKafkaClusterArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex Managed Kafka cluster. For more information, see [the official documentation](https://yandex.cloud/docs/managed-kafka/concepts).
        /// 
        /// &gt; Either `cluster_id` or `name` should be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myCluster = Yandex.GetMdbKafkaCluster.Invoke(new()
        ///     {
        ///         Name = "test",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["networkId"] = myCluster.Apply(getMdbKafkaClusterResult =&gt; getMdbKafkaClusterResult.NetworkId),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetMdbKafkaClusterResult> Invoke(GetMdbKafkaClusterInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMdbKafkaClusterResult>("yandex:index/getMdbKafkaCluster:getMdbKafkaCluster", args ?? new GetMdbKafkaClusterInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex Managed Kafka cluster. For more information, see [the official documentation](https://yandex.cloud/docs/managed-kafka/concepts).
        /// 
        /// &gt; Either `cluster_id` or `name` should be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myCluster = Yandex.GetMdbKafkaCluster.Invoke(new()
        ///     {
        ///         Name = "test",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["networkId"] = myCluster.Apply(getMdbKafkaClusterResult =&gt; getMdbKafkaClusterResult.NetworkId),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetMdbKafkaClusterResult> Invoke(GetMdbKafkaClusterInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMdbKafkaClusterResult>("yandex:index/getMdbKafkaCluster:getMdbKafkaCluster", args ?? new GetMdbKafkaClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMdbKafkaClusterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Kafka cluster.
        /// </summary>
        [Input("clusterId")]
        public string? ClusterId { get; set; }

        /// <summary>
        /// Configuration of the Kafka cluster.
        /// </summary>
        [Input("config")]
        public Inputs.GetMdbKafkaClusterConfigArgs? Config { get; set; }

        /// <summary>
        /// The `true` value means that resource is protected from accidental deletion.
        /// </summary>
        [Input("deletionProtection")]
        public bool? DeletionProtection { get; set; }

        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public string? FolderId { get; set; }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        [Input("subnetIds")]
        private List<string>? _subnetIds;

        /// <summary>
        /// The list of VPC subnets identifiers which resource is attached.
        /// </summary>
        public List<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new List<string>());
            set => _subnetIds = value;
        }

        [Input("topics")]
        private List<Inputs.GetMdbKafkaClusterTopicArgs>? _topics;

        /// <summary>
        /// List of kafka topics.
        /// </summary>
        [Obsolete(@"to manage topics, please switch to using a separate resource type yandex_mdb_kafka_topic")]
        public List<Inputs.GetMdbKafkaClusterTopicArgs> Topics
        {
            get => _topics ?? (_topics = new List<Inputs.GetMdbKafkaClusterTopicArgs>());
            set => _topics = value;
        }

        [Input("users")]
        private List<Inputs.GetMdbKafkaClusterUserArgs>? _users;

        /// <summary>
        /// List of kafka users.
        /// </summary>
        [Obsolete(@"to manage users, please switch to using a separate resource type yandex_mdb_kafka_user")]
        public List<Inputs.GetMdbKafkaClusterUserArgs> Users
        {
            get => _users ?? (_users = new List<Inputs.GetMdbKafkaClusterUserArgs>());
            set => _users = value;
        }

        public GetMdbKafkaClusterArgs()
        {
        }
        public static new GetMdbKafkaClusterArgs Empty => new GetMdbKafkaClusterArgs();
    }

    public sealed class GetMdbKafkaClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Kafka cluster.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// Configuration of the Kafka cluster.
        /// </summary>
        [Input("config")]
        public Input<Inputs.GetMdbKafkaClusterConfigInputArgs>? Config { get; set; }

        /// <summary>
        /// The `true` value means that resource is protected from accidental deletion.
        /// </summary>
        [Input("deletionProtection")]
        public Input<bool>? DeletionProtection { get; set; }

        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("subnetIds")]
        private InputList<string>? _subnetIds;

        /// <summary>
        /// The list of VPC subnets identifiers which resource is attached.
        /// </summary>
        public InputList<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new InputList<string>());
            set => _subnetIds = value;
        }

        [Input("topics")]
        private InputList<Inputs.GetMdbKafkaClusterTopicInputArgs>? _topics;

        /// <summary>
        /// List of kafka topics.
        /// </summary>
        [Obsolete(@"to manage topics, please switch to using a separate resource type yandex_mdb_kafka_topic")]
        public InputList<Inputs.GetMdbKafkaClusterTopicInputArgs> Topics
        {
            get => _topics ?? (_topics = new InputList<Inputs.GetMdbKafkaClusterTopicInputArgs>());
            set => _topics = value;
        }

        [Input("users")]
        private InputList<Inputs.GetMdbKafkaClusterUserInputArgs>? _users;

        /// <summary>
        /// List of kafka users.
        /// </summary>
        [Obsolete(@"to manage users, please switch to using a separate resource type yandex_mdb_kafka_user")]
        public InputList<Inputs.GetMdbKafkaClusterUserInputArgs> Users
        {
            get => _users ?? (_users = new InputList<Inputs.GetMdbKafkaClusterUserInputArgs>());
            set => _users = value;
        }

        public GetMdbKafkaClusterInvokeArgs()
        {
        }
        public static new GetMdbKafkaClusterInvokeArgs Empty => new GetMdbKafkaClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetMdbKafkaClusterResult
    {
        /// <summary>
        /// The ID of the Kafka cluster.
        /// </summary>
        public readonly string ClusterId;
        /// <summary>
        /// Configuration of the Kafka cluster.
        /// </summary>
        public readonly Outputs.GetMdbKafkaClusterConfigResult? Config;
        /// <summary>
        /// The creation timestamp of the resource.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The `true` value means that resource is protected from accidental deletion.
        /// </summary>
        public readonly bool DeletionProtection;
        /// <summary>
        /// The resource description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Deployment environment of the Kafka cluster. Can be either `PRESTABLE` or `PRODUCTION`. The default is `PRODUCTION`.
        /// </summary>
        public readonly string Environment;
        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        public readonly string FolderId;
        /// <summary>
        /// Aggregated health of the cluster. Can be either `ALIVE`, `DEGRADED`, `DEAD` or `HEALTH_UNKNOWN`. For more information see `health` field of JSON representation in [the official documentation](https://yandex.cloud/docs/managed-kafka/api-ref/Cluster/).
        /// </summary>
        public readonly string Health;
        /// <summary>
        /// A list of IDs of the host groups to place VMs of the cluster on.
        /// </summary>
        public readonly ImmutableArray<string> HostGroupIds;
        /// <summary>
        /// A host of the Kafka cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMdbKafkaClusterHostResult> Hosts;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A set of key/value label pairs which assigned to resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Maintenance policy of the Kafka cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMdbKafkaClusterMaintenanceWindowResult> MaintenanceWindows;
        /// <summary>
        /// The resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The `VPC Network ID` of subnets which resource attached to.
        /// </summary>
        public readonly string NetworkId;
        /// <summary>
        /// The list of security groups applied to resource or their components.
        /// </summary>
        public readonly ImmutableArray<string> SecurityGroupIds;
        /// <summary>
        /// Status of the cluster. Can be either `CREATING`, `STARTING`, `RUNNING`, `UPDATING`, `STOPPING`, `STOPPED`, `ERROR` or `STATUS_UNKNOWN`. For more information see `status` field of JSON representation in [the official documentation](https://yandex.cloud/docs/managed-kafka/api-ref/Cluster/).
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The list of VPC subnets identifiers which resource is attached.
        /// </summary>
        public readonly ImmutableArray<string> SubnetIds;
        /// <summary>
        /// List of kafka topics.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMdbKafkaClusterTopicResult> Topics;
        /// <summary>
        /// List of kafka users.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMdbKafkaClusterUserResult> Users;

        [OutputConstructor]
        private GetMdbKafkaClusterResult(
            string clusterId,

            Outputs.GetMdbKafkaClusterConfigResult? config,

            string createdAt,

            bool deletionProtection,

            string description,

            string environment,

            string folderId,

            string health,

            ImmutableArray<string> hostGroupIds,

            ImmutableArray<Outputs.GetMdbKafkaClusterHostResult> hosts,

            string id,

            ImmutableDictionary<string, string> labels,

            ImmutableArray<Outputs.GetMdbKafkaClusterMaintenanceWindowResult> maintenanceWindows,

            string name,

            string networkId,

            ImmutableArray<string> securityGroupIds,

            string status,

            ImmutableArray<string> subnetIds,

            ImmutableArray<Outputs.GetMdbKafkaClusterTopicResult> topics,

            ImmutableArray<Outputs.GetMdbKafkaClusterUserResult> users)
        {
            ClusterId = clusterId;
            Config = config;
            CreatedAt = createdAt;
            DeletionProtection = deletionProtection;
            Description = description;
            Environment = environment;
            FolderId = folderId;
            Health = health;
            HostGroupIds = hostGroupIds;
            Hosts = hosts;
            Id = id;
            Labels = labels;
            MaintenanceWindows = maintenanceWindows;
            Name = name;
            NetworkId = networkId;
            SecurityGroupIds = securityGroupIds;
            Status = status;
            SubnetIds = subnetIds;
            Topics = topics;
            Users = users;
        }
    }
}
