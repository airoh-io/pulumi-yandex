// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetMdbKafkaUser
    {
        /// <summary>
        /// Get information about a user of the Yandex Managed Kafka cluster. For more information, see [the official documentation](https://yandex.cloud/docs/managed-kafka/concepts).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myUser = Yandex.GetMdbKafkaUser.Invoke(new()
        ///     {
        ///         ClusterId = "some_cluster_id",
        ///         Name = "test",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["username"] = myUser.Apply(getMdbKafkaUserResult =&gt; getMdbKafkaUserResult.Name),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetMdbKafkaUserResult> InvokeAsync(GetMdbKafkaUserArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMdbKafkaUserResult>("yandex:index/getMdbKafkaUser:getMdbKafkaUser", args ?? new GetMdbKafkaUserArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a user of the Yandex Managed Kafka cluster. For more information, see [the official documentation](https://yandex.cloud/docs/managed-kafka/concepts).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myUser = Yandex.GetMdbKafkaUser.Invoke(new()
        ///     {
        ///         ClusterId = "some_cluster_id",
        ///         Name = "test",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["username"] = myUser.Apply(getMdbKafkaUserResult =&gt; getMdbKafkaUserResult.Name),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetMdbKafkaUserResult> Invoke(GetMdbKafkaUserInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMdbKafkaUserResult>("yandex:index/getMdbKafkaUser:getMdbKafkaUser", args ?? new GetMdbKafkaUserInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a user of the Yandex Managed Kafka cluster. For more information, see [the official documentation](https://yandex.cloud/docs/managed-kafka/concepts).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myUser = Yandex.GetMdbKafkaUser.Invoke(new()
        ///     {
        ///         ClusterId = "some_cluster_id",
        ///         Name = "test",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["username"] = myUser.Apply(getMdbKafkaUserResult =&gt; getMdbKafkaUserResult.Name),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetMdbKafkaUserResult> Invoke(GetMdbKafkaUserInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMdbKafkaUserResult>("yandex:index/getMdbKafkaUser:getMdbKafkaUser", args ?? new GetMdbKafkaUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMdbKafkaUserArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Kafka cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetMdbKafkaUserArgs()
        {
        }
        public static new GetMdbKafkaUserArgs Empty => new GetMdbKafkaUserArgs();
    }

    public sealed class GetMdbKafkaUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Kafka cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetMdbKafkaUserInvokeArgs()
        {
        }
        public static new GetMdbKafkaUserInvokeArgs Empty => new GetMdbKafkaUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetMdbKafkaUserResult
    {
        /// <summary>
        /// The ID of the Kafka cluster.
        /// </summary>
        public readonly string ClusterId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The password of the user.
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// Set of permissions granted to the user.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMdbKafkaUserPermissionResult> Permissions;

        [OutputConstructor]
        private GetMdbKafkaUserResult(
            string clusterId,

            string id,

            string name,

            string password,

            ImmutableArray<Outputs.GetMdbKafkaUserPermissionResult> permissions)
        {
            ClusterId = clusterId;
            Id = id;
            Name = name;
            Password = password;
            Permissions = permissions;
        }
    }
}
