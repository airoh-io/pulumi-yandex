// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetMdbPostgresqlDatabase
    {
        /// <summary>
        /// Get information about a Yandex Managed PostgreSQL database. For more information, see [the official documentation](https://yandex.cloud/docs/managed-postgresql/).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Yandex.GetMdbPostgresqlDatabase.Invoke(new()
        ///     {
        ///         ClusterId = "some_cluster_id",
        ///         Name = "test",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["owner"] = foo.Apply(getMdbPostgresqlDatabaseResult =&gt; getMdbPostgresqlDatabaseResult.Owner),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetMdbPostgresqlDatabaseResult> InvokeAsync(GetMdbPostgresqlDatabaseArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMdbPostgresqlDatabaseResult>("yandex:index/getMdbPostgresqlDatabase:getMdbPostgresqlDatabase", args ?? new GetMdbPostgresqlDatabaseArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex Managed PostgreSQL database. For more information, see [the official documentation](https://yandex.cloud/docs/managed-postgresql/).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Yandex.GetMdbPostgresqlDatabase.Invoke(new()
        ///     {
        ///         ClusterId = "some_cluster_id",
        ///         Name = "test",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["owner"] = foo.Apply(getMdbPostgresqlDatabaseResult =&gt; getMdbPostgresqlDatabaseResult.Owner),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetMdbPostgresqlDatabaseResult> Invoke(GetMdbPostgresqlDatabaseInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMdbPostgresqlDatabaseResult>("yandex:index/getMdbPostgresqlDatabase:getMdbPostgresqlDatabase", args ?? new GetMdbPostgresqlDatabaseInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex Managed PostgreSQL database. For more information, see [the official documentation](https://yandex.cloud/docs/managed-postgresql/).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Yandex.GetMdbPostgresqlDatabase.Invoke(new()
        ///     {
        ///         ClusterId = "some_cluster_id",
        ///         Name = "test",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["owner"] = foo.Apply(getMdbPostgresqlDatabaseResult =&gt; getMdbPostgresqlDatabaseResult.Owner),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetMdbPostgresqlDatabaseResult> Invoke(GetMdbPostgresqlDatabaseInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMdbPostgresqlDatabaseResult>("yandex:index/getMdbPostgresqlDatabase:getMdbPostgresqlDatabase", args ?? new GetMdbPostgresqlDatabaseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMdbPostgresqlDatabaseArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the PostgreSQL cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        /// <summary>
        /// The `true` value means that resource is protected from accidental deletion.
        /// </summary>
        [Input("deletionProtection")]
        public string? DeletionProtection { get; set; }

        [Input("extensions")]
        private List<Inputs.GetMdbPostgresqlDatabaseExtensionArgs>? _extensions;

        /// <summary>
        /// Set of database extensions.
        /// </summary>
        public List<Inputs.GetMdbPostgresqlDatabaseExtensionArgs> Extensions
        {
            get => _extensions ?? (_extensions = new List<Inputs.GetMdbPostgresqlDatabaseExtensionArgs>());
            set => _extensions = value;
        }

        /// <summary>
        /// POSIX locale for string sorting order. Forbidden to change in an existing database.
        /// </summary>
        [Input("lcCollate")]
        public string? LcCollate { get; set; }

        /// <summary>
        /// POSIX locale for character classification. Forbidden to change in an existing database.
        /// </summary>
        [Input("lcType")]
        public string? LcType { get; set; }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
        /// </summary>
        [Input("owner")]
        public string? Owner { get; set; }

        /// <summary>
        /// Name of the template database.
        /// </summary>
        [Input("templateDb")]
        public string? TemplateDb { get; set; }

        public GetMdbPostgresqlDatabaseArgs()
        {
        }
        public static new GetMdbPostgresqlDatabaseArgs Empty => new GetMdbPostgresqlDatabaseArgs();
    }

    public sealed class GetMdbPostgresqlDatabaseInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the PostgreSQL cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// The `true` value means that resource is protected from accidental deletion.
        /// </summary>
        [Input("deletionProtection")]
        public Input<string>? DeletionProtection { get; set; }

        [Input("extensions")]
        private InputList<Inputs.GetMdbPostgresqlDatabaseExtensionInputArgs>? _extensions;

        /// <summary>
        /// Set of database extensions.
        /// </summary>
        public InputList<Inputs.GetMdbPostgresqlDatabaseExtensionInputArgs> Extensions
        {
            get => _extensions ?? (_extensions = new InputList<Inputs.GetMdbPostgresqlDatabaseExtensionInputArgs>());
            set => _extensions = value;
        }

        /// <summary>
        /// POSIX locale for string sorting order. Forbidden to change in an existing database.
        /// </summary>
        [Input("lcCollate")]
        public Input<string>? LcCollate { get; set; }

        /// <summary>
        /// POSIX locale for character classification. Forbidden to change in an existing database.
        /// </summary>
        [Input("lcType")]
        public Input<string>? LcType { get; set; }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
        /// </summary>
        [Input("owner")]
        public Input<string>? Owner { get; set; }

        /// <summary>
        /// Name of the template database.
        /// </summary>
        [Input("templateDb")]
        public Input<string>? TemplateDb { get; set; }

        public GetMdbPostgresqlDatabaseInvokeArgs()
        {
        }
        public static new GetMdbPostgresqlDatabaseInvokeArgs Empty => new GetMdbPostgresqlDatabaseInvokeArgs();
    }


    [OutputType]
    public sealed class GetMdbPostgresqlDatabaseResult
    {
        /// <summary>
        /// The ID of the PostgreSQL cluster.
        /// </summary>
        public readonly string ClusterId;
        /// <summary>
        /// The `true` value means that resource is protected from accidental deletion.
        /// </summary>
        public readonly string? DeletionProtection;
        /// <summary>
        /// Set of database extensions.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMdbPostgresqlDatabaseExtensionResult> Extensions;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// POSIX locale for string sorting order. Forbidden to change in an existing database.
        /// </summary>
        public readonly string LcCollate;
        /// <summary>
        /// POSIX locale for character classification. Forbidden to change in an existing database.
        /// </summary>
        public readonly string LcType;
        /// <summary>
        /// The resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
        /// </summary>
        public readonly string Owner;
        /// <summary>
        /// Name of the template database.
        /// </summary>
        public readonly string TemplateDb;

        [OutputConstructor]
        private GetMdbPostgresqlDatabaseResult(
            string clusterId,

            string? deletionProtection,

            ImmutableArray<Outputs.GetMdbPostgresqlDatabaseExtensionResult> extensions,

            string id,

            string lcCollate,

            string lcType,

            string name,

            string owner,

            string templateDb)
        {
            ClusterId = clusterId;
            DeletionProtection = deletionProtection;
            Extensions = extensions;
            Id = id;
            LcCollate = lcCollate;
            LcType = lcType;
            Name = name;
            Owner = owner;
            TemplateDb = templateDb;
        }
    }
}
