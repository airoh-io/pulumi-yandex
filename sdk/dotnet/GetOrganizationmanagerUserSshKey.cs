// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetOrganizationmanagerUserSshKey
    {
        /// <summary>
        /// Get information about a Yandex Cloud User SSH Key.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myUserSshKey = Yandex.GetOrganizationmanagerUserSshKey.Invoke(new()
        ///     {
        ///         UserSshKeyId = "some_user_ssh_key_id",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["myUserSshKeyName"] = "data.yandex_organizationmanager_user_ssh_key.my_user_ssh_key.name",
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetOrganizationmanagerUserSshKeyResult> InvokeAsync(GetOrganizationmanagerUserSshKeyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationmanagerUserSshKeyResult>("yandex:index/getOrganizationmanagerUserSshKey:getOrganizationmanagerUserSshKey", args ?? new GetOrganizationmanagerUserSshKeyArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex Cloud User SSH Key.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myUserSshKey = Yandex.GetOrganizationmanagerUserSshKey.Invoke(new()
        ///     {
        ///         UserSshKeyId = "some_user_ssh_key_id",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["myUserSshKeyName"] = "data.yandex_organizationmanager_user_ssh_key.my_user_ssh_key.name",
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetOrganizationmanagerUserSshKeyResult> Invoke(GetOrganizationmanagerUserSshKeyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationmanagerUserSshKeyResult>("yandex:index/getOrganizationmanagerUserSshKey:getOrganizationmanagerUserSshKey", args ?? new GetOrganizationmanagerUserSshKeyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex Cloud User SSH Key.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myUserSshKey = Yandex.GetOrganizationmanagerUserSshKey.Invoke(new()
        ///     {
        ///         UserSshKeyId = "some_user_ssh_key_id",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["myUserSshKeyName"] = "data.yandex_organizationmanager_user_ssh_key.my_user_ssh_key.name",
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetOrganizationmanagerUserSshKeyResult> Invoke(GetOrganizationmanagerUserSshKeyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationmanagerUserSshKeyResult>("yandex:index/getOrganizationmanagerUserSshKey:getOrganizationmanagerUserSshKey", args ?? new GetOrganizationmanagerUserSshKeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrganizationmanagerUserSshKeyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Data of the user ssh key.
        /// </summary>
        [Input("data")]
        public string? Data { get; set; }

        /// <summary>
        /// User ssh key will be no longer valid after expiration timestamp.
        /// </summary>
        [Input("expiresAt")]
        public string? ExpiresAt { get; set; }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Organization that the user ssh key belongs to.
        /// </summary>
        [Input("organizationId")]
        public string? OrganizationId { get; set; }

        /// <summary>
        /// Subject that the user ssh key belongs to.
        /// </summary>
        [Input("subjectId")]
        public string? SubjectId { get; set; }

        /// <summary>
        /// ID of the user ssh key.
        /// </summary>
        [Input("userSshKeyId", required: true)]
        public string UserSshKeyId { get; set; } = null!;

        public GetOrganizationmanagerUserSshKeyArgs()
        {
        }
        public static new GetOrganizationmanagerUserSshKeyArgs Empty => new GetOrganizationmanagerUserSshKeyArgs();
    }

    public sealed class GetOrganizationmanagerUserSshKeyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Data of the user ssh key.
        /// </summary>
        [Input("data")]
        public Input<string>? Data { get; set; }

        /// <summary>
        /// User ssh key will be no longer valid after expiration timestamp.
        /// </summary>
        [Input("expiresAt")]
        public Input<string>? ExpiresAt { get; set; }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Organization that the user ssh key belongs to.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        /// <summary>
        /// Subject that the user ssh key belongs to.
        /// </summary>
        [Input("subjectId")]
        public Input<string>? SubjectId { get; set; }

        /// <summary>
        /// ID of the user ssh key.
        /// </summary>
        [Input("userSshKeyId", required: true)]
        public Input<string> UserSshKeyId { get; set; } = null!;

        public GetOrganizationmanagerUserSshKeyInvokeArgs()
        {
        }
        public static new GetOrganizationmanagerUserSshKeyInvokeArgs Empty => new GetOrganizationmanagerUserSshKeyInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrganizationmanagerUserSshKeyResult
    {
        /// <summary>
        /// The creation timestamp of the resource.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// Data of the user ssh key.
        /// </summary>
        public readonly string? Data;
        /// <summary>
        /// User ssh key will be no longer valid after expiration timestamp.
        /// </summary>
        public readonly string? ExpiresAt;
        /// <summary>
        /// SSH Key Fingerprint.
        /// </summary>
        public readonly string Fingerprint;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The resource name.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Organization that the user ssh key belongs to.
        /// </summary>
        public readonly string? OrganizationId;
        /// <summary>
        /// Subject that the user ssh key belongs to.
        /// </summary>
        public readonly string? SubjectId;
        /// <summary>
        /// ID of the user ssh key.
        /// </summary>
        public readonly string UserSshKeyId;

        [OutputConstructor]
        private GetOrganizationmanagerUserSshKeyResult(
            string createdAt,

            string? data,

            string? expiresAt,

            string fingerprint,

            string id,

            string? name,

            string? organizationId,

            string? subjectId,

            string userSshKeyId)
        {
            CreatedAt = createdAt;
            Data = data;
            ExpiresAt = expiresAt;
            Fingerprint = fingerprint;
            Id = id;
            Name = name;
            OrganizationId = organizationId;
            SubjectId = subjectId;
            UserSshKeyId = userSshKeyId;
        }
    }
}
