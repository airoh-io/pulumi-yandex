// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetVpcGateway
    {
        /// <summary>
        /// Get information about a Yandex VPC gateway. For more information, see [Yandex Cloud VPC](https://yandex.cloud/docs/vpc/concepts).
        /// 
        /// This data source is used to define [VPC Gateways](https://yandex.cloud/docs/vpc/concepts/gateways) that can be used by other resources.
        /// 
        /// &gt; One of `gateway_id` or `name` should be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Yandex.GetVpcGateway.Invoke(new()
        ///     {
        ///         GatewayId = "my-gateway-id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetVpcGatewayResult> InvokeAsync(GetVpcGatewayArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVpcGatewayResult>("yandex:index/getVpcGateway:getVpcGateway", args ?? new GetVpcGatewayArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex VPC gateway. For more information, see [Yandex Cloud VPC](https://yandex.cloud/docs/vpc/concepts).
        /// 
        /// This data source is used to define [VPC Gateways](https://yandex.cloud/docs/vpc/concepts/gateways) that can be used by other resources.
        /// 
        /// &gt; One of `gateway_id` or `name` should be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Yandex.GetVpcGateway.Invoke(new()
        ///     {
        ///         GatewayId = "my-gateway-id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetVpcGatewayResult> Invoke(GetVpcGatewayInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcGatewayResult>("yandex:index/getVpcGateway:getVpcGateway", args ?? new GetVpcGatewayInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex VPC gateway. For more information, see [Yandex Cloud VPC](https://yandex.cloud/docs/vpc/concepts).
        /// 
        /// This data source is used to define [VPC Gateways](https://yandex.cloud/docs/vpc/concepts/gateways) that can be used by other resources.
        /// 
        /// &gt; One of `gateway_id` or `name` should be specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Yandex.GetVpcGateway.Invoke(new()
        ///     {
        ///         GatewayId = "my-gateway-id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetVpcGatewayResult> Invoke(GetVpcGatewayInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcGatewayResult>("yandex:index/getVpcGateway:getVpcGateway", args ?? new GetVpcGatewayInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVpcGatewayArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public string? FolderId { get; set; }

        /// <summary>
        /// ID of the VPC Gateway.
        /// </summary>
        [Input("gatewayId")]
        public string? GatewayId { get; set; }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Shared egress gateway configuration. Currently empty.
        /// </summary>
        [Input("sharedEgressGateway")]
        public Inputs.GetVpcGatewaySharedEgressGatewayArgs? SharedEgressGateway { get; set; }

        public GetVpcGatewayArgs()
        {
        }
        public static new GetVpcGatewayArgs Empty => new GetVpcGatewayArgs();
    }

    public sealed class GetVpcGatewayInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        /// <summary>
        /// ID of the VPC Gateway.
        /// </summary>
        [Input("gatewayId")]
        public Input<string>? GatewayId { get; set; }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Shared egress gateway configuration. Currently empty.
        /// </summary>
        [Input("sharedEgressGateway")]
        public Input<Inputs.GetVpcGatewaySharedEgressGatewayInputArgs>? SharedEgressGateway { get; set; }

        public GetVpcGatewayInvokeArgs()
        {
        }
        public static new GetVpcGatewayInvokeArgs Empty => new GetVpcGatewayInvokeArgs();
    }


    [OutputType]
    public sealed class GetVpcGatewayResult
    {
        /// <summary>
        /// The creation timestamp of the resource.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The resource description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        public readonly string FolderId;
        /// <summary>
        /// ID of the VPC Gateway.
        /// </summary>
        public readonly string GatewayId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A set of key/value label pairs which assigned to resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// The resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Shared egress gateway configuration. Currently empty.
        /// </summary>
        public readonly Outputs.GetVpcGatewaySharedEgressGatewayResult? SharedEgressGateway;

        [OutputConstructor]
        private GetVpcGatewayResult(
            string createdAt,

            string description,

            string folderId,

            string gatewayId,

            string id,

            ImmutableDictionary<string, string> labels,

            string name,

            Outputs.GetVpcGatewaySharedEgressGatewayResult? sharedEgressGateway)
        {
            CreatedAt = createdAt;
            Description = description;
            FolderId = folderId;
            GatewayId = gatewayId;
            Id = id;
            Labels = labels;
            Name = name;
            SharedEgressGateway = sharedEgressGateway;
        }
    }
}
