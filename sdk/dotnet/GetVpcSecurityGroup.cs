// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetVpcSecurityGroup
    {
        /// <summary>
        /// Get information about a Yandex VPC Security Group Rule. For more information, see [the official documentation](https://yandex.cloud/docs/vpc/concepts/security-groups).
        /// 
        /// This data source used to define Security Group Rule that can be used by other resources.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var group1 = Yandex.GetVpcSecurityGroup.Invoke(new()
        ///     {
        ///         Name = "my-group1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetVpcSecurityGroupResult> InvokeAsync(GetVpcSecurityGroupArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVpcSecurityGroupResult>("yandex:index/getVpcSecurityGroup:getVpcSecurityGroup", args ?? new GetVpcSecurityGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex VPC Security Group Rule. For more information, see [the official documentation](https://yandex.cloud/docs/vpc/concepts/security-groups).
        /// 
        /// This data source used to define Security Group Rule that can be used by other resources.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var group1 = Yandex.GetVpcSecurityGroup.Invoke(new()
        ///     {
        ///         Name = "my-group1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetVpcSecurityGroupResult> Invoke(GetVpcSecurityGroupInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcSecurityGroupResult>("yandex:index/getVpcSecurityGroup:getVpcSecurityGroup", args ?? new GetVpcSecurityGroupInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex VPC Security Group Rule. For more information, see [the official documentation](https://yandex.cloud/docs/vpc/concepts/security-groups).
        /// 
        /// This data source used to define Security Group Rule that can be used by other resources.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var group1 = Yandex.GetVpcSecurityGroup.Invoke(new()
        ///     {
        ///         Name = "my-group1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetVpcSecurityGroupResult> Invoke(GetVpcSecurityGroupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcSecurityGroupResult>("yandex:index/getVpcSecurityGroup:getVpcSecurityGroup", args ?? new GetVpcSecurityGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVpcSecurityGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public string? FolderId { get; set; }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// ID of Security Group that owns the rule.
        /// </summary>
        [Input("securityGroupId")]
        public string? SecurityGroupId { get; set; }

        public GetVpcSecurityGroupArgs()
        {
        }
        public static new GetVpcSecurityGroupArgs Empty => new GetVpcSecurityGroupArgs();
    }

    public sealed class GetVpcSecurityGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// ID of Security Group that owns the rule.
        /// </summary>
        [Input("securityGroupId")]
        public Input<string>? SecurityGroupId { get; set; }

        public GetVpcSecurityGroupInvokeArgs()
        {
        }
        public static new GetVpcSecurityGroupInvokeArgs Empty => new GetVpcSecurityGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetVpcSecurityGroupResult
    {
        /// <summary>
        /// The creation timestamp of the resource.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The resource description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A list of egress rules.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVpcSecurityGroupEgressResult> Egresses;
        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        public readonly string FolderId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of ingress rules.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVpcSecurityGroupIngressResult> Ingresses;
        /// <summary>
        /// A set of key/value label pairs which assigned to resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// The resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// ID of the network this security group belongs to.
        /// </summary>
        public readonly string NetworkId;
        /// <summary>
        /// ID of Security Group that owns the rule.
        /// </summary>
        public readonly string SecurityGroupId;
        /// <summary>
        /// Status of this security group.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetVpcSecurityGroupResult(
            string createdAt,

            string description,

            ImmutableArray<Outputs.GetVpcSecurityGroupEgressResult> egresses,

            string folderId,

            string id,

            ImmutableArray<Outputs.GetVpcSecurityGroupIngressResult> ingresses,

            ImmutableDictionary<string, string> labels,

            string name,

            string networkId,

            string securityGroupId,

            string status)
        {
            CreatedAt = createdAt;
            Description = description;
            Egresses = egresses;
            FolderId = folderId;
            Id = id;
            Ingresses = ingresses;
            Labels = labels;
            Name = name;
            NetworkId = networkId;
            SecurityGroupId = securityGroupId;
            Status = status;
        }
    }
}
