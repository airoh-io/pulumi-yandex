// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex.Inputs
{

    public sealed class GetAlbBackendGroupHttpBackendArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Healthcheck specification that will be used by this backend.
        /// </summary>
        [Input("healthcheck", required: true)]
        public Inputs.GetAlbBackendGroupHttpBackendHealthcheckArgs Healthcheck { get; set; } = null!;

        /// <summary>
        /// Enables HTTP2 for upstream requests. If not set, HTTP 1.1 will be used by default.
        /// </summary>
        [Input("http2", required: true)]
        public bool Http2 { get; set; }

        /// <summary>
        /// Load Balancing Config specification that will be used by this backend.
        /// </summary>
        [Input("loadBalancingConfig", required: true)]
        public Inputs.GetAlbBackendGroupHttpBackendLoadBalancingConfigArgs LoadBalancingConfig { get; set; } = null!;

        /// <summary>
        /// Name of the backend.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Port for incoming traffic.
        /// </summary>
        [Input("port", required: true)]
        public int Port { get; set; }

        /// <summary>
        /// Name of bucket which should be used as a backend.
        /// </summary>
        [Input("storageBucket", required: true)]
        public string StorageBucket { get; set; } = null!;

        [Input("targetGroupIds", required: true)]
        private List<string>? _targetGroupIds;

        /// <summary>
        /// References target groups for the backend.
        /// </summary>
        public List<string> TargetGroupIds
        {
            get => _targetGroupIds ?? (_targetGroupIds = new List<string>());
            set => _targetGroupIds = value;
        }

        /// <summary>
        /// TLS specification that will be used by this backend.
        /// </summary>
        [Input("tls", required: true)]
        public Inputs.GetAlbBackendGroupHttpBackendTlsArgs Tls { get; set; } = null!;

        /// <summary>
        /// Weight of the backend. Traffic will be split between backends of the same BackendGroup according to their weights.
        /// </summary>
        [Input("weight", required: true)]
        public int Weight { get; set; }

        public GetAlbBackendGroupHttpBackendArgs()
        {
        }
        public static new GetAlbBackendGroupHttpBackendArgs Empty => new GetAlbBackendGroupHttpBackendArgs();
    }
}
