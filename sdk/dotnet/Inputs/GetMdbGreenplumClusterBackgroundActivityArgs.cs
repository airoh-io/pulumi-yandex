// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex.Inputs
{

    public sealed class GetMdbGreenplumClusterBackgroundActivityInputArgs : global::Pulumi.ResourceArgs
    {
        [Input("analyzeAndVacuums", required: true)]
        private InputList<Inputs.GetMdbGreenplumClusterBackgroundActivityAnalyzeAndVacuumInputArgs>? _analyzeAndVacuums;

        /// <summary>
        /// Block to configure 'ANALYZE' and 'VACUUM' daily operations.
        /// </summary>
        public InputList<Inputs.GetMdbGreenplumClusterBackgroundActivityAnalyzeAndVacuumInputArgs> AnalyzeAndVacuums
        {
            get => _analyzeAndVacuums ?? (_analyzeAndVacuums = new InputList<Inputs.GetMdbGreenplumClusterBackgroundActivityAnalyzeAndVacuumInputArgs>());
            set => _analyzeAndVacuums = value;
        }

        [Input("queryKillerIdleInTransactions", required: true)]
        private InputList<Inputs.GetMdbGreenplumClusterBackgroundActivityQueryKillerIdleInTransactionInputArgs>? _queryKillerIdleInTransactions;

        /// <summary>
        /// Block to configure script that kills long running queries that are in `idle in transaction` state.
        /// </summary>
        public InputList<Inputs.GetMdbGreenplumClusterBackgroundActivityQueryKillerIdleInTransactionInputArgs> QueryKillerIdleInTransactions
        {
            get => _queryKillerIdleInTransactions ?? (_queryKillerIdleInTransactions = new InputList<Inputs.GetMdbGreenplumClusterBackgroundActivityQueryKillerIdleInTransactionInputArgs>());
            set => _queryKillerIdleInTransactions = value;
        }

        [Input("queryKillerIdles", required: true)]
        private InputList<Inputs.GetMdbGreenplumClusterBackgroundActivityQueryKillerIdleInputArgs>? _queryKillerIdles;

        /// <summary>
        /// Block to configure script that kills long running queries that are in `idle` state.
        /// </summary>
        public InputList<Inputs.GetMdbGreenplumClusterBackgroundActivityQueryKillerIdleInputArgs> QueryKillerIdles
        {
            get => _queryKillerIdles ?? (_queryKillerIdles = new InputList<Inputs.GetMdbGreenplumClusterBackgroundActivityQueryKillerIdleInputArgs>());
            set => _queryKillerIdles = value;
        }

        [Input("queryKillerLongRunnings", required: true)]
        private InputList<Inputs.GetMdbGreenplumClusterBackgroundActivityQueryKillerLongRunningInputArgs>? _queryKillerLongRunnings;

        /// <summary>
        /// Block to configure script that kills long running queries (in any state).
        /// </summary>
        public InputList<Inputs.GetMdbGreenplumClusterBackgroundActivityQueryKillerLongRunningInputArgs> QueryKillerLongRunnings
        {
            get => _queryKillerLongRunnings ?? (_queryKillerLongRunnings = new InputList<Inputs.GetMdbGreenplumClusterBackgroundActivityQueryKillerLongRunningInputArgs>());
            set => _queryKillerLongRunnings = value;
        }

        public GetMdbGreenplumClusterBackgroundActivityInputArgs()
        {
        }
        public static new GetMdbGreenplumClusterBackgroundActivityInputArgs Empty => new GetMdbGreenplumClusterBackgroundActivityInputArgs();
    }
}
