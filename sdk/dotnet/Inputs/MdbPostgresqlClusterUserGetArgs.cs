// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex.Inputs
{

    public sealed class MdbPostgresqlClusterUserGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The maximum number of connections per user. (Default 50).
        /// </summary>
        [Input("connLimit")]
        public Input<int>? ConnLimit { get; set; }

        [Input("grants")]
        private InputList<string>? _grants;

        /// <summary>
        /// List of the user's grants.
        /// </summary>
        public InputList<string> Grants
        {
            get => _grants ?? (_grants = new InputList<string>());
            set => _grants = value;
        }

        /// <summary>
        /// User's ability to login.
        /// </summary>
        [Input("login")]
        public Input<bool>? Login { get; set; }

        /// <summary>
        /// The name of the user.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("password", required: true)]
        private Input<string>? _password;

        /// <summary>
        /// The password of the user.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("permissions")]
        private InputList<Inputs.MdbPostgresqlClusterUserPermissionGetArgs>? _permissions;

        /// <summary>
        /// Set of permissions granted to the user.
        /// </summary>
        public InputList<Inputs.MdbPostgresqlClusterUserPermissionGetArgs> Permissions
        {
            get => _permissions ?? (_permissions = new InputList<Inputs.MdbPostgresqlClusterUserPermissionGetArgs>());
            set => _permissions = value;
        }

        [Input("settings")]
        private InputMap<string>? _settings;

        /// <summary>
        /// Map of user settings. [Full description](https://yandex.cloud/docs/managed-postgresql/api-ref/grpc/Cluster/create#yandex.cloud.mdb.postgresql.v1.UserSettings).
        /// 
        /// * `default_transaction_isolation` - defines the default isolation level to be set for all new SQL transactions. One of:
        ///   - 1: `read uncommitted`
        ///   - 2: `read committed`
        ///   - 3: `repeatable read`
        ///   - 4: `serializable`
        /// 
        /// * `lock_timeout` - The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index, row or other database object (default 0).
        /// 
        /// * `log_min_duration_statement` - This setting controls logging of the duration of statements. Default -1 disables logging of the duration of statements.
        /// 
        /// * `synchronous_commit` - This setting defines whether DBMS will commit transaction in a synchronous way. One of:
        ///   - 1: `on`
        ///   - 2: `off`
        ///   - 3: `local`
        ///   - 4: `remote write`
        ///   - 5: `remote apply`
        /// 
        /// * `temp_file_limit` - The maximum storage space size (in kilobytes) that a single process can use to create temporary files.
        /// 
        /// * `log_statement` - This setting specifies which SQL statements should be logged (on the user level). One of:
        ///   - 1: `none`
        ///   - 2: `ddl`
        ///   - 3: `mod`
        ///   - 4: `all`
        /// 
        /// * `pool_mode` - Mode that the connection pooler is working in with specified user. One of:
        ///   - 1: `session`
        ///   - 2: `transaction`
        ///   - 3: `statement`
        /// 
        /// * `prepared_statements_pooling` - This setting allows user to use prepared statements with transaction pooling. Boolean.
        /// 
        /// * `catchup_timeout` - The connection pooler setting. It determines the maximum allowed replication lag (in seconds). Pooler will reject connections to the replica with a lag above this threshold. Default value is 0, which disables this feature. Integer.
        /// 
        /// * `wal_sender_timeout` - The maximum time (in milliseconds) to wait for WAL replication. Terminate replication connections that are inactive for longer than this amount of time. Integer.
        /// 
        /// * `idle_in_transaction_session_timeout` - Sets the maximum allowed idle time (in milliseconds) between queries, when in a transaction. Value of 0 (default) disables the timeout. Integer.
        /// 
        /// * `statement_timeout` - The maximum time (in milliseconds) to wait for statement. Value of 0 (default) disables the timeout. Integer.
        /// </summary>
        public InputMap<string> Settings
        {
            get => _settings ?? (_settings = new InputMap<string>());
            set => _settings = value;
        }

        public MdbPostgresqlClusterUserGetArgs()
        {
        }
        public static new MdbPostgresqlClusterUserGetArgs Empty => new MdbPostgresqlClusterUserGetArgs();
    }
}
