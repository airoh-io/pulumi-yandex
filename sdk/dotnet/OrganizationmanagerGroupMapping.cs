// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    /// <summary>
    /// Allows management of [Yandex Cloud Organization Manager Group Mapping](https://yandex.cloud/docs/organization/concepts/add-federation#group-mapping). It supports the creation, updating(enabling/disabling), and deletion of group mapping.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Yandex = Pulumi.Yandex;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     //
    ///     // Create a new OrganizationManager Group Mapping.
    ///     //
    ///     var myGroupMap = new Yandex.OrganizationmanagerGroupMapping("myGroupMap", new()
    ///     {
    ///         Enabled = true,
    ///         FederationId = "my-federation-id",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// The resource can be imported by using their `resource ID`. For getting the resource ID you can use Yandex Cloud [Web Console](https://console.yandex.cloud) or [YC CLI](https://yandex.cloud/docs/cli/quickstart).
    /// 
    /// ```sh
    /// $ pulumi import yandex:index/organizationmanagerGroupMapping:OrganizationmanagerGroupMapping &lt;resource Name&gt; &lt;resource Id&gt;
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import yandex:index/organizationmanagerGroupMapping:OrganizationmanagerGroupMapping my_group_map ...
    /// ```
    /// </summary>
    [YandexResourceType("yandex:index/organizationmanagerGroupMapping:OrganizationmanagerGroupMapping")]
    public partial class OrganizationmanagerGroupMapping : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Set "true" to enable organization manager group mapping.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// ID of the SAML Federation.
        /// </summary>
        [Output("federationId")]
        public Output<string> FederationId { get; private set; } = null!;


        /// <summary>
        /// Create a OrganizationmanagerGroupMapping resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrganizationmanagerGroupMapping(string name, OrganizationmanagerGroupMappingArgs args, CustomResourceOptions? options = null)
            : base("yandex:index/organizationmanagerGroupMapping:OrganizationmanagerGroupMapping", name, args ?? new OrganizationmanagerGroupMappingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrganizationmanagerGroupMapping(string name, Input<string> id, OrganizationmanagerGroupMappingState? state = null, CustomResourceOptions? options = null)
            : base("yandex:index/organizationmanagerGroupMapping:OrganizationmanagerGroupMapping", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrganizationmanagerGroupMapping resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrganizationmanagerGroupMapping Get(string name, Input<string> id, OrganizationmanagerGroupMappingState? state = null, CustomResourceOptions? options = null)
        {
            return new OrganizationmanagerGroupMapping(name, id, state, options);
        }
    }

    public sealed class OrganizationmanagerGroupMappingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Set "true" to enable organization manager group mapping.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// ID of the SAML Federation.
        /// </summary>
        [Input("federationId", required: true)]
        public Input<string> FederationId { get; set; } = null!;

        public OrganizationmanagerGroupMappingArgs()
        {
        }
        public static new OrganizationmanagerGroupMappingArgs Empty => new OrganizationmanagerGroupMappingArgs();
    }

    public sealed class OrganizationmanagerGroupMappingState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Set "true" to enable organization manager group mapping.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// ID of the SAML Federation.
        /// </summary>
        [Input("federationId")]
        public Input<string>? FederationId { get; set; }

        public OrganizationmanagerGroupMappingState()
        {
        }
        public static new OrganizationmanagerGroupMappingState Empty => new OrganizationmanagerGroupMappingState();
    }
}
