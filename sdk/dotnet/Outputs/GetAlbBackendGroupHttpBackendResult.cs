// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex.Outputs
{

    [OutputType]
    public sealed class GetAlbBackendGroupHttpBackendResult
    {
        /// <summary>
        /// Healthcheck specification that will be used by this backend.
        /// </summary>
        public readonly Outputs.GetAlbBackendGroupHttpBackendHealthcheckResult Healthcheck;
        /// <summary>
        /// Enables HTTP2 for upstream requests. If not set, HTTP 1.1 will be used by default.
        /// </summary>
        public readonly bool Http2;
        /// <summary>
        /// Load Balancing Config specification that will be used by this backend.
        /// </summary>
        public readonly Outputs.GetAlbBackendGroupHttpBackendLoadBalancingConfigResult LoadBalancingConfig;
        /// <summary>
        /// Name of the backend.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Port for incoming traffic.
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// Name of bucket which should be used as a backend.
        /// </summary>
        public readonly string StorageBucket;
        /// <summary>
        /// References target groups for the backend.
        /// </summary>
        public readonly ImmutableArray<string> TargetGroupIds;
        /// <summary>
        /// TLS specification that will be used by this backend.
        /// </summary>
        public readonly Outputs.GetAlbBackendGroupHttpBackendTlsResult Tls;
        /// <summary>
        /// Weight of the backend. Traffic will be split between backends of the same BackendGroup according to their weights.
        /// </summary>
        public readonly int Weight;

        [OutputConstructor]
        private GetAlbBackendGroupHttpBackendResult(
            Outputs.GetAlbBackendGroupHttpBackendHealthcheckResult healthcheck,

            bool http2,

            Outputs.GetAlbBackendGroupHttpBackendLoadBalancingConfigResult loadBalancingConfig,

            string name,

            int port,

            string storageBucket,

            ImmutableArray<string> targetGroupIds,

            Outputs.GetAlbBackendGroupHttpBackendTlsResult tls,

            int weight)
        {
            Healthcheck = healthcheck;
            Http2 = http2;
            LoadBalancingConfig = loadBalancingConfig;
            Name = name;
            Port = port;
            StorageBucket = storageBucket;
            TargetGroupIds = targetGroupIds;
            Tls = tls;
            Weight = weight;
        }
    }
}
