// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex.Outputs
{

    [OutputType]
    public sealed class GetComputeInstanceGroupInstanceTemplateResult
    {
        /// <summary>
        /// Boot disk specifications for the instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetComputeInstanceGroupInstanceTemplateBootDiskResult> BootDisks;
        /// <summary>
        /// A description of the instance.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// List of filesystems to attach to the instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetComputeInstanceGroupInstanceTemplateFilesystemResult> Filesystems;
        /// <summary>
        /// Hostname template for the instance. This field is used to generate the FQDN value of instance. The `hostname` must be unique within the network and region. If not specified, the hostname will be equal to `id` of the instance and FQDN will be `&lt;id&gt;.auto.internal`. Otherwise FQDN will be `&lt;hostname&gt;.&lt;region_id&gt;.internal`.
        /// </summary>
        public readonly string Hostname;
        /// <summary>
        /// A set of key/value label pairs to assign to the instance.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// A set of metadata key/value pairs to make available from within the instance.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Metadata;
        /// <summary>
        /// Options allow user to configure access to managed instances metadata
        /// </summary>
        public readonly Outputs.GetComputeInstanceGroupInstanceTemplateMetadataOptionsResult MetadataOptions;
        /// <summary>
        /// Name template of the instance.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Network specifications for the instance. This can be used multiple times for adding multiple interfaces.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetComputeInstanceGroupInstanceTemplateNetworkInterfaceResult> NetworkInterfaces;
        /// <summary>
        /// Network acceleration type for instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetComputeInstanceGroupInstanceTemplateNetworkSettingResult> NetworkSettings;
        /// <summary>
        /// The placement policy configuration.
        /// </summary>
        public readonly Outputs.GetComputeInstanceGroupInstanceTemplatePlacementPolicyResult? PlacementPolicy;
        /// <summary>
        /// The ID of the hardware platform configuration for the instance.
        /// </summary>
        public readonly string PlatformId;
        /// <summary>
        /// Compute resource specifications for the instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetComputeInstanceGroupInstanceTemplateResourceResult> Resources;
        /// <summary>
        /// The scheduling policy configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetComputeInstanceGroupInstanceTemplateSchedulingPolicyResult> SchedulingPolicies;
        /// <summary>
        /// A list of disks to attach to the instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetComputeInstanceGroupInstanceTemplateSecondaryDiskResult> SecondaryDisks;
        /// <summary>
        /// The ID of the service account authorized for this instance.
        /// </summary>
        public readonly string ServiceAccountId;

        [OutputConstructor]
        private GetComputeInstanceGroupInstanceTemplateResult(
            ImmutableArray<Outputs.GetComputeInstanceGroupInstanceTemplateBootDiskResult> bootDisks,

            string description,

            ImmutableArray<Outputs.GetComputeInstanceGroupInstanceTemplateFilesystemResult> filesystems,

            string hostname,

            ImmutableDictionary<string, string> labels,

            ImmutableDictionary<string, string> metadata,

            Outputs.GetComputeInstanceGroupInstanceTemplateMetadataOptionsResult metadataOptions,

            string name,

            ImmutableArray<Outputs.GetComputeInstanceGroupInstanceTemplateNetworkInterfaceResult> networkInterfaces,

            ImmutableArray<Outputs.GetComputeInstanceGroupInstanceTemplateNetworkSettingResult> networkSettings,

            Outputs.GetComputeInstanceGroupInstanceTemplatePlacementPolicyResult? placementPolicy,

            string platformId,

            ImmutableArray<Outputs.GetComputeInstanceGroupInstanceTemplateResourceResult> resources,

            ImmutableArray<Outputs.GetComputeInstanceGroupInstanceTemplateSchedulingPolicyResult> schedulingPolicies,

            ImmutableArray<Outputs.GetComputeInstanceGroupInstanceTemplateSecondaryDiskResult> secondaryDisks,

            string serviceAccountId)
        {
            BootDisks = bootDisks;
            Description = description;
            Filesystems = filesystems;
            Hostname = hostname;
            Labels = labels;
            Metadata = metadata;
            MetadataOptions = metadataOptions;
            Name = name;
            NetworkInterfaces = networkInterfaces;
            NetworkSettings = networkSettings;
            PlacementPolicy = placementPolicy;
            PlatformId = platformId;
            Resources = resources;
            SchedulingPolicies = schedulingPolicies;
            SecondaryDisks = secondaryDisks;
            ServiceAccountId = serviceAccountId;
        }
    }
}
