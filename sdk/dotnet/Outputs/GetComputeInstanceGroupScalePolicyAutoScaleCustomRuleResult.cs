// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex.Outputs
{

    [OutputType]
    public sealed class GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleResult
    {
        /// <summary>
        /// If specified, sets the folder id to fetch metrics from. By default, it is the ID of the folder the group belongs to.
        /// </summary>
        public readonly string FolderId;
        /// <summary>
        /// Metrics [labels](https://yandex.cloud/en/docs/monitoring/concepts/data-model#label) from Monitoring.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Name of the metric in Monitoring.
        /// </summary>
        public readonly string MetricName;
        /// <summary>
        /// Type of metric, can be `GAUGE` or `COUNTER`. `GAUGE` metric reflects the value at particular time point. `COUNTER` metric exhibits a monotonous growth over time.
        /// </summary>
        public readonly string MetricType;
        /// <summary>
        /// The metric rule type (UTILIZATION, WORKLOAD). UTILIZATION for metrics describing resource utilization per VM instance. WORKLOAD for metrics describing total workload on all VM instances.
        /// </summary>
        public readonly string RuleType;
        /// <summary>
        /// If specified, sets the service name to fetch metrics. The default value is `custom`. You can use a label to specify service metrics, e.g., `service` with the `compute` value for Compute Cloud.
        /// </summary>
        public readonly string Service;
        /// <summary>
        /// Target metric value by which Instance Groups calculates the number of required VM instances.
        /// </summary>
        public readonly double Target;

        [OutputConstructor]
        private GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleResult(
            string folderId,

            ImmutableDictionary<string, string> labels,

            string metricName,

            string metricType,

            string ruleType,

            string service,

            double target)
        {
            FolderId = folderId;
            Labels = labels;
            MetricName = metricName;
            MetricType = metricType;
            RuleType = ruleType;
            Service = service;
            Target = target;
        }
    }
}
