// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex.Outputs
{

    [OutputType]
    public sealed class GetMdbRedisClusterConfigResult
    {
        /// <summary>
        /// Number of databases (changing requires redis-server restart).
        /// </summary>
        public readonly int Databases;
        /// <summary>
        /// Redis key eviction policy for a dataset that reaches maximum memory.
        /// </summary>
        public readonly string MaxmemoryPolicy;
        /// <summary>
        /// Select the events that Redis will notify among a set of classes.
        /// </summary>
        public readonly string NotifyKeyspaceEvents;
        /// <summary>
        /// Log slow queries below this number in microseconds.
        /// </summary>
        public readonly int SlowlogLogSlowerThan;
        /// <summary>
        /// Slow queries log length.
        /// </summary>
        public readonly int SlowlogMaxLen;
        /// <summary>
        /// Close the connection after a client is idle for N seconds.
        /// </summary>
        public readonly int Timeout;
        /// <summary>
        /// Version of Redis (either 5.0 or 6.0).
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetMdbRedisClusterConfigResult(
            int databases,

            string maxmemoryPolicy,

            string notifyKeyspaceEvents,

            int slowlogLogSlowerThan,

            int slowlogMaxLen,

            int timeout,

            string version)
        {
            Databases = databases;
            MaxmemoryPolicy = maxmemoryPolicy;
            NotifyKeyspaceEvents = notifyKeyspaceEvents;
            SlowlogLogSlowerThan = slowlogLogSlowerThan;
            SlowlogMaxLen = slowlogMaxLen;
            Timeout = timeout;
            Version = version;
        }
    }
}
