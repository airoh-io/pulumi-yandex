// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"errors"
	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An Instance group resource. For more information, see [the official documentation](https://yandex.cloud/docs/compute/concepts/instance-groups/).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//	"os"
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func readFileOrPanic(path string) pulumi.StringPtrInput {
//		data, err := os.ReadFile(path)
//		if err != nil {
//			panic(err.Error())
//		}
//		return pulumi.String(string(data))
//	}
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Create a new Compute Instance Group (IG)
//			_, err := yandex.NewComputeInstanceGroup(ctx, "group1", &yandex.ComputeInstanceGroupArgs{
//				FolderId:           pulumi.Any(data.Yandex_resourcemanager_folder.Test_folder.Id),
//				ServiceAccountId:   pulumi.Any(yandex_iam_service_account.Test_account.Id),
//				DeletionProtection: pulumi.Bool(true),
//				InstanceTemplate: &yandex.ComputeInstanceGroupInstanceTemplateArgs{
//					PlatformId: pulumi.String("standard-v1"),
//					Resources: &yandex.ComputeInstanceGroupInstanceTemplateResourcesArgs{
//						Memory: pulumi.Float64(2),
//						Cores:  pulumi.Int(2),
//					},
//					BootDisk: &yandex.ComputeInstanceGroupInstanceTemplateBootDiskArgs{
//						Mode: pulumi.String("READ_WRITE"),
//						InitializeParams: &yandex.ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsArgs{
//							ImageId: pulumi.Any(data.Yandex_compute_image.Ubuntu.Id),
//							Size:    pulumi.Int(4),
//						},
//					},
//					NetworkInterfaces: yandex.ComputeInstanceGroupInstanceTemplateNetworkInterfaceArray{
//						&yandex.ComputeInstanceGroupInstanceTemplateNetworkInterfaceArgs{
//							NetworkId: pulumi.Any(yandex_vpc_network.MyInstGroupNetwork.Id),
//							SubnetIds: pulumi.StringArray{
//								yandex_vpc_subnet.MyInstGroupSubnet.Id,
//							},
//						},
//					},
//					Labels: pulumi.StringMap{
//						"label1": pulumi.String("label1-value"),
//						"label2": pulumi.String("label2-value"),
//					},
//					Metadata: pulumi.StringMap{
//						"foo":      pulumi.String("bar"),
//						"ssh-keys": pulumi.Sprintf("ubuntu:%v", readFileOrPanic("~/.ssh/id_rsa.pub")),
//					},
//					NetworkSettings: yandex.ComputeInstanceGroupInstanceTemplateNetworkSettingArray{
//						&yandex.ComputeInstanceGroupInstanceTemplateNetworkSettingArgs{
//							Type: pulumi.String("STANDARD"),
//						},
//					},
//				},
//				Variables: pulumi.StringMap{
//					"test_key1": pulumi.String("test_value1"),
//					"test_key2": pulumi.String("test_value2"),
//				},
//				ScalePolicy: &yandex.ComputeInstanceGroupScalePolicyArgs{
//					FixedScale: &yandex.ComputeInstanceGroupScalePolicyFixedScaleArgs{
//						Size: pulumi.Int(3),
//					},
//				},
//				AllocationPolicy: &yandex.ComputeInstanceGroupAllocationPolicyArgs{
//					Zones: pulumi.StringArray{
//						pulumi.String("ru-central1-a"),
//					},
//				},
//				DeployPolicy: &yandex.ComputeInstanceGroupDeployPolicyArgs{
//					MaxUnavailable: pulumi.Int(2),
//					MaxCreating:    pulumi.Int(2),
//					MaxExpansion:   pulumi.Int(2),
//					MaxDeleting:    pulumi.Int(2),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The resource can be imported by using their `resource ID`. For getting the resource ID you can use Yandex Cloud [Web Console](https://console.yandex.cloud) or [YC CLI](https://yandex.cloud/docs/cli/quickstart).
//
// bash
//
// ```sh
// $ pulumi import yandex:index/computeInstanceGroup:ComputeInstanceGroup <resource Name> <resource Id>
// ```
//
// ```sh
// $ pulumi import yandex:index/computeInstanceGroup:ComputeInstanceGroup my_ig1 cl1jh**********u4275
// ```
type ComputeInstanceGroup struct {
	pulumi.CustomResourceState

	// The allocation policy of the instance group by zone and region.
	AllocationPolicy ComputeInstanceGroupAllocationPolicyOutput `pulumi:"allocationPolicy"`
	// Application Load balancing (L7) specifications.
	ApplicationLoadBalancer ComputeInstanceGroupApplicationLoadBalancerPtrOutput `pulumi:"applicationLoadBalancer"`
	// The creation timestamp of the resource.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection pulumi.BoolPtrOutput `pulumi:"deletionProtection"`
	// The deployment policy of the instance group.
	DeployPolicy ComputeInstanceGroupDeployPolicyOutput `pulumi:"deployPolicy"`
	// The resource description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringOutput `pulumi:"folderId"`
	// Health check specifications.
	HealthChecks ComputeInstanceGroupHealthCheckArrayOutput `pulumi:"healthChecks"`
	// The template for creating new instances.
	InstanceTemplate ComputeInstanceGroupInstanceTemplateOutput `pulumi:"instanceTemplate"`
	// Instances block.
	Instances ComputeInstanceGroupInstanceArrayOutput `pulumi:"instances"`
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Load balancing specifications.
	LoadBalancer ComputeInstanceGroupLoadBalancerPtrOutput `pulumi:"loadBalancer"`
	// Timeout for waiting for the VM to become healthy. If the timeout is exceeded, the VM will be turned off based on the deployment policy. Specified in seconds.
	MaxCheckingHealthDuration pulumi.IntPtrOutput `pulumi:"maxCheckingHealthDuration"`
	// The resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The scaling policy of the instance group.
	//
	// > Either `fixedScale` or `autoScale` must be specified.
	ScalePolicy ComputeInstanceGroupScalePolicyOutput `pulumi:"scalePolicy"`
	// [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
	ServiceAccountId pulumi.StringOutput `pulumi:"serviceAccountId"`
	// The status of the instance.
	Status pulumi.StringOutput `pulumi:"status"`
	// A set of key/value variables pairs to assign to the instance group.
	Variables pulumi.StringMapOutput `pulumi:"variables"`
}

// NewComputeInstanceGroup registers a new resource with the given unique name, arguments, and options.
func NewComputeInstanceGroup(ctx *pulumi.Context,
	name string, args *ComputeInstanceGroupArgs, opts ...pulumi.ResourceOption) (*ComputeInstanceGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AllocationPolicy == nil {
		return nil, errors.New("invalid value for required argument 'AllocationPolicy'")
	}
	if args.DeployPolicy == nil {
		return nil, errors.New("invalid value for required argument 'DeployPolicy'")
	}
	if args.InstanceTemplate == nil {
		return nil, errors.New("invalid value for required argument 'InstanceTemplate'")
	}
	if args.ScalePolicy == nil {
		return nil, errors.New("invalid value for required argument 'ScalePolicy'")
	}
	if args.ServiceAccountId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ComputeInstanceGroup
	err := ctx.RegisterResource("yandex:index/computeInstanceGroup:ComputeInstanceGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeInstanceGroup gets an existing ComputeInstanceGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeInstanceGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeInstanceGroupState, opts ...pulumi.ResourceOption) (*ComputeInstanceGroup, error) {
	var resource ComputeInstanceGroup
	err := ctx.ReadResource("yandex:index/computeInstanceGroup:ComputeInstanceGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeInstanceGroup resources.
type computeInstanceGroupState struct {
	// The allocation policy of the instance group by zone and region.
	AllocationPolicy *ComputeInstanceGroupAllocationPolicy `pulumi:"allocationPolicy"`
	// Application Load balancing (L7) specifications.
	ApplicationLoadBalancer *ComputeInstanceGroupApplicationLoadBalancer `pulumi:"applicationLoadBalancer"`
	// The creation timestamp of the resource.
	CreatedAt *string `pulumi:"createdAt"`
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// The deployment policy of the instance group.
	DeployPolicy *ComputeInstanceGroupDeployPolicy `pulumi:"deployPolicy"`
	// The resource description.
	Description *string `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// Health check specifications.
	HealthChecks []ComputeInstanceGroupHealthCheck `pulumi:"healthChecks"`
	// The template for creating new instances.
	InstanceTemplate *ComputeInstanceGroupInstanceTemplate `pulumi:"instanceTemplate"`
	// Instances block.
	Instances []ComputeInstanceGroupInstance `pulumi:"instances"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// Load balancing specifications.
	LoadBalancer *ComputeInstanceGroupLoadBalancer `pulumi:"loadBalancer"`
	// Timeout for waiting for the VM to become healthy. If the timeout is exceeded, the VM will be turned off based on the deployment policy. Specified in seconds.
	MaxCheckingHealthDuration *int `pulumi:"maxCheckingHealthDuration"`
	// The resource name.
	Name *string `pulumi:"name"`
	// The scaling policy of the instance group.
	//
	// > Either `fixedScale` or `autoScale` must be specified.
	ScalePolicy *ComputeInstanceGroupScalePolicy `pulumi:"scalePolicy"`
	// [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
	ServiceAccountId *string `pulumi:"serviceAccountId"`
	// The status of the instance.
	Status *string `pulumi:"status"`
	// A set of key/value variables pairs to assign to the instance group.
	Variables map[string]string `pulumi:"variables"`
}

type ComputeInstanceGroupState struct {
	// The allocation policy of the instance group by zone and region.
	AllocationPolicy ComputeInstanceGroupAllocationPolicyPtrInput
	// Application Load balancing (L7) specifications.
	ApplicationLoadBalancer ComputeInstanceGroupApplicationLoadBalancerPtrInput
	// The creation timestamp of the resource.
	CreatedAt pulumi.StringPtrInput
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection pulumi.BoolPtrInput
	// The deployment policy of the instance group.
	DeployPolicy ComputeInstanceGroupDeployPolicyPtrInput
	// The resource description.
	Description pulumi.StringPtrInput
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput
	// Health check specifications.
	HealthChecks ComputeInstanceGroupHealthCheckArrayInput
	// The template for creating new instances.
	InstanceTemplate ComputeInstanceGroupInstanceTemplatePtrInput
	// Instances block.
	Instances ComputeInstanceGroupInstanceArrayInput
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapInput
	// Load balancing specifications.
	LoadBalancer ComputeInstanceGroupLoadBalancerPtrInput
	// Timeout for waiting for the VM to become healthy. If the timeout is exceeded, the VM will be turned off based on the deployment policy. Specified in seconds.
	MaxCheckingHealthDuration pulumi.IntPtrInput
	// The resource name.
	Name pulumi.StringPtrInput
	// The scaling policy of the instance group.
	//
	// > Either `fixedScale` or `autoScale` must be specified.
	ScalePolicy ComputeInstanceGroupScalePolicyPtrInput
	// [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
	ServiceAccountId pulumi.StringPtrInput
	// The status of the instance.
	Status pulumi.StringPtrInput
	// A set of key/value variables pairs to assign to the instance group.
	Variables pulumi.StringMapInput
}

func (ComputeInstanceGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeInstanceGroupState)(nil)).Elem()
}

type computeInstanceGroupArgs struct {
	// The allocation policy of the instance group by zone and region.
	AllocationPolicy ComputeInstanceGroupAllocationPolicy `pulumi:"allocationPolicy"`
	// Application Load balancing (L7) specifications.
	ApplicationLoadBalancer *ComputeInstanceGroupApplicationLoadBalancer `pulumi:"applicationLoadBalancer"`
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// The deployment policy of the instance group.
	DeployPolicy ComputeInstanceGroupDeployPolicy `pulumi:"deployPolicy"`
	// The resource description.
	Description *string `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// Health check specifications.
	HealthChecks []ComputeInstanceGroupHealthCheck `pulumi:"healthChecks"`
	// The template for creating new instances.
	InstanceTemplate ComputeInstanceGroupInstanceTemplate `pulumi:"instanceTemplate"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// Load balancing specifications.
	LoadBalancer *ComputeInstanceGroupLoadBalancer `pulumi:"loadBalancer"`
	// Timeout for waiting for the VM to become healthy. If the timeout is exceeded, the VM will be turned off based on the deployment policy. Specified in seconds.
	MaxCheckingHealthDuration *int `pulumi:"maxCheckingHealthDuration"`
	// The resource name.
	Name *string `pulumi:"name"`
	// The scaling policy of the instance group.
	//
	// > Either `fixedScale` or `autoScale` must be specified.
	ScalePolicy ComputeInstanceGroupScalePolicy `pulumi:"scalePolicy"`
	// [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
	ServiceAccountId string `pulumi:"serviceAccountId"`
	// A set of key/value variables pairs to assign to the instance group.
	Variables map[string]string `pulumi:"variables"`
}

// The set of arguments for constructing a ComputeInstanceGroup resource.
type ComputeInstanceGroupArgs struct {
	// The allocation policy of the instance group by zone and region.
	AllocationPolicy ComputeInstanceGroupAllocationPolicyInput
	// Application Load balancing (L7) specifications.
	ApplicationLoadBalancer ComputeInstanceGroupApplicationLoadBalancerPtrInput
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection pulumi.BoolPtrInput
	// The deployment policy of the instance group.
	DeployPolicy ComputeInstanceGroupDeployPolicyInput
	// The resource description.
	Description pulumi.StringPtrInput
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput
	// Health check specifications.
	HealthChecks ComputeInstanceGroupHealthCheckArrayInput
	// The template for creating new instances.
	InstanceTemplate ComputeInstanceGroupInstanceTemplateInput
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapInput
	// Load balancing specifications.
	LoadBalancer ComputeInstanceGroupLoadBalancerPtrInput
	// Timeout for waiting for the VM to become healthy. If the timeout is exceeded, the VM will be turned off based on the deployment policy. Specified in seconds.
	MaxCheckingHealthDuration pulumi.IntPtrInput
	// The resource name.
	Name pulumi.StringPtrInput
	// The scaling policy of the instance group.
	//
	// > Either `fixedScale` or `autoScale` must be specified.
	ScalePolicy ComputeInstanceGroupScalePolicyInput
	// [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
	ServiceAccountId pulumi.StringInput
	// A set of key/value variables pairs to assign to the instance group.
	Variables pulumi.StringMapInput
}

func (ComputeInstanceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeInstanceGroupArgs)(nil)).Elem()
}

type ComputeInstanceGroupInput interface {
	pulumi.Input

	ToComputeInstanceGroupOutput() ComputeInstanceGroupOutput
	ToComputeInstanceGroupOutputWithContext(ctx context.Context) ComputeInstanceGroupOutput
}

func (*ComputeInstanceGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroup)(nil)).Elem()
}

func (i *ComputeInstanceGroup) ToComputeInstanceGroupOutput() ComputeInstanceGroupOutput {
	return i.ToComputeInstanceGroupOutputWithContext(context.Background())
}

func (i *ComputeInstanceGroup) ToComputeInstanceGroupOutputWithContext(ctx context.Context) ComputeInstanceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupOutput)
}

// ComputeInstanceGroupArrayInput is an input type that accepts ComputeInstanceGroupArray and ComputeInstanceGroupArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupArrayInput` via:
//
//	ComputeInstanceGroupArray{ ComputeInstanceGroupArgs{...} }
type ComputeInstanceGroupArrayInput interface {
	pulumi.Input

	ToComputeInstanceGroupArrayOutput() ComputeInstanceGroupArrayOutput
	ToComputeInstanceGroupArrayOutputWithContext(context.Context) ComputeInstanceGroupArrayOutput
}

type ComputeInstanceGroupArray []ComputeInstanceGroupInput

func (ComputeInstanceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ComputeInstanceGroup)(nil)).Elem()
}

func (i ComputeInstanceGroupArray) ToComputeInstanceGroupArrayOutput() ComputeInstanceGroupArrayOutput {
	return i.ToComputeInstanceGroupArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupArray) ToComputeInstanceGroupArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupArrayOutput)
}

// ComputeInstanceGroupMapInput is an input type that accepts ComputeInstanceGroupMap and ComputeInstanceGroupMapOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupMapInput` via:
//
//	ComputeInstanceGroupMap{ "key": ComputeInstanceGroupArgs{...} }
type ComputeInstanceGroupMapInput interface {
	pulumi.Input

	ToComputeInstanceGroupMapOutput() ComputeInstanceGroupMapOutput
	ToComputeInstanceGroupMapOutputWithContext(context.Context) ComputeInstanceGroupMapOutput
}

type ComputeInstanceGroupMap map[string]ComputeInstanceGroupInput

func (ComputeInstanceGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ComputeInstanceGroup)(nil)).Elem()
}

func (i ComputeInstanceGroupMap) ToComputeInstanceGroupMapOutput() ComputeInstanceGroupMapOutput {
	return i.ToComputeInstanceGroupMapOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupMap) ToComputeInstanceGroupMapOutputWithContext(ctx context.Context) ComputeInstanceGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupMapOutput)
}

type ComputeInstanceGroupOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroup)(nil)).Elem()
}

func (o ComputeInstanceGroupOutput) ToComputeInstanceGroupOutput() ComputeInstanceGroupOutput {
	return o
}

func (o ComputeInstanceGroupOutput) ToComputeInstanceGroupOutputWithContext(ctx context.Context) ComputeInstanceGroupOutput {
	return o
}

// The allocation policy of the instance group by zone and region.
func (o ComputeInstanceGroupOutput) AllocationPolicy() ComputeInstanceGroupAllocationPolicyOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) ComputeInstanceGroupAllocationPolicyOutput { return v.AllocationPolicy }).(ComputeInstanceGroupAllocationPolicyOutput)
}

// Application Load balancing (L7) specifications.
func (o ComputeInstanceGroupOutput) ApplicationLoadBalancer() ComputeInstanceGroupApplicationLoadBalancerPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) ComputeInstanceGroupApplicationLoadBalancerPtrOutput {
		return v.ApplicationLoadBalancer
	}).(ComputeInstanceGroupApplicationLoadBalancerPtrOutput)
}

// The creation timestamp of the resource.
func (o ComputeInstanceGroupOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The `true` value means that resource is protected from accidental deletion.
func (o ComputeInstanceGroupOutput) DeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) pulumi.BoolPtrOutput { return v.DeletionProtection }).(pulumi.BoolPtrOutput)
}

// The deployment policy of the instance group.
func (o ComputeInstanceGroupOutput) DeployPolicy() ComputeInstanceGroupDeployPolicyOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) ComputeInstanceGroupDeployPolicyOutput { return v.DeployPolicy }).(ComputeInstanceGroupDeployPolicyOutput)
}

// The resource description.
func (o ComputeInstanceGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
func (o ComputeInstanceGroupOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

// Health check specifications.
func (o ComputeInstanceGroupOutput) HealthChecks() ComputeInstanceGroupHealthCheckArrayOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) ComputeInstanceGroupHealthCheckArrayOutput { return v.HealthChecks }).(ComputeInstanceGroupHealthCheckArrayOutput)
}

// The template for creating new instances.
func (o ComputeInstanceGroupOutput) InstanceTemplate() ComputeInstanceGroupInstanceTemplateOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) ComputeInstanceGroupInstanceTemplateOutput { return v.InstanceTemplate }).(ComputeInstanceGroupInstanceTemplateOutput)
}

// Instances block.
func (o ComputeInstanceGroupOutput) Instances() ComputeInstanceGroupInstanceArrayOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) ComputeInstanceGroupInstanceArrayOutput { return v.Instances }).(ComputeInstanceGroupInstanceArrayOutput)
}

// A set of key/value label pairs which assigned to resource.
func (o ComputeInstanceGroupOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Load balancing specifications.
func (o ComputeInstanceGroupOutput) LoadBalancer() ComputeInstanceGroupLoadBalancerPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) ComputeInstanceGroupLoadBalancerPtrOutput { return v.LoadBalancer }).(ComputeInstanceGroupLoadBalancerPtrOutput)
}

// Timeout for waiting for the VM to become healthy. If the timeout is exceeded, the VM will be turned off based on the deployment policy. Specified in seconds.
func (o ComputeInstanceGroupOutput) MaxCheckingHealthDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) pulumi.IntPtrOutput { return v.MaxCheckingHealthDuration }).(pulumi.IntPtrOutput)
}

// The resource name.
func (o ComputeInstanceGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The scaling policy of the instance group.
//
// > Either `fixedScale` or `autoScale` must be specified.
func (o ComputeInstanceGroupOutput) ScalePolicy() ComputeInstanceGroupScalePolicyOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) ComputeInstanceGroupScalePolicyOutput { return v.ScalePolicy }).(ComputeInstanceGroupScalePolicyOutput)
}

// [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
func (o ComputeInstanceGroupOutput) ServiceAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) pulumi.StringOutput { return v.ServiceAccountId }).(pulumi.StringOutput)
}

// The status of the instance.
func (o ComputeInstanceGroupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// A set of key/value variables pairs to assign to the instance group.
func (o ComputeInstanceGroupOutput) Variables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ComputeInstanceGroup) pulumi.StringMapOutput { return v.Variables }).(pulumi.StringMapOutput)
}

type ComputeInstanceGroupArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ComputeInstanceGroup)(nil)).Elem()
}

func (o ComputeInstanceGroupArrayOutput) ToComputeInstanceGroupArrayOutput() ComputeInstanceGroupArrayOutput {
	return o
}

func (o ComputeInstanceGroupArrayOutput) ToComputeInstanceGroupArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupArrayOutput {
	return o
}

func (o ComputeInstanceGroupArrayOutput) Index(i pulumi.IntInput) ComputeInstanceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ComputeInstanceGroup {
		return vs[0].([]*ComputeInstanceGroup)[vs[1].(int)]
	}).(ComputeInstanceGroupOutput)
}

type ComputeInstanceGroupMapOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ComputeInstanceGroup)(nil)).Elem()
}

func (o ComputeInstanceGroupMapOutput) ToComputeInstanceGroupMapOutput() ComputeInstanceGroupMapOutput {
	return o
}

func (o ComputeInstanceGroupMapOutput) ToComputeInstanceGroupMapOutputWithContext(ctx context.Context) ComputeInstanceGroupMapOutput {
	return o
}

func (o ComputeInstanceGroupMapOutput) MapIndex(k pulumi.StringInput) ComputeInstanceGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ComputeInstanceGroup {
		return vs[0].(map[string]*ComputeInstanceGroup)[vs[1].(string)]
	}).(ComputeInstanceGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceGroupInput)(nil)).Elem(), &ComputeInstanceGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceGroupArrayInput)(nil)).Elem(), ComputeInstanceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceGroupMapInput)(nil)).Elem(), ComputeInstanceGroupMap{})
	pulumi.RegisterOutputType(ComputeInstanceGroupOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupArrayOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupMapOutput{})
}
