// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex CDN Origin Group. For more information, see [the official documentation](https://yandex.cloud/docs/cdn/concepts/origins).
//
// > One of `originGroupId` or `name` should be specified.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myGroup, err := yandex.LookupCdnOriginGroup(ctx, &yandex.LookupCdnOriginGroupArgs{
//				OriginGroupId: pulumi.IntRef("some_instance_id"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("originGroupName", myGroup.Name)
//			return nil
//		})
//	}
//
// ```
func LookupCdnOriginGroup(ctx *pulumi.Context, args *LookupCdnOriginGroupArgs, opts ...pulumi.InvokeOption) (*LookupCdnOriginGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCdnOriginGroupResult
	err := ctx.Invoke("yandex:index/getCdnOriginGroup:getCdnOriginGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCdnOriginGroup.
type LookupCdnOriginGroupArgs struct {
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// The resource name.
	Name *string `pulumi:"name"`
	// The ID of a specific origin group.
	OriginGroupId *int `pulumi:"originGroupId"`
}

// A collection of values returned by getCdnOriginGroup.
type LookupCdnOriginGroupResult struct {
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId string `pulumi:"folderId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The resource name.
	Name string `pulumi:"name"`
	// The ID of a specific origin group.
	OriginGroupId int                       `pulumi:"originGroupId"`
	Origins       []GetCdnOriginGroupOrigin `pulumi:"origins"`
	// If the option is active (has true value), in case the origin responds with 4XX or 5XX codes, use the next origin from the list.
	UseNext bool `pulumi:"useNext"`
}

func LookupCdnOriginGroupOutput(ctx *pulumi.Context, args LookupCdnOriginGroupOutputArgs, opts ...pulumi.InvokeOption) LookupCdnOriginGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCdnOriginGroupResultOutput, error) {
			args := v.(LookupCdnOriginGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getCdnOriginGroup:getCdnOriginGroup", args, LookupCdnOriginGroupResultOutput{}, options).(LookupCdnOriginGroupResultOutput), nil
		}).(LookupCdnOriginGroupResultOutput)
}

// A collection of arguments for invoking getCdnOriginGroup.
type LookupCdnOriginGroupOutputArgs struct {
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput `pulumi:"folderId"`
	// The resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ID of a specific origin group.
	OriginGroupId pulumi.IntPtrInput `pulumi:"originGroupId"`
}

func (LookupCdnOriginGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCdnOriginGroupArgs)(nil)).Elem()
}

// A collection of values returned by getCdnOriginGroup.
type LookupCdnOriginGroupResultOutput struct{ *pulumi.OutputState }

func (LookupCdnOriginGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCdnOriginGroupResult)(nil)).Elem()
}

func (o LookupCdnOriginGroupResultOutput) ToLookupCdnOriginGroupResultOutput() LookupCdnOriginGroupResultOutput {
	return o
}

func (o LookupCdnOriginGroupResultOutput) ToLookupCdnOriginGroupResultOutputWithContext(ctx context.Context) LookupCdnOriginGroupResultOutput {
	return o
}

// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
func (o LookupCdnOriginGroupResultOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCdnOriginGroupResult) string { return v.FolderId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCdnOriginGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCdnOriginGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// The resource name.
func (o LookupCdnOriginGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCdnOriginGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of a specific origin group.
func (o LookupCdnOriginGroupResultOutput) OriginGroupId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCdnOriginGroupResult) int { return v.OriginGroupId }).(pulumi.IntOutput)
}

func (o LookupCdnOriginGroupResultOutput) Origins() GetCdnOriginGroupOriginArrayOutput {
	return o.ApplyT(func(v LookupCdnOriginGroupResult) []GetCdnOriginGroupOrigin { return v.Origins }).(GetCdnOriginGroupOriginArrayOutput)
}

// If the option is active (has true value), in case the origin responds with 4XX or 5XX codes, use the next origin from the list.
func (o LookupCdnOriginGroupResultOutput) UseNext() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCdnOriginGroupResult) bool { return v.UseNext }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCdnOriginGroupResultOutput{})
}
