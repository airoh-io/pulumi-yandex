// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Allows management of [Yandex Cloud CDN Resource](https://yandex.cloud/docs/cdn/concepts/resource).
//
// > CDN provider must be activated prior usage of CDN resources, either via UI console or via yc cli command: `yc cdn provider activate --folder-id <folder-id> --type gcore`.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myResource, err := yandex.LookupCdnResource(ctx, &yandex.LookupCdnResourceArgs{
//				ResourceId: pulumi.StringRef("some resource id"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("resourceCname", myResource.Cname)
//			return nil
//		})
//	}
//
// ```
func LookupCdnResource(ctx *pulumi.Context, args *LookupCdnResourceArgs, opts ...pulumi.InvokeOption) (*LookupCdnResourceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCdnResourceResult
	err := ctx.Invoke("yandex:index/getCdnResource:getCdnResource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCdnResource.
type LookupCdnResourceArgs struct {
	// Flag to create Resource either in active or disabled state. `True` - the content from CDN is available to clients.
	Active *bool `pulumi:"active"`
	// CDN endpoint CNAME, must be unique among resources.
	Cname *string `pulumi:"cname"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// CDN Resource settings and options to tune CDN edge behavior.
	Options *GetCdnResourceOptions `pulumi:"options"`
	// The ID of a specific origin group.
	OriginGroupId *int `pulumi:"originGroupId"`
	// The name of a specific origin group.
	OriginGroupName *string `pulumi:"originGroupName"`
	// Protocol of origin resource. `http` or `https`.
	OriginProtocol *string `pulumi:"originProtocol"`
	ResourceId     *string `pulumi:"resourceId"`
	// List of secondary hostname strings.
	SecondaryHostnames []string `pulumi:"secondaryHostnames"`
	// SSL certificate of CDN resource.
	SslCertificate *GetCdnResourceSslCertificate `pulumi:"sslCertificate"`
	// Last update timestamp. Computed value for read and update operations.
	UpdatedAt *string `pulumi:"updatedAt"`
}

// A collection of values returned by getCdnResource.
type LookupCdnResourceResult struct {
	// Flag to create Resource either in active or disabled state. `True` - the content from CDN is available to clients.
	Active *bool `pulumi:"active"`
	// CDN endpoint CNAME, must be unique among resources.
	Cname string `pulumi:"cname"`
	// The creation timestamp of the resource.
	CreatedAt string `pulumi:"createdAt"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId string `pulumi:"folderId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// CDN Resource settings and options to tune CDN edge behavior.
	Options GetCdnResourceOptions `pulumi:"options"`
	// The ID of a specific origin group.
	OriginGroupId *int `pulumi:"originGroupId"`
	// The name of a specific origin group.
	OriginGroupName *string `pulumi:"originGroupName"`
	// Protocol of origin resource. `http` or `https`.
	OriginProtocol *string `pulumi:"originProtocol"`
	// Provider CNAME of CDN resource, computed value for read and update operations.
	ProviderCname string `pulumi:"providerCname"`
	ResourceId    string `pulumi:"resourceId"`
	// List of secondary hostname strings.
	SecondaryHostnames []string `pulumi:"secondaryHostnames"`
	// SSL certificate of CDN resource.
	SslCertificate GetCdnResourceSslCertificate `pulumi:"sslCertificate"`
	// Last update timestamp. Computed value for read and update operations.
	UpdatedAt string `pulumi:"updatedAt"`
}

func LookupCdnResourceOutput(ctx *pulumi.Context, args LookupCdnResourceOutputArgs, opts ...pulumi.InvokeOption) LookupCdnResourceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCdnResourceResultOutput, error) {
			args := v.(LookupCdnResourceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getCdnResource:getCdnResource", args, LookupCdnResourceResultOutput{}, options).(LookupCdnResourceResultOutput), nil
		}).(LookupCdnResourceResultOutput)
}

// A collection of arguments for invoking getCdnResource.
type LookupCdnResourceOutputArgs struct {
	// Flag to create Resource either in active or disabled state. `True` - the content from CDN is available to clients.
	Active pulumi.BoolPtrInput `pulumi:"active"`
	// CDN endpoint CNAME, must be unique among resources.
	Cname pulumi.StringPtrInput `pulumi:"cname"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput `pulumi:"folderId"`
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// CDN Resource settings and options to tune CDN edge behavior.
	Options GetCdnResourceOptionsPtrInput `pulumi:"options"`
	// The ID of a specific origin group.
	OriginGroupId pulumi.IntPtrInput `pulumi:"originGroupId"`
	// The name of a specific origin group.
	OriginGroupName pulumi.StringPtrInput `pulumi:"originGroupName"`
	// Protocol of origin resource. `http` or `https`.
	OriginProtocol pulumi.StringPtrInput `pulumi:"originProtocol"`
	ResourceId     pulumi.StringPtrInput `pulumi:"resourceId"`
	// List of secondary hostname strings.
	SecondaryHostnames pulumi.StringArrayInput `pulumi:"secondaryHostnames"`
	// SSL certificate of CDN resource.
	SslCertificate GetCdnResourceSslCertificatePtrInput `pulumi:"sslCertificate"`
	// Last update timestamp. Computed value for read and update operations.
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (LookupCdnResourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCdnResourceArgs)(nil)).Elem()
}

// A collection of values returned by getCdnResource.
type LookupCdnResourceResultOutput struct{ *pulumi.OutputState }

func (LookupCdnResourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCdnResourceResult)(nil)).Elem()
}

func (o LookupCdnResourceResultOutput) ToLookupCdnResourceResultOutput() LookupCdnResourceResultOutput {
	return o
}

func (o LookupCdnResourceResultOutput) ToLookupCdnResourceResultOutputWithContext(ctx context.Context) LookupCdnResourceResultOutput {
	return o
}

// Flag to create Resource either in active or disabled state. `True` - the content from CDN is available to clients.
func (o LookupCdnResourceResultOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupCdnResourceResult) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

// CDN endpoint CNAME, must be unique among resources.
func (o LookupCdnResourceResultOutput) Cname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCdnResourceResult) string { return v.Cname }).(pulumi.StringOutput)
}

// The creation timestamp of the resource.
func (o LookupCdnResourceResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCdnResourceResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
func (o LookupCdnResourceResultOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCdnResourceResult) string { return v.FolderId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCdnResourceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCdnResourceResult) string { return v.Id }).(pulumi.StringOutput)
}

// A set of key/value label pairs which assigned to resource.
func (o LookupCdnResourceResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCdnResourceResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// CDN Resource settings and options to tune CDN edge behavior.
func (o LookupCdnResourceResultOutput) Options() GetCdnResourceOptionsOutput {
	return o.ApplyT(func(v LookupCdnResourceResult) GetCdnResourceOptions { return v.Options }).(GetCdnResourceOptionsOutput)
}

// The ID of a specific origin group.
func (o LookupCdnResourceResultOutput) OriginGroupId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupCdnResourceResult) *int { return v.OriginGroupId }).(pulumi.IntPtrOutput)
}

// The name of a specific origin group.
func (o LookupCdnResourceResultOutput) OriginGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCdnResourceResult) *string { return v.OriginGroupName }).(pulumi.StringPtrOutput)
}

// Protocol of origin resource. `http` or `https`.
func (o LookupCdnResourceResultOutput) OriginProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCdnResourceResult) *string { return v.OriginProtocol }).(pulumi.StringPtrOutput)
}

// Provider CNAME of CDN resource, computed value for read and update operations.
func (o LookupCdnResourceResultOutput) ProviderCname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCdnResourceResult) string { return v.ProviderCname }).(pulumi.StringOutput)
}

func (o LookupCdnResourceResultOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCdnResourceResult) string { return v.ResourceId }).(pulumi.StringOutput)
}

// List of secondary hostname strings.
func (o LookupCdnResourceResultOutput) SecondaryHostnames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCdnResourceResult) []string { return v.SecondaryHostnames }).(pulumi.StringArrayOutput)
}

// SSL certificate of CDN resource.
func (o LookupCdnResourceResultOutput) SslCertificate() GetCdnResourceSslCertificateOutput {
	return o.ApplyT(func(v LookupCdnResourceResult) GetCdnResourceSslCertificate { return v.SslCertificate }).(GetCdnResourceSslCertificateOutput)
}

// Last update timestamp. Computed value for read and update operations.
func (o LookupCdnResourceResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCdnResourceResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCdnResourceResultOutput{})
}
