// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex Compute Disk Placement group. For more information, see [the official documentation](https://yandex.cloud/docs/compute/concepts/disk#nr-disks).
//
// > One of `groupId` or `name` should be specified.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myGroup, err := yandex.LookupComputeDiskPlacementGroup(ctx, &yandex.LookupComputeDiskPlacementGroupArgs{
//				GroupId: pulumi.StringRef("some_group_id"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("placementGroupName", myGroup.Name)
//			return nil
//		})
//	}
//
// ```
func LookupComputeDiskPlacementGroup(ctx *pulumi.Context, args *LookupComputeDiskPlacementGroupArgs, opts ...pulumi.InvokeOption) (*LookupComputeDiskPlacementGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupComputeDiskPlacementGroupResult
	err := ctx.Invoke("yandex:index/getComputeDiskPlacementGroup:getComputeDiskPlacementGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getComputeDiskPlacementGroup.
type LookupComputeDiskPlacementGroupArgs struct {
	// The resource description.
	Description *string `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// The ID of a specific group.
	GroupId *string `pulumi:"groupId"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// The resource name.
	Name *string `pulumi:"name"`
	// The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.
	Zone *string `pulumi:"zone"`
}

// A collection of values returned by getComputeDiskPlacementGroup.
type LookupComputeDiskPlacementGroupResult struct {
	// The creation timestamp of the resource.
	CreatedAt string `pulumi:"createdAt"`
	// The resource description.
	Description *string `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId string `pulumi:"folderId"`
	// The ID of a specific group.
	GroupId string `pulumi:"groupId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// The resource name.
	Name *string `pulumi:"name"`
	// Status of the Disk Placement Group.
	Status string `pulumi:"status"`
	// The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.
	Zone *string `pulumi:"zone"`
}

func LookupComputeDiskPlacementGroupOutput(ctx *pulumi.Context, args LookupComputeDiskPlacementGroupOutputArgs, opts ...pulumi.InvokeOption) LookupComputeDiskPlacementGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupComputeDiskPlacementGroupResultOutput, error) {
			args := v.(LookupComputeDiskPlacementGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getComputeDiskPlacementGroup:getComputeDiskPlacementGroup", args, LookupComputeDiskPlacementGroupResultOutput{}, options).(LookupComputeDiskPlacementGroupResultOutput), nil
		}).(LookupComputeDiskPlacementGroupResultOutput)
}

// A collection of arguments for invoking getComputeDiskPlacementGroup.
type LookupComputeDiskPlacementGroupOutputArgs struct {
	// The resource description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput `pulumi:"folderId"`
	// The ID of a specific group.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (LookupComputeDiskPlacementGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupComputeDiskPlacementGroupArgs)(nil)).Elem()
}

// A collection of values returned by getComputeDiskPlacementGroup.
type LookupComputeDiskPlacementGroupResultOutput struct{ *pulumi.OutputState }

func (LookupComputeDiskPlacementGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupComputeDiskPlacementGroupResult)(nil)).Elem()
}

func (o LookupComputeDiskPlacementGroupResultOutput) ToLookupComputeDiskPlacementGroupResultOutput() LookupComputeDiskPlacementGroupResultOutput {
	return o
}

func (o LookupComputeDiskPlacementGroupResultOutput) ToLookupComputeDiskPlacementGroupResultOutputWithContext(ctx context.Context) LookupComputeDiskPlacementGroupResultOutput {
	return o
}

// The creation timestamp of the resource.
func (o LookupComputeDiskPlacementGroupResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeDiskPlacementGroupResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The resource description.
func (o LookupComputeDiskPlacementGroupResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupComputeDiskPlacementGroupResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
func (o LookupComputeDiskPlacementGroupResultOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeDiskPlacementGroupResult) string { return v.FolderId }).(pulumi.StringOutput)
}

// The ID of a specific group.
func (o LookupComputeDiskPlacementGroupResultOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeDiskPlacementGroupResult) string { return v.GroupId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupComputeDiskPlacementGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeDiskPlacementGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// A set of key/value label pairs which assigned to resource.
func (o LookupComputeDiskPlacementGroupResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupComputeDiskPlacementGroupResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The resource name.
func (o LookupComputeDiskPlacementGroupResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupComputeDiskPlacementGroupResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Status of the Disk Placement Group.
func (o LookupComputeDiskPlacementGroupResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeDiskPlacementGroupResult) string { return v.Status }).(pulumi.StringOutput)
}

// The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.
func (o LookupComputeDiskPlacementGroupResultOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupComputeDiskPlacementGroupResult) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupComputeDiskPlacementGroupResultOutput{})
}
