// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex Compute instance. For more information, see [the official documentation](https://yandex.cloud/docs/compute/concepts/vm).
//
// > One of `instanceId` or `name` should be specified.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myInstance, err := yandex.LookupComputeInstance(ctx, &yandex.LookupComputeInstanceArgs{
//				InstanceId: pulumi.StringRef("some_instance_id"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("instanceExternalIp", myInstance.NetworkInterfaces[0].NatIpAddress)
//			return nil
//		})
//	}
//
// ```
func LookupComputeInstance(ctx *pulumi.Context, args *LookupComputeInstanceArgs, opts ...pulumi.InvokeOption) (*LookupComputeInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupComputeInstanceResult
	err := ctx.Invoke("yandex:index/getComputeInstance:getComputeInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getComputeInstance.
type LookupComputeInstanceArgs struct {
	Filesystems []GetComputeInstanceFilesystem `pulumi:"filesystems"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// ID of the GPU cluster to attach this instance to.
	GpuClusterId *string `pulumi:"gpuClusterId"`
	// The ID of a specific instance.
	InstanceId *string                       `pulumi:"instanceId"`
	LocalDisks []GetComputeInstanceLocalDisk `pulumi:"localDisks"`
	// Time between notification via metadata service and maintenance. E.g., `60s`.
	MaintenanceGracePeriod *string `pulumi:"maintenanceGracePeriod"`
	// Behavior on maintenance events. Can be: `unspecified`, `migrate`, `restart`. The default is `unspecified`.
	MaintenancePolicy *string                            `pulumi:"maintenancePolicy"`
	MetadataOptions   *GetComputeInstanceMetadataOptions `pulumi:"metadataOptions"`
	// The resource name.
	Name            *string                            `pulumi:"name"`
	PlacementPolicy *GetComputeInstancePlacementPolicy `pulumi:"placementPolicy"`
	// [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
	ServiceAccountId *string `pulumi:"serviceAccountId"`
}

// A collection of values returned by getComputeInstance.
type LookupComputeInstanceResult struct {
	BootDisks []GetComputeInstanceBootDisk `pulumi:"bootDisks"`
	// The creation timestamp of the resource.
	CreatedAt string `pulumi:"createdAt"`
	// The resource description.
	Description string                         `pulumi:"description"`
	Filesystems []GetComputeInstanceFilesystem `pulumi:"filesystems"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId string `pulumi:"folderId"`
	// The fully qualified DNS name of this instance.
	Fqdn string `pulumi:"fqdn"`
	// ID of the GPU cluster to attach this instance to.
	GpuClusterId        string                                 `pulumi:"gpuClusterId"`
	HardwareGenerations []GetComputeInstanceHardwareGeneration `pulumi:"hardwareGenerations"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The ID of a specific instance.
	InstanceId string `pulumi:"instanceId"`
	// A set of key/value label pairs which assigned to resource.
	Labels     map[string]string             `pulumi:"labels"`
	LocalDisks []GetComputeInstanceLocalDisk `pulumi:"localDisks"`
	// Time between notification via metadata service and maintenance. E.g., `60s`.
	MaintenanceGracePeriod string `pulumi:"maintenanceGracePeriod"`
	// Behavior on maintenance events. Can be: `unspecified`, `migrate`, `restart`. The default is `unspecified`.
	MaintenancePolicy string `pulumi:"maintenancePolicy"`
	// Metadata key/value pairs to make available from within the instance.
	Metadata        map[string]string                 `pulumi:"metadata"`
	MetadataOptions GetComputeInstanceMetadataOptions `pulumi:"metadataOptions"`
	// The resource name.
	Name string `pulumi:"name"`
	// Type of network acceleration. Can be `standard` or `softwareAccelerated`. The default is `standard`.
	NetworkAccelerationType string                               `pulumi:"networkAccelerationType"`
	NetworkInterfaces       []GetComputeInstanceNetworkInterface `pulumi:"networkInterfaces"`
	PlacementPolicy         *GetComputeInstancePlacementPolicy   `pulumi:"placementPolicy"`
	// The type of virtual machine to create.
	PlatformId         string                               `pulumi:"platformId"`
	Resources          []GetComputeInstanceResource         `pulumi:"resources"`
	SchedulingPolicies []GetComputeInstanceSchedulingPolicy `pulumi:"schedulingPolicies"`
	SecondaryDisks     []GetComputeInstanceSecondaryDisk    `pulumi:"secondaryDisks"`
	// [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
	ServiceAccountId *string `pulumi:"serviceAccountId"`
	// The status of this instance.
	Status string `pulumi:"status"`
	// The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.
	Zone string `pulumi:"zone"`
}

func LookupComputeInstanceOutput(ctx *pulumi.Context, args LookupComputeInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupComputeInstanceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupComputeInstanceResultOutput, error) {
			args := v.(LookupComputeInstanceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getComputeInstance:getComputeInstance", args, LookupComputeInstanceResultOutput{}, options).(LookupComputeInstanceResultOutput), nil
		}).(LookupComputeInstanceResultOutput)
}

// A collection of arguments for invoking getComputeInstance.
type LookupComputeInstanceOutputArgs struct {
	Filesystems GetComputeInstanceFilesystemArrayInput `pulumi:"filesystems"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput `pulumi:"folderId"`
	// ID of the GPU cluster to attach this instance to.
	GpuClusterId pulumi.StringPtrInput `pulumi:"gpuClusterId"`
	// The ID of a specific instance.
	InstanceId pulumi.StringPtrInput                 `pulumi:"instanceId"`
	LocalDisks GetComputeInstanceLocalDiskArrayInput `pulumi:"localDisks"`
	// Time between notification via metadata service and maintenance. E.g., `60s`.
	MaintenanceGracePeriod pulumi.StringPtrInput `pulumi:"maintenanceGracePeriod"`
	// Behavior on maintenance events. Can be: `unspecified`, `migrate`, `restart`. The default is `unspecified`.
	MaintenancePolicy pulumi.StringPtrInput                     `pulumi:"maintenancePolicy"`
	MetadataOptions   GetComputeInstanceMetadataOptionsPtrInput `pulumi:"metadataOptions"`
	// The resource name.
	Name            pulumi.StringPtrInput                     `pulumi:"name"`
	PlacementPolicy GetComputeInstancePlacementPolicyPtrInput `pulumi:"placementPolicy"`
	// [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
	ServiceAccountId pulumi.StringPtrInput `pulumi:"serviceAccountId"`
}

func (LookupComputeInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupComputeInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getComputeInstance.
type LookupComputeInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupComputeInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupComputeInstanceResult)(nil)).Elem()
}

func (o LookupComputeInstanceResultOutput) ToLookupComputeInstanceResultOutput() LookupComputeInstanceResultOutput {
	return o
}

func (o LookupComputeInstanceResultOutput) ToLookupComputeInstanceResultOutputWithContext(ctx context.Context) LookupComputeInstanceResultOutput {
	return o
}

func (o LookupComputeInstanceResultOutput) BootDisks() GetComputeInstanceBootDiskArrayOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) []GetComputeInstanceBootDisk { return v.BootDisks }).(GetComputeInstanceBootDiskArrayOutput)
}

// The creation timestamp of the resource.
func (o LookupComputeInstanceResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The resource description.
func (o LookupComputeInstanceResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupComputeInstanceResultOutput) Filesystems() GetComputeInstanceFilesystemArrayOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) []GetComputeInstanceFilesystem { return v.Filesystems }).(GetComputeInstanceFilesystemArrayOutput)
}

// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
func (o LookupComputeInstanceResultOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) string { return v.FolderId }).(pulumi.StringOutput)
}

// The fully qualified DNS name of this instance.
func (o LookupComputeInstanceResultOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) string { return v.Fqdn }).(pulumi.StringOutput)
}

// ID of the GPU cluster to attach this instance to.
func (o LookupComputeInstanceResultOutput) GpuClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) string { return v.GpuClusterId }).(pulumi.StringOutput)
}

func (o LookupComputeInstanceResultOutput) HardwareGenerations() GetComputeInstanceHardwareGenerationArrayOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) []GetComputeInstanceHardwareGeneration {
		return v.HardwareGenerations
	}).(GetComputeInstanceHardwareGenerationArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupComputeInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of a specific instance.
func (o LookupComputeInstanceResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// A set of key/value label pairs which assigned to resource.
func (o LookupComputeInstanceResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupComputeInstanceResultOutput) LocalDisks() GetComputeInstanceLocalDiskArrayOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) []GetComputeInstanceLocalDisk { return v.LocalDisks }).(GetComputeInstanceLocalDiskArrayOutput)
}

// Time between notification via metadata service and maintenance. E.g., `60s`.
func (o LookupComputeInstanceResultOutput) MaintenanceGracePeriod() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) string { return v.MaintenanceGracePeriod }).(pulumi.StringOutput)
}

// Behavior on maintenance events. Can be: `unspecified`, `migrate`, `restart`. The default is `unspecified`.
func (o LookupComputeInstanceResultOutput) MaintenancePolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) string { return v.MaintenancePolicy }).(pulumi.StringOutput)
}

// Metadata key/value pairs to make available from within the instance.
func (o LookupComputeInstanceResultOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o LookupComputeInstanceResultOutput) MetadataOptions() GetComputeInstanceMetadataOptionsOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) GetComputeInstanceMetadataOptions { return v.MetadataOptions }).(GetComputeInstanceMetadataOptionsOutput)
}

// The resource name.
func (o LookupComputeInstanceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) string { return v.Name }).(pulumi.StringOutput)
}

// Type of network acceleration. Can be `standard` or `softwareAccelerated`. The default is `standard`.
func (o LookupComputeInstanceResultOutput) NetworkAccelerationType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) string { return v.NetworkAccelerationType }).(pulumi.StringOutput)
}

func (o LookupComputeInstanceResultOutput) NetworkInterfaces() GetComputeInstanceNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) []GetComputeInstanceNetworkInterface { return v.NetworkInterfaces }).(GetComputeInstanceNetworkInterfaceArrayOutput)
}

func (o LookupComputeInstanceResultOutput) PlacementPolicy() GetComputeInstancePlacementPolicyPtrOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) *GetComputeInstancePlacementPolicy { return v.PlacementPolicy }).(GetComputeInstancePlacementPolicyPtrOutput)
}

// The type of virtual machine to create.
func (o LookupComputeInstanceResultOutput) PlatformId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) string { return v.PlatformId }).(pulumi.StringOutput)
}

func (o LookupComputeInstanceResultOutput) Resources() GetComputeInstanceResourceArrayOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) []GetComputeInstanceResource { return v.Resources }).(GetComputeInstanceResourceArrayOutput)
}

func (o LookupComputeInstanceResultOutput) SchedulingPolicies() GetComputeInstanceSchedulingPolicyArrayOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) []GetComputeInstanceSchedulingPolicy { return v.SchedulingPolicies }).(GetComputeInstanceSchedulingPolicyArrayOutput)
}

func (o LookupComputeInstanceResultOutput) SecondaryDisks() GetComputeInstanceSecondaryDiskArrayOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) []GetComputeInstanceSecondaryDisk { return v.SecondaryDisks }).(GetComputeInstanceSecondaryDiskArrayOutput)
}

// [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
func (o LookupComputeInstanceResultOutput) ServiceAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) *string { return v.ServiceAccountId }).(pulumi.StringPtrOutput)
}

// The status of this instance.
func (o LookupComputeInstanceResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) string { return v.Status }).(pulumi.StringOutput)
}

// The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.
func (o LookupComputeInstanceResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeInstanceResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupComputeInstanceResultOutput{})
}
