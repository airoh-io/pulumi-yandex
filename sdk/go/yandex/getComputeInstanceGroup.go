// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex Compute instance group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// myGroup, err := yandex.LookupComputeInstanceGroup(ctx, &yandex.LookupComputeInstanceGroupArgs{
// InstanceGroupId: "some_instance_group_id",
// }, nil);
// if err != nil {
// return err
// }
// ctx.Export("instanceExternalIp", pulumi.Array(%!v(PANIC=Format method: fatal: A failure has occurred: unlowered splat expression @ #-functions-%syandex:index-getComputeInstanceGroup:getComputeInstanceGroup.pp:4,11-62)))
// return nil
// })
// }
// ```
func LookupComputeInstanceGroup(ctx *pulumi.Context, args *LookupComputeInstanceGroupArgs, opts ...pulumi.InvokeOption) (*LookupComputeInstanceGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupComputeInstanceGroupResult
	err := ctx.Invoke("yandex:index/getComputeInstanceGroup:getComputeInstanceGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getComputeInstanceGroup.
type LookupComputeInstanceGroupArgs struct {
	// The ID of a specific instance group.
	InstanceGroupId string `pulumi:"instanceGroupId"`
}

// A collection of values returned by getComputeInstanceGroup.
type LookupComputeInstanceGroupResult struct {
	AllocationPolicies        []GetComputeInstanceGroupAllocationPolicy         `pulumi:"allocationPolicies"`
	ApplicationBalancerStates []GetComputeInstanceGroupApplicationBalancerState `pulumi:"applicationBalancerStates"`
	ApplicationLoadBalancers  []GetComputeInstanceGroupApplicationLoadBalancer  `pulumi:"applicationLoadBalancers"`
	// The creation timestamp of the resource.
	CreatedAt string `pulumi:"createdAt"`
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection bool                                  `pulumi:"deletionProtection"`
	DeployPolicies     []GetComputeInstanceGroupDeployPolicy `pulumi:"deployPolicies"`
	// The resource description.
	Description string `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId     string                               `pulumi:"folderId"`
	HealthChecks []GetComputeInstanceGroupHealthCheck `pulumi:"healthChecks"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The ID of a specific instance group.
	InstanceGroupId   string                                    `pulumi:"instanceGroupId"`
	InstanceTemplates []GetComputeInstanceGroupInstanceTemplate `pulumi:"instanceTemplates"`
	Instances         []GetComputeInstanceGroupInstance         `pulumi:"instances"`
	// A set of key/value label pairs which assigned to resource.
	Labels             map[string]string                          `pulumi:"labels"`
	LoadBalancerStates []GetComputeInstanceGroupLoadBalancerState `pulumi:"loadBalancerStates"`
	LoadBalancers      []GetComputeInstanceGroupLoadBalancer      `pulumi:"loadBalancers"`
	// Timeout for waiting for the VM to become healthy. If the timeout is exceeded, the VM will be turned off based on the deployment policy. Specified in seconds.
	MaxCheckingHealthDuration int `pulumi:"maxCheckingHealthDuration"`
	// The resource name.
	Name          string                               `pulumi:"name"`
	ScalePolicies []GetComputeInstanceGroupScalePolicy `pulumi:"scalePolicies"`
	// [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
	ServiceAccountId string `pulumi:"serviceAccountId"`
	// The status of the instance.
	Status string `pulumi:"status"`
	// A set of key/value variables pairs to assign to the instance group.
	Variables map[string]string `pulumi:"variables"`
}

func LookupComputeInstanceGroupOutput(ctx *pulumi.Context, args LookupComputeInstanceGroupOutputArgs, opts ...pulumi.InvokeOption) LookupComputeInstanceGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupComputeInstanceGroupResultOutput, error) {
			args := v.(LookupComputeInstanceGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getComputeInstanceGroup:getComputeInstanceGroup", args, LookupComputeInstanceGroupResultOutput{}, options).(LookupComputeInstanceGroupResultOutput), nil
		}).(LookupComputeInstanceGroupResultOutput)
}

// A collection of arguments for invoking getComputeInstanceGroup.
type LookupComputeInstanceGroupOutputArgs struct {
	// The ID of a specific instance group.
	InstanceGroupId pulumi.StringInput `pulumi:"instanceGroupId"`
}

func (LookupComputeInstanceGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupComputeInstanceGroupArgs)(nil)).Elem()
}

// A collection of values returned by getComputeInstanceGroup.
type LookupComputeInstanceGroupResultOutput struct{ *pulumi.OutputState }

func (LookupComputeInstanceGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupComputeInstanceGroupResult)(nil)).Elem()
}

func (o LookupComputeInstanceGroupResultOutput) ToLookupComputeInstanceGroupResultOutput() LookupComputeInstanceGroupResultOutput {
	return o
}

func (o LookupComputeInstanceGroupResultOutput) ToLookupComputeInstanceGroupResultOutputWithContext(ctx context.Context) LookupComputeInstanceGroupResultOutput {
	return o
}

func (o LookupComputeInstanceGroupResultOutput) AllocationPolicies() GetComputeInstanceGroupAllocationPolicyArrayOutput {
	return o.ApplyT(func(v LookupComputeInstanceGroupResult) []GetComputeInstanceGroupAllocationPolicy {
		return v.AllocationPolicies
	}).(GetComputeInstanceGroupAllocationPolicyArrayOutput)
}

func (o LookupComputeInstanceGroupResultOutput) ApplicationBalancerStates() GetComputeInstanceGroupApplicationBalancerStateArrayOutput {
	return o.ApplyT(func(v LookupComputeInstanceGroupResult) []GetComputeInstanceGroupApplicationBalancerState {
		return v.ApplicationBalancerStates
	}).(GetComputeInstanceGroupApplicationBalancerStateArrayOutput)
}

func (o LookupComputeInstanceGroupResultOutput) ApplicationLoadBalancers() GetComputeInstanceGroupApplicationLoadBalancerArrayOutput {
	return o.ApplyT(func(v LookupComputeInstanceGroupResult) []GetComputeInstanceGroupApplicationLoadBalancer {
		return v.ApplicationLoadBalancers
	}).(GetComputeInstanceGroupApplicationLoadBalancerArrayOutput)
}

// The creation timestamp of the resource.
func (o LookupComputeInstanceGroupResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeInstanceGroupResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The `true` value means that resource is protected from accidental deletion.
func (o LookupComputeInstanceGroupResultOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupComputeInstanceGroupResult) bool { return v.DeletionProtection }).(pulumi.BoolOutput)
}

func (o LookupComputeInstanceGroupResultOutput) DeployPolicies() GetComputeInstanceGroupDeployPolicyArrayOutput {
	return o.ApplyT(func(v LookupComputeInstanceGroupResult) []GetComputeInstanceGroupDeployPolicy {
		return v.DeployPolicies
	}).(GetComputeInstanceGroupDeployPolicyArrayOutput)
}

// The resource description.
func (o LookupComputeInstanceGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeInstanceGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
func (o LookupComputeInstanceGroupResultOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeInstanceGroupResult) string { return v.FolderId }).(pulumi.StringOutput)
}

func (o LookupComputeInstanceGroupResultOutput) HealthChecks() GetComputeInstanceGroupHealthCheckArrayOutput {
	return o.ApplyT(func(v LookupComputeInstanceGroupResult) []GetComputeInstanceGroupHealthCheck { return v.HealthChecks }).(GetComputeInstanceGroupHealthCheckArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupComputeInstanceGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeInstanceGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of a specific instance group.
func (o LookupComputeInstanceGroupResultOutput) InstanceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeInstanceGroupResult) string { return v.InstanceGroupId }).(pulumi.StringOutput)
}

func (o LookupComputeInstanceGroupResultOutput) InstanceTemplates() GetComputeInstanceGroupInstanceTemplateArrayOutput {
	return o.ApplyT(func(v LookupComputeInstanceGroupResult) []GetComputeInstanceGroupInstanceTemplate {
		return v.InstanceTemplates
	}).(GetComputeInstanceGroupInstanceTemplateArrayOutput)
}

func (o LookupComputeInstanceGroupResultOutput) Instances() GetComputeInstanceGroupInstanceArrayOutput {
	return o.ApplyT(func(v LookupComputeInstanceGroupResult) []GetComputeInstanceGroupInstance { return v.Instances }).(GetComputeInstanceGroupInstanceArrayOutput)
}

// A set of key/value label pairs which assigned to resource.
func (o LookupComputeInstanceGroupResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupComputeInstanceGroupResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupComputeInstanceGroupResultOutput) LoadBalancerStates() GetComputeInstanceGroupLoadBalancerStateArrayOutput {
	return o.ApplyT(func(v LookupComputeInstanceGroupResult) []GetComputeInstanceGroupLoadBalancerState {
		return v.LoadBalancerStates
	}).(GetComputeInstanceGroupLoadBalancerStateArrayOutput)
}

func (o LookupComputeInstanceGroupResultOutput) LoadBalancers() GetComputeInstanceGroupLoadBalancerArrayOutput {
	return o.ApplyT(func(v LookupComputeInstanceGroupResult) []GetComputeInstanceGroupLoadBalancer { return v.LoadBalancers }).(GetComputeInstanceGroupLoadBalancerArrayOutput)
}

// Timeout for waiting for the VM to become healthy. If the timeout is exceeded, the VM will be turned off based on the deployment policy. Specified in seconds.
func (o LookupComputeInstanceGroupResultOutput) MaxCheckingHealthDuration() pulumi.IntOutput {
	return o.ApplyT(func(v LookupComputeInstanceGroupResult) int { return v.MaxCheckingHealthDuration }).(pulumi.IntOutput)
}

// The resource name.
func (o LookupComputeInstanceGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeInstanceGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupComputeInstanceGroupResultOutput) ScalePolicies() GetComputeInstanceGroupScalePolicyArrayOutput {
	return o.ApplyT(func(v LookupComputeInstanceGroupResult) []GetComputeInstanceGroupScalePolicy { return v.ScalePolicies }).(GetComputeInstanceGroupScalePolicyArrayOutput)
}

// [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
func (o LookupComputeInstanceGroupResultOutput) ServiceAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeInstanceGroupResult) string { return v.ServiceAccountId }).(pulumi.StringOutput)
}

// The status of the instance.
func (o LookupComputeInstanceGroupResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeInstanceGroupResult) string { return v.Status }).(pulumi.StringOutput)
}

// A set of key/value variables pairs to assign to the instance group.
func (o LookupComputeInstanceGroupResultOutput) Variables() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupComputeInstanceGroupResult) map[string]string { return v.Variables }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupComputeInstanceGroupResultOutput{})
}
