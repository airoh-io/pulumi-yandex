// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex Container Registry IP Permission. For more information, see [the official documentation](https://yandex.cloud/docs/container-registry/operations/registry/registry-access).
//
// > Either `registryId` or `registryName` must be specified.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := yandex.LookupContainerRegistryIpPermission(ctx, &yandex.LookupContainerRegistryIpPermissionArgs{
//				RegistryId: pulumi.StringRef(yandex_container_registry.My_registry.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupContainerRegistryIpPermission(ctx *pulumi.Context, args *LookupContainerRegistryIpPermissionArgs, opts ...pulumi.InvokeOption) (*LookupContainerRegistryIpPermissionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupContainerRegistryIpPermissionResult
	err := ctx.Invoke("yandex:index/getContainerRegistryIpPermission:getContainerRegistryIpPermission", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getContainerRegistryIpPermission.
type LookupContainerRegistryIpPermissionArgs struct {
	// The ID of the registry that ip restrictions applied to.
	RegistryId *string `pulumi:"registryId"`
	// The Name of specific Container Registry.
	RegistryName *string `pulumi:"registryName"`
}

// A collection of values returned by getContainerRegistryIpPermission.
type LookupContainerRegistryIpPermissionResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of configured CIDRs, from which `pull` is allowed.
	Pulls []string `pulumi:"pulls"`
	// List of configured CIDRs, from which `push` is allowed.
	Pushes []string `pulumi:"pushes"`
	// The ID of the registry that ip restrictions applied to.
	RegistryId string `pulumi:"registryId"`
	// The Name of specific Container Registry.
	RegistryName string `pulumi:"registryName"`
}

func LookupContainerRegistryIpPermissionOutput(ctx *pulumi.Context, args LookupContainerRegistryIpPermissionOutputArgs, opts ...pulumi.InvokeOption) LookupContainerRegistryIpPermissionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupContainerRegistryIpPermissionResultOutput, error) {
			args := v.(LookupContainerRegistryIpPermissionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getContainerRegistryIpPermission:getContainerRegistryIpPermission", args, LookupContainerRegistryIpPermissionResultOutput{}, options).(LookupContainerRegistryIpPermissionResultOutput), nil
		}).(LookupContainerRegistryIpPermissionResultOutput)
}

// A collection of arguments for invoking getContainerRegistryIpPermission.
type LookupContainerRegistryIpPermissionOutputArgs struct {
	// The ID of the registry that ip restrictions applied to.
	RegistryId pulumi.StringPtrInput `pulumi:"registryId"`
	// The Name of specific Container Registry.
	RegistryName pulumi.StringPtrInput `pulumi:"registryName"`
}

func (LookupContainerRegistryIpPermissionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContainerRegistryIpPermissionArgs)(nil)).Elem()
}

// A collection of values returned by getContainerRegistryIpPermission.
type LookupContainerRegistryIpPermissionResultOutput struct{ *pulumi.OutputState }

func (LookupContainerRegistryIpPermissionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContainerRegistryIpPermissionResult)(nil)).Elem()
}

func (o LookupContainerRegistryIpPermissionResultOutput) ToLookupContainerRegistryIpPermissionResultOutput() LookupContainerRegistryIpPermissionResultOutput {
	return o
}

func (o LookupContainerRegistryIpPermissionResultOutput) ToLookupContainerRegistryIpPermissionResultOutputWithContext(ctx context.Context) LookupContainerRegistryIpPermissionResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupContainerRegistryIpPermissionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerRegistryIpPermissionResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of configured CIDRs, from which `pull` is allowed.
func (o LookupContainerRegistryIpPermissionResultOutput) Pulls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupContainerRegistryIpPermissionResult) []string { return v.Pulls }).(pulumi.StringArrayOutput)
}

// List of configured CIDRs, from which `push` is allowed.
func (o LookupContainerRegistryIpPermissionResultOutput) Pushes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupContainerRegistryIpPermissionResult) []string { return v.Pushes }).(pulumi.StringArrayOutput)
}

// The ID of the registry that ip restrictions applied to.
func (o LookupContainerRegistryIpPermissionResultOutput) RegistryId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerRegistryIpPermissionResult) string { return v.RegistryId }).(pulumi.StringOutput)
}

// The Name of specific Container Registry.
func (o LookupContainerRegistryIpPermissionResultOutput) RegistryName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerRegistryIpPermissionResult) string { return v.RegistryName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupContainerRegistryIpPermissionResultOutput{})
}
