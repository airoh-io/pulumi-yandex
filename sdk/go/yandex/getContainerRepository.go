// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex Container Repository. For more information, see
// [the official documentation](https://cloud.yandex.com/docs/container-registry/concepts/repository)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-yandex/sdk/go/yandex"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := "some_repository_name"
// 		_, err := yandex.LookupContainerRepository(ctx, &yandex.LookupContainerRepositoryArgs{
// 			Name: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		opt1 := "some_repository_id"
// 		_, err = yandex.LookupContainerRepository(ctx, &yandex.LookupContainerRepositoryArgs{
// 			RepositoryId: &opt1,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupContainerRepository(ctx *pulumi.Context, args *LookupContainerRepositoryArgs, opts ...pulumi.InvokeOption) (*LookupContainerRepositoryResult, error) {
	var rv LookupContainerRepositoryResult
	err := ctx.Invoke("yandex:index/getContainerRepository:getContainerRepository", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getContainerRepository.
type LookupContainerRepositoryArgs struct {
	// Name of the repository. The name of the repository should start with id of a container registry and match the name of the images in the repository.
	Name *string `pulumi:"name"`
	// The ID of a specific repository.
	RepositoryId *string `pulumi:"repositoryId"`
}

// A collection of values returned by getContainerRepository.
type LookupContainerRepositoryResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id           string `pulumi:"id"`
	Name         string `pulumi:"name"`
	RepositoryId string `pulumi:"repositoryId"`
}
