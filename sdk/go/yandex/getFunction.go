// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex Cloud Function. For more information about Yandex Cloud Functions, see [Yandex Cloud Functions](https://yandex.cloud/docs/functions).
// This data source is used to define [Yandex Cloud Function](https://yandex.cloud/docs/functions/concepts/function) that can be used by other resources.
//
// > Either `functionId` or `name` must be specified.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := yandex.LookupFunction(ctx, &yandex.LookupFunctionArgs{
//				FunctionId: pulumi.StringRef("d4e45**********pqvd3"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupFunction(ctx *pulumi.Context, args *LookupFunctionArgs, opts ...pulumi.InvokeOption) (*LookupFunctionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFunctionResult
	err := ctx.Invoke("yandex:index/getFunction:getFunction", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFunction.
type LookupFunctionArgs struct {
	// The maximum number of requests processed by a function instance at the same time.
	Concurrency  *int                     `pulumi:"concurrency"`
	Connectivity *GetFunctionConnectivity `pulumi:"connectivity"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// Yandex Cloud Function id used to define function.
	FunctionId      *string                     `pulumi:"functionId"`
	MetadataOptions *GetFunctionMetadataOptions `pulumi:"metadataOptions"`
	Mounts          []GetFunctionMount          `pulumi:"mounts"`
	// The resource name.
	Name    *string             `pulumi:"name"`
	Secrets []GetFunctionSecret `pulumi:"secrets"`
	// Deprecated: to manage storage_mountss, please switch to using a separate resource type mounts
	StorageMounts []GetFunctionStorageMount `pulumi:"storageMounts"`
}

// A collection of values returned by getFunction.
type LookupFunctionResult struct {
	AsyncInvocations []GetFunctionAsyncInvocation `pulumi:"asyncInvocations"`
	// The maximum number of requests processed by a function instance at the same time.
	Concurrency  int                      `pulumi:"concurrency"`
	Connectivity *GetFunctionConnectivity `pulumi:"connectivity"`
	// The creation timestamp of the resource.
	CreatedAt string `pulumi:"createdAt"`
	// The resource description.
	Description string `pulumi:"description"`
	// Entrypoint for Yandex Cloud Function.
	Entrypoint string `pulumi:"entrypoint"`
	// A set of key/value environment variables for Yandex Cloud Function. Each key must begin with a letter (A-Z, a-z).
	Environment map[string]string `pulumi:"environment"`
	// Execution timeout in seconds for Yandex Cloud Function.
	ExecutionTimeout string `pulumi:"executionTimeout"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// Yandex Cloud Function id used to define function.
	FunctionId *string `pulumi:"functionId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Image size for Yandex Cloud Function.
	ImageSize int `pulumi:"imageSize"`
	// A set of key/value label pairs which assigned to resource.
	Labels     map[string]string      `pulumi:"labels"`
	LogOptions []GetFunctionLogOption `pulumi:"logOptions"`
	// Memory in megabytes (**aligned to 128MB**) for Yandex Cloud Function.
	Memory          int                        `pulumi:"memory"`
	MetadataOptions GetFunctionMetadataOptions `pulumi:"metadataOptions"`
	Mounts          []GetFunctionMount         `pulumi:"mounts"`
	// The resource name.
	Name *string `pulumi:"name"`
	// Runtime for Yandex Cloud Function.
	Runtime string              `pulumi:"runtime"`
	Secrets []GetFunctionSecret `pulumi:"secrets"`
	// [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
	ServiceAccountId string `pulumi:"serviceAccountId"`
	// Deprecated: to manage storage_mountss, please switch to using a separate resource type mounts
	StorageMounts []GetFunctionStorageMount `pulumi:"storageMounts"`
	// Tags for Yandex Cloud Function. Tag `$latest` isn't returned.
	Tags []string `pulumi:"tags"`
	// Tmpfs size for Yandex Cloud Function.
	TmpfsSize int `pulumi:"tmpfsSize"`
	// Version of Yandex Cloud Function.
	Version string `pulumi:"version"`
}

func LookupFunctionOutput(ctx *pulumi.Context, args LookupFunctionOutputArgs, opts ...pulumi.InvokeOption) LookupFunctionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupFunctionResultOutput, error) {
			args := v.(LookupFunctionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getFunction:getFunction", args, LookupFunctionResultOutput{}, options).(LookupFunctionResultOutput), nil
		}).(LookupFunctionResultOutput)
}

// A collection of arguments for invoking getFunction.
type LookupFunctionOutputArgs struct {
	// The maximum number of requests processed by a function instance at the same time.
	Concurrency  pulumi.IntPtrInput              `pulumi:"concurrency"`
	Connectivity GetFunctionConnectivityPtrInput `pulumi:"connectivity"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput `pulumi:"folderId"`
	// Yandex Cloud Function id used to define function.
	FunctionId      pulumi.StringPtrInput              `pulumi:"functionId"`
	MetadataOptions GetFunctionMetadataOptionsPtrInput `pulumi:"metadataOptions"`
	Mounts          GetFunctionMountArrayInput         `pulumi:"mounts"`
	// The resource name.
	Name    pulumi.StringPtrInput       `pulumi:"name"`
	Secrets GetFunctionSecretArrayInput `pulumi:"secrets"`
	// Deprecated: to manage storage_mountss, please switch to using a separate resource type mounts
	StorageMounts GetFunctionStorageMountArrayInput `pulumi:"storageMounts"`
}

func (LookupFunctionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFunctionArgs)(nil)).Elem()
}

// A collection of values returned by getFunction.
type LookupFunctionResultOutput struct{ *pulumi.OutputState }

func (LookupFunctionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFunctionResult)(nil)).Elem()
}

func (o LookupFunctionResultOutput) ToLookupFunctionResultOutput() LookupFunctionResultOutput {
	return o
}

func (o LookupFunctionResultOutput) ToLookupFunctionResultOutputWithContext(ctx context.Context) LookupFunctionResultOutput {
	return o
}

func (o LookupFunctionResultOutput) AsyncInvocations() GetFunctionAsyncInvocationArrayOutput {
	return o.ApplyT(func(v LookupFunctionResult) []GetFunctionAsyncInvocation { return v.AsyncInvocations }).(GetFunctionAsyncInvocationArrayOutput)
}

// The maximum number of requests processed by a function instance at the same time.
func (o LookupFunctionResultOutput) Concurrency() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFunctionResult) int { return v.Concurrency }).(pulumi.IntOutput)
}

func (o LookupFunctionResultOutput) Connectivity() GetFunctionConnectivityPtrOutput {
	return o.ApplyT(func(v LookupFunctionResult) *GetFunctionConnectivity { return v.Connectivity }).(GetFunctionConnectivityPtrOutput)
}

// The creation timestamp of the resource.
func (o LookupFunctionResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The resource description.
func (o LookupFunctionResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.Description }).(pulumi.StringOutput)
}

// Entrypoint for Yandex Cloud Function.
func (o LookupFunctionResultOutput) Entrypoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.Entrypoint }).(pulumi.StringOutput)
}

// A set of key/value environment variables for Yandex Cloud Function. Each key must begin with a letter (A-Z, a-z).
func (o LookupFunctionResultOutput) Environment() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFunctionResult) map[string]string { return v.Environment }).(pulumi.StringMapOutput)
}

// Execution timeout in seconds for Yandex Cloud Function.
func (o LookupFunctionResultOutput) ExecutionTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.ExecutionTimeout }).(pulumi.StringOutput)
}

// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
func (o LookupFunctionResultOutput) FolderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFunctionResult) *string { return v.FolderId }).(pulumi.StringPtrOutput)
}

// Yandex Cloud Function id used to define function.
func (o LookupFunctionResultOutput) FunctionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFunctionResult) *string { return v.FunctionId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupFunctionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.Id }).(pulumi.StringOutput)
}

// Image size for Yandex Cloud Function.
func (o LookupFunctionResultOutput) ImageSize() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFunctionResult) int { return v.ImageSize }).(pulumi.IntOutput)
}

// A set of key/value label pairs which assigned to resource.
func (o LookupFunctionResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFunctionResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupFunctionResultOutput) LogOptions() GetFunctionLogOptionArrayOutput {
	return o.ApplyT(func(v LookupFunctionResult) []GetFunctionLogOption { return v.LogOptions }).(GetFunctionLogOptionArrayOutput)
}

// Memory in megabytes (**aligned to 128MB**) for Yandex Cloud Function.
func (o LookupFunctionResultOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFunctionResult) int { return v.Memory }).(pulumi.IntOutput)
}

func (o LookupFunctionResultOutput) MetadataOptions() GetFunctionMetadataOptionsOutput {
	return o.ApplyT(func(v LookupFunctionResult) GetFunctionMetadataOptions { return v.MetadataOptions }).(GetFunctionMetadataOptionsOutput)
}

func (o LookupFunctionResultOutput) Mounts() GetFunctionMountArrayOutput {
	return o.ApplyT(func(v LookupFunctionResult) []GetFunctionMount { return v.Mounts }).(GetFunctionMountArrayOutput)
}

// The resource name.
func (o LookupFunctionResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFunctionResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Runtime for Yandex Cloud Function.
func (o LookupFunctionResultOutput) Runtime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.Runtime }).(pulumi.StringOutput)
}

func (o LookupFunctionResultOutput) Secrets() GetFunctionSecretArrayOutput {
	return o.ApplyT(func(v LookupFunctionResult) []GetFunctionSecret { return v.Secrets }).(GetFunctionSecretArrayOutput)
}

// [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
func (o LookupFunctionResultOutput) ServiceAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.ServiceAccountId }).(pulumi.StringOutput)
}

// Deprecated: to manage storage_mountss, please switch to using a separate resource type mounts
func (o LookupFunctionResultOutput) StorageMounts() GetFunctionStorageMountArrayOutput {
	return o.ApplyT(func(v LookupFunctionResult) []GetFunctionStorageMount { return v.StorageMounts }).(GetFunctionStorageMountArrayOutput)
}

// Tags for Yandex Cloud Function. Tag `$latest` isn't returned.
func (o LookupFunctionResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupFunctionResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Tmpfs size for Yandex Cloud Function.
func (o LookupFunctionResultOutput) TmpfsSize() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFunctionResult) int { return v.TmpfsSize }).(pulumi.IntOutput)
}

// Version of Yandex Cloud Function.
func (o LookupFunctionResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFunctionResultOutput{})
}
