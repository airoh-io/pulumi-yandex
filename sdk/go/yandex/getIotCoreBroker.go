// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex IoT Core Broker. For more information IoT Core, see [Yandex Cloud IoT Broker](https://yandex.cloud/docs/iot-core/quickstart).
// This data source is used to define [Yandex Cloud IoT Broker](https://yandex.cloud/docs/iot-core/quickstart) that can be used by other resources.
//
// > Either `brokerId` or `name` must be specified.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := yandex.LookupIotCoreBroker(ctx, &yandex.LookupIotCoreBrokerArgs{
//				BrokerId: pulumi.StringRef("are1samplebroker11"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupIotCoreBroker(ctx *pulumi.Context, args *LookupIotCoreBrokerArgs, opts ...pulumi.InvokeOption) (*LookupIotCoreBrokerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIotCoreBrokerResult
	err := ctx.Invoke("yandex:index/getIotCoreBroker:getIotCoreBroker", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIotCoreBroker.
type LookupIotCoreBrokerArgs struct {
	// IoT Core Broker id used to define broker.
	BrokerId *string `pulumi:"brokerId"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// The resource name.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getIotCoreBroker.
type LookupIotCoreBrokerResult struct {
	// IoT Core Broker id used to define broker.
	BrokerId *string `pulumi:"brokerId"`
	// A set of certificate's fingerprints for the IoT Core Broker.
	Certificates []string `pulumi:"certificates"`
	// The creation timestamp of the resource.
	CreatedAt string `pulumi:"createdAt"`
	// The resource description.
	Description string `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A set of key/value label pairs which assigned to resource.
	Labels     map[string]string           `pulumi:"labels"`
	LogOptions []GetIotCoreBrokerLogOption `pulumi:"logOptions"`
	// The resource name.
	Name *string `pulumi:"name"`
}

func LookupIotCoreBrokerOutput(ctx *pulumi.Context, args LookupIotCoreBrokerOutputArgs, opts ...pulumi.InvokeOption) LookupIotCoreBrokerResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupIotCoreBrokerResultOutput, error) {
			args := v.(LookupIotCoreBrokerArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getIotCoreBroker:getIotCoreBroker", args, LookupIotCoreBrokerResultOutput{}, options).(LookupIotCoreBrokerResultOutput), nil
		}).(LookupIotCoreBrokerResultOutput)
}

// A collection of arguments for invoking getIotCoreBroker.
type LookupIotCoreBrokerOutputArgs struct {
	// IoT Core Broker id used to define broker.
	BrokerId pulumi.StringPtrInput `pulumi:"brokerId"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput `pulumi:"folderId"`
	// The resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupIotCoreBrokerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIotCoreBrokerArgs)(nil)).Elem()
}

// A collection of values returned by getIotCoreBroker.
type LookupIotCoreBrokerResultOutput struct{ *pulumi.OutputState }

func (LookupIotCoreBrokerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIotCoreBrokerResult)(nil)).Elem()
}

func (o LookupIotCoreBrokerResultOutput) ToLookupIotCoreBrokerResultOutput() LookupIotCoreBrokerResultOutput {
	return o
}

func (o LookupIotCoreBrokerResultOutput) ToLookupIotCoreBrokerResultOutputWithContext(ctx context.Context) LookupIotCoreBrokerResultOutput {
	return o
}

// IoT Core Broker id used to define broker.
func (o LookupIotCoreBrokerResultOutput) BrokerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIotCoreBrokerResult) *string { return v.BrokerId }).(pulumi.StringPtrOutput)
}

// A set of certificate's fingerprints for the IoT Core Broker.
func (o LookupIotCoreBrokerResultOutput) Certificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupIotCoreBrokerResult) []string { return v.Certificates }).(pulumi.StringArrayOutput)
}

// The creation timestamp of the resource.
func (o LookupIotCoreBrokerResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIotCoreBrokerResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The resource description.
func (o LookupIotCoreBrokerResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIotCoreBrokerResult) string { return v.Description }).(pulumi.StringOutput)
}

// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
func (o LookupIotCoreBrokerResultOutput) FolderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIotCoreBrokerResult) *string { return v.FolderId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupIotCoreBrokerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIotCoreBrokerResult) string { return v.Id }).(pulumi.StringOutput)
}

// A set of key/value label pairs which assigned to resource.
func (o LookupIotCoreBrokerResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupIotCoreBrokerResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupIotCoreBrokerResultOutput) LogOptions() GetIotCoreBrokerLogOptionArrayOutput {
	return o.ApplyT(func(v LookupIotCoreBrokerResult) []GetIotCoreBrokerLogOption { return v.LogOptions }).(GetIotCoreBrokerLogOptionArrayOutput)
}

// The resource name.
func (o LookupIotCoreBrokerResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIotCoreBrokerResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIotCoreBrokerResultOutput{})
}
