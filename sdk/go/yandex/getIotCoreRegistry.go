// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex IoT Core Registry. For more information IoT Core, see [Yandex Cloud IoT Registry](https://yandex.cloud/docs/iot-core/quickstart).
// This data source is used to define [Yandex Cloud IoT Registry](https://yandex.cloud/docs/iot-core/quickstart) that can be used by other resources.
//
// > Either `registryId` or `name` must be specified.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := yandex.LookupIotCoreRegistry(ctx, &yandex.LookupIotCoreRegistryArgs{
//				RegistryId: pulumi.StringRef("are1sampleregistry11"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupIotCoreRegistry(ctx *pulumi.Context, args *LookupIotCoreRegistryArgs, opts ...pulumi.InvokeOption) (*LookupIotCoreRegistryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIotCoreRegistryResult
	err := ctx.Invoke("yandex:index/getIotCoreRegistry:getIotCoreRegistry", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIotCoreRegistry.
type LookupIotCoreRegistryArgs struct {
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// The resource name.
	Name *string `pulumi:"name"`
	// IoT Core Registry id used to define registry.
	RegistryId *string `pulumi:"registryId"`
}

// A collection of values returned by getIotCoreRegistry.
type LookupIotCoreRegistryResult struct {
	// A set of certificate's fingerprints for the IoT Core Registry.
	Certificates []string `pulumi:"certificates"`
	// The creation timestamp of the resource.
	CreatedAt string `pulumi:"createdAt"`
	// The resource description.
	Description string `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A set of key/value label pairs which assigned to resource.
	Labels     map[string]string             `pulumi:"labels"`
	LogOptions []GetIotCoreRegistryLogOption `pulumi:"logOptions"`
	// The resource name.
	Name *string `pulumi:"name"`
	// A set of passwords's id for the IoT Core Registry.
	Passwords []string `pulumi:"passwords"`
	// IoT Core Registry id used to define registry.
	RegistryId *string `pulumi:"registryId"`
}

func LookupIotCoreRegistryOutput(ctx *pulumi.Context, args LookupIotCoreRegistryOutputArgs, opts ...pulumi.InvokeOption) LookupIotCoreRegistryResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupIotCoreRegistryResultOutput, error) {
			args := v.(LookupIotCoreRegistryArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getIotCoreRegistry:getIotCoreRegistry", args, LookupIotCoreRegistryResultOutput{}, options).(LookupIotCoreRegistryResultOutput), nil
		}).(LookupIotCoreRegistryResultOutput)
}

// A collection of arguments for invoking getIotCoreRegistry.
type LookupIotCoreRegistryOutputArgs struct {
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput `pulumi:"folderId"`
	// The resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// IoT Core Registry id used to define registry.
	RegistryId pulumi.StringPtrInput `pulumi:"registryId"`
}

func (LookupIotCoreRegistryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIotCoreRegistryArgs)(nil)).Elem()
}

// A collection of values returned by getIotCoreRegistry.
type LookupIotCoreRegistryResultOutput struct{ *pulumi.OutputState }

func (LookupIotCoreRegistryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIotCoreRegistryResult)(nil)).Elem()
}

func (o LookupIotCoreRegistryResultOutput) ToLookupIotCoreRegistryResultOutput() LookupIotCoreRegistryResultOutput {
	return o
}

func (o LookupIotCoreRegistryResultOutput) ToLookupIotCoreRegistryResultOutputWithContext(ctx context.Context) LookupIotCoreRegistryResultOutput {
	return o
}

// A set of certificate's fingerprints for the IoT Core Registry.
func (o LookupIotCoreRegistryResultOutput) Certificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupIotCoreRegistryResult) []string { return v.Certificates }).(pulumi.StringArrayOutput)
}

// The creation timestamp of the resource.
func (o LookupIotCoreRegistryResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIotCoreRegistryResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The resource description.
func (o LookupIotCoreRegistryResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIotCoreRegistryResult) string { return v.Description }).(pulumi.StringOutput)
}

// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
func (o LookupIotCoreRegistryResultOutput) FolderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIotCoreRegistryResult) *string { return v.FolderId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupIotCoreRegistryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIotCoreRegistryResult) string { return v.Id }).(pulumi.StringOutput)
}

// A set of key/value label pairs which assigned to resource.
func (o LookupIotCoreRegistryResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupIotCoreRegistryResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupIotCoreRegistryResultOutput) LogOptions() GetIotCoreRegistryLogOptionArrayOutput {
	return o.ApplyT(func(v LookupIotCoreRegistryResult) []GetIotCoreRegistryLogOption { return v.LogOptions }).(GetIotCoreRegistryLogOptionArrayOutput)
}

// The resource name.
func (o LookupIotCoreRegistryResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIotCoreRegistryResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A set of passwords's id for the IoT Core Registry.
func (o LookupIotCoreRegistryResultOutput) Passwords() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupIotCoreRegistryResult) []string { return v.Passwords }).(pulumi.StringArrayOutput)
}

// IoT Core Registry id used to define registry.
func (o LookupIotCoreRegistryResultOutput) RegistryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIotCoreRegistryResult) *string { return v.RegistryId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIotCoreRegistryResultOutput{})
}
