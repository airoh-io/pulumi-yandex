// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex Kubernetes Node Group. For more information, see
// [the official documentation](https://cloud.yandex.com/docs/managed-kubernetes/concepts/#node-group).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-yandex/sdk/go/yandex"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := "some_k8s_node_group_id"
// 		myNodeGroup, err := yandex.LookupKubernetesNodeGroup(ctx, &yandex.LookupKubernetesNodeGroupArgs{
// 			NodeGroupId: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("myNodeGroup.status", myNodeGroup.Status)
// 		return nil
// 	})
// }
// ```
func LookupKubernetesNodeGroup(ctx *pulumi.Context, args *LookupKubernetesNodeGroupArgs, opts ...pulumi.InvokeOption) (*LookupKubernetesNodeGroupResult, error) {
	var rv LookupKubernetesNodeGroupResult
	err := ctx.Invoke("yandex:index/getKubernetesNodeGroup:getKubernetesNodeGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKubernetesNodeGroup.
type LookupKubernetesNodeGroupArgs struct {
	// Folder that the resource belongs to. If value is omitted, the default provider folder is used.
	FolderId *string `pulumi:"folderId"`
	// Name of a specific Kubernetes node group.
	Name *string `pulumi:"name"`
	// ID of a specific Kubernetes node group.
	NodeGroupId *string `pulumi:"nodeGroupId"`
}

// A collection of values returned by getKubernetesNodeGroup.
type LookupKubernetesNodeGroupResult struct {
	// This argument specify subnets (zones), that will be used by node group compute instances. The structure is documented below.
	AllocationPolicy GetKubernetesNodeGroupAllocationPolicy `pulumi:"allocationPolicy"`
	// A list of allowed unsafe sysctl parameters for this node group. For more details see [documentation](https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/).
	AllowedUnsafeSysctls []string `pulumi:"allowedUnsafeSysctls"`
	// The ID of the Kubernetes cluster that this node group belongs to.
	ClusterId string `pulumi:"clusterId"`
	// The Kubernetes node group creation timestamp.
	CreatedAt string `pulumi:"createdAt"`
	// Deploy policy of the node group. The structure is documented below.
	DeployPolicy GetKubernetesNodeGroupDeployPolicy `pulumi:"deployPolicy"`
	// A description of the Kubernetes node group.
	Description string `pulumi:"description"`
	FolderId    string `pulumi:"folderId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// ID of instance group that is used to manage this Kubernetes node group.
	InstanceGroupId string `pulumi:"instanceGroupId"`
	// Template used to create compute instances in this Kubernetes node group. The structure is documented below.
	InstanceTemplate GetKubernetesNodeGroupInstanceTemplate `pulumi:"instanceTemplate"`
	// A map of labels applied to this instance.
	// * `resources.0.memory` - The memory size allocated to the instance.
	// * `resources.0.cores` - Number of CPU cores allocated to the instance.
	// * `resources.0.core_fraction` - Baseline core performance as a percent.
	// * `resources.0.gpus` - Number of GPU cores allocated to the instance.
	Labels map[string]string `pulumi:"labels"`
	// Information about maintenance policy for this Kubernetes node group. The structure is documented below.
	MaintenancePolicy GetKubernetesNodeGroupMaintenancePolicy `pulumi:"maintenancePolicy"`
	Name              string                                  `pulumi:"name"`
	NodeGroupId       string                                  `pulumi:"nodeGroupId"`
	// A set of key/value label pairs, that are assigned to all the nodes of this Kubernetes node group.
	NodeLabels map[string]string `pulumi:"nodeLabels"`
	// A list of Kubernetes taints, that are applied to all the nodes of this Kubernetes node group.
	NodeTaints []string `pulumi:"nodeTaints"`
	// Scale policy of the node group. The structure is documented below.
	ScalePolicy GetKubernetesNodeGroupScalePolicy `pulumi:"scalePolicy"`
	// Status of the Kubernetes node group.
	Status string `pulumi:"status"`
	// Information about Kubernetes node group version. The structure is documented below.
	VersionInfo GetKubernetesNodeGroupVersionInfo `pulumi:"versionInfo"`
}
