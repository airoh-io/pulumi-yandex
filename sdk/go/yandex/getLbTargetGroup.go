// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex Load Balancer target group. For more information, see [the official documentation](https://yandex.cloud/docs/load-balancer/quickstart).
// This data source is used to define [Load Balancer Target Groups](https://yandex.cloud/docs/load-balancer/concepts/target-resources) that can be used by other resources.
//
// > One of `targetGroupId` or `name` should be specified.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := yandex.LookupLbTargetGroup(ctx, &yandex.LookupLbTargetGroupArgs{
//				TargetGroupId: pulumi.StringRef("my-target-group-id"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupLbTargetGroup(ctx *pulumi.Context, args *LookupLbTargetGroupArgs, opts ...pulumi.InvokeOption) (*LookupLbTargetGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLbTargetGroupResult
	err := ctx.Invoke("yandex:index/getLbTargetGroup:getLbTargetGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLbTargetGroup.
type LookupLbTargetGroupArgs struct {
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// The resource name.
	Name *string `pulumi:"name"`
	// Target Group ID.
	TargetGroupId *string `pulumi:"targetGroupId"`
}

// A collection of values returned by getLbTargetGroup.
type LookupLbTargetGroupResult struct {
	// The creation timestamp of the resource.
	CreatedAt string `pulumi:"createdAt"`
	// The resource description.
	Description string `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId string `pulumi:"folderId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// The resource name.
	Name string `pulumi:"name"`
	// Target Group ID.
	TargetGroupId string                   `pulumi:"targetGroupId"`
	Targets       []GetLbTargetGroupTarget `pulumi:"targets"`
}

func LookupLbTargetGroupOutput(ctx *pulumi.Context, args LookupLbTargetGroupOutputArgs, opts ...pulumi.InvokeOption) LookupLbTargetGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupLbTargetGroupResultOutput, error) {
			args := v.(LookupLbTargetGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getLbTargetGroup:getLbTargetGroup", args, LookupLbTargetGroupResultOutput{}, options).(LookupLbTargetGroupResultOutput), nil
		}).(LookupLbTargetGroupResultOutput)
}

// A collection of arguments for invoking getLbTargetGroup.
type LookupLbTargetGroupOutputArgs struct {
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput `pulumi:"folderId"`
	// The resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Target Group ID.
	TargetGroupId pulumi.StringPtrInput `pulumi:"targetGroupId"`
}

func (LookupLbTargetGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLbTargetGroupArgs)(nil)).Elem()
}

// A collection of values returned by getLbTargetGroup.
type LookupLbTargetGroupResultOutput struct{ *pulumi.OutputState }

func (LookupLbTargetGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLbTargetGroupResult)(nil)).Elem()
}

func (o LookupLbTargetGroupResultOutput) ToLookupLbTargetGroupResultOutput() LookupLbTargetGroupResultOutput {
	return o
}

func (o LookupLbTargetGroupResultOutput) ToLookupLbTargetGroupResultOutputWithContext(ctx context.Context) LookupLbTargetGroupResultOutput {
	return o
}

// The creation timestamp of the resource.
func (o LookupLbTargetGroupResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLbTargetGroupResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The resource description.
func (o LookupLbTargetGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLbTargetGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
func (o LookupLbTargetGroupResultOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLbTargetGroupResult) string { return v.FolderId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupLbTargetGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLbTargetGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// A set of key/value label pairs which assigned to resource.
func (o LookupLbTargetGroupResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupLbTargetGroupResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The resource name.
func (o LookupLbTargetGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLbTargetGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

// Target Group ID.
func (o LookupLbTargetGroupResultOutput) TargetGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLbTargetGroupResult) string { return v.TargetGroupId }).(pulumi.StringOutput)
}

func (o LookupLbTargetGroupResultOutput) Targets() GetLbTargetGroupTargetArrayOutput {
	return o.ApplyT(func(v LookupLbTargetGroupResult) []GetLbTargetGroupTarget { return v.Targets }).(GetLbTargetGroupTargetArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLbTargetGroupResultOutput{})
}
