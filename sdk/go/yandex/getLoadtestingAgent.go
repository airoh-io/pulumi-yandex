// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex Load Testing Agent.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myAgent, err := yandex.LookupLoadtestingAgent(ctx, &yandex.LookupLoadtestingAgentArgs{
//				AgentId: "some_agent_id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("instanceExternalIp", myAgent.ComputeInstances[0].NetworkInterfaces[0].NatIpAddress)
//			return nil
//		})
//	}
//
// ```
func LookupLoadtestingAgent(ctx *pulumi.Context, args *LookupLoadtestingAgentArgs, opts ...pulumi.InvokeOption) (*LookupLoadtestingAgentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLoadtestingAgentResult
	err := ctx.Invoke("yandex:index/getLoadtestingAgent:getLoadtestingAgent", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLoadtestingAgent.
type LookupLoadtestingAgentArgs struct {
	// The ID of a specific load testing agent.
	AgentId     string                          `pulumi:"agentId"`
	LogSettings *GetLoadtestingAgentLogSettings `pulumi:"logSettings"`
}

// A collection of values returned by getLoadtestingAgent.
type LookupLoadtestingAgentResult struct {
	// The ID of a specific load testing agent.
	AgentId string `pulumi:"agentId"`
	// Compute Instance ID.
	ComputeInstanceId string                               `pulumi:"computeInstanceId"`
	ComputeInstances  []GetLoadtestingAgentComputeInstance `pulumi:"computeInstances"`
	// The resource description.
	Description string `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId string `pulumi:"folderId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A set of key/value label pairs which assigned to resource.
	Labels      map[string]string               `pulumi:"labels"`
	LogSettings *GetLoadtestingAgentLogSettings `pulumi:"logSettings"`
	// The resource name.
	Name string `pulumi:"name"`
}

func LookupLoadtestingAgentOutput(ctx *pulumi.Context, args LookupLoadtestingAgentOutputArgs, opts ...pulumi.InvokeOption) LookupLoadtestingAgentResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupLoadtestingAgentResultOutput, error) {
			args := v.(LookupLoadtestingAgentArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getLoadtestingAgent:getLoadtestingAgent", args, LookupLoadtestingAgentResultOutput{}, options).(LookupLoadtestingAgentResultOutput), nil
		}).(LookupLoadtestingAgentResultOutput)
}

// A collection of arguments for invoking getLoadtestingAgent.
type LookupLoadtestingAgentOutputArgs struct {
	// The ID of a specific load testing agent.
	AgentId     pulumi.StringInput                     `pulumi:"agentId"`
	LogSettings GetLoadtestingAgentLogSettingsPtrInput `pulumi:"logSettings"`
}

func (LookupLoadtestingAgentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLoadtestingAgentArgs)(nil)).Elem()
}

// A collection of values returned by getLoadtestingAgent.
type LookupLoadtestingAgentResultOutput struct{ *pulumi.OutputState }

func (LookupLoadtestingAgentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLoadtestingAgentResult)(nil)).Elem()
}

func (o LookupLoadtestingAgentResultOutput) ToLookupLoadtestingAgentResultOutput() LookupLoadtestingAgentResultOutput {
	return o
}

func (o LookupLoadtestingAgentResultOutput) ToLookupLoadtestingAgentResultOutputWithContext(ctx context.Context) LookupLoadtestingAgentResultOutput {
	return o
}

// The ID of a specific load testing agent.
func (o LookupLoadtestingAgentResultOutput) AgentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadtestingAgentResult) string { return v.AgentId }).(pulumi.StringOutput)
}

// Compute Instance ID.
func (o LookupLoadtestingAgentResultOutput) ComputeInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadtestingAgentResult) string { return v.ComputeInstanceId }).(pulumi.StringOutput)
}

func (o LookupLoadtestingAgentResultOutput) ComputeInstances() GetLoadtestingAgentComputeInstanceArrayOutput {
	return o.ApplyT(func(v LookupLoadtestingAgentResult) []GetLoadtestingAgentComputeInstance { return v.ComputeInstances }).(GetLoadtestingAgentComputeInstanceArrayOutput)
}

// The resource description.
func (o LookupLoadtestingAgentResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadtestingAgentResult) string { return v.Description }).(pulumi.StringOutput)
}

// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
func (o LookupLoadtestingAgentResultOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadtestingAgentResult) string { return v.FolderId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupLoadtestingAgentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadtestingAgentResult) string { return v.Id }).(pulumi.StringOutput)
}

// A set of key/value label pairs which assigned to resource.
func (o LookupLoadtestingAgentResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupLoadtestingAgentResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupLoadtestingAgentResultOutput) LogSettings() GetLoadtestingAgentLogSettingsPtrOutput {
	return o.ApplyT(func(v LookupLoadtestingAgentResult) *GetLoadtestingAgentLogSettings { return v.LogSettings }).(GetLoadtestingAgentLogSettingsPtrOutput)
}

// The resource name.
func (o LookupLoadtestingAgentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadtestingAgentResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLoadtestingAgentResultOutput{})
}
