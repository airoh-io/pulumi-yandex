// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex Cloud Logging group. For more information, see [the official documentation](https://yandex.cloud/docs/logging/concepts/log-group).
//
// > If `groupId` is not specified `name` and `folderId` will be used to designate Yandex Cloud Logging group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myGroup, err := yandex.LookupLoggingGroup(ctx, &yandex.LookupLoggingGroupArgs{
//				GroupId: pulumi.StringRef("some_yandex_logging_group_id"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("logGroupRetentionPeriod", myGroup.RetentionPeriod)
//			return nil
//		})
//	}
//
// ```
func LookupLoggingGroup(ctx *pulumi.Context, args *LookupLoggingGroupArgs, opts ...pulumi.InvokeOption) (*LookupLoggingGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLoggingGroupResult
	err := ctx.Invoke("yandex:index/getLoggingGroup:getLoggingGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLoggingGroup.
type LookupLoggingGroupArgs struct {
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// The Yandex Cloud Logging group ID.
	GroupId *string `pulumi:"groupId"`
	// The resource name.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getLoggingGroup.
type LookupLoggingGroupResult struct {
	// The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
	CloudId string `pulumi:"cloudId"`
	// The creation timestamp of the resource.
	CreatedAt string `pulumi:"createdAt"`
	// Data Stream.
	DataStream string `pulumi:"dataStream"`
	// The resource description.
	Description string `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId string `pulumi:"folderId"`
	// The Yandex Cloud Logging group ID.
	GroupId string `pulumi:"groupId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// The resource name.
	Name string `pulumi:"name"`
	// Log entries retention period for the Yandex Cloud Logging group.
	RetentionPeriod string `pulumi:"retentionPeriod"`
	// The Yandex Cloud Logging group status.
	Status string `pulumi:"status"`
}

func LookupLoggingGroupOutput(ctx *pulumi.Context, args LookupLoggingGroupOutputArgs, opts ...pulumi.InvokeOption) LookupLoggingGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupLoggingGroupResultOutput, error) {
			args := v.(LookupLoggingGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getLoggingGroup:getLoggingGroup", args, LookupLoggingGroupResultOutput{}, options).(LookupLoggingGroupResultOutput), nil
		}).(LookupLoggingGroupResultOutput)
}

// A collection of arguments for invoking getLoggingGroup.
type LookupLoggingGroupOutputArgs struct {
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput `pulumi:"folderId"`
	// The Yandex Cloud Logging group ID.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// The resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupLoggingGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLoggingGroupArgs)(nil)).Elem()
}

// A collection of values returned by getLoggingGroup.
type LookupLoggingGroupResultOutput struct{ *pulumi.OutputState }

func (LookupLoggingGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLoggingGroupResult)(nil)).Elem()
}

func (o LookupLoggingGroupResultOutput) ToLookupLoggingGroupResultOutput() LookupLoggingGroupResultOutput {
	return o
}

func (o LookupLoggingGroupResultOutput) ToLookupLoggingGroupResultOutputWithContext(ctx context.Context) LookupLoggingGroupResultOutput {
	return o
}

// The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
func (o LookupLoggingGroupResultOutput) CloudId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoggingGroupResult) string { return v.CloudId }).(pulumi.StringOutput)
}

// The creation timestamp of the resource.
func (o LookupLoggingGroupResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoggingGroupResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Data Stream.
func (o LookupLoggingGroupResultOutput) DataStream() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoggingGroupResult) string { return v.DataStream }).(pulumi.StringOutput)
}

// The resource description.
func (o LookupLoggingGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoggingGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
func (o LookupLoggingGroupResultOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoggingGroupResult) string { return v.FolderId }).(pulumi.StringOutput)
}

// The Yandex Cloud Logging group ID.
func (o LookupLoggingGroupResultOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoggingGroupResult) string { return v.GroupId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupLoggingGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoggingGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// A set of key/value label pairs which assigned to resource.
func (o LookupLoggingGroupResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupLoggingGroupResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The resource name.
func (o LookupLoggingGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoggingGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

// Log entries retention period for the Yandex Cloud Logging group.
func (o LookupLoggingGroupResultOutput) RetentionPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoggingGroupResult) string { return v.RetentionPeriod }).(pulumi.StringOutput)
}

// The Yandex Cloud Logging group status.
func (o LookupLoggingGroupResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoggingGroupResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLoggingGroupResultOutput{})
}
