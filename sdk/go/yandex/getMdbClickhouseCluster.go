// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex Managed ClickHouse cluster. For more information, see
// [the official documentation](https://cloud.yandex.com/docs/managed-clickhouse/concepts).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-yandex/sdk/go/yandex"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := "test"
// 		foo, err := yandex.LookupMdbClickhouseCluster(ctx, &yandex.LookupMdbClickhouseClusterArgs{
// 			Name: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("networkId", foo.NetworkId)
// 		return nil
// 	})
// }
// ```
func LookupMdbClickhouseCluster(ctx *pulumi.Context, args *LookupMdbClickhouseClusterArgs, opts ...pulumi.InvokeOption) (*LookupMdbClickhouseClusterResult, error) {
	var rv LookupMdbClickhouseClusterResult
	err := ctx.Invoke("yandex:index/getMdbClickhouseCluster:getMdbClickhouseCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMdbClickhouseCluster.
type LookupMdbClickhouseClusterArgs struct {
	CloudStorage *GetMdbClickhouseClusterCloudStorage `pulumi:"cloudStorage"`
	// The ID of the ClickHouse cluster.
	ClusterId          *string `pulumi:"clusterId"`
	DeletionProtection *bool   `pulumi:"deletionProtection"`
	// The ID of the folder that the resource belongs to. If it is not provided, the default provider folder is used.
	FolderId *string `pulumi:"folderId"`
	// The name of the ClickHouse cluster.
	Name             *string `pulumi:"name"`
	ServiceAccountId *string `pulumi:"serviceAccountId"`
}

// A collection of values returned by getMdbClickhouseCluster.
type LookupMdbClickhouseClusterResult struct {
	// Access policy to the ClickHouse cluster. The structure is documented below.
	Access GetMdbClickhouseClusterAccess `pulumi:"access"`
	// Time to start the daily backup, in the UTC timezone. The structure is documented below.
	BackupWindowStart GetMdbClickhouseClusterBackupWindowStart `pulumi:"backupWindowStart"`
	// Configuration of the ClickHouse subcluster. The structure is documented below.
	Clickhouse   GetMdbClickhouseClusterClickhouse    `pulumi:"clickhouse"`
	CloudStorage *GetMdbClickhouseClusterCloudStorage `pulumi:"cloudStorage"`
	ClusterId    string                               `pulumi:"clusterId"`
	// Creation timestamp of the key.
	CreatedAt string `pulumi:"createdAt"`
	// A database of the ClickHouse cluster. The structure is documented below.
	Databases          []GetMdbClickhouseClusterDatabase `pulumi:"databases"`
	DeletionProtection bool                              `pulumi:"deletionProtection"`
	// Description of the shard group.
	Description string `pulumi:"description"`
	// Deployment environment of the ClickHouse cluster.
	Environment string `pulumi:"environment"`
	FolderId    string `pulumi:"folderId"`
	// A set of protobuf or cap'n proto format schemas. The structure is documented below.
	FormatSchemas []GetMdbClickhouseClusterFormatSchema `pulumi:"formatSchemas"`
	// Aggregated health of the cluster.
	Health string `pulumi:"health"`
	// A host of the ClickHouse cluster. The structure is documented below.
	Hosts []GetMdbClickhouseClusterHost `pulumi:"hosts"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A set of key/value label pairs to assign to the ClickHouse cluster.
	Labels            map[string]string                        `pulumi:"labels"`
	MaintenanceWindow GetMdbClickhouseClusterMaintenanceWindow `pulumi:"maintenanceWindow"`
	// A group of machine learning models. The structure is documented below.
	MlModels []GetMdbClickhouseClusterMlModel `pulumi:"mlModels"`
	// Graphite rollup configuration name.
	Name string `pulumi:"name"`
	// ID of the network, to which the ClickHouse cluster belongs.
	NetworkId string `pulumi:"networkId"`
	// A set of ids of security groups assigned to hosts of the cluster.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	ServiceAccountId string   `pulumi:"serviceAccountId"`
	// A group of clickhouse shards. The structure is documented below.
	ShardGroups []GetMdbClickhouseClusterShardGroup `pulumi:"shardGroups"`
	// Grants `admin` user database management permission.
	SqlDatabaseManagement bool `pulumi:"sqlDatabaseManagement"`
	// Enables `admin` user with user management permission.
	SqlUserManagement bool `pulumi:"sqlUserManagement"`
	// Status of the cluster.
	Status string `pulumi:"status"`
	// A user of the ClickHouse cluster. The structure is documented below.
	Users   []GetMdbClickhouseClusterUser `pulumi:"users"`
	Version string                        `pulumi:"version"`
	// Configuration of the ZooKeeper subcluster. The structure is documented below.
	Zookeeper GetMdbClickhouseClusterZookeeper `pulumi:"zookeeper"`
}
