// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex Managed Kafka cluster. For more information, see [the official documentation](https://yandex.cloud/docs/managed-kafka/concepts).
//
// > Either `clusterId` or `name` should be specified.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myCluster, err := yandex.LookupMdbKafkaCluster(ctx, &yandex.LookupMdbKafkaClusterArgs{
//				Name: pulumi.StringRef("test"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("networkId", myCluster.NetworkId)
//			return nil
//		})
//	}
//
// ```
func LookupMdbKafkaCluster(ctx *pulumi.Context, args *LookupMdbKafkaClusterArgs, opts ...pulumi.InvokeOption) (*LookupMdbKafkaClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMdbKafkaClusterResult
	err := ctx.Invoke("yandex:index/getMdbKafkaCluster:getMdbKafkaCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMdbKafkaCluster.
type LookupMdbKafkaClusterArgs struct {
	// The ID of the Kafka cluster.
	ClusterId *string `pulumi:"clusterId"`
	// Configuration of the Kafka cluster.
	Config *GetMdbKafkaClusterConfig `pulumi:"config"`
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// The resource name.
	Name *string `pulumi:"name"`
	// The list of VPC subnets identifiers which resource is attached.
	SubnetIds []string `pulumi:"subnetIds"`
	// List of kafka topics.
	//
	// Deprecated: to manage topics, please switch to using a separate resource type yandex_mdb_kafka_topic
	Topics []GetMdbKafkaClusterTopic `pulumi:"topics"`
	// List of kafka users.
	//
	// Deprecated: to manage users, please switch to using a separate resource type yandex_mdb_kafka_user
	Users []GetMdbKafkaClusterUser `pulumi:"users"`
}

// A collection of values returned by getMdbKafkaCluster.
type LookupMdbKafkaClusterResult struct {
	// The ID of the Kafka cluster.
	ClusterId string `pulumi:"clusterId"`
	// Configuration of the Kafka cluster.
	Config *GetMdbKafkaClusterConfig `pulumi:"config"`
	// The creation timestamp of the resource.
	CreatedAt string `pulumi:"createdAt"`
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection bool `pulumi:"deletionProtection"`
	// The resource description.
	Description string `pulumi:"description"`
	// Deployment environment of the Kafka cluster. Can be either `PRESTABLE` or `PRODUCTION`. The default is `PRODUCTION`.
	Environment string `pulumi:"environment"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId string `pulumi:"folderId"`
	// Aggregated health of the cluster. Can be either `ALIVE`, `DEGRADED`, `DEAD` or `HEALTH_UNKNOWN`. For more information see `health` field of JSON representation in [the official documentation](https://yandex.cloud/docs/managed-kafka/api-ref/Cluster/).
	Health string `pulumi:"health"`
	// A list of IDs of the host groups to place VMs of the cluster on.
	HostGroupIds []string `pulumi:"hostGroupIds"`
	// A host of the Kafka cluster.
	Hosts []GetMdbKafkaClusterHost `pulumi:"hosts"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// Maintenance policy of the Kafka cluster.
	MaintenanceWindows []GetMdbKafkaClusterMaintenanceWindow `pulumi:"maintenanceWindows"`
	// The resource name.
	Name string `pulumi:"name"`
	// The `VPC Network ID` of subnets which resource attached to.
	NetworkId string `pulumi:"networkId"`
	// The list of security groups applied to resource or their components.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// Status of the cluster. Can be either `CREATING`, `STARTING`, `RUNNING`, `UPDATING`, `STOPPING`, `STOPPED`, `ERROR` or `STATUS_UNKNOWN`. For more information see `status` field of JSON representation in [the official documentation](https://yandex.cloud/docs/managed-kafka/api-ref/Cluster/).
	Status string `pulumi:"status"`
	// The list of VPC subnets identifiers which resource is attached.
	SubnetIds []string `pulumi:"subnetIds"`
	// List of kafka topics.
	//
	// Deprecated: to manage topics, please switch to using a separate resource type yandex_mdb_kafka_topic
	Topics []GetMdbKafkaClusterTopic `pulumi:"topics"`
	// List of kafka users.
	//
	// Deprecated: to manage users, please switch to using a separate resource type yandex_mdb_kafka_user
	Users []GetMdbKafkaClusterUser `pulumi:"users"`
}

func LookupMdbKafkaClusterOutput(ctx *pulumi.Context, args LookupMdbKafkaClusterOutputArgs, opts ...pulumi.InvokeOption) LookupMdbKafkaClusterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMdbKafkaClusterResultOutput, error) {
			args := v.(LookupMdbKafkaClusterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getMdbKafkaCluster:getMdbKafkaCluster", args, LookupMdbKafkaClusterResultOutput{}, options).(LookupMdbKafkaClusterResultOutput), nil
		}).(LookupMdbKafkaClusterResultOutput)
}

// A collection of arguments for invoking getMdbKafkaCluster.
type LookupMdbKafkaClusterOutputArgs struct {
	// The ID of the Kafka cluster.
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
	// Configuration of the Kafka cluster.
	Config GetMdbKafkaClusterConfigPtrInput `pulumi:"config"`
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection pulumi.BoolPtrInput `pulumi:"deletionProtection"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput `pulumi:"folderId"`
	// The resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The list of VPC subnets identifiers which resource is attached.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// List of kafka topics.
	//
	// Deprecated: to manage topics, please switch to using a separate resource type yandex_mdb_kafka_topic
	Topics GetMdbKafkaClusterTopicArrayInput `pulumi:"topics"`
	// List of kafka users.
	//
	// Deprecated: to manage users, please switch to using a separate resource type yandex_mdb_kafka_user
	Users GetMdbKafkaClusterUserArrayInput `pulumi:"users"`
}

func (LookupMdbKafkaClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMdbKafkaClusterArgs)(nil)).Elem()
}

// A collection of values returned by getMdbKafkaCluster.
type LookupMdbKafkaClusterResultOutput struct{ *pulumi.OutputState }

func (LookupMdbKafkaClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMdbKafkaClusterResult)(nil)).Elem()
}

func (o LookupMdbKafkaClusterResultOutput) ToLookupMdbKafkaClusterResultOutput() LookupMdbKafkaClusterResultOutput {
	return o
}

func (o LookupMdbKafkaClusterResultOutput) ToLookupMdbKafkaClusterResultOutputWithContext(ctx context.Context) LookupMdbKafkaClusterResultOutput {
	return o
}

// The ID of the Kafka cluster.
func (o LookupMdbKafkaClusterResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbKafkaClusterResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Configuration of the Kafka cluster.
func (o LookupMdbKafkaClusterResultOutput) Config() GetMdbKafkaClusterConfigPtrOutput {
	return o.ApplyT(func(v LookupMdbKafkaClusterResult) *GetMdbKafkaClusterConfig { return v.Config }).(GetMdbKafkaClusterConfigPtrOutput)
}

// The creation timestamp of the resource.
func (o LookupMdbKafkaClusterResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbKafkaClusterResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The `true` value means that resource is protected from accidental deletion.
func (o LookupMdbKafkaClusterResultOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMdbKafkaClusterResult) bool { return v.DeletionProtection }).(pulumi.BoolOutput)
}

// The resource description.
func (o LookupMdbKafkaClusterResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbKafkaClusterResult) string { return v.Description }).(pulumi.StringOutput)
}

// Deployment environment of the Kafka cluster. Can be either `PRESTABLE` or `PRODUCTION`. The default is `PRODUCTION`.
func (o LookupMdbKafkaClusterResultOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbKafkaClusterResult) string { return v.Environment }).(pulumi.StringOutput)
}

// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
func (o LookupMdbKafkaClusterResultOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbKafkaClusterResult) string { return v.FolderId }).(pulumi.StringOutput)
}

// Aggregated health of the cluster. Can be either `ALIVE`, `DEGRADED`, `DEAD` or `HEALTH_UNKNOWN`. For more information see `health` field of JSON representation in [the official documentation](https://yandex.cloud/docs/managed-kafka/api-ref/Cluster/).
func (o LookupMdbKafkaClusterResultOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbKafkaClusterResult) string { return v.Health }).(pulumi.StringOutput)
}

// A list of IDs of the host groups to place VMs of the cluster on.
func (o LookupMdbKafkaClusterResultOutput) HostGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMdbKafkaClusterResult) []string { return v.HostGroupIds }).(pulumi.StringArrayOutput)
}

// A host of the Kafka cluster.
func (o LookupMdbKafkaClusterResultOutput) Hosts() GetMdbKafkaClusterHostArrayOutput {
	return o.ApplyT(func(v LookupMdbKafkaClusterResult) []GetMdbKafkaClusterHost { return v.Hosts }).(GetMdbKafkaClusterHostArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMdbKafkaClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbKafkaClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

// A set of key/value label pairs which assigned to resource.
func (o LookupMdbKafkaClusterResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMdbKafkaClusterResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Maintenance policy of the Kafka cluster.
func (o LookupMdbKafkaClusterResultOutput) MaintenanceWindows() GetMdbKafkaClusterMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v LookupMdbKafkaClusterResult) []GetMdbKafkaClusterMaintenanceWindow { return v.MaintenanceWindows }).(GetMdbKafkaClusterMaintenanceWindowArrayOutput)
}

// The resource name.
func (o LookupMdbKafkaClusterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbKafkaClusterResult) string { return v.Name }).(pulumi.StringOutput)
}

// The `VPC Network ID` of subnets which resource attached to.
func (o LookupMdbKafkaClusterResultOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbKafkaClusterResult) string { return v.NetworkId }).(pulumi.StringOutput)
}

// The list of security groups applied to resource or their components.
func (o LookupMdbKafkaClusterResultOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMdbKafkaClusterResult) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// Status of the cluster. Can be either `CREATING`, `STARTING`, `RUNNING`, `UPDATING`, `STOPPING`, `STOPPED`, `ERROR` or `STATUS_UNKNOWN`. For more information see `status` field of JSON representation in [the official documentation](https://yandex.cloud/docs/managed-kafka/api-ref/Cluster/).
func (o LookupMdbKafkaClusterResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbKafkaClusterResult) string { return v.Status }).(pulumi.StringOutput)
}

// The list of VPC subnets identifiers which resource is attached.
func (o LookupMdbKafkaClusterResultOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMdbKafkaClusterResult) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// List of kafka topics.
//
// Deprecated: to manage topics, please switch to using a separate resource type yandex_mdb_kafka_topic
func (o LookupMdbKafkaClusterResultOutput) Topics() GetMdbKafkaClusterTopicArrayOutput {
	return o.ApplyT(func(v LookupMdbKafkaClusterResult) []GetMdbKafkaClusterTopic { return v.Topics }).(GetMdbKafkaClusterTopicArrayOutput)
}

// List of kafka users.
//
// Deprecated: to manage users, please switch to using a separate resource type yandex_mdb_kafka_user
func (o LookupMdbKafkaClusterResultOutput) Users() GetMdbKafkaClusterUserArrayOutput {
	return o.ApplyT(func(v LookupMdbKafkaClusterResult) []GetMdbKafkaClusterUser { return v.Users }).(GetMdbKafkaClusterUserArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMdbKafkaClusterResultOutput{})
}
