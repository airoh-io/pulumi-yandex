// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a topic of the Yandex Managed Kafka cluster. For more information, see [the official documentation](https://yandex.cloud/docs/managed-kafka/concepts).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			foo, err := yandex.LookupMdbKafkaTopic(ctx, &yandex.LookupMdbKafkaTopicArgs{
//				ClusterId: "some_cluster_id",
//				Name:      "test",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("replicationFactor", foo.ReplicationFactor)
//			return nil
//		})
//	}
//
// ```
func LookupMdbKafkaTopic(ctx *pulumi.Context, args *LookupMdbKafkaTopicArgs, opts ...pulumi.InvokeOption) (*LookupMdbKafkaTopicResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMdbKafkaTopicResult
	err := ctx.Invoke("yandex:index/getMdbKafkaTopic:getMdbKafkaTopic", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMdbKafkaTopic.
type LookupMdbKafkaTopicArgs struct {
	// The ID of the Kafka cluster.
	ClusterId string `pulumi:"clusterId"`
	// The resource name.
	Name string `pulumi:"name"`
}

// A collection of values returned by getMdbKafkaTopic.
type LookupMdbKafkaTopicResult struct {
	// The ID of the Kafka cluster.
	ClusterId string `pulumi:"clusterId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The resource name.
	Name string `pulumi:"name"`
	// The number of the topic's partitions.
	Partitions int `pulumi:"partitions"`
	// Amount of data copies (replicas) for the topic in the cluster.
	ReplicationFactor int `pulumi:"replicationFactor"`
	// User-defined settings for the topic. For more information, see [the official documentation](https://yandex.cloud/docs/managed-kafka/concepts/settings-list#topic-settings) and [the Kafka documentation](https://kafka.apache.org/documentation/#topicconfigs).
	TopicConfigs []GetMdbKafkaTopicTopicConfig `pulumi:"topicConfigs"`
}

func LookupMdbKafkaTopicOutput(ctx *pulumi.Context, args LookupMdbKafkaTopicOutputArgs, opts ...pulumi.InvokeOption) LookupMdbKafkaTopicResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMdbKafkaTopicResultOutput, error) {
			args := v.(LookupMdbKafkaTopicArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getMdbKafkaTopic:getMdbKafkaTopic", args, LookupMdbKafkaTopicResultOutput{}, options).(LookupMdbKafkaTopicResultOutput), nil
		}).(LookupMdbKafkaTopicResultOutput)
}

// A collection of arguments for invoking getMdbKafkaTopic.
type LookupMdbKafkaTopicOutputArgs struct {
	// The ID of the Kafka cluster.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// The resource name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupMdbKafkaTopicOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMdbKafkaTopicArgs)(nil)).Elem()
}

// A collection of values returned by getMdbKafkaTopic.
type LookupMdbKafkaTopicResultOutput struct{ *pulumi.OutputState }

func (LookupMdbKafkaTopicResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMdbKafkaTopicResult)(nil)).Elem()
}

func (o LookupMdbKafkaTopicResultOutput) ToLookupMdbKafkaTopicResultOutput() LookupMdbKafkaTopicResultOutput {
	return o
}

func (o LookupMdbKafkaTopicResultOutput) ToLookupMdbKafkaTopicResultOutputWithContext(ctx context.Context) LookupMdbKafkaTopicResultOutput {
	return o
}

// The ID of the Kafka cluster.
func (o LookupMdbKafkaTopicResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbKafkaTopicResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMdbKafkaTopicResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbKafkaTopicResult) string { return v.Id }).(pulumi.StringOutput)
}

// The resource name.
func (o LookupMdbKafkaTopicResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbKafkaTopicResult) string { return v.Name }).(pulumi.StringOutput)
}

// The number of the topic's partitions.
func (o LookupMdbKafkaTopicResultOutput) Partitions() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMdbKafkaTopicResult) int { return v.Partitions }).(pulumi.IntOutput)
}

// Amount of data copies (replicas) for the topic in the cluster.
func (o LookupMdbKafkaTopicResultOutput) ReplicationFactor() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMdbKafkaTopicResult) int { return v.ReplicationFactor }).(pulumi.IntOutput)
}

// User-defined settings for the topic. For more information, see [the official documentation](https://yandex.cloud/docs/managed-kafka/concepts/settings-list#topic-settings) and [the Kafka documentation](https://kafka.apache.org/documentation/#topicconfigs).
func (o LookupMdbKafkaTopicResultOutput) TopicConfigs() GetMdbKafkaTopicTopicConfigArrayOutput {
	return o.ApplyT(func(v LookupMdbKafkaTopicResult) []GetMdbKafkaTopicTopicConfig { return v.TopicConfigs }).(GetMdbKafkaTopicTopicConfigArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMdbKafkaTopicResultOutput{})
}
