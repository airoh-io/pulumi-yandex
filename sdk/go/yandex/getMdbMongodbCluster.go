// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex Managed MongoDB cluster. For more information, see
// [the official documentation](https://cloud.yandex.com/docs/managed-mongodb/concepts).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-yandex/sdk/go/yandex"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := "test"
// 		foo, err := yandex.LookupMdbMongodbCluster(ctx, &yandex.LookupMdbMongodbClusterArgs{
// 			Name: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("networkId", foo.NetworkId)
// 		return nil
// 	})
// }
// ```
func LookupMdbMongodbCluster(ctx *pulumi.Context, args *LookupMdbMongodbClusterArgs, opts ...pulumi.InvokeOption) (*LookupMdbMongodbClusterResult, error) {
	var rv LookupMdbMongodbClusterResult
	err := ctx.Invoke("yandex:index/getMdbMongodbCluster:getMdbMongodbCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMdbMongodbCluster.
type LookupMdbMongodbClusterArgs struct {
	// The ID of the MongoDB cluster.
	ClusterId *string `pulumi:"clusterId"`
	// Folder that the resource belongs to. If value is omitted, the default provider folder is used.
	FolderId *string `pulumi:"folderId"`
	// The name of the MongoDB cluster.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getMdbMongodbCluster.
type LookupMdbMongodbClusterResult struct {
	// Configuration of the MongoDB cluster. The structure is documented below.
	ClusterConfig GetMdbMongodbClusterClusterConfig `pulumi:"clusterConfig"`
	ClusterId     string                            `pulumi:"clusterId"`
	// Creation timestamp of the key.
	CreatedAt string `pulumi:"createdAt"`
	// A database of the MongoDB cluster. The structure is documented below.
	Databases []GetMdbMongodbClusterDatabase `pulumi:"databases"`
	// Description of the MongoDB cluster.
	Description string `pulumi:"description"`
	// Deployment environment of the MongoDB cluster.
	Environment string `pulumi:"environment"`
	FolderId    string `pulumi:"folderId"`
	// The health of the host.
	Health string `pulumi:"health"`
	// A host of the MongoDB cluster. The structure is documented below.
	Hosts []GetMdbMongodbClusterHost `pulumi:"hosts"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A set of key/value label pairs to assign to the MongoDB cluster.
	Labels            map[string]string                     `pulumi:"labels"`
	MaintenanceWindow GetMdbMongodbClusterMaintenanceWindow `pulumi:"maintenanceWindow"`
	// The name of the database.
	Name string `pulumi:"name"`
	// ID of the network, to which the MongoDB cluster belongs.
	NetworkId string `pulumi:"networkId"`
	// Resources allocated to hosts of the MongoDB cluster. The structure is documented below.
	Resources GetMdbMongodbClusterResources `pulumi:"resources"`
	// A set of ids of security groups assigned to hosts of the cluster.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// MongoDB Cluster mode enabled/disabled.
	Sharded bool `pulumi:"sharded"`
	// Status of the cluster.
	Status string `pulumi:"status"`
	// A user of the MongoDB cluster. The structure is documented below.
	Users []GetMdbMongodbClusterUser `pulumi:"users"`
}
