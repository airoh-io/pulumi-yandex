// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex Managed MySQL cluster. For more information, see [the official documentation](https://yandex.cloud/docs/managed-mysql/).
//
// > Either `clusterId` or `name` should be specified.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myCluster, err := yandex.LookupMdbMysqlCluster(ctx, &yandex.LookupMdbMysqlClusterArgs{
//				Name: pulumi.StringRef("test"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("networkId", myCluster.NetworkId)
//			return nil
//		})
//	}
//
// ```
func LookupMdbMysqlCluster(ctx *pulumi.Context, args *LookupMdbMysqlClusterArgs, opts ...pulumi.InvokeOption) (*LookupMdbMysqlClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMdbMysqlClusterResult
	err := ctx.Invoke("yandex:index/getMdbMysqlCluster:getMdbMysqlCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMdbMysqlCluster.
type LookupMdbMysqlClusterArgs struct {
	// Access policy to the MySQL cluster.
	Access *GetMdbMysqlClusterAccess `pulumi:"access"`
	// The ID of the MySQL cluster.
	ClusterId *string `pulumi:"clusterId"`
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// The resource description.
	Description *string `pulumi:"description"`
	// ID of the KMS key for cluster disk encryption. Restoring without an encryption key will disable encryption if any exists.
	DiskEncryptionKeyId *string `pulumi:"diskEncryptionKeyId"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// MySQL cluster config block.
	MysqlConfig map[string]string `pulumi:"mysqlConfig"`
	// The resource name.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getMdbMysqlCluster.
type LookupMdbMysqlClusterResult struct {
	// Access policy to the MySQL cluster.
	Access GetMdbMysqlClusterAccess `pulumi:"access"`
	// The period in days during which backups are stored.
	BackupRetainPeriodDays int `pulumi:"backupRetainPeriodDays"`
	// Time to start the daily backup, in the UTC.
	BackupWindowStarts []GetMdbMysqlClusterBackupWindowStart `pulumi:"backupWindowStarts"`
	// The ID of the MySQL cluster.
	ClusterId string `pulumi:"clusterId"`
	// The creation timestamp of the resource.
	CreatedAt string `pulumi:"createdAt"`
	// To manage databases, please switch to using a separate resource type `yandexMdbMysqlDatabases`.
	Databases []GetMdbMysqlClusterDatabase `pulumi:"databases"`
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection bool `pulumi:"deletionProtection"`
	// The resource description.
	Description *string `pulumi:"description"`
	// ID of the KMS key for cluster disk encryption. Restoring without an encryption key will disable encryption if any exists.
	DiskEncryptionKeyId string `pulumi:"diskEncryptionKeyId"`
	// Cluster disk size autoscaling settings.
	DiskSizeAutoscalings []GetMdbMysqlClusterDiskSizeAutoscaling `pulumi:"diskSizeAutoscalings"`
	// Deployment environment of the MySQL cluster.
	Environment string `pulumi:"environment"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId string `pulumi:"folderId"`
	// Aggregated health of the cluster.
	Health string `pulumi:"health"`
	// A list of host group IDs to place VMs of the cluster on.
	HostGroupIds []string `pulumi:"hostGroupIds"`
	// A host of the MySQL cluster.
	Hosts []GetMdbMysqlClusterHost `pulumi:"hosts"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// Maintenance policy of the MySQL cluster.
	MaintenanceWindows []GetMdbMysqlClusterMaintenanceWindow `pulumi:"maintenanceWindows"`
	// MySQL cluster config block.
	MysqlConfig map[string]string `pulumi:"mysqlConfig"`
	// The resource name.
	Name string `pulumi:"name"`
	// The `VPC Network ID` of subnets which resource attached to.
	NetworkId string `pulumi:"networkId"`
	// Cluster performance diagnostics settings. [YC Documentation](https://yandex.cloud/docs/managed-mysql/api-ref/grpc/cluster_service#PerformanceDiagnostics).
	PerformanceDiagnostics []GetMdbMysqlClusterPerformanceDiagnostic `pulumi:"performanceDiagnostics"`
	// Resources allocated to hosts of the MySQL cluster.
	Resources []GetMdbMysqlClusterResource `pulumi:"resources"`
	// The list of security groups applied to resource or their components.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// Status of the cluster.
	Status string `pulumi:"status"`
	// To manage users, please switch to using a separate resource type `MdbMysqlUser`.
	Users []GetMdbMysqlClusterUser `pulumi:"users"`
	// Version of the MySQL cluster. (allowed versions are: 5.7, 8.0).
	Version string `pulumi:"version"`
}

func LookupMdbMysqlClusterOutput(ctx *pulumi.Context, args LookupMdbMysqlClusterOutputArgs, opts ...pulumi.InvokeOption) LookupMdbMysqlClusterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMdbMysqlClusterResultOutput, error) {
			args := v.(LookupMdbMysqlClusterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getMdbMysqlCluster:getMdbMysqlCluster", args, LookupMdbMysqlClusterResultOutput{}, options).(LookupMdbMysqlClusterResultOutput), nil
		}).(LookupMdbMysqlClusterResultOutput)
}

// A collection of arguments for invoking getMdbMysqlCluster.
type LookupMdbMysqlClusterOutputArgs struct {
	// Access policy to the MySQL cluster.
	Access GetMdbMysqlClusterAccessPtrInput `pulumi:"access"`
	// The ID of the MySQL cluster.
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection pulumi.BoolPtrInput `pulumi:"deletionProtection"`
	// The resource description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// ID of the KMS key for cluster disk encryption. Restoring without an encryption key will disable encryption if any exists.
	DiskEncryptionKeyId pulumi.StringPtrInput `pulumi:"diskEncryptionKeyId"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput `pulumi:"folderId"`
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// MySQL cluster config block.
	MysqlConfig pulumi.StringMapInput `pulumi:"mysqlConfig"`
	// The resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupMdbMysqlClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMdbMysqlClusterArgs)(nil)).Elem()
}

// A collection of values returned by getMdbMysqlCluster.
type LookupMdbMysqlClusterResultOutput struct{ *pulumi.OutputState }

func (LookupMdbMysqlClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMdbMysqlClusterResult)(nil)).Elem()
}

func (o LookupMdbMysqlClusterResultOutput) ToLookupMdbMysqlClusterResultOutput() LookupMdbMysqlClusterResultOutput {
	return o
}

func (o LookupMdbMysqlClusterResultOutput) ToLookupMdbMysqlClusterResultOutputWithContext(ctx context.Context) LookupMdbMysqlClusterResultOutput {
	return o
}

// Access policy to the MySQL cluster.
func (o LookupMdbMysqlClusterResultOutput) Access() GetMdbMysqlClusterAccessOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) GetMdbMysqlClusterAccess { return v.Access }).(GetMdbMysqlClusterAccessOutput)
}

// The period in days during which backups are stored.
func (o LookupMdbMysqlClusterResultOutput) BackupRetainPeriodDays() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) int { return v.BackupRetainPeriodDays }).(pulumi.IntOutput)
}

// Time to start the daily backup, in the UTC.
func (o LookupMdbMysqlClusterResultOutput) BackupWindowStarts() GetMdbMysqlClusterBackupWindowStartArrayOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) []GetMdbMysqlClusterBackupWindowStart { return v.BackupWindowStarts }).(GetMdbMysqlClusterBackupWindowStartArrayOutput)
}

// The ID of the MySQL cluster.
func (o LookupMdbMysqlClusterResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The creation timestamp of the resource.
func (o LookupMdbMysqlClusterResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// To manage databases, please switch to using a separate resource type `yandexMdbMysqlDatabases`.
func (o LookupMdbMysqlClusterResultOutput) Databases() GetMdbMysqlClusterDatabaseArrayOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) []GetMdbMysqlClusterDatabase { return v.Databases }).(GetMdbMysqlClusterDatabaseArrayOutput)
}

// The `true` value means that resource is protected from accidental deletion.
func (o LookupMdbMysqlClusterResultOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) bool { return v.DeletionProtection }).(pulumi.BoolOutput)
}

// The resource description.
func (o LookupMdbMysqlClusterResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// ID of the KMS key for cluster disk encryption. Restoring without an encryption key will disable encryption if any exists.
func (o LookupMdbMysqlClusterResultOutput) DiskEncryptionKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) string { return v.DiskEncryptionKeyId }).(pulumi.StringOutput)
}

// Cluster disk size autoscaling settings.
func (o LookupMdbMysqlClusterResultOutput) DiskSizeAutoscalings() GetMdbMysqlClusterDiskSizeAutoscalingArrayOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) []GetMdbMysqlClusterDiskSizeAutoscaling {
		return v.DiskSizeAutoscalings
	}).(GetMdbMysqlClusterDiskSizeAutoscalingArrayOutput)
}

// Deployment environment of the MySQL cluster.
func (o LookupMdbMysqlClusterResultOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) string { return v.Environment }).(pulumi.StringOutput)
}

// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
func (o LookupMdbMysqlClusterResultOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) string { return v.FolderId }).(pulumi.StringOutput)
}

// Aggregated health of the cluster.
func (o LookupMdbMysqlClusterResultOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) string { return v.Health }).(pulumi.StringOutput)
}

// A list of host group IDs to place VMs of the cluster on.
func (o LookupMdbMysqlClusterResultOutput) HostGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) []string { return v.HostGroupIds }).(pulumi.StringArrayOutput)
}

// A host of the MySQL cluster.
func (o LookupMdbMysqlClusterResultOutput) Hosts() GetMdbMysqlClusterHostArrayOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) []GetMdbMysqlClusterHost { return v.Hosts }).(GetMdbMysqlClusterHostArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMdbMysqlClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

// A set of key/value label pairs which assigned to resource.
func (o LookupMdbMysqlClusterResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Maintenance policy of the MySQL cluster.
func (o LookupMdbMysqlClusterResultOutput) MaintenanceWindows() GetMdbMysqlClusterMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) []GetMdbMysqlClusterMaintenanceWindow { return v.MaintenanceWindows }).(GetMdbMysqlClusterMaintenanceWindowArrayOutput)
}

// MySQL cluster config block.
func (o LookupMdbMysqlClusterResultOutput) MysqlConfig() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) map[string]string { return v.MysqlConfig }).(pulumi.StringMapOutput)
}

// The resource name.
func (o LookupMdbMysqlClusterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) string { return v.Name }).(pulumi.StringOutput)
}

// The `VPC Network ID` of subnets which resource attached to.
func (o LookupMdbMysqlClusterResultOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) string { return v.NetworkId }).(pulumi.StringOutput)
}

// Cluster performance diagnostics settings. [YC Documentation](https://yandex.cloud/docs/managed-mysql/api-ref/grpc/cluster_service#PerformanceDiagnostics).
func (o LookupMdbMysqlClusterResultOutput) PerformanceDiagnostics() GetMdbMysqlClusterPerformanceDiagnosticArrayOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) []GetMdbMysqlClusterPerformanceDiagnostic {
		return v.PerformanceDiagnostics
	}).(GetMdbMysqlClusterPerformanceDiagnosticArrayOutput)
}

// Resources allocated to hosts of the MySQL cluster.
func (o LookupMdbMysqlClusterResultOutput) Resources() GetMdbMysqlClusterResourceArrayOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) []GetMdbMysqlClusterResource { return v.Resources }).(GetMdbMysqlClusterResourceArrayOutput)
}

// The list of security groups applied to resource or their components.
func (o LookupMdbMysqlClusterResultOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// Status of the cluster.
func (o LookupMdbMysqlClusterResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) string { return v.Status }).(pulumi.StringOutput)
}

// To manage users, please switch to using a separate resource type `MdbMysqlUser`.
func (o LookupMdbMysqlClusterResultOutput) Users() GetMdbMysqlClusterUserArrayOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) []GetMdbMysqlClusterUser { return v.Users }).(GetMdbMysqlClusterUserArrayOutput)
}

// Version of the MySQL cluster. (allowed versions are: 5.7, 8.0).
func (o LookupMdbMysqlClusterResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbMysqlClusterResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMdbMysqlClusterResultOutput{})
}
