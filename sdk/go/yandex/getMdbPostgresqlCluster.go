// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex Managed PostgreSQL cluster. For more information, see [the official documentation](https://yandex.cloud/docs/managed-postgresql/). [How to connect to the DB](https://yandex.cloud/docs/managed-postgresql/quickstart#connect). To connect, use port 6432. The port number is not configurable.
//
// > Either `clusterId` or `name` should be specified.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myCluster, err := yandex.LookupMdbPostgresqlCluster(ctx, &yandex.LookupMdbPostgresqlClusterArgs{
//				Name: pulumi.StringRef("test"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("fqdn", myCluster.Hosts[0].Fqdn)
//			return nil
//		})
//	}
//
// ```
func LookupMdbPostgresqlCluster(ctx *pulumi.Context, args *LookupMdbPostgresqlClusterArgs, opts ...pulumi.InvokeOption) (*LookupMdbPostgresqlClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMdbPostgresqlClusterResult
	err := ctx.Invoke("yandex:index/getMdbPostgresqlCluster:getMdbPostgresqlCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMdbPostgresqlCluster.
type LookupMdbPostgresqlClusterArgs struct {
	// The ID of the PostgreSQL cluster.
	ClusterId *string `pulumi:"clusterId"`
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// The resource description.
	Description *string `pulumi:"description"`
	// ID of the KMS key for cluster disk encryption.
	DiskEncryptionKeyId *string `pulumi:"diskEncryptionKeyId"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// The name of the PostgreSQL cluster.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getMdbPostgresqlCluster.
type LookupMdbPostgresqlClusterResult struct {
	// The ID of the PostgreSQL cluster.
	ClusterId string `pulumi:"clusterId"`
	// Configuration of the PostgreSQL cluster.
	Configs []GetMdbPostgresqlClusterConfig `pulumi:"configs"`
	// The creation timestamp of the resource.
	CreatedAt string `pulumi:"createdAt"`
	// > Deprecated! To manage databases, please switch to using a separate resource type `MdbPostgresqlDatabase`.
	Databases []GetMdbPostgresqlClusterDatabase `pulumi:"databases"`
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection bool `pulumi:"deletionProtection"`
	// The resource description.
	Description *string `pulumi:"description"`
	// ID of the KMS key for cluster disk encryption.
	DiskEncryptionKeyId string `pulumi:"diskEncryptionKeyId"`
	// Deployment environment of the PostgreSQL cluster.
	Environment string `pulumi:"environment"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId string `pulumi:"folderId"`
	// Aggregated health of the cluster.
	Health string `pulumi:"health"`
	// Host Group IDs.
	HostGroupIds []string `pulumi:"hostGroupIds"`
	// A host of the PostgreSQL cluster.
	Hosts []GetMdbPostgresqlClusterHost `pulumi:"hosts"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// Maintenance policy of the PostgreSQL cluster.
	MaintenanceWindows []GetMdbPostgresqlClusterMaintenanceWindow `pulumi:"maintenanceWindows"`
	// The name of the PostgreSQL cluster.
	Name string `pulumi:"name"`
	// The `VPC Network ID` of subnets which resource attached to.
	NetworkId string `pulumi:"networkId"`
	// The list of security groups applied to resource or their components.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// Status of the cluster.
	Status string `pulumi:"status"`
	// > Deprecated! To manage users, please switch to using a separate resource type `MdbPostgresqlUser`.
	Users []GetMdbPostgresqlClusterUser `pulumi:"users"`
}

func LookupMdbPostgresqlClusterOutput(ctx *pulumi.Context, args LookupMdbPostgresqlClusterOutputArgs, opts ...pulumi.InvokeOption) LookupMdbPostgresqlClusterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMdbPostgresqlClusterResultOutput, error) {
			args := v.(LookupMdbPostgresqlClusterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getMdbPostgresqlCluster:getMdbPostgresqlCluster", args, LookupMdbPostgresqlClusterResultOutput{}, options).(LookupMdbPostgresqlClusterResultOutput), nil
		}).(LookupMdbPostgresqlClusterResultOutput)
}

// A collection of arguments for invoking getMdbPostgresqlCluster.
type LookupMdbPostgresqlClusterOutputArgs struct {
	// The ID of the PostgreSQL cluster.
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection pulumi.BoolPtrInput `pulumi:"deletionProtection"`
	// The resource description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// ID of the KMS key for cluster disk encryption.
	DiskEncryptionKeyId pulumi.StringPtrInput `pulumi:"diskEncryptionKeyId"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput `pulumi:"folderId"`
	// The name of the PostgreSQL cluster.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupMdbPostgresqlClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMdbPostgresqlClusterArgs)(nil)).Elem()
}

// A collection of values returned by getMdbPostgresqlCluster.
type LookupMdbPostgresqlClusterResultOutput struct{ *pulumi.OutputState }

func (LookupMdbPostgresqlClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMdbPostgresqlClusterResult)(nil)).Elem()
}

func (o LookupMdbPostgresqlClusterResultOutput) ToLookupMdbPostgresqlClusterResultOutput() LookupMdbPostgresqlClusterResultOutput {
	return o
}

func (o LookupMdbPostgresqlClusterResultOutput) ToLookupMdbPostgresqlClusterResultOutputWithContext(ctx context.Context) LookupMdbPostgresqlClusterResultOutput {
	return o
}

// The ID of the PostgreSQL cluster.
func (o LookupMdbPostgresqlClusterResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlClusterResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Configuration of the PostgreSQL cluster.
func (o LookupMdbPostgresqlClusterResultOutput) Configs() GetMdbPostgresqlClusterConfigArrayOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlClusterResult) []GetMdbPostgresqlClusterConfig { return v.Configs }).(GetMdbPostgresqlClusterConfigArrayOutput)
}

// The creation timestamp of the resource.
func (o LookupMdbPostgresqlClusterResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlClusterResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// > Deprecated! To manage databases, please switch to using a separate resource type `MdbPostgresqlDatabase`.
func (o LookupMdbPostgresqlClusterResultOutput) Databases() GetMdbPostgresqlClusterDatabaseArrayOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlClusterResult) []GetMdbPostgresqlClusterDatabase { return v.Databases }).(GetMdbPostgresqlClusterDatabaseArrayOutput)
}

// The `true` value means that resource is protected from accidental deletion.
func (o LookupMdbPostgresqlClusterResultOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlClusterResult) bool { return v.DeletionProtection }).(pulumi.BoolOutput)
}

// The resource description.
func (o LookupMdbPostgresqlClusterResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlClusterResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// ID of the KMS key for cluster disk encryption.
func (o LookupMdbPostgresqlClusterResultOutput) DiskEncryptionKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlClusterResult) string { return v.DiskEncryptionKeyId }).(pulumi.StringOutput)
}

// Deployment environment of the PostgreSQL cluster.
func (o LookupMdbPostgresqlClusterResultOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlClusterResult) string { return v.Environment }).(pulumi.StringOutput)
}

// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
func (o LookupMdbPostgresqlClusterResultOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlClusterResult) string { return v.FolderId }).(pulumi.StringOutput)
}

// Aggregated health of the cluster.
func (o LookupMdbPostgresqlClusterResultOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlClusterResult) string { return v.Health }).(pulumi.StringOutput)
}

// Host Group IDs.
func (o LookupMdbPostgresqlClusterResultOutput) HostGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlClusterResult) []string { return v.HostGroupIds }).(pulumi.StringArrayOutput)
}

// A host of the PostgreSQL cluster.
func (o LookupMdbPostgresqlClusterResultOutput) Hosts() GetMdbPostgresqlClusterHostArrayOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlClusterResult) []GetMdbPostgresqlClusterHost { return v.Hosts }).(GetMdbPostgresqlClusterHostArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMdbPostgresqlClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

// A set of key/value label pairs which assigned to resource.
func (o LookupMdbPostgresqlClusterResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlClusterResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Maintenance policy of the PostgreSQL cluster.
func (o LookupMdbPostgresqlClusterResultOutput) MaintenanceWindows() GetMdbPostgresqlClusterMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlClusterResult) []GetMdbPostgresqlClusterMaintenanceWindow {
		return v.MaintenanceWindows
	}).(GetMdbPostgresqlClusterMaintenanceWindowArrayOutput)
}

// The name of the PostgreSQL cluster.
func (o LookupMdbPostgresqlClusterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlClusterResult) string { return v.Name }).(pulumi.StringOutput)
}

// The `VPC Network ID` of subnets which resource attached to.
func (o LookupMdbPostgresqlClusterResultOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlClusterResult) string { return v.NetworkId }).(pulumi.StringOutput)
}

// The list of security groups applied to resource or their components.
func (o LookupMdbPostgresqlClusterResultOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlClusterResult) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// Status of the cluster.
func (o LookupMdbPostgresqlClusterResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlClusterResult) string { return v.Status }).(pulumi.StringOutput)
}

// > Deprecated! To manage users, please switch to using a separate resource type `MdbPostgresqlUser`.
func (o LookupMdbPostgresqlClusterResultOutput) Users() GetMdbPostgresqlClusterUserArrayOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlClusterResult) []GetMdbPostgresqlClusterUser { return v.Users }).(GetMdbPostgresqlClusterUserArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMdbPostgresqlClusterResultOutput{})
}
