// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex Managed PostgreSQL database. For more information, see [the official documentation](https://yandex.cloud/docs/managed-postgresql/).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			foo, err := yandex.LookupMdbPostgresqlDatabase(ctx, &yandex.LookupMdbPostgresqlDatabaseArgs{
//				ClusterId: "some_cluster_id",
//				Name:      "test",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("owner", foo.Owner)
//			return nil
//		})
//	}
//
// ```
func LookupMdbPostgresqlDatabase(ctx *pulumi.Context, args *LookupMdbPostgresqlDatabaseArgs, opts ...pulumi.InvokeOption) (*LookupMdbPostgresqlDatabaseResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMdbPostgresqlDatabaseResult
	err := ctx.Invoke("yandex:index/getMdbPostgresqlDatabase:getMdbPostgresqlDatabase", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMdbPostgresqlDatabase.
type LookupMdbPostgresqlDatabaseArgs struct {
	// The ID of the PostgreSQL cluster.
	ClusterId string `pulumi:"clusterId"`
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection *string `pulumi:"deletionProtection"`
	// Set of database extensions.
	Extensions []GetMdbPostgresqlDatabaseExtension `pulumi:"extensions"`
	// POSIX locale for string sorting order. Forbidden to change in an existing database.
	LcCollate *string `pulumi:"lcCollate"`
	// POSIX locale for character classification. Forbidden to change in an existing database.
	LcType *string `pulumi:"lcType"`
	// The resource name.
	Name string `pulumi:"name"`
	// Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
	Owner *string `pulumi:"owner"`
	// Name of the template database.
	TemplateDb *string `pulumi:"templateDb"`
}

// A collection of values returned by getMdbPostgresqlDatabase.
type LookupMdbPostgresqlDatabaseResult struct {
	// The ID of the PostgreSQL cluster.
	ClusterId string `pulumi:"clusterId"`
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection *string `pulumi:"deletionProtection"`
	// Set of database extensions.
	Extensions []GetMdbPostgresqlDatabaseExtension `pulumi:"extensions"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// POSIX locale for string sorting order. Forbidden to change in an existing database.
	LcCollate string `pulumi:"lcCollate"`
	// POSIX locale for character classification. Forbidden to change in an existing database.
	LcType string `pulumi:"lcType"`
	// The resource name.
	Name string `pulumi:"name"`
	// Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
	Owner string `pulumi:"owner"`
	// Name of the template database.
	TemplateDb string `pulumi:"templateDb"`
}

func LookupMdbPostgresqlDatabaseOutput(ctx *pulumi.Context, args LookupMdbPostgresqlDatabaseOutputArgs, opts ...pulumi.InvokeOption) LookupMdbPostgresqlDatabaseResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMdbPostgresqlDatabaseResultOutput, error) {
			args := v.(LookupMdbPostgresqlDatabaseArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getMdbPostgresqlDatabase:getMdbPostgresqlDatabase", args, LookupMdbPostgresqlDatabaseResultOutput{}, options).(LookupMdbPostgresqlDatabaseResultOutput), nil
		}).(LookupMdbPostgresqlDatabaseResultOutput)
}

// A collection of arguments for invoking getMdbPostgresqlDatabase.
type LookupMdbPostgresqlDatabaseOutputArgs struct {
	// The ID of the PostgreSQL cluster.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection pulumi.StringPtrInput `pulumi:"deletionProtection"`
	// Set of database extensions.
	Extensions GetMdbPostgresqlDatabaseExtensionArrayInput `pulumi:"extensions"`
	// POSIX locale for string sorting order. Forbidden to change in an existing database.
	LcCollate pulumi.StringPtrInput `pulumi:"lcCollate"`
	// POSIX locale for character classification. Forbidden to change in an existing database.
	LcType pulumi.StringPtrInput `pulumi:"lcType"`
	// The resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
	Owner pulumi.StringPtrInput `pulumi:"owner"`
	// Name of the template database.
	TemplateDb pulumi.StringPtrInput `pulumi:"templateDb"`
}

func (LookupMdbPostgresqlDatabaseOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMdbPostgresqlDatabaseArgs)(nil)).Elem()
}

// A collection of values returned by getMdbPostgresqlDatabase.
type LookupMdbPostgresqlDatabaseResultOutput struct{ *pulumi.OutputState }

func (LookupMdbPostgresqlDatabaseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMdbPostgresqlDatabaseResult)(nil)).Elem()
}

func (o LookupMdbPostgresqlDatabaseResultOutput) ToLookupMdbPostgresqlDatabaseResultOutput() LookupMdbPostgresqlDatabaseResultOutput {
	return o
}

func (o LookupMdbPostgresqlDatabaseResultOutput) ToLookupMdbPostgresqlDatabaseResultOutputWithContext(ctx context.Context) LookupMdbPostgresqlDatabaseResultOutput {
	return o
}

// The ID of the PostgreSQL cluster.
func (o LookupMdbPostgresqlDatabaseResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlDatabaseResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The `true` value means that resource is protected from accidental deletion.
func (o LookupMdbPostgresqlDatabaseResultOutput) DeletionProtection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlDatabaseResult) *string { return v.DeletionProtection }).(pulumi.StringPtrOutput)
}

// Set of database extensions.
func (o LookupMdbPostgresqlDatabaseResultOutput) Extensions() GetMdbPostgresqlDatabaseExtensionArrayOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlDatabaseResult) []GetMdbPostgresqlDatabaseExtension { return v.Extensions }).(GetMdbPostgresqlDatabaseExtensionArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMdbPostgresqlDatabaseResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlDatabaseResult) string { return v.Id }).(pulumi.StringOutput)
}

// POSIX locale for string sorting order. Forbidden to change in an existing database.
func (o LookupMdbPostgresqlDatabaseResultOutput) LcCollate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlDatabaseResult) string { return v.LcCollate }).(pulumi.StringOutput)
}

// POSIX locale for character classification. Forbidden to change in an existing database.
func (o LookupMdbPostgresqlDatabaseResultOutput) LcType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlDatabaseResult) string { return v.LcType }).(pulumi.StringOutput)
}

// The resource name.
func (o LookupMdbPostgresqlDatabaseResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlDatabaseResult) string { return v.Name }).(pulumi.StringOutput)
}

// Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
func (o LookupMdbPostgresqlDatabaseResultOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlDatabaseResult) string { return v.Owner }).(pulumi.StringOutput)
}

// Name of the template database.
func (o LookupMdbPostgresqlDatabaseResultOutput) TemplateDb() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbPostgresqlDatabaseResult) string { return v.TemplateDb }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMdbPostgresqlDatabaseResultOutput{})
}
