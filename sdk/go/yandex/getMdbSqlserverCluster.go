// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex Managed SQLServer cluster. For more information, see [the official documentation](https://yandex.cloud/docs/managed-sqlserver/).
//
// > Either `clusterId` or `name` should be specified.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			foo, err := yandex.GetMdbSqlserverCluster(ctx, &yandex.GetMdbSqlserverClusterArgs{
//				Name: pulumi.StringRef("test"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("networkId", foo.NetworkId)
//			return nil
//		})
//	}
//
// ```
func GetMdbSqlserverCluster(ctx *pulumi.Context, args *GetMdbSqlserverClusterArgs, opts ...pulumi.InvokeOption) (*GetMdbSqlserverClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMdbSqlserverClusterResult
	err := ctx.Invoke("yandex:index/getMdbSqlserverCluster:getMdbSqlserverCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMdbSqlserverCluster.
type GetMdbSqlserverClusterArgs struct {
	// The ID of the SQLServer cluster.
	ClusterId *string `pulumi:"clusterId"`
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// The name of the SQLServer cluster.
	Name *string `pulumi:"name"`
	// SQL Collation cluster will be created with. This attribute cannot be changed when cluster is created!
	Sqlcollation *string `pulumi:"sqlcollation"`
	// SQLServer cluster config. Detail info in `SQLServer config` section.
	SqlserverConfig map[string]string `pulumi:"sqlserverConfig"`
}

// A collection of values returned by getMdbSqlserverCluster.
type GetMdbSqlserverClusterResult struct {
	BackupWindowStarts []GetMdbSqlserverClusterBackupWindowStart `pulumi:"backupWindowStarts"`
	// The ID of the SQLServer cluster.
	ClusterId string `pulumi:"clusterId"`
	// The creation timestamp of the resource.
	CreatedAt string                           `pulumi:"createdAt"`
	Databases []GetMdbSqlserverClusterDatabase `pulumi:"databases"`
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection bool `pulumi:"deletionProtection"`
	// The resource description.
	Description string `pulumi:"description"`
	// Deployment environment of the SQLServer cluster. (PRODUCTION, PRESTABLE).
	Environment string `pulumi:"environment"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId string `pulumi:"folderId"`
	// Aggregated health of the cluster.
	Health string `pulumi:"health"`
	// A list of IDs of the host groups hosting VMs of the cluster.
	HostGroupIds []string                     `pulumi:"hostGroupIds"`
	Hosts        []GetMdbSqlserverClusterHost `pulumi:"hosts"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// The name of the SQLServer cluster.
	Name string `pulumi:"name"`
	// The `VPC Network ID` of subnets which resource attached to.
	NetworkId string                           `pulumi:"networkId"`
	Resources []GetMdbSqlserverClusterResource `pulumi:"resources"`
	// The list of security groups applied to resource or their components.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// SQL Collation cluster will be created with. This attribute cannot be changed when cluster is created!
	Sqlcollation string `pulumi:"sqlcollation"`
	// SQLServer cluster config. Detail info in `SQLServer config` section.
	SqlserverConfig map[string]string `pulumi:"sqlserverConfig"`
	// Status of the cluster.
	Status  string                       `pulumi:"status"`
	Users   []GetMdbSqlserverClusterUser `pulumi:"users"`
	Version string                       `pulumi:"version"`
}

func GetMdbSqlserverClusterOutput(ctx *pulumi.Context, args GetMdbSqlserverClusterOutputArgs, opts ...pulumi.InvokeOption) GetMdbSqlserverClusterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetMdbSqlserverClusterResultOutput, error) {
			args := v.(GetMdbSqlserverClusterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getMdbSqlserverCluster:getMdbSqlserverCluster", args, GetMdbSqlserverClusterResultOutput{}, options).(GetMdbSqlserverClusterResultOutput), nil
		}).(GetMdbSqlserverClusterResultOutput)
}

// A collection of arguments for invoking getMdbSqlserverCluster.
type GetMdbSqlserverClusterOutputArgs struct {
	// The ID of the SQLServer cluster.
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection pulumi.BoolPtrInput `pulumi:"deletionProtection"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput `pulumi:"folderId"`
	// The name of the SQLServer cluster.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// SQL Collation cluster will be created with. This attribute cannot be changed when cluster is created!
	Sqlcollation pulumi.StringPtrInput `pulumi:"sqlcollation"`
	// SQLServer cluster config. Detail info in `SQLServer config` section.
	SqlserverConfig pulumi.StringMapInput `pulumi:"sqlserverConfig"`
}

func (GetMdbSqlserverClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbSqlserverClusterArgs)(nil)).Elem()
}

// A collection of values returned by getMdbSqlserverCluster.
type GetMdbSqlserverClusterResultOutput struct{ *pulumi.OutputState }

func (GetMdbSqlserverClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbSqlserverClusterResult)(nil)).Elem()
}

func (o GetMdbSqlserverClusterResultOutput) ToGetMdbSqlserverClusterResultOutput() GetMdbSqlserverClusterResultOutput {
	return o
}

func (o GetMdbSqlserverClusterResultOutput) ToGetMdbSqlserverClusterResultOutputWithContext(ctx context.Context) GetMdbSqlserverClusterResultOutput {
	return o
}

func (o GetMdbSqlserverClusterResultOutput) BackupWindowStarts() GetMdbSqlserverClusterBackupWindowStartArrayOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterResult) []GetMdbSqlserverClusterBackupWindowStart {
		return v.BackupWindowStarts
	}).(GetMdbSqlserverClusterBackupWindowStartArrayOutput)
}

// The ID of the SQLServer cluster.
func (o GetMdbSqlserverClusterResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The creation timestamp of the resource.
func (o GetMdbSqlserverClusterResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetMdbSqlserverClusterResultOutput) Databases() GetMdbSqlserverClusterDatabaseArrayOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterResult) []GetMdbSqlserverClusterDatabase { return v.Databases }).(GetMdbSqlserverClusterDatabaseArrayOutput)
}

// The `true` value means that resource is protected from accidental deletion.
func (o GetMdbSqlserverClusterResultOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterResult) bool { return v.DeletionProtection }).(pulumi.BoolOutput)
}

// The resource description.
func (o GetMdbSqlserverClusterResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterResult) string { return v.Description }).(pulumi.StringOutput)
}

// Deployment environment of the SQLServer cluster. (PRODUCTION, PRESTABLE).
func (o GetMdbSqlserverClusterResultOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterResult) string { return v.Environment }).(pulumi.StringOutput)
}

// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
func (o GetMdbSqlserverClusterResultOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterResult) string { return v.FolderId }).(pulumi.StringOutput)
}

// Aggregated health of the cluster.
func (o GetMdbSqlserverClusterResultOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterResult) string { return v.Health }).(pulumi.StringOutput)
}

// A list of IDs of the host groups hosting VMs of the cluster.
func (o GetMdbSqlserverClusterResultOutput) HostGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterResult) []string { return v.HostGroupIds }).(pulumi.StringArrayOutput)
}

func (o GetMdbSqlserverClusterResultOutput) Hosts() GetMdbSqlserverClusterHostArrayOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterResult) []GetMdbSqlserverClusterHost { return v.Hosts }).(GetMdbSqlserverClusterHostArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMdbSqlserverClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

// A set of key/value label pairs which assigned to resource.
func (o GetMdbSqlserverClusterResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The name of the SQLServer cluster.
func (o GetMdbSqlserverClusterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterResult) string { return v.Name }).(pulumi.StringOutput)
}

// The `VPC Network ID` of subnets which resource attached to.
func (o GetMdbSqlserverClusterResultOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterResult) string { return v.NetworkId }).(pulumi.StringOutput)
}

func (o GetMdbSqlserverClusterResultOutput) Resources() GetMdbSqlserverClusterResourceArrayOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterResult) []GetMdbSqlserverClusterResource { return v.Resources }).(GetMdbSqlserverClusterResourceArrayOutput)
}

// The list of security groups applied to resource or their components.
func (o GetMdbSqlserverClusterResultOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterResult) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// SQL Collation cluster will be created with. This attribute cannot be changed when cluster is created!
func (o GetMdbSqlserverClusterResultOutput) Sqlcollation() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterResult) string { return v.Sqlcollation }).(pulumi.StringOutput)
}

// SQLServer cluster config. Detail info in `SQLServer config` section.
func (o GetMdbSqlserverClusterResultOutput) SqlserverConfig() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterResult) map[string]string { return v.SqlserverConfig }).(pulumi.StringMapOutput)
}

// Status of the cluster.
func (o GetMdbSqlserverClusterResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetMdbSqlserverClusterResultOutput) Users() GetMdbSqlserverClusterUserArrayOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterResult) []GetMdbSqlserverClusterUser { return v.Users }).(GetMdbSqlserverClusterUserArrayOutput)
}

func (o GetMdbSqlserverClusterResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMdbSqlserverClusterResultOutput{})
}
