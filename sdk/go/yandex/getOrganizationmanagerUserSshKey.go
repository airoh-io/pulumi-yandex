// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex Cloud User SSH Key.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := yandex.LookupOrganizationmanagerUserSshKey(ctx, &yandex.LookupOrganizationmanagerUserSshKeyArgs{
//				UserSshKeyId: "some_user_ssh_key_id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("myUserSshKeyName", pulumi.String("data.yandex_organizationmanager_user_ssh_key.my_user_ssh_key.name"))
//			return nil
//		})
//	}
//
// ```
func LookupOrganizationmanagerUserSshKey(ctx *pulumi.Context, args *LookupOrganizationmanagerUserSshKeyArgs, opts ...pulumi.InvokeOption) (*LookupOrganizationmanagerUserSshKeyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupOrganizationmanagerUserSshKeyResult
	err := ctx.Invoke("yandex:index/getOrganizationmanagerUserSshKey:getOrganizationmanagerUserSshKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrganizationmanagerUserSshKey.
type LookupOrganizationmanagerUserSshKeyArgs struct {
	// Data of the user ssh key.
	Data *string `pulumi:"data"`
	// User ssh key will be no longer valid after expiration timestamp.
	ExpiresAt *string `pulumi:"expiresAt"`
	// The resource name.
	Name *string `pulumi:"name"`
	// Organization that the user ssh key belongs to.
	OrganizationId *string `pulumi:"organizationId"`
	// Subject that the user ssh key belongs to.
	SubjectId *string `pulumi:"subjectId"`
	// ID of the user ssh key.
	UserSshKeyId string `pulumi:"userSshKeyId"`
}

// A collection of values returned by getOrganizationmanagerUserSshKey.
type LookupOrganizationmanagerUserSshKeyResult struct {
	// The creation timestamp of the resource.
	CreatedAt string `pulumi:"createdAt"`
	// Data of the user ssh key.
	Data *string `pulumi:"data"`
	// User ssh key will be no longer valid after expiration timestamp.
	ExpiresAt *string `pulumi:"expiresAt"`
	// SSH Key Fingerprint.
	Fingerprint string `pulumi:"fingerprint"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The resource name.
	Name *string `pulumi:"name"`
	// Organization that the user ssh key belongs to.
	OrganizationId *string `pulumi:"organizationId"`
	// Subject that the user ssh key belongs to.
	SubjectId *string `pulumi:"subjectId"`
	// ID of the user ssh key.
	UserSshKeyId string `pulumi:"userSshKeyId"`
}

func LookupOrganizationmanagerUserSshKeyOutput(ctx *pulumi.Context, args LookupOrganizationmanagerUserSshKeyOutputArgs, opts ...pulumi.InvokeOption) LookupOrganizationmanagerUserSshKeyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupOrganizationmanagerUserSshKeyResultOutput, error) {
			args := v.(LookupOrganizationmanagerUserSshKeyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getOrganizationmanagerUserSshKey:getOrganizationmanagerUserSshKey", args, LookupOrganizationmanagerUserSshKeyResultOutput{}, options).(LookupOrganizationmanagerUserSshKeyResultOutput), nil
		}).(LookupOrganizationmanagerUserSshKeyResultOutput)
}

// A collection of arguments for invoking getOrganizationmanagerUserSshKey.
type LookupOrganizationmanagerUserSshKeyOutputArgs struct {
	// Data of the user ssh key.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// User ssh key will be no longer valid after expiration timestamp.
	ExpiresAt pulumi.StringPtrInput `pulumi:"expiresAt"`
	// The resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Organization that the user ssh key belongs to.
	OrganizationId pulumi.StringPtrInput `pulumi:"organizationId"`
	// Subject that the user ssh key belongs to.
	SubjectId pulumi.StringPtrInput `pulumi:"subjectId"`
	// ID of the user ssh key.
	UserSshKeyId pulumi.StringInput `pulumi:"userSshKeyId"`
}

func (LookupOrganizationmanagerUserSshKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrganizationmanagerUserSshKeyArgs)(nil)).Elem()
}

// A collection of values returned by getOrganizationmanagerUserSshKey.
type LookupOrganizationmanagerUserSshKeyResultOutput struct{ *pulumi.OutputState }

func (LookupOrganizationmanagerUserSshKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrganizationmanagerUserSshKeyResult)(nil)).Elem()
}

func (o LookupOrganizationmanagerUserSshKeyResultOutput) ToLookupOrganizationmanagerUserSshKeyResultOutput() LookupOrganizationmanagerUserSshKeyResultOutput {
	return o
}

func (o LookupOrganizationmanagerUserSshKeyResultOutput) ToLookupOrganizationmanagerUserSshKeyResultOutputWithContext(ctx context.Context) LookupOrganizationmanagerUserSshKeyResultOutput {
	return o
}

// The creation timestamp of the resource.
func (o LookupOrganizationmanagerUserSshKeyResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationmanagerUserSshKeyResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Data of the user ssh key.
func (o LookupOrganizationmanagerUserSshKeyResultOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOrganizationmanagerUserSshKeyResult) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// User ssh key will be no longer valid after expiration timestamp.
func (o LookupOrganizationmanagerUserSshKeyResultOutput) ExpiresAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOrganizationmanagerUserSshKeyResult) *string { return v.ExpiresAt }).(pulumi.StringPtrOutput)
}

// SSH Key Fingerprint.
func (o LookupOrganizationmanagerUserSshKeyResultOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationmanagerUserSshKeyResult) string { return v.Fingerprint }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupOrganizationmanagerUserSshKeyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationmanagerUserSshKeyResult) string { return v.Id }).(pulumi.StringOutput)
}

// The resource name.
func (o LookupOrganizationmanagerUserSshKeyResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOrganizationmanagerUserSshKeyResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Organization that the user ssh key belongs to.
func (o LookupOrganizationmanagerUserSshKeyResultOutput) OrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOrganizationmanagerUserSshKeyResult) *string { return v.OrganizationId }).(pulumi.StringPtrOutput)
}

// Subject that the user ssh key belongs to.
func (o LookupOrganizationmanagerUserSshKeyResultOutput) SubjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOrganizationmanagerUserSshKeyResult) *string { return v.SubjectId }).(pulumi.StringPtrOutput)
}

// ID of the user ssh key.
func (o LookupOrganizationmanagerUserSshKeyResultOutput) UserSshKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationmanagerUserSshKeyResult) string { return v.UserSshKeyId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOrganizationmanagerUserSshKeyResultOutput{})
}
