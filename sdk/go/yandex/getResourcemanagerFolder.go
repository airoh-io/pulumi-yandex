// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information about a Yandex Resource Manager Folder. For more information, see [the official documentation](https://yandex.cloud/docs/resource-manager/concepts/resources-hierarchy#folder).
//
// > Either `folderId` or `name` must be specified.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myFolder1, err := yandex.GetResourcemanagerFolder(ctx, &yandex.GetResourcemanagerFolderArgs{
//				FolderId: pulumi.StringRef("folder_id_number_1"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			myFolder2, err := yandex.GetResourcemanagerFolder(ctx, &yandex.GetResourcemanagerFolderArgs{
//				Name:    pulumi.StringRef("folder_name"),
//				CloudId: pulumi.StringRef("some_cloud_id"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("myFolder1Name", myFolder1.Name)
//			ctx.Export("myFolder2CloudId", myFolder2.CloudId)
//			return nil
//		})
//	}
//
// ```
func GetResourcemanagerFolder(ctx *pulumi.Context, args *GetResourcemanagerFolderArgs, opts ...pulumi.InvokeOption) (*GetResourcemanagerFolderResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetResourcemanagerFolderResult
	err := ctx.Invoke("yandex:index/getResourcemanagerFolder:getResourcemanagerFolder", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResourcemanagerFolder.
type GetResourcemanagerFolderArgs struct {
	// Cloud that the resource belongs to. If value is omitted, the default provider cloud is used.
	CloudId *string `pulumi:"cloudId"`
	// ID of the folder.
	FolderId *string `pulumi:"folderId"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// The resource name.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getResourcemanagerFolder.
type GetResourcemanagerFolderResult struct {
	// Cloud that the resource belongs to. If value is omitted, the default provider cloud is used.
	CloudId string `pulumi:"cloudId"`
	// The creation timestamp of the resource.
	CreatedAt string `pulumi:"createdAt"`
	// The resource description.
	Description string `pulumi:"description"`
	// ID of the folder.
	FolderId string `pulumi:"folderId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// The resource name.
	Name string `pulumi:"name"`
	// Current status of the folder.
	Status string `pulumi:"status"`
}

func GetResourcemanagerFolderOutput(ctx *pulumi.Context, args GetResourcemanagerFolderOutputArgs, opts ...pulumi.InvokeOption) GetResourcemanagerFolderResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetResourcemanagerFolderResultOutput, error) {
			args := v.(GetResourcemanagerFolderArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getResourcemanagerFolder:getResourcemanagerFolder", args, GetResourcemanagerFolderResultOutput{}, options).(GetResourcemanagerFolderResultOutput), nil
		}).(GetResourcemanagerFolderResultOutput)
}

// A collection of arguments for invoking getResourcemanagerFolder.
type GetResourcemanagerFolderOutputArgs struct {
	// Cloud that the resource belongs to. If value is omitted, the default provider cloud is used.
	CloudId pulumi.StringPtrInput `pulumi:"cloudId"`
	// ID of the folder.
	FolderId pulumi.StringPtrInput `pulumi:"folderId"`
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GetResourcemanagerFolderOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourcemanagerFolderArgs)(nil)).Elem()
}

// A collection of values returned by getResourcemanagerFolder.
type GetResourcemanagerFolderResultOutput struct{ *pulumi.OutputState }

func (GetResourcemanagerFolderResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourcemanagerFolderResult)(nil)).Elem()
}

func (o GetResourcemanagerFolderResultOutput) ToGetResourcemanagerFolderResultOutput() GetResourcemanagerFolderResultOutput {
	return o
}

func (o GetResourcemanagerFolderResultOutput) ToGetResourcemanagerFolderResultOutputWithContext(ctx context.Context) GetResourcemanagerFolderResultOutput {
	return o
}

// Cloud that the resource belongs to. If value is omitted, the default provider cloud is used.
func (o GetResourcemanagerFolderResultOutput) CloudId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourcemanagerFolderResult) string { return v.CloudId }).(pulumi.StringOutput)
}

// The creation timestamp of the resource.
func (o GetResourcemanagerFolderResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourcemanagerFolderResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The resource description.
func (o GetResourcemanagerFolderResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourcemanagerFolderResult) string { return v.Description }).(pulumi.StringOutput)
}

// ID of the folder.
func (o GetResourcemanagerFolderResultOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourcemanagerFolderResult) string { return v.FolderId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetResourcemanagerFolderResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourcemanagerFolderResult) string { return v.Id }).(pulumi.StringOutput)
}

// A set of key/value label pairs which assigned to resource.
func (o GetResourcemanagerFolderResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetResourcemanagerFolderResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The resource name.
func (o GetResourcemanagerFolderResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourcemanagerFolderResult) string { return v.Name }).(pulumi.StringOutput)
}

// Current status of the folder.
func (o GetResourcemanagerFolderResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourcemanagerFolderResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetResourcemanagerFolderResultOutput{})
}
