// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about Serverless Event Router Bus.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			return nil
//		})
//	}
//
// ```
func LookupServerlessEventrouterBus(ctx *pulumi.Context, args *LookupServerlessEventrouterBusArgs, opts ...pulumi.InvokeOption) (*LookupServerlessEventrouterBusResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServerlessEventrouterBusResult
	err := ctx.Invoke("yandex:index/getServerlessEventrouterBus:getServerlessEventrouterBus", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServerlessEventrouterBus.
type LookupServerlessEventrouterBusArgs struct {
	// ID of the bus
	BusId *string `pulumi:"busId"`
	// Name of the bus
	Name *string `pulumi:"name"`
}

// A collection of values returned by getServerlessEventrouterBus.
type LookupServerlessEventrouterBusResult struct {
	// ID of the bus
	BusId *string `pulumi:"busId"`
	// ID of the cloud that the bus resides in
	CloudId string `pulumi:"cloudId"`
	// Creation timestamp
	CreatedAt string `pulumi:"createdAt"`
	// Deletion protection
	DeletionProtection bool `pulumi:"deletionProtection"`
	// Description of the bus
	Description string `pulumi:"description"`
	// ID of the folder that the bus belongs to
	FolderId string `pulumi:"folderId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Bus labels
	Labels map[string]string `pulumi:"labels"`
	// Name of the bus
	Name *string `pulumi:"name"`
}

func LookupServerlessEventrouterBusOutput(ctx *pulumi.Context, args LookupServerlessEventrouterBusOutputArgs, opts ...pulumi.InvokeOption) LookupServerlessEventrouterBusResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupServerlessEventrouterBusResultOutput, error) {
			args := v.(LookupServerlessEventrouterBusArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getServerlessEventrouterBus:getServerlessEventrouterBus", args, LookupServerlessEventrouterBusResultOutput{}, options).(LookupServerlessEventrouterBusResultOutput), nil
		}).(LookupServerlessEventrouterBusResultOutput)
}

// A collection of arguments for invoking getServerlessEventrouterBus.
type LookupServerlessEventrouterBusOutputArgs struct {
	// ID of the bus
	BusId pulumi.StringPtrInput `pulumi:"busId"`
	// Name of the bus
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupServerlessEventrouterBusOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerlessEventrouterBusArgs)(nil)).Elem()
}

// A collection of values returned by getServerlessEventrouterBus.
type LookupServerlessEventrouterBusResultOutput struct{ *pulumi.OutputState }

func (LookupServerlessEventrouterBusResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerlessEventrouterBusResult)(nil)).Elem()
}

func (o LookupServerlessEventrouterBusResultOutput) ToLookupServerlessEventrouterBusResultOutput() LookupServerlessEventrouterBusResultOutput {
	return o
}

func (o LookupServerlessEventrouterBusResultOutput) ToLookupServerlessEventrouterBusResultOutputWithContext(ctx context.Context) LookupServerlessEventrouterBusResultOutput {
	return o
}

// ID of the bus
func (o LookupServerlessEventrouterBusResultOutput) BusId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterBusResult) *string { return v.BusId }).(pulumi.StringPtrOutput)
}

// ID of the cloud that the bus resides in
func (o LookupServerlessEventrouterBusResultOutput) CloudId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterBusResult) string { return v.CloudId }).(pulumi.StringOutput)
}

// Creation timestamp
func (o LookupServerlessEventrouterBusResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterBusResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Deletion protection
func (o LookupServerlessEventrouterBusResultOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterBusResult) bool { return v.DeletionProtection }).(pulumi.BoolOutput)
}

// Description of the bus
func (o LookupServerlessEventrouterBusResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterBusResult) string { return v.Description }).(pulumi.StringOutput)
}

// ID of the folder that the bus belongs to
func (o LookupServerlessEventrouterBusResultOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterBusResult) string { return v.FolderId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupServerlessEventrouterBusResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterBusResult) string { return v.Id }).(pulumi.StringOutput)
}

// Bus labels
func (o LookupServerlessEventrouterBusResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterBusResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the bus
func (o LookupServerlessEventrouterBusResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterBusResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServerlessEventrouterBusResultOutput{})
}
