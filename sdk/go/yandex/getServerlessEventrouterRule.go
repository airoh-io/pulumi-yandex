// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about Serverless Event Router Rule.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			return nil
//		})
//	}
//
// ```
func LookupServerlessEventrouterRule(ctx *pulumi.Context, args *LookupServerlessEventrouterRuleArgs, opts ...pulumi.InvokeOption) (*LookupServerlessEventrouterRuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServerlessEventrouterRuleResult
	err := ctx.Invoke("yandex:index/getServerlessEventrouterRule:getServerlessEventrouterRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServerlessEventrouterRule.
type LookupServerlessEventrouterRuleArgs struct {
	// Name of the rule
	Name *string `pulumi:"name"`
	// ID of the bus that the rule belongs to
	RuleId *string `pulumi:"ruleId"`
}

// A collection of values returned by getServerlessEventrouterRule.
type LookupServerlessEventrouterRuleResult struct {
	// ID of the bus that the rule belongs to
	BusId string `pulumi:"busId"`
	// ID of the cloud that the rule resides in
	CloudId string `pulumi:"cloudId"`
	// ContainerTarget
	Containers []GetServerlessEventrouterRuleContainer `pulumi:"containers"`
	// Creation timestamp
	CreatedAt string `pulumi:"createdAt"`
	// Deletion protection
	DeletionProtection bool `pulumi:"deletionProtection"`
	// Description of the rule
	Description string `pulumi:"description"`
	// ID of the folder that the rule resides in
	FolderId string `pulumi:"folderId"`
	// FunctionTarget
	Functions []GetServerlessEventrouterRuleFunction `pulumi:"functions"`
	// GatewayWebsocketBroadcastTarget
	GatewayWebsocketBroadcasts []GetServerlessEventrouterRuleGatewayWebsocketBroadcast `pulumi:"gatewayWebsocketBroadcasts"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// JQ filter for matching events
	JqFilter string `pulumi:"jqFilter"`
	// Rule labels
	Labels map[string]string `pulumi:"labels"`
	// LoggingTarget. Includes either log*group*id or folder_id
	Loggings []GetServerlessEventrouterRuleLogging `pulumi:"loggings"`
	// Name of the rule
	Name *string `pulumi:"name"`
	// ID of the bus that the rule belongs to
	RuleId *string `pulumi:"ruleId"`
	// WorkflowTarget
	Workflows []GetServerlessEventrouterRuleWorkflow `pulumi:"workflows"`
	// YdsTarget
	Yds []GetServerlessEventrouterRuleYd `pulumi:"yds"`
	// YmqTarget
	Ymqs []GetServerlessEventrouterRuleYmq `pulumi:"ymqs"`
}

func LookupServerlessEventrouterRuleOutput(ctx *pulumi.Context, args LookupServerlessEventrouterRuleOutputArgs, opts ...pulumi.InvokeOption) LookupServerlessEventrouterRuleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupServerlessEventrouterRuleResultOutput, error) {
			args := v.(LookupServerlessEventrouterRuleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getServerlessEventrouterRule:getServerlessEventrouterRule", args, LookupServerlessEventrouterRuleResultOutput{}, options).(LookupServerlessEventrouterRuleResultOutput), nil
		}).(LookupServerlessEventrouterRuleResultOutput)
}

// A collection of arguments for invoking getServerlessEventrouterRule.
type LookupServerlessEventrouterRuleOutputArgs struct {
	// Name of the rule
	Name pulumi.StringPtrInput `pulumi:"name"`
	// ID of the bus that the rule belongs to
	RuleId pulumi.StringPtrInput `pulumi:"ruleId"`
}

func (LookupServerlessEventrouterRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerlessEventrouterRuleArgs)(nil)).Elem()
}

// A collection of values returned by getServerlessEventrouterRule.
type LookupServerlessEventrouterRuleResultOutput struct{ *pulumi.OutputState }

func (LookupServerlessEventrouterRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerlessEventrouterRuleResult)(nil)).Elem()
}

func (o LookupServerlessEventrouterRuleResultOutput) ToLookupServerlessEventrouterRuleResultOutput() LookupServerlessEventrouterRuleResultOutput {
	return o
}

func (o LookupServerlessEventrouterRuleResultOutput) ToLookupServerlessEventrouterRuleResultOutputWithContext(ctx context.Context) LookupServerlessEventrouterRuleResultOutput {
	return o
}

// ID of the bus that the rule belongs to
func (o LookupServerlessEventrouterRuleResultOutput) BusId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterRuleResult) string { return v.BusId }).(pulumi.StringOutput)
}

// ID of the cloud that the rule resides in
func (o LookupServerlessEventrouterRuleResultOutput) CloudId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterRuleResult) string { return v.CloudId }).(pulumi.StringOutput)
}

// ContainerTarget
func (o LookupServerlessEventrouterRuleResultOutput) Containers() GetServerlessEventrouterRuleContainerArrayOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterRuleResult) []GetServerlessEventrouterRuleContainer {
		return v.Containers
	}).(GetServerlessEventrouterRuleContainerArrayOutput)
}

// Creation timestamp
func (o LookupServerlessEventrouterRuleResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterRuleResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Deletion protection
func (o LookupServerlessEventrouterRuleResultOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterRuleResult) bool { return v.DeletionProtection }).(pulumi.BoolOutput)
}

// Description of the rule
func (o LookupServerlessEventrouterRuleResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterRuleResult) string { return v.Description }).(pulumi.StringOutput)
}

// ID of the folder that the rule resides in
func (o LookupServerlessEventrouterRuleResultOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterRuleResult) string { return v.FolderId }).(pulumi.StringOutput)
}

// FunctionTarget
func (o LookupServerlessEventrouterRuleResultOutput) Functions() GetServerlessEventrouterRuleFunctionArrayOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterRuleResult) []GetServerlessEventrouterRuleFunction {
		return v.Functions
	}).(GetServerlessEventrouterRuleFunctionArrayOutput)
}

// GatewayWebsocketBroadcastTarget
func (o LookupServerlessEventrouterRuleResultOutput) GatewayWebsocketBroadcasts() GetServerlessEventrouterRuleGatewayWebsocketBroadcastArrayOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterRuleResult) []GetServerlessEventrouterRuleGatewayWebsocketBroadcast {
		return v.GatewayWebsocketBroadcasts
	}).(GetServerlessEventrouterRuleGatewayWebsocketBroadcastArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupServerlessEventrouterRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

// JQ filter for matching events
func (o LookupServerlessEventrouterRuleResultOutput) JqFilter() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterRuleResult) string { return v.JqFilter }).(pulumi.StringOutput)
}

// Rule labels
func (o LookupServerlessEventrouterRuleResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterRuleResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// LoggingTarget. Includes either log*group*id or folder_id
func (o LookupServerlessEventrouterRuleResultOutput) Loggings() GetServerlessEventrouterRuleLoggingArrayOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterRuleResult) []GetServerlessEventrouterRuleLogging { return v.Loggings }).(GetServerlessEventrouterRuleLoggingArrayOutput)
}

// Name of the rule
func (o LookupServerlessEventrouterRuleResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterRuleResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// ID of the bus that the rule belongs to
func (o LookupServerlessEventrouterRuleResultOutput) RuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterRuleResult) *string { return v.RuleId }).(pulumi.StringPtrOutput)
}

// WorkflowTarget
func (o LookupServerlessEventrouterRuleResultOutput) Workflows() GetServerlessEventrouterRuleWorkflowArrayOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterRuleResult) []GetServerlessEventrouterRuleWorkflow {
		return v.Workflows
	}).(GetServerlessEventrouterRuleWorkflowArrayOutput)
}

// YdsTarget
func (o LookupServerlessEventrouterRuleResultOutput) Yds() GetServerlessEventrouterRuleYdArrayOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterRuleResult) []GetServerlessEventrouterRuleYd { return v.Yds }).(GetServerlessEventrouterRuleYdArrayOutput)
}

// YmqTarget
func (o LookupServerlessEventrouterRuleResultOutput) Ymqs() GetServerlessEventrouterRuleYmqArrayOutput {
	return o.ApplyT(func(v LookupServerlessEventrouterRuleResult) []GetServerlessEventrouterRuleYmq { return v.Ymqs }).(GetServerlessEventrouterRuleYmqArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServerlessEventrouterRuleResultOutput{})
}
