// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about Yandex SmartCaptcha. For more information, see [the official documentation](https://yandex.cloud/docs/smartcaptcha/).This data source is used to define Captcha that can be used by other resources.
//
// > One of `captchaId` or `name` should be specified.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := yandex.LookupSmartcaptchaCaptcha(ctx, &yandex.LookupSmartcaptchaCaptchaArgs{
//				CaptchaId: pulumi.StringRef(yandex_smartcaptcha_captcha.MyCaptcha.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ```go
// package main
//
// import (
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := yandex.LookupSmartcaptchaCaptcha(ctx, &yandex.LookupSmartcaptchaCaptchaArgs{
//				Name: pulumi.StringRef(yandex_smartcaptcha_captcha.MyCaptcha.Name),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSmartcaptchaCaptcha(ctx *pulumi.Context, args *LookupSmartcaptchaCaptchaArgs, opts ...pulumi.InvokeOption) (*LookupSmartcaptchaCaptchaResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSmartcaptchaCaptchaResult
	err := ctx.Invoke("yandex:index/getSmartcaptchaCaptcha:getSmartcaptchaCaptcha", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSmartcaptchaCaptcha.
type LookupSmartcaptchaCaptchaArgs struct {
	// ID of the Captcha.
	CaptchaId *string `pulumi:"captchaId"`
	// The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
	CloudId *string `pulumi:"cloudId"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// The resource name.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getSmartcaptchaCaptcha.
type LookupSmartcaptchaCaptchaResult struct {
	// List of allowed host names, see [Domain validation](https://yandex.cloud/docs/smartcaptcha/concepts/domain-validation).
	AllowedSites []string `pulumi:"allowedSites"`
	// ID of the Captcha.
	CaptchaId *string `pulumi:"captchaId"`
	// Additional task type of the captcha. Possible values:
	ChallengeType string `pulumi:"challengeType"`
	// Client key of the captcha, see [CAPTCHA keys](https://yandex.cloud/docs/smartcaptcha/concepts/keys).
	ClientKey string `pulumi:"clientKey"`
	// The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
	CloudId string `pulumi:"cloudId"`
	// Complexity of the captcha. Possible values:
	Complexity string `pulumi:"complexity"`
	// The creation timestamp of the resource.
	CreatedAt string `pulumi:"createdAt"`
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection bool `pulumi:"deletionProtection"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId string `pulumi:"folderId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The resource name.
	Name             string                                  `pulumi:"name"`
	OverrideVariants []GetSmartcaptchaCaptchaOverrideVariant `pulumi:"overrideVariants"`
	// Basic check type of the captcha.Possible values:
	PreCheckType  string                               `pulumi:"preCheckType"`
	SecurityRules []GetSmartcaptchaCaptchaSecurityRule `pulumi:"securityRules"`
	// JSON with variables to define the captcha appearance. For more details see generated JSON in cloud console.
	StyleJson string `pulumi:"styleJson"`
	Suspend   bool   `pulumi:"suspend"`
	// Turn off host name check, see [Domain validation](https://yandex.cloud/docs/smartcaptcha/concepts/domain-validation).
	TurnOffHostnameCheck bool `pulumi:"turnOffHostnameCheck"`
}

func LookupSmartcaptchaCaptchaOutput(ctx *pulumi.Context, args LookupSmartcaptchaCaptchaOutputArgs, opts ...pulumi.InvokeOption) LookupSmartcaptchaCaptchaResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSmartcaptchaCaptchaResultOutput, error) {
			args := v.(LookupSmartcaptchaCaptchaArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getSmartcaptchaCaptcha:getSmartcaptchaCaptcha", args, LookupSmartcaptchaCaptchaResultOutput{}, options).(LookupSmartcaptchaCaptchaResultOutput), nil
		}).(LookupSmartcaptchaCaptchaResultOutput)
}

// A collection of arguments for invoking getSmartcaptchaCaptcha.
type LookupSmartcaptchaCaptchaOutputArgs struct {
	// ID of the Captcha.
	CaptchaId pulumi.StringPtrInput `pulumi:"captchaId"`
	// The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
	CloudId pulumi.StringPtrInput `pulumi:"cloudId"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput `pulumi:"folderId"`
	// The resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupSmartcaptchaCaptchaOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSmartcaptchaCaptchaArgs)(nil)).Elem()
}

// A collection of values returned by getSmartcaptchaCaptcha.
type LookupSmartcaptchaCaptchaResultOutput struct{ *pulumi.OutputState }

func (LookupSmartcaptchaCaptchaResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSmartcaptchaCaptchaResult)(nil)).Elem()
}

func (o LookupSmartcaptchaCaptchaResultOutput) ToLookupSmartcaptchaCaptchaResultOutput() LookupSmartcaptchaCaptchaResultOutput {
	return o
}

func (o LookupSmartcaptchaCaptchaResultOutput) ToLookupSmartcaptchaCaptchaResultOutputWithContext(ctx context.Context) LookupSmartcaptchaCaptchaResultOutput {
	return o
}

// List of allowed host names, see [Domain validation](https://yandex.cloud/docs/smartcaptcha/concepts/domain-validation).
func (o LookupSmartcaptchaCaptchaResultOutput) AllowedSites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSmartcaptchaCaptchaResult) []string { return v.AllowedSites }).(pulumi.StringArrayOutput)
}

// ID of the Captcha.
func (o LookupSmartcaptchaCaptchaResultOutput) CaptchaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSmartcaptchaCaptchaResult) *string { return v.CaptchaId }).(pulumi.StringPtrOutput)
}

// Additional task type of the captcha. Possible values:
func (o LookupSmartcaptchaCaptchaResultOutput) ChallengeType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSmartcaptchaCaptchaResult) string { return v.ChallengeType }).(pulumi.StringOutput)
}

// Client key of the captcha, see [CAPTCHA keys](https://yandex.cloud/docs/smartcaptcha/concepts/keys).
func (o LookupSmartcaptchaCaptchaResultOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSmartcaptchaCaptchaResult) string { return v.ClientKey }).(pulumi.StringOutput)
}

// The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
func (o LookupSmartcaptchaCaptchaResultOutput) CloudId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSmartcaptchaCaptchaResult) string { return v.CloudId }).(pulumi.StringOutput)
}

// Complexity of the captcha. Possible values:
func (o LookupSmartcaptchaCaptchaResultOutput) Complexity() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSmartcaptchaCaptchaResult) string { return v.Complexity }).(pulumi.StringOutput)
}

// The creation timestamp of the resource.
func (o LookupSmartcaptchaCaptchaResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSmartcaptchaCaptchaResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The `true` value means that resource is protected from accidental deletion.
func (o LookupSmartcaptchaCaptchaResultOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSmartcaptchaCaptchaResult) bool { return v.DeletionProtection }).(pulumi.BoolOutput)
}

// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
func (o LookupSmartcaptchaCaptchaResultOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSmartcaptchaCaptchaResult) string { return v.FolderId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSmartcaptchaCaptchaResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSmartcaptchaCaptchaResult) string { return v.Id }).(pulumi.StringOutput)
}

// The resource name.
func (o LookupSmartcaptchaCaptchaResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSmartcaptchaCaptchaResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupSmartcaptchaCaptchaResultOutput) OverrideVariants() GetSmartcaptchaCaptchaOverrideVariantArrayOutput {
	return o.ApplyT(func(v LookupSmartcaptchaCaptchaResult) []GetSmartcaptchaCaptchaOverrideVariant {
		return v.OverrideVariants
	}).(GetSmartcaptchaCaptchaOverrideVariantArrayOutput)
}

// Basic check type of the captcha.Possible values:
func (o LookupSmartcaptchaCaptchaResultOutput) PreCheckType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSmartcaptchaCaptchaResult) string { return v.PreCheckType }).(pulumi.StringOutput)
}

func (o LookupSmartcaptchaCaptchaResultOutput) SecurityRules() GetSmartcaptchaCaptchaSecurityRuleArrayOutput {
	return o.ApplyT(func(v LookupSmartcaptchaCaptchaResult) []GetSmartcaptchaCaptchaSecurityRule { return v.SecurityRules }).(GetSmartcaptchaCaptchaSecurityRuleArrayOutput)
}

// JSON with variables to define the captcha appearance. For more details see generated JSON in cloud console.
func (o LookupSmartcaptchaCaptchaResultOutput) StyleJson() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSmartcaptchaCaptchaResult) string { return v.StyleJson }).(pulumi.StringOutput)
}

func (o LookupSmartcaptchaCaptchaResultOutput) Suspend() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSmartcaptchaCaptchaResult) bool { return v.Suspend }).(pulumi.BoolOutput)
}

// Turn off host name check, see [Domain validation](https://yandex.cloud/docs/smartcaptcha/concepts/domain-validation).
func (o LookupSmartcaptchaCaptchaResultOutput) TurnOffHostnameCheck() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSmartcaptchaCaptchaResult) bool { return v.TurnOffHostnameCheck }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSmartcaptchaCaptchaResultOutput{})
}
