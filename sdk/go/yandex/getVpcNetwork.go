// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex VPC network. For more information, see [Yandex Cloud VPC](https://yandex.cloud/docs/vpc/concepts/index).
//
// This data source is used to define [VPC Networks](https://yandex.cloud/docs/vpc/concepts/network) that can be used by other resources.
//
// > One of `networkId` or `name` should be specified.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := yandex.LookupVpcNetwork(ctx, &yandex.LookupVpcNetworkArgs{
//				NetworkId: pulumi.StringRef("my-network-id"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupVpcNetwork(ctx *pulumi.Context, args *LookupVpcNetworkArgs, opts ...pulumi.InvokeOption) (*LookupVpcNetworkResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVpcNetworkResult
	err := ctx.Invoke("yandex:index/getVpcNetwork:getVpcNetwork", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpcNetwork.
type LookupVpcNetworkArgs struct {
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// The resource name.
	Name *string `pulumi:"name"`
	// ID of the network.
	NetworkId *string `pulumi:"networkId"`
}

// A collection of values returned by getVpcNetwork.
type LookupVpcNetworkResult struct {
	// The creation timestamp of the resource.
	CreatedAt string `pulumi:"createdAt"`
	// ID of default Security Group of this network.
	DefaultSecurityGroupId string `pulumi:"defaultSecurityGroupId"`
	// The resource description.
	Description string `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId string `pulumi:"folderId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// The resource name.
	Name string `pulumi:"name"`
	// ID of the network.
	NetworkId string `pulumi:"networkId"`
	// The list of VPC subnets identifiers which resource is attached.
	SubnetIds []string `pulumi:"subnetIds"`
}

func LookupVpcNetworkOutput(ctx *pulumi.Context, args LookupVpcNetworkOutputArgs, opts ...pulumi.InvokeOption) LookupVpcNetworkResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVpcNetworkResultOutput, error) {
			args := v.(LookupVpcNetworkArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getVpcNetwork:getVpcNetwork", args, LookupVpcNetworkResultOutput{}, options).(LookupVpcNetworkResultOutput), nil
		}).(LookupVpcNetworkResultOutput)
}

// A collection of arguments for invoking getVpcNetwork.
type LookupVpcNetworkOutputArgs struct {
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput `pulumi:"folderId"`
	// The resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// ID of the network.
	NetworkId pulumi.StringPtrInput `pulumi:"networkId"`
}

func (LookupVpcNetworkOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcNetworkArgs)(nil)).Elem()
}

// A collection of values returned by getVpcNetwork.
type LookupVpcNetworkResultOutput struct{ *pulumi.OutputState }

func (LookupVpcNetworkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcNetworkResult)(nil)).Elem()
}

func (o LookupVpcNetworkResultOutput) ToLookupVpcNetworkResultOutput() LookupVpcNetworkResultOutput {
	return o
}

func (o LookupVpcNetworkResultOutput) ToLookupVpcNetworkResultOutputWithContext(ctx context.Context) LookupVpcNetworkResultOutput {
	return o
}

// The creation timestamp of the resource.
func (o LookupVpcNetworkResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcNetworkResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// ID of default Security Group of this network.
func (o LookupVpcNetworkResultOutput) DefaultSecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcNetworkResult) string { return v.DefaultSecurityGroupId }).(pulumi.StringOutput)
}

// The resource description.
func (o LookupVpcNetworkResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcNetworkResult) string { return v.Description }).(pulumi.StringOutput)
}

// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
func (o LookupVpcNetworkResultOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcNetworkResult) string { return v.FolderId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVpcNetworkResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcNetworkResult) string { return v.Id }).(pulumi.StringOutput)
}

// A set of key/value label pairs which assigned to resource.
func (o LookupVpcNetworkResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVpcNetworkResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The resource name.
func (o LookupVpcNetworkResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcNetworkResult) string { return v.Name }).(pulumi.StringOutput)
}

// ID of the network.
func (o LookupVpcNetworkResultOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcNetworkResult) string { return v.NetworkId }).(pulumi.StringOutput)
}

// The list of VPC subnets identifiers which resource is attached.
func (o LookupVpcNetworkResultOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpcNetworkResult) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpcNetworkResultOutput{})
}
