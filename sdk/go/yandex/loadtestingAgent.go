// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"errors"
	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Load Testing Agent resource. For more information, see [the official documentation](https://yandex.cloud/docs/load-testing/concepts/agent).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Create a new LoadTesting Agent.
//			_, err := yandex.NewLoadtestingAgent(ctx, "my-agent", &yandex.LoadtestingAgentArgs{
//				Description: pulumi.String("2 core 4 GB RAM agent"),
//				FolderId:    pulumi.Any(data.Yandex_resourcemanager_folder.Test_folder.Id),
//				Labels: pulumi.StringMap{
//					"jmeter": pulumi.String("5"),
//				},
//				ComputeInstance: &yandex.LoadtestingAgentComputeInstanceArgs{
//					ZoneId:           pulumi.String("ru-central1-b"),
//					ServiceAccountId: pulumi.Any(yandex_iam_service_account.Test_account.Id),
//					Resources: &yandex.LoadtestingAgentComputeInstanceResourcesArgs{
//						Memory: pulumi.Float64(4),
//						Cores:  pulumi.Int(2),
//					},
//					BootDisk: &yandex.LoadtestingAgentComputeInstanceBootDiskArgs{
//						InitializeParams: &yandex.LoadtestingAgentComputeInstanceBootDiskInitializeParamsArgs{
//							Size: pulumi.Int(15),
//						},
//						AutoDelete: pulumi.Bool(true),
//					},
//					NetworkInterfaces: yandex.LoadtestingAgentComputeInstanceNetworkInterfaceArray{
//						&yandex.LoadtestingAgentComputeInstanceNetworkInterfaceArgs{
//							SubnetId: pulumi.Any(yandex_vpc_subnet.MySubnetA.Id),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## ## Import
//
// The resource can be imported by using their `resource ID`. For getting the resource ID you can use Yandex Cloud [Web Console](https://console.yandex.cloud) or [YC CLI](https://yandex.cloud/docs/cli/quickstart).
type LoadtestingAgent struct {
	pulumi.CustomResourceState

	// The template for creating new compute instance running load testing agent.
	ComputeInstance LoadtestingAgentComputeInstanceOutput `pulumi:"computeInstance"`
	// Compute Instance ID.
	ComputeInstanceId pulumi.StringOutput `pulumi:"computeInstanceId"`
	// The resource description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringOutput `pulumi:"folderId"`
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The logging settings of the load testing agent.
	LogSettings LoadtestingAgentLogSettingsPtrOutput `pulumi:"logSettings"`
	// The resource name.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewLoadtestingAgent registers a new resource with the given unique name, arguments, and options.
func NewLoadtestingAgent(ctx *pulumi.Context,
	name string, args *LoadtestingAgentArgs, opts ...pulumi.ResourceOption) (*LoadtestingAgent, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ComputeInstance == nil {
		return nil, errors.New("invalid value for required argument 'ComputeInstance'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LoadtestingAgent
	err := ctx.RegisterResource("yandex:index/loadtestingAgent:LoadtestingAgent", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoadtestingAgent gets an existing LoadtestingAgent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoadtestingAgent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoadtestingAgentState, opts ...pulumi.ResourceOption) (*LoadtestingAgent, error) {
	var resource LoadtestingAgent
	err := ctx.ReadResource("yandex:index/loadtestingAgent:LoadtestingAgent", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoadtestingAgent resources.
type loadtestingAgentState struct {
	// The template for creating new compute instance running load testing agent.
	ComputeInstance *LoadtestingAgentComputeInstance `pulumi:"computeInstance"`
	// Compute Instance ID.
	ComputeInstanceId *string `pulumi:"computeInstanceId"`
	// The resource description.
	Description *string `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// The logging settings of the load testing agent.
	LogSettings *LoadtestingAgentLogSettings `pulumi:"logSettings"`
	// The resource name.
	Name *string `pulumi:"name"`
}

type LoadtestingAgentState struct {
	// The template for creating new compute instance running load testing agent.
	ComputeInstance LoadtestingAgentComputeInstancePtrInput
	// Compute Instance ID.
	ComputeInstanceId pulumi.StringPtrInput
	// The resource description.
	Description pulumi.StringPtrInput
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapInput
	// The logging settings of the load testing agent.
	LogSettings LoadtestingAgentLogSettingsPtrInput
	// The resource name.
	Name pulumi.StringPtrInput
}

func (LoadtestingAgentState) ElementType() reflect.Type {
	return reflect.TypeOf((*loadtestingAgentState)(nil)).Elem()
}

type loadtestingAgentArgs struct {
	// The template for creating new compute instance running load testing agent.
	ComputeInstance LoadtestingAgentComputeInstance `pulumi:"computeInstance"`
	// The resource description.
	Description *string `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// The logging settings of the load testing agent.
	LogSettings *LoadtestingAgentLogSettings `pulumi:"logSettings"`
	// The resource name.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a LoadtestingAgent resource.
type LoadtestingAgentArgs struct {
	// The template for creating new compute instance running load testing agent.
	ComputeInstance LoadtestingAgentComputeInstanceInput
	// The resource description.
	Description pulumi.StringPtrInput
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapInput
	// The logging settings of the load testing agent.
	LogSettings LoadtestingAgentLogSettingsPtrInput
	// The resource name.
	Name pulumi.StringPtrInput
}

func (LoadtestingAgentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loadtestingAgentArgs)(nil)).Elem()
}

type LoadtestingAgentInput interface {
	pulumi.Input

	ToLoadtestingAgentOutput() LoadtestingAgentOutput
	ToLoadtestingAgentOutputWithContext(ctx context.Context) LoadtestingAgentOutput
}

func (*LoadtestingAgent) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadtestingAgent)(nil)).Elem()
}

func (i *LoadtestingAgent) ToLoadtestingAgentOutput() LoadtestingAgentOutput {
	return i.ToLoadtestingAgentOutputWithContext(context.Background())
}

func (i *LoadtestingAgent) ToLoadtestingAgentOutputWithContext(ctx context.Context) LoadtestingAgentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadtestingAgentOutput)
}

// LoadtestingAgentArrayInput is an input type that accepts LoadtestingAgentArray and LoadtestingAgentArrayOutput values.
// You can construct a concrete instance of `LoadtestingAgentArrayInput` via:
//
//	LoadtestingAgentArray{ LoadtestingAgentArgs{...} }
type LoadtestingAgentArrayInput interface {
	pulumi.Input

	ToLoadtestingAgentArrayOutput() LoadtestingAgentArrayOutput
	ToLoadtestingAgentArrayOutputWithContext(context.Context) LoadtestingAgentArrayOutput
}

type LoadtestingAgentArray []LoadtestingAgentInput

func (LoadtestingAgentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoadtestingAgent)(nil)).Elem()
}

func (i LoadtestingAgentArray) ToLoadtestingAgentArrayOutput() LoadtestingAgentArrayOutput {
	return i.ToLoadtestingAgentArrayOutputWithContext(context.Background())
}

func (i LoadtestingAgentArray) ToLoadtestingAgentArrayOutputWithContext(ctx context.Context) LoadtestingAgentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadtestingAgentArrayOutput)
}

// LoadtestingAgentMapInput is an input type that accepts LoadtestingAgentMap and LoadtestingAgentMapOutput values.
// You can construct a concrete instance of `LoadtestingAgentMapInput` via:
//
//	LoadtestingAgentMap{ "key": LoadtestingAgentArgs{...} }
type LoadtestingAgentMapInput interface {
	pulumi.Input

	ToLoadtestingAgentMapOutput() LoadtestingAgentMapOutput
	ToLoadtestingAgentMapOutputWithContext(context.Context) LoadtestingAgentMapOutput
}

type LoadtestingAgentMap map[string]LoadtestingAgentInput

func (LoadtestingAgentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoadtestingAgent)(nil)).Elem()
}

func (i LoadtestingAgentMap) ToLoadtestingAgentMapOutput() LoadtestingAgentMapOutput {
	return i.ToLoadtestingAgentMapOutputWithContext(context.Background())
}

func (i LoadtestingAgentMap) ToLoadtestingAgentMapOutputWithContext(ctx context.Context) LoadtestingAgentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadtestingAgentMapOutput)
}

type LoadtestingAgentOutput struct{ *pulumi.OutputState }

func (LoadtestingAgentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadtestingAgent)(nil)).Elem()
}

func (o LoadtestingAgentOutput) ToLoadtestingAgentOutput() LoadtestingAgentOutput {
	return o
}

func (o LoadtestingAgentOutput) ToLoadtestingAgentOutputWithContext(ctx context.Context) LoadtestingAgentOutput {
	return o
}

// The template for creating new compute instance running load testing agent.
func (o LoadtestingAgentOutput) ComputeInstance() LoadtestingAgentComputeInstanceOutput {
	return o.ApplyT(func(v *LoadtestingAgent) LoadtestingAgentComputeInstanceOutput { return v.ComputeInstance }).(LoadtestingAgentComputeInstanceOutput)
}

// Compute Instance ID.
func (o LoadtestingAgentOutput) ComputeInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadtestingAgent) pulumi.StringOutput { return v.ComputeInstanceId }).(pulumi.StringOutput)
}

// The resource description.
func (o LoadtestingAgentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadtestingAgent) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
func (o LoadtestingAgentOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadtestingAgent) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

// A set of key/value label pairs which assigned to resource.
func (o LoadtestingAgentOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LoadtestingAgent) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The logging settings of the load testing agent.
func (o LoadtestingAgentOutput) LogSettings() LoadtestingAgentLogSettingsPtrOutput {
	return o.ApplyT(func(v *LoadtestingAgent) LoadtestingAgentLogSettingsPtrOutput { return v.LogSettings }).(LoadtestingAgentLogSettingsPtrOutput)
}

// The resource name.
func (o LoadtestingAgentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadtestingAgent) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type LoadtestingAgentArrayOutput struct{ *pulumi.OutputState }

func (LoadtestingAgentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoadtestingAgent)(nil)).Elem()
}

func (o LoadtestingAgentArrayOutput) ToLoadtestingAgentArrayOutput() LoadtestingAgentArrayOutput {
	return o
}

func (o LoadtestingAgentArrayOutput) ToLoadtestingAgentArrayOutputWithContext(ctx context.Context) LoadtestingAgentArrayOutput {
	return o
}

func (o LoadtestingAgentArrayOutput) Index(i pulumi.IntInput) LoadtestingAgentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LoadtestingAgent {
		return vs[0].([]*LoadtestingAgent)[vs[1].(int)]
	}).(LoadtestingAgentOutput)
}

type LoadtestingAgentMapOutput struct{ *pulumi.OutputState }

func (LoadtestingAgentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoadtestingAgent)(nil)).Elem()
}

func (o LoadtestingAgentMapOutput) ToLoadtestingAgentMapOutput() LoadtestingAgentMapOutput {
	return o
}

func (o LoadtestingAgentMapOutput) ToLoadtestingAgentMapOutputWithContext(ctx context.Context) LoadtestingAgentMapOutput {
	return o
}

func (o LoadtestingAgentMapOutput) MapIndex(k pulumi.StringInput) LoadtestingAgentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LoadtestingAgent {
		return vs[0].(map[string]*LoadtestingAgent)[vs[1].(string)]
	}).(LoadtestingAgentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LoadtestingAgentInput)(nil)).Elem(), &LoadtestingAgent{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadtestingAgentArrayInput)(nil)).Elem(), LoadtestingAgentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadtestingAgentMapInput)(nil)).Elem(), LoadtestingAgentMap{})
	pulumi.RegisterOutputType(LoadtestingAgentOutput{})
	pulumi.RegisterOutputType(LoadtestingAgentArrayOutput{})
	pulumi.RegisterOutputType(LoadtestingAgentMapOutput{})
}
