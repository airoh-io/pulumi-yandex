// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeDiskDiskPlacementPolicy struct {
	// Specifies Disk Placement Group id.
	DiskPlacementGroupId string `pulumi:"diskPlacementGroupId"`
}

// ComputeDiskDiskPlacementPolicyInput is an input type that accepts ComputeDiskDiskPlacementPolicyArgs and ComputeDiskDiskPlacementPolicyOutput values.
// You can construct a concrete instance of `ComputeDiskDiskPlacementPolicyInput` via:
//
//          ComputeDiskDiskPlacementPolicyArgs{...}
type ComputeDiskDiskPlacementPolicyInput interface {
	pulumi.Input

	ToComputeDiskDiskPlacementPolicyOutput() ComputeDiskDiskPlacementPolicyOutput
	ToComputeDiskDiskPlacementPolicyOutputWithContext(context.Context) ComputeDiskDiskPlacementPolicyOutput
}

type ComputeDiskDiskPlacementPolicyArgs struct {
	// Specifies Disk Placement Group id.
	DiskPlacementGroupId pulumi.StringInput `pulumi:"diskPlacementGroupId"`
}

func (ComputeDiskDiskPlacementPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeDiskDiskPlacementPolicy)(nil)).Elem()
}

func (i ComputeDiskDiskPlacementPolicyArgs) ToComputeDiskDiskPlacementPolicyOutput() ComputeDiskDiskPlacementPolicyOutput {
	return i.ToComputeDiskDiskPlacementPolicyOutputWithContext(context.Background())
}

func (i ComputeDiskDiskPlacementPolicyArgs) ToComputeDiskDiskPlacementPolicyOutputWithContext(ctx context.Context) ComputeDiskDiskPlacementPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeDiskDiskPlacementPolicyOutput)
}

func (i ComputeDiskDiskPlacementPolicyArgs) ToComputeDiskDiskPlacementPolicyPtrOutput() ComputeDiskDiskPlacementPolicyPtrOutput {
	return i.ToComputeDiskDiskPlacementPolicyPtrOutputWithContext(context.Background())
}

func (i ComputeDiskDiskPlacementPolicyArgs) ToComputeDiskDiskPlacementPolicyPtrOutputWithContext(ctx context.Context) ComputeDiskDiskPlacementPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeDiskDiskPlacementPolicyOutput).ToComputeDiskDiskPlacementPolicyPtrOutputWithContext(ctx)
}

// ComputeDiskDiskPlacementPolicyPtrInput is an input type that accepts ComputeDiskDiskPlacementPolicyArgs, ComputeDiskDiskPlacementPolicyPtr and ComputeDiskDiskPlacementPolicyPtrOutput values.
// You can construct a concrete instance of `ComputeDiskDiskPlacementPolicyPtrInput` via:
//
//          ComputeDiskDiskPlacementPolicyArgs{...}
//
//  or:
//
//          nil
type ComputeDiskDiskPlacementPolicyPtrInput interface {
	pulumi.Input

	ToComputeDiskDiskPlacementPolicyPtrOutput() ComputeDiskDiskPlacementPolicyPtrOutput
	ToComputeDiskDiskPlacementPolicyPtrOutputWithContext(context.Context) ComputeDiskDiskPlacementPolicyPtrOutput
}

type computeDiskDiskPlacementPolicyPtrType ComputeDiskDiskPlacementPolicyArgs

func ComputeDiskDiskPlacementPolicyPtr(v *ComputeDiskDiskPlacementPolicyArgs) ComputeDiskDiskPlacementPolicyPtrInput {
	return (*computeDiskDiskPlacementPolicyPtrType)(v)
}

func (*computeDiskDiskPlacementPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeDiskDiskPlacementPolicy)(nil)).Elem()
}

func (i *computeDiskDiskPlacementPolicyPtrType) ToComputeDiskDiskPlacementPolicyPtrOutput() ComputeDiskDiskPlacementPolicyPtrOutput {
	return i.ToComputeDiskDiskPlacementPolicyPtrOutputWithContext(context.Background())
}

func (i *computeDiskDiskPlacementPolicyPtrType) ToComputeDiskDiskPlacementPolicyPtrOutputWithContext(ctx context.Context) ComputeDiskDiskPlacementPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeDiskDiskPlacementPolicyPtrOutput)
}

type ComputeDiskDiskPlacementPolicyOutput struct{ *pulumi.OutputState }

func (ComputeDiskDiskPlacementPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeDiskDiskPlacementPolicy)(nil)).Elem()
}

func (o ComputeDiskDiskPlacementPolicyOutput) ToComputeDiskDiskPlacementPolicyOutput() ComputeDiskDiskPlacementPolicyOutput {
	return o
}

func (o ComputeDiskDiskPlacementPolicyOutput) ToComputeDiskDiskPlacementPolicyOutputWithContext(ctx context.Context) ComputeDiskDiskPlacementPolicyOutput {
	return o
}

func (o ComputeDiskDiskPlacementPolicyOutput) ToComputeDiskDiskPlacementPolicyPtrOutput() ComputeDiskDiskPlacementPolicyPtrOutput {
	return o.ToComputeDiskDiskPlacementPolicyPtrOutputWithContext(context.Background())
}

func (o ComputeDiskDiskPlacementPolicyOutput) ToComputeDiskDiskPlacementPolicyPtrOutputWithContext(ctx context.Context) ComputeDiskDiskPlacementPolicyPtrOutput {
	return o.ApplyT(func(v ComputeDiskDiskPlacementPolicy) *ComputeDiskDiskPlacementPolicy {
		return &v
	}).(ComputeDiskDiskPlacementPolicyPtrOutput)
}

// Specifies Disk Placement Group id.
func (o ComputeDiskDiskPlacementPolicyOutput) DiskPlacementGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeDiskDiskPlacementPolicy) string { return v.DiskPlacementGroupId }).(pulumi.StringOutput)
}

type ComputeDiskDiskPlacementPolicyPtrOutput struct{ *pulumi.OutputState }

func (ComputeDiskDiskPlacementPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeDiskDiskPlacementPolicy)(nil)).Elem()
}

func (o ComputeDiskDiskPlacementPolicyPtrOutput) ToComputeDiskDiskPlacementPolicyPtrOutput() ComputeDiskDiskPlacementPolicyPtrOutput {
	return o
}

func (o ComputeDiskDiskPlacementPolicyPtrOutput) ToComputeDiskDiskPlacementPolicyPtrOutputWithContext(ctx context.Context) ComputeDiskDiskPlacementPolicyPtrOutput {
	return o
}

func (o ComputeDiskDiskPlacementPolicyPtrOutput) Elem() ComputeDiskDiskPlacementPolicyOutput {
	return o.ApplyT(func(v *ComputeDiskDiskPlacementPolicy) ComputeDiskDiskPlacementPolicy { return *v }).(ComputeDiskDiskPlacementPolicyOutput)
}

// Specifies Disk Placement Group id.
func (o ComputeDiskDiskPlacementPolicyPtrOutput) DiskPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeDiskDiskPlacementPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.DiskPlacementGroupId
	}).(pulumi.StringPtrOutput)
}

type ComputeInstanceBootDisk struct {
	// Whether the disk is auto-deleted when the instance
	// is deleted. The default value is false.
	AutoDelete *bool `pulumi:"autoDelete"`
	// Name that can be used to access an attached disk
	// under `/dev/disk/by-id/`.
	DeviceName *string `pulumi:"deviceName"`
	// ID of the disk that is attached to the instance.
	DiskId *string `pulumi:"diskId"`
	// Parameters for a new disk that will be created
	// alongside the new instance. Either `initializeParams` or `diskId` must be set. The structure is documented below.
	InitializeParams *ComputeInstanceBootDiskInitializeParams `pulumi:"initializeParams"`
	// Type of access to the disk resource. By default, a disk is attached in `READ_WRITE` mode.
	Mode *string `pulumi:"mode"`
}

// ComputeInstanceBootDiskInput is an input type that accepts ComputeInstanceBootDiskArgs and ComputeInstanceBootDiskOutput values.
// You can construct a concrete instance of `ComputeInstanceBootDiskInput` via:
//
//          ComputeInstanceBootDiskArgs{...}
type ComputeInstanceBootDiskInput interface {
	pulumi.Input

	ToComputeInstanceBootDiskOutput() ComputeInstanceBootDiskOutput
	ToComputeInstanceBootDiskOutputWithContext(context.Context) ComputeInstanceBootDiskOutput
}

type ComputeInstanceBootDiskArgs struct {
	// Whether the disk is auto-deleted when the instance
	// is deleted. The default value is false.
	AutoDelete pulumi.BoolPtrInput `pulumi:"autoDelete"`
	// Name that can be used to access an attached disk
	// under `/dev/disk/by-id/`.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// ID of the disk that is attached to the instance.
	DiskId pulumi.StringPtrInput `pulumi:"diskId"`
	// Parameters for a new disk that will be created
	// alongside the new instance. Either `initializeParams` or `diskId` must be set. The structure is documented below.
	InitializeParams ComputeInstanceBootDiskInitializeParamsPtrInput `pulumi:"initializeParams"`
	// Type of access to the disk resource. By default, a disk is attached in `READ_WRITE` mode.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (ComputeInstanceBootDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceBootDisk)(nil)).Elem()
}

func (i ComputeInstanceBootDiskArgs) ToComputeInstanceBootDiskOutput() ComputeInstanceBootDiskOutput {
	return i.ToComputeInstanceBootDiskOutputWithContext(context.Background())
}

func (i ComputeInstanceBootDiskArgs) ToComputeInstanceBootDiskOutputWithContext(ctx context.Context) ComputeInstanceBootDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceBootDiskOutput)
}

func (i ComputeInstanceBootDiskArgs) ToComputeInstanceBootDiskPtrOutput() ComputeInstanceBootDiskPtrOutput {
	return i.ToComputeInstanceBootDiskPtrOutputWithContext(context.Background())
}

func (i ComputeInstanceBootDiskArgs) ToComputeInstanceBootDiskPtrOutputWithContext(ctx context.Context) ComputeInstanceBootDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceBootDiskOutput).ToComputeInstanceBootDiskPtrOutputWithContext(ctx)
}

// ComputeInstanceBootDiskPtrInput is an input type that accepts ComputeInstanceBootDiskArgs, ComputeInstanceBootDiskPtr and ComputeInstanceBootDiskPtrOutput values.
// You can construct a concrete instance of `ComputeInstanceBootDiskPtrInput` via:
//
//          ComputeInstanceBootDiskArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceBootDiskPtrInput interface {
	pulumi.Input

	ToComputeInstanceBootDiskPtrOutput() ComputeInstanceBootDiskPtrOutput
	ToComputeInstanceBootDiskPtrOutputWithContext(context.Context) ComputeInstanceBootDiskPtrOutput
}

type computeInstanceBootDiskPtrType ComputeInstanceBootDiskArgs

func ComputeInstanceBootDiskPtr(v *ComputeInstanceBootDiskArgs) ComputeInstanceBootDiskPtrInput {
	return (*computeInstanceBootDiskPtrType)(v)
}

func (*computeInstanceBootDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceBootDisk)(nil)).Elem()
}

func (i *computeInstanceBootDiskPtrType) ToComputeInstanceBootDiskPtrOutput() ComputeInstanceBootDiskPtrOutput {
	return i.ToComputeInstanceBootDiskPtrOutputWithContext(context.Background())
}

func (i *computeInstanceBootDiskPtrType) ToComputeInstanceBootDiskPtrOutputWithContext(ctx context.Context) ComputeInstanceBootDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceBootDiskPtrOutput)
}

type ComputeInstanceBootDiskOutput struct{ *pulumi.OutputState }

func (ComputeInstanceBootDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceBootDisk)(nil)).Elem()
}

func (o ComputeInstanceBootDiskOutput) ToComputeInstanceBootDiskOutput() ComputeInstanceBootDiskOutput {
	return o
}

func (o ComputeInstanceBootDiskOutput) ToComputeInstanceBootDiskOutputWithContext(ctx context.Context) ComputeInstanceBootDiskOutput {
	return o
}

func (o ComputeInstanceBootDiskOutput) ToComputeInstanceBootDiskPtrOutput() ComputeInstanceBootDiskPtrOutput {
	return o.ToComputeInstanceBootDiskPtrOutputWithContext(context.Background())
}

func (o ComputeInstanceBootDiskOutput) ToComputeInstanceBootDiskPtrOutputWithContext(ctx context.Context) ComputeInstanceBootDiskPtrOutput {
	return o.ApplyT(func(v ComputeInstanceBootDisk) *ComputeInstanceBootDisk {
		return &v
	}).(ComputeInstanceBootDiskPtrOutput)
}

// Whether the disk is auto-deleted when the instance
// is deleted. The default value is false.
func (o ComputeInstanceBootDiskOutput) AutoDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComputeInstanceBootDisk) *bool { return v.AutoDelete }).(pulumi.BoolPtrOutput)
}

// Name that can be used to access an attached disk
// under `/dev/disk/by-id/`.
func (o ComputeInstanceBootDiskOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceBootDisk) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// ID of the disk that is attached to the instance.
func (o ComputeInstanceBootDiskOutput) DiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceBootDisk) *string { return v.DiskId }).(pulumi.StringPtrOutput)
}

// Parameters for a new disk that will be created
// alongside the new instance. Either `initializeParams` or `diskId` must be set. The structure is documented below.
func (o ComputeInstanceBootDiskOutput) InitializeParams() ComputeInstanceBootDiskInitializeParamsPtrOutput {
	return o.ApplyT(func(v ComputeInstanceBootDisk) *ComputeInstanceBootDiskInitializeParams { return v.InitializeParams }).(ComputeInstanceBootDiskInitializeParamsPtrOutput)
}

// Type of access to the disk resource. By default, a disk is attached in `READ_WRITE` mode.
func (o ComputeInstanceBootDiskOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceBootDisk) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type ComputeInstanceBootDiskPtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceBootDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceBootDisk)(nil)).Elem()
}

func (o ComputeInstanceBootDiskPtrOutput) ToComputeInstanceBootDiskPtrOutput() ComputeInstanceBootDiskPtrOutput {
	return o
}

func (o ComputeInstanceBootDiskPtrOutput) ToComputeInstanceBootDiskPtrOutputWithContext(ctx context.Context) ComputeInstanceBootDiskPtrOutput {
	return o
}

func (o ComputeInstanceBootDiskPtrOutput) Elem() ComputeInstanceBootDiskOutput {
	return o.ApplyT(func(v *ComputeInstanceBootDisk) ComputeInstanceBootDisk { return *v }).(ComputeInstanceBootDiskOutput)
}

// Whether the disk is auto-deleted when the instance
// is deleted. The default value is false.
func (o ComputeInstanceBootDiskPtrOutput) AutoDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceBootDisk) *bool {
		if v == nil {
			return nil
		}
		return v.AutoDelete
	}).(pulumi.BoolPtrOutput)
}

// Name that can be used to access an attached disk
// under `/dev/disk/by-id/`.
func (o ComputeInstanceBootDiskPtrOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceBootDisk) *string {
		if v == nil {
			return nil
		}
		return v.DeviceName
	}).(pulumi.StringPtrOutput)
}

// ID of the disk that is attached to the instance.
func (o ComputeInstanceBootDiskPtrOutput) DiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceBootDisk) *string {
		if v == nil {
			return nil
		}
		return v.DiskId
	}).(pulumi.StringPtrOutput)
}

// Parameters for a new disk that will be created
// alongside the new instance. Either `initializeParams` or `diskId` must be set. The structure is documented below.
func (o ComputeInstanceBootDiskPtrOutput) InitializeParams() ComputeInstanceBootDiskInitializeParamsPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceBootDisk) *ComputeInstanceBootDiskInitializeParams {
		if v == nil {
			return nil
		}
		return v.InitializeParams
	}).(ComputeInstanceBootDiskInitializeParamsPtrOutput)
}

// Type of access to the disk resource. By default, a disk is attached in `READ_WRITE` mode.
func (o ComputeInstanceBootDiskPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceBootDisk) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type ComputeInstanceBootDiskInitializeParams struct {
	// Description of the boot disk.
	Description *string `pulumi:"description"`
	// A disk image to initialize this disk from.
	ImageId *string `pulumi:"imageId"`
	// Name of the boot disk.
	Name *string `pulumi:"name"`
	// Size of the disk in GB.
	Size *int `pulumi:"size"`
	// A snapshot to initialize this disk from.
	SnapshotId *string `pulumi:"snapshotId"`
	// Disk type.
	Type *string `pulumi:"type"`
}

// ComputeInstanceBootDiskInitializeParamsInput is an input type that accepts ComputeInstanceBootDiskInitializeParamsArgs and ComputeInstanceBootDiskInitializeParamsOutput values.
// You can construct a concrete instance of `ComputeInstanceBootDiskInitializeParamsInput` via:
//
//          ComputeInstanceBootDiskInitializeParamsArgs{...}
type ComputeInstanceBootDiskInitializeParamsInput interface {
	pulumi.Input

	ToComputeInstanceBootDiskInitializeParamsOutput() ComputeInstanceBootDiskInitializeParamsOutput
	ToComputeInstanceBootDiskInitializeParamsOutputWithContext(context.Context) ComputeInstanceBootDiskInitializeParamsOutput
}

type ComputeInstanceBootDiskInitializeParamsArgs struct {
	// Description of the boot disk.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A disk image to initialize this disk from.
	ImageId pulumi.StringPtrInput `pulumi:"imageId"`
	// Name of the boot disk.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Size of the disk in GB.
	Size pulumi.IntPtrInput `pulumi:"size"`
	// A snapshot to initialize this disk from.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// Disk type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ComputeInstanceBootDiskInitializeParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceBootDiskInitializeParams)(nil)).Elem()
}

func (i ComputeInstanceBootDiskInitializeParamsArgs) ToComputeInstanceBootDiskInitializeParamsOutput() ComputeInstanceBootDiskInitializeParamsOutput {
	return i.ToComputeInstanceBootDiskInitializeParamsOutputWithContext(context.Background())
}

func (i ComputeInstanceBootDiskInitializeParamsArgs) ToComputeInstanceBootDiskInitializeParamsOutputWithContext(ctx context.Context) ComputeInstanceBootDiskInitializeParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceBootDiskInitializeParamsOutput)
}

func (i ComputeInstanceBootDiskInitializeParamsArgs) ToComputeInstanceBootDiskInitializeParamsPtrOutput() ComputeInstanceBootDiskInitializeParamsPtrOutput {
	return i.ToComputeInstanceBootDiskInitializeParamsPtrOutputWithContext(context.Background())
}

func (i ComputeInstanceBootDiskInitializeParamsArgs) ToComputeInstanceBootDiskInitializeParamsPtrOutputWithContext(ctx context.Context) ComputeInstanceBootDiskInitializeParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceBootDiskInitializeParamsOutput).ToComputeInstanceBootDiskInitializeParamsPtrOutputWithContext(ctx)
}

// ComputeInstanceBootDiskInitializeParamsPtrInput is an input type that accepts ComputeInstanceBootDiskInitializeParamsArgs, ComputeInstanceBootDiskInitializeParamsPtr and ComputeInstanceBootDiskInitializeParamsPtrOutput values.
// You can construct a concrete instance of `ComputeInstanceBootDiskInitializeParamsPtrInput` via:
//
//          ComputeInstanceBootDiskInitializeParamsArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceBootDiskInitializeParamsPtrInput interface {
	pulumi.Input

	ToComputeInstanceBootDiskInitializeParamsPtrOutput() ComputeInstanceBootDiskInitializeParamsPtrOutput
	ToComputeInstanceBootDiskInitializeParamsPtrOutputWithContext(context.Context) ComputeInstanceBootDiskInitializeParamsPtrOutput
}

type computeInstanceBootDiskInitializeParamsPtrType ComputeInstanceBootDiskInitializeParamsArgs

func ComputeInstanceBootDiskInitializeParamsPtr(v *ComputeInstanceBootDiskInitializeParamsArgs) ComputeInstanceBootDiskInitializeParamsPtrInput {
	return (*computeInstanceBootDiskInitializeParamsPtrType)(v)
}

func (*computeInstanceBootDiskInitializeParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceBootDiskInitializeParams)(nil)).Elem()
}

func (i *computeInstanceBootDiskInitializeParamsPtrType) ToComputeInstanceBootDiskInitializeParamsPtrOutput() ComputeInstanceBootDiskInitializeParamsPtrOutput {
	return i.ToComputeInstanceBootDiskInitializeParamsPtrOutputWithContext(context.Background())
}

func (i *computeInstanceBootDiskInitializeParamsPtrType) ToComputeInstanceBootDiskInitializeParamsPtrOutputWithContext(ctx context.Context) ComputeInstanceBootDiskInitializeParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceBootDiskInitializeParamsPtrOutput)
}

type ComputeInstanceBootDiskInitializeParamsOutput struct{ *pulumi.OutputState }

func (ComputeInstanceBootDiskInitializeParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceBootDiskInitializeParams)(nil)).Elem()
}

func (o ComputeInstanceBootDiskInitializeParamsOutput) ToComputeInstanceBootDiskInitializeParamsOutput() ComputeInstanceBootDiskInitializeParamsOutput {
	return o
}

func (o ComputeInstanceBootDiskInitializeParamsOutput) ToComputeInstanceBootDiskInitializeParamsOutputWithContext(ctx context.Context) ComputeInstanceBootDiskInitializeParamsOutput {
	return o
}

func (o ComputeInstanceBootDiskInitializeParamsOutput) ToComputeInstanceBootDiskInitializeParamsPtrOutput() ComputeInstanceBootDiskInitializeParamsPtrOutput {
	return o.ToComputeInstanceBootDiskInitializeParamsPtrOutputWithContext(context.Background())
}

func (o ComputeInstanceBootDiskInitializeParamsOutput) ToComputeInstanceBootDiskInitializeParamsPtrOutputWithContext(ctx context.Context) ComputeInstanceBootDiskInitializeParamsPtrOutput {
	return o.ApplyT(func(v ComputeInstanceBootDiskInitializeParams) *ComputeInstanceBootDiskInitializeParams {
		return &v
	}).(ComputeInstanceBootDiskInitializeParamsPtrOutput)
}

// Description of the boot disk.
func (o ComputeInstanceBootDiskInitializeParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceBootDiskInitializeParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A disk image to initialize this disk from.
func (o ComputeInstanceBootDiskInitializeParamsOutput) ImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceBootDiskInitializeParams) *string { return v.ImageId }).(pulumi.StringPtrOutput)
}

// Name of the boot disk.
func (o ComputeInstanceBootDiskInitializeParamsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceBootDiskInitializeParams) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Size of the disk in GB.
func (o ComputeInstanceBootDiskInitializeParamsOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceBootDiskInitializeParams) *int { return v.Size }).(pulumi.IntPtrOutput)
}

// A snapshot to initialize this disk from.
func (o ComputeInstanceBootDiskInitializeParamsOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceBootDiskInitializeParams) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// Disk type.
func (o ComputeInstanceBootDiskInitializeParamsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceBootDiskInitializeParams) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ComputeInstanceBootDiskInitializeParamsPtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceBootDiskInitializeParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceBootDiskInitializeParams)(nil)).Elem()
}

func (o ComputeInstanceBootDiskInitializeParamsPtrOutput) ToComputeInstanceBootDiskInitializeParamsPtrOutput() ComputeInstanceBootDiskInitializeParamsPtrOutput {
	return o
}

func (o ComputeInstanceBootDiskInitializeParamsPtrOutput) ToComputeInstanceBootDiskInitializeParamsPtrOutputWithContext(ctx context.Context) ComputeInstanceBootDiskInitializeParamsPtrOutput {
	return o
}

func (o ComputeInstanceBootDiskInitializeParamsPtrOutput) Elem() ComputeInstanceBootDiskInitializeParamsOutput {
	return o.ApplyT(func(v *ComputeInstanceBootDiskInitializeParams) ComputeInstanceBootDiskInitializeParams { return *v }).(ComputeInstanceBootDiskInitializeParamsOutput)
}

// Description of the boot disk.
func (o ComputeInstanceBootDiskInitializeParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceBootDiskInitializeParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// A disk image to initialize this disk from.
func (o ComputeInstanceBootDiskInitializeParamsPtrOutput) ImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceBootDiskInitializeParams) *string {
		if v == nil {
			return nil
		}
		return v.ImageId
	}).(pulumi.StringPtrOutput)
}

// Name of the boot disk.
func (o ComputeInstanceBootDiskInitializeParamsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceBootDiskInitializeParams) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Size of the disk in GB.
func (o ComputeInstanceBootDiskInitializeParamsPtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceBootDiskInitializeParams) *int {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.IntPtrOutput)
}

// A snapshot to initialize this disk from.
func (o ComputeInstanceBootDiskInitializeParamsPtrOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceBootDiskInitializeParams) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotId
	}).(pulumi.StringPtrOutput)
}

// Disk type.
func (o ComputeInstanceBootDiskInitializeParamsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceBootDiskInitializeParams) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ComputeInstanceGroupAllocationPolicy struct {
	// A list of availability zones.
	Zones []string `pulumi:"zones"`
}

// ComputeInstanceGroupAllocationPolicyInput is an input type that accepts ComputeInstanceGroupAllocationPolicyArgs and ComputeInstanceGroupAllocationPolicyOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupAllocationPolicyInput` via:
//
//          ComputeInstanceGroupAllocationPolicyArgs{...}
type ComputeInstanceGroupAllocationPolicyInput interface {
	pulumi.Input

	ToComputeInstanceGroupAllocationPolicyOutput() ComputeInstanceGroupAllocationPolicyOutput
	ToComputeInstanceGroupAllocationPolicyOutputWithContext(context.Context) ComputeInstanceGroupAllocationPolicyOutput
}

type ComputeInstanceGroupAllocationPolicyArgs struct {
	// A list of availability zones.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (ComputeInstanceGroupAllocationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupAllocationPolicy)(nil)).Elem()
}

func (i ComputeInstanceGroupAllocationPolicyArgs) ToComputeInstanceGroupAllocationPolicyOutput() ComputeInstanceGroupAllocationPolicyOutput {
	return i.ToComputeInstanceGroupAllocationPolicyOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupAllocationPolicyArgs) ToComputeInstanceGroupAllocationPolicyOutputWithContext(ctx context.Context) ComputeInstanceGroupAllocationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupAllocationPolicyOutput)
}

func (i ComputeInstanceGroupAllocationPolicyArgs) ToComputeInstanceGroupAllocationPolicyPtrOutput() ComputeInstanceGroupAllocationPolicyPtrOutput {
	return i.ToComputeInstanceGroupAllocationPolicyPtrOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupAllocationPolicyArgs) ToComputeInstanceGroupAllocationPolicyPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupAllocationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupAllocationPolicyOutput).ToComputeInstanceGroupAllocationPolicyPtrOutputWithContext(ctx)
}

// ComputeInstanceGroupAllocationPolicyPtrInput is an input type that accepts ComputeInstanceGroupAllocationPolicyArgs, ComputeInstanceGroupAllocationPolicyPtr and ComputeInstanceGroupAllocationPolicyPtrOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupAllocationPolicyPtrInput` via:
//
//          ComputeInstanceGroupAllocationPolicyArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceGroupAllocationPolicyPtrInput interface {
	pulumi.Input

	ToComputeInstanceGroupAllocationPolicyPtrOutput() ComputeInstanceGroupAllocationPolicyPtrOutput
	ToComputeInstanceGroupAllocationPolicyPtrOutputWithContext(context.Context) ComputeInstanceGroupAllocationPolicyPtrOutput
}

type computeInstanceGroupAllocationPolicyPtrType ComputeInstanceGroupAllocationPolicyArgs

func ComputeInstanceGroupAllocationPolicyPtr(v *ComputeInstanceGroupAllocationPolicyArgs) ComputeInstanceGroupAllocationPolicyPtrInput {
	return (*computeInstanceGroupAllocationPolicyPtrType)(v)
}

func (*computeInstanceGroupAllocationPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupAllocationPolicy)(nil)).Elem()
}

func (i *computeInstanceGroupAllocationPolicyPtrType) ToComputeInstanceGroupAllocationPolicyPtrOutput() ComputeInstanceGroupAllocationPolicyPtrOutput {
	return i.ToComputeInstanceGroupAllocationPolicyPtrOutputWithContext(context.Background())
}

func (i *computeInstanceGroupAllocationPolicyPtrType) ToComputeInstanceGroupAllocationPolicyPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupAllocationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupAllocationPolicyPtrOutput)
}

type ComputeInstanceGroupAllocationPolicyOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupAllocationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupAllocationPolicy)(nil)).Elem()
}

func (o ComputeInstanceGroupAllocationPolicyOutput) ToComputeInstanceGroupAllocationPolicyOutput() ComputeInstanceGroupAllocationPolicyOutput {
	return o
}

func (o ComputeInstanceGroupAllocationPolicyOutput) ToComputeInstanceGroupAllocationPolicyOutputWithContext(ctx context.Context) ComputeInstanceGroupAllocationPolicyOutput {
	return o
}

func (o ComputeInstanceGroupAllocationPolicyOutput) ToComputeInstanceGroupAllocationPolicyPtrOutput() ComputeInstanceGroupAllocationPolicyPtrOutput {
	return o.ToComputeInstanceGroupAllocationPolicyPtrOutputWithContext(context.Background())
}

func (o ComputeInstanceGroupAllocationPolicyOutput) ToComputeInstanceGroupAllocationPolicyPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupAllocationPolicyPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupAllocationPolicy) *ComputeInstanceGroupAllocationPolicy {
		return &v
	}).(ComputeInstanceGroupAllocationPolicyPtrOutput)
}

// A list of availability zones.
func (o ComputeInstanceGroupAllocationPolicyOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComputeInstanceGroupAllocationPolicy) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type ComputeInstanceGroupAllocationPolicyPtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupAllocationPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupAllocationPolicy)(nil)).Elem()
}

func (o ComputeInstanceGroupAllocationPolicyPtrOutput) ToComputeInstanceGroupAllocationPolicyPtrOutput() ComputeInstanceGroupAllocationPolicyPtrOutput {
	return o
}

func (o ComputeInstanceGroupAllocationPolicyPtrOutput) ToComputeInstanceGroupAllocationPolicyPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupAllocationPolicyPtrOutput {
	return o
}

func (o ComputeInstanceGroupAllocationPolicyPtrOutput) Elem() ComputeInstanceGroupAllocationPolicyOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupAllocationPolicy) ComputeInstanceGroupAllocationPolicy { return *v }).(ComputeInstanceGroupAllocationPolicyOutput)
}

// A list of availability zones.
func (o ComputeInstanceGroupAllocationPolicyPtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupAllocationPolicy) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

type ComputeInstanceGroupDeployPolicy struct {
	// The maximum number of instances that can be created at the same time.
	MaxCreating *int `pulumi:"maxCreating"`
	// The maximum number of instances that can be deleted at the same time.
	MaxDeleting *int `pulumi:"maxDeleting"`
	// The maximum number of instances that can be temporarily allocated above the group's target size
	// during the update process.
	MaxExpansion int `pulumi:"maxExpansion"`
	// The maximum number of running instances that can be taken offline (stopped or deleted) at the same time
	// during the update process.
	MaxUnavailable int `pulumi:"maxUnavailable"`
	// The amount of time in seconds to allow for an instance to start.
	// Instance will be considered up and running (and start receiving traffic) only after the startupDuration
	// has elapsed and all health checks are passed.
	StartupDuration *int `pulumi:"startupDuration"`
	// Affects the lifecycle of the instance during deployment. If set to `proactive` (default), Instance Groups
	// can forcefully stop a running instance. If `opportunistic`, Instance Groups does not stop a running instance. Instead,
	// it will wait until the instance stops itself or becomes unhealthy.
	Strategy *string `pulumi:"strategy"`
}

// ComputeInstanceGroupDeployPolicyInput is an input type that accepts ComputeInstanceGroupDeployPolicyArgs and ComputeInstanceGroupDeployPolicyOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupDeployPolicyInput` via:
//
//          ComputeInstanceGroupDeployPolicyArgs{...}
type ComputeInstanceGroupDeployPolicyInput interface {
	pulumi.Input

	ToComputeInstanceGroupDeployPolicyOutput() ComputeInstanceGroupDeployPolicyOutput
	ToComputeInstanceGroupDeployPolicyOutputWithContext(context.Context) ComputeInstanceGroupDeployPolicyOutput
}

type ComputeInstanceGroupDeployPolicyArgs struct {
	// The maximum number of instances that can be created at the same time.
	MaxCreating pulumi.IntPtrInput `pulumi:"maxCreating"`
	// The maximum number of instances that can be deleted at the same time.
	MaxDeleting pulumi.IntPtrInput `pulumi:"maxDeleting"`
	// The maximum number of instances that can be temporarily allocated above the group's target size
	// during the update process.
	MaxExpansion pulumi.IntInput `pulumi:"maxExpansion"`
	// The maximum number of running instances that can be taken offline (stopped or deleted) at the same time
	// during the update process.
	MaxUnavailable pulumi.IntInput `pulumi:"maxUnavailable"`
	// The amount of time in seconds to allow for an instance to start.
	// Instance will be considered up and running (and start receiving traffic) only after the startupDuration
	// has elapsed and all health checks are passed.
	StartupDuration pulumi.IntPtrInput `pulumi:"startupDuration"`
	// Affects the lifecycle of the instance during deployment. If set to `proactive` (default), Instance Groups
	// can forcefully stop a running instance. If `opportunistic`, Instance Groups does not stop a running instance. Instead,
	// it will wait until the instance stops itself or becomes unhealthy.
	Strategy pulumi.StringPtrInput `pulumi:"strategy"`
}

func (ComputeInstanceGroupDeployPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupDeployPolicy)(nil)).Elem()
}

func (i ComputeInstanceGroupDeployPolicyArgs) ToComputeInstanceGroupDeployPolicyOutput() ComputeInstanceGroupDeployPolicyOutput {
	return i.ToComputeInstanceGroupDeployPolicyOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupDeployPolicyArgs) ToComputeInstanceGroupDeployPolicyOutputWithContext(ctx context.Context) ComputeInstanceGroupDeployPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupDeployPolicyOutput)
}

func (i ComputeInstanceGroupDeployPolicyArgs) ToComputeInstanceGroupDeployPolicyPtrOutput() ComputeInstanceGroupDeployPolicyPtrOutput {
	return i.ToComputeInstanceGroupDeployPolicyPtrOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupDeployPolicyArgs) ToComputeInstanceGroupDeployPolicyPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupDeployPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupDeployPolicyOutput).ToComputeInstanceGroupDeployPolicyPtrOutputWithContext(ctx)
}

// ComputeInstanceGroupDeployPolicyPtrInput is an input type that accepts ComputeInstanceGroupDeployPolicyArgs, ComputeInstanceGroupDeployPolicyPtr and ComputeInstanceGroupDeployPolicyPtrOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupDeployPolicyPtrInput` via:
//
//          ComputeInstanceGroupDeployPolicyArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceGroupDeployPolicyPtrInput interface {
	pulumi.Input

	ToComputeInstanceGroupDeployPolicyPtrOutput() ComputeInstanceGroupDeployPolicyPtrOutput
	ToComputeInstanceGroupDeployPolicyPtrOutputWithContext(context.Context) ComputeInstanceGroupDeployPolicyPtrOutput
}

type computeInstanceGroupDeployPolicyPtrType ComputeInstanceGroupDeployPolicyArgs

func ComputeInstanceGroupDeployPolicyPtr(v *ComputeInstanceGroupDeployPolicyArgs) ComputeInstanceGroupDeployPolicyPtrInput {
	return (*computeInstanceGroupDeployPolicyPtrType)(v)
}

func (*computeInstanceGroupDeployPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupDeployPolicy)(nil)).Elem()
}

func (i *computeInstanceGroupDeployPolicyPtrType) ToComputeInstanceGroupDeployPolicyPtrOutput() ComputeInstanceGroupDeployPolicyPtrOutput {
	return i.ToComputeInstanceGroupDeployPolicyPtrOutputWithContext(context.Background())
}

func (i *computeInstanceGroupDeployPolicyPtrType) ToComputeInstanceGroupDeployPolicyPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupDeployPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupDeployPolicyPtrOutput)
}

type ComputeInstanceGroupDeployPolicyOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupDeployPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupDeployPolicy)(nil)).Elem()
}

func (o ComputeInstanceGroupDeployPolicyOutput) ToComputeInstanceGroupDeployPolicyOutput() ComputeInstanceGroupDeployPolicyOutput {
	return o
}

func (o ComputeInstanceGroupDeployPolicyOutput) ToComputeInstanceGroupDeployPolicyOutputWithContext(ctx context.Context) ComputeInstanceGroupDeployPolicyOutput {
	return o
}

func (o ComputeInstanceGroupDeployPolicyOutput) ToComputeInstanceGroupDeployPolicyPtrOutput() ComputeInstanceGroupDeployPolicyPtrOutput {
	return o.ToComputeInstanceGroupDeployPolicyPtrOutputWithContext(context.Background())
}

func (o ComputeInstanceGroupDeployPolicyOutput) ToComputeInstanceGroupDeployPolicyPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupDeployPolicyPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupDeployPolicy) *ComputeInstanceGroupDeployPolicy {
		return &v
	}).(ComputeInstanceGroupDeployPolicyPtrOutput)
}

// The maximum number of instances that can be created at the same time.
func (o ComputeInstanceGroupDeployPolicyOutput) MaxCreating() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupDeployPolicy) *int { return v.MaxCreating }).(pulumi.IntPtrOutput)
}

// The maximum number of instances that can be deleted at the same time.
func (o ComputeInstanceGroupDeployPolicyOutput) MaxDeleting() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupDeployPolicy) *int { return v.MaxDeleting }).(pulumi.IntPtrOutput)
}

// The maximum number of instances that can be temporarily allocated above the group's target size
// during the update process.
func (o ComputeInstanceGroupDeployPolicyOutput) MaxExpansion() pulumi.IntOutput {
	return o.ApplyT(func(v ComputeInstanceGroupDeployPolicy) int { return v.MaxExpansion }).(pulumi.IntOutput)
}

// The maximum number of running instances that can be taken offline (stopped or deleted) at the same time
// during the update process.
func (o ComputeInstanceGroupDeployPolicyOutput) MaxUnavailable() pulumi.IntOutput {
	return o.ApplyT(func(v ComputeInstanceGroupDeployPolicy) int { return v.MaxUnavailable }).(pulumi.IntOutput)
}

// The amount of time in seconds to allow for an instance to start.
// Instance will be considered up and running (and start receiving traffic) only after the startupDuration
// has elapsed and all health checks are passed.
func (o ComputeInstanceGroupDeployPolicyOutput) StartupDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupDeployPolicy) *int { return v.StartupDuration }).(pulumi.IntPtrOutput)
}

// Affects the lifecycle of the instance during deployment. If set to `proactive` (default), Instance Groups
// can forcefully stop a running instance. If `opportunistic`, Instance Groups does not stop a running instance. Instead,
// it will wait until the instance stops itself or becomes unhealthy.
func (o ComputeInstanceGroupDeployPolicyOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupDeployPolicy) *string { return v.Strategy }).(pulumi.StringPtrOutput)
}

type ComputeInstanceGroupDeployPolicyPtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupDeployPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupDeployPolicy)(nil)).Elem()
}

func (o ComputeInstanceGroupDeployPolicyPtrOutput) ToComputeInstanceGroupDeployPolicyPtrOutput() ComputeInstanceGroupDeployPolicyPtrOutput {
	return o
}

func (o ComputeInstanceGroupDeployPolicyPtrOutput) ToComputeInstanceGroupDeployPolicyPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupDeployPolicyPtrOutput {
	return o
}

func (o ComputeInstanceGroupDeployPolicyPtrOutput) Elem() ComputeInstanceGroupDeployPolicyOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupDeployPolicy) ComputeInstanceGroupDeployPolicy { return *v }).(ComputeInstanceGroupDeployPolicyOutput)
}

// The maximum number of instances that can be created at the same time.
func (o ComputeInstanceGroupDeployPolicyPtrOutput) MaxCreating() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupDeployPolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaxCreating
	}).(pulumi.IntPtrOutput)
}

// The maximum number of instances that can be deleted at the same time.
func (o ComputeInstanceGroupDeployPolicyPtrOutput) MaxDeleting() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupDeployPolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaxDeleting
	}).(pulumi.IntPtrOutput)
}

// The maximum number of instances that can be temporarily allocated above the group's target size
// during the update process.
func (o ComputeInstanceGroupDeployPolicyPtrOutput) MaxExpansion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupDeployPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.MaxExpansion
	}).(pulumi.IntPtrOutput)
}

// The maximum number of running instances that can be taken offline (stopped or deleted) at the same time
// during the update process.
func (o ComputeInstanceGroupDeployPolicyPtrOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupDeployPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.MaxUnavailable
	}).(pulumi.IntPtrOutput)
}

// The amount of time in seconds to allow for an instance to start.
// Instance will be considered up and running (and start receiving traffic) only after the startupDuration
// has elapsed and all health checks are passed.
func (o ComputeInstanceGroupDeployPolicyPtrOutput) StartupDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupDeployPolicy) *int {
		if v == nil {
			return nil
		}
		return v.StartupDuration
	}).(pulumi.IntPtrOutput)
}

// Affects the lifecycle of the instance during deployment. If set to `proactive` (default), Instance Groups
// can forcefully stop a running instance. If `opportunistic`, Instance Groups does not stop a running instance. Instead,
// it will wait until the instance stops itself or becomes unhealthy.
func (o ComputeInstanceGroupDeployPolicyPtrOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupDeployPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Strategy
	}).(pulumi.StringPtrOutput)
}

type ComputeInstanceGroupHealthCheck struct {
	// The number of successful health checks before the managed instance is declared healthy.
	HealthyThreshold *int `pulumi:"healthyThreshold"`
	// HTTP check options. The structure is documented below.
	HttpOptions []ComputeInstanceGroupHealthCheckHttpOption `pulumi:"httpOptions"`
	// The interval to wait between health checks in seconds.
	Interval *int `pulumi:"interval"`
	// TCP check options. The structure is documented below.
	TcpOptions []ComputeInstanceGroupHealthCheckTcpOption `pulumi:"tcpOptions"`
	// The length of time to wait for a response before the health check times out in seconds.
	Timeout *int `pulumi:"timeout"`
	// The number of failed health checks before the managed instance is declared unhealthy.
	UnhealthyThreshold *int `pulumi:"unhealthyThreshold"`
}

// ComputeInstanceGroupHealthCheckInput is an input type that accepts ComputeInstanceGroupHealthCheckArgs and ComputeInstanceGroupHealthCheckOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupHealthCheckInput` via:
//
//          ComputeInstanceGroupHealthCheckArgs{...}
type ComputeInstanceGroupHealthCheckInput interface {
	pulumi.Input

	ToComputeInstanceGroupHealthCheckOutput() ComputeInstanceGroupHealthCheckOutput
	ToComputeInstanceGroupHealthCheckOutputWithContext(context.Context) ComputeInstanceGroupHealthCheckOutput
}

type ComputeInstanceGroupHealthCheckArgs struct {
	// The number of successful health checks before the managed instance is declared healthy.
	HealthyThreshold pulumi.IntPtrInput `pulumi:"healthyThreshold"`
	// HTTP check options. The structure is documented below.
	HttpOptions ComputeInstanceGroupHealthCheckHttpOptionArrayInput `pulumi:"httpOptions"`
	// The interval to wait between health checks in seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// TCP check options. The structure is documented below.
	TcpOptions ComputeInstanceGroupHealthCheckTcpOptionArrayInput `pulumi:"tcpOptions"`
	// The length of time to wait for a response before the health check times out in seconds.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The number of failed health checks before the managed instance is declared unhealthy.
	UnhealthyThreshold pulumi.IntPtrInput `pulumi:"unhealthyThreshold"`
}

func (ComputeInstanceGroupHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupHealthCheck)(nil)).Elem()
}

func (i ComputeInstanceGroupHealthCheckArgs) ToComputeInstanceGroupHealthCheckOutput() ComputeInstanceGroupHealthCheckOutput {
	return i.ToComputeInstanceGroupHealthCheckOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupHealthCheckArgs) ToComputeInstanceGroupHealthCheckOutputWithContext(ctx context.Context) ComputeInstanceGroupHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupHealthCheckOutput)
}

// ComputeInstanceGroupHealthCheckArrayInput is an input type that accepts ComputeInstanceGroupHealthCheckArray and ComputeInstanceGroupHealthCheckArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupHealthCheckArrayInput` via:
//
//          ComputeInstanceGroupHealthCheckArray{ ComputeInstanceGroupHealthCheckArgs{...} }
type ComputeInstanceGroupHealthCheckArrayInput interface {
	pulumi.Input

	ToComputeInstanceGroupHealthCheckArrayOutput() ComputeInstanceGroupHealthCheckArrayOutput
	ToComputeInstanceGroupHealthCheckArrayOutputWithContext(context.Context) ComputeInstanceGroupHealthCheckArrayOutput
}

type ComputeInstanceGroupHealthCheckArray []ComputeInstanceGroupHealthCheckInput

func (ComputeInstanceGroupHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceGroupHealthCheck)(nil)).Elem()
}

func (i ComputeInstanceGroupHealthCheckArray) ToComputeInstanceGroupHealthCheckArrayOutput() ComputeInstanceGroupHealthCheckArrayOutput {
	return i.ToComputeInstanceGroupHealthCheckArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupHealthCheckArray) ToComputeInstanceGroupHealthCheckArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupHealthCheckArrayOutput)
}

type ComputeInstanceGroupHealthCheckOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupHealthCheck)(nil)).Elem()
}

func (o ComputeInstanceGroupHealthCheckOutput) ToComputeInstanceGroupHealthCheckOutput() ComputeInstanceGroupHealthCheckOutput {
	return o
}

func (o ComputeInstanceGroupHealthCheckOutput) ToComputeInstanceGroupHealthCheckOutputWithContext(ctx context.Context) ComputeInstanceGroupHealthCheckOutput {
	return o
}

// The number of successful health checks before the managed instance is declared healthy.
func (o ComputeInstanceGroupHealthCheckOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupHealthCheck) *int { return v.HealthyThreshold }).(pulumi.IntPtrOutput)
}

// HTTP check options. The structure is documented below.
func (o ComputeInstanceGroupHealthCheckOutput) HttpOptions() ComputeInstanceGroupHealthCheckHttpOptionArrayOutput {
	return o.ApplyT(func(v ComputeInstanceGroupHealthCheck) []ComputeInstanceGroupHealthCheckHttpOption {
		return v.HttpOptions
	}).(ComputeInstanceGroupHealthCheckHttpOptionArrayOutput)
}

// The interval to wait between health checks in seconds.
func (o ComputeInstanceGroupHealthCheckOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupHealthCheck) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// TCP check options. The structure is documented below.
func (o ComputeInstanceGroupHealthCheckOutput) TcpOptions() ComputeInstanceGroupHealthCheckTcpOptionArrayOutput {
	return o.ApplyT(func(v ComputeInstanceGroupHealthCheck) []ComputeInstanceGroupHealthCheckTcpOption {
		return v.TcpOptions
	}).(ComputeInstanceGroupHealthCheckTcpOptionArrayOutput)
}

// The length of time to wait for a response before the health check times out in seconds.
func (o ComputeInstanceGroupHealthCheckOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupHealthCheck) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The number of failed health checks before the managed instance is declared unhealthy.
func (o ComputeInstanceGroupHealthCheckOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupHealthCheck) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

type ComputeInstanceGroupHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceGroupHealthCheck)(nil)).Elem()
}

func (o ComputeInstanceGroupHealthCheckArrayOutput) ToComputeInstanceGroupHealthCheckArrayOutput() ComputeInstanceGroupHealthCheckArrayOutput {
	return o
}

func (o ComputeInstanceGroupHealthCheckArrayOutput) ToComputeInstanceGroupHealthCheckArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupHealthCheckArrayOutput {
	return o
}

func (o ComputeInstanceGroupHealthCheckArrayOutput) Index(i pulumi.IntInput) ComputeInstanceGroupHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeInstanceGroupHealthCheck {
		return vs[0].([]ComputeInstanceGroupHealthCheck)[vs[1].(int)]
	}).(ComputeInstanceGroupHealthCheckOutput)
}

type ComputeInstanceGroupHealthCheckHttpOption struct {
	// The URL path used for health check requests.
	Path string `pulumi:"path"`
	// The port used for TCP health checks.
	Port int `pulumi:"port"`
}

// ComputeInstanceGroupHealthCheckHttpOptionInput is an input type that accepts ComputeInstanceGroupHealthCheckHttpOptionArgs and ComputeInstanceGroupHealthCheckHttpOptionOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupHealthCheckHttpOptionInput` via:
//
//          ComputeInstanceGroupHealthCheckHttpOptionArgs{...}
type ComputeInstanceGroupHealthCheckHttpOptionInput interface {
	pulumi.Input

	ToComputeInstanceGroupHealthCheckHttpOptionOutput() ComputeInstanceGroupHealthCheckHttpOptionOutput
	ToComputeInstanceGroupHealthCheckHttpOptionOutputWithContext(context.Context) ComputeInstanceGroupHealthCheckHttpOptionOutput
}

type ComputeInstanceGroupHealthCheckHttpOptionArgs struct {
	// The URL path used for health check requests.
	Path pulumi.StringInput `pulumi:"path"`
	// The port used for TCP health checks.
	Port pulumi.IntInput `pulumi:"port"`
}

func (ComputeInstanceGroupHealthCheckHttpOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupHealthCheckHttpOption)(nil)).Elem()
}

func (i ComputeInstanceGroupHealthCheckHttpOptionArgs) ToComputeInstanceGroupHealthCheckHttpOptionOutput() ComputeInstanceGroupHealthCheckHttpOptionOutput {
	return i.ToComputeInstanceGroupHealthCheckHttpOptionOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupHealthCheckHttpOptionArgs) ToComputeInstanceGroupHealthCheckHttpOptionOutputWithContext(ctx context.Context) ComputeInstanceGroupHealthCheckHttpOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupHealthCheckHttpOptionOutput)
}

// ComputeInstanceGroupHealthCheckHttpOptionArrayInput is an input type that accepts ComputeInstanceGroupHealthCheckHttpOptionArray and ComputeInstanceGroupHealthCheckHttpOptionArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupHealthCheckHttpOptionArrayInput` via:
//
//          ComputeInstanceGroupHealthCheckHttpOptionArray{ ComputeInstanceGroupHealthCheckHttpOptionArgs{...} }
type ComputeInstanceGroupHealthCheckHttpOptionArrayInput interface {
	pulumi.Input

	ToComputeInstanceGroupHealthCheckHttpOptionArrayOutput() ComputeInstanceGroupHealthCheckHttpOptionArrayOutput
	ToComputeInstanceGroupHealthCheckHttpOptionArrayOutputWithContext(context.Context) ComputeInstanceGroupHealthCheckHttpOptionArrayOutput
}

type ComputeInstanceGroupHealthCheckHttpOptionArray []ComputeInstanceGroupHealthCheckHttpOptionInput

func (ComputeInstanceGroupHealthCheckHttpOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceGroupHealthCheckHttpOption)(nil)).Elem()
}

func (i ComputeInstanceGroupHealthCheckHttpOptionArray) ToComputeInstanceGroupHealthCheckHttpOptionArrayOutput() ComputeInstanceGroupHealthCheckHttpOptionArrayOutput {
	return i.ToComputeInstanceGroupHealthCheckHttpOptionArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupHealthCheckHttpOptionArray) ToComputeInstanceGroupHealthCheckHttpOptionArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupHealthCheckHttpOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupHealthCheckHttpOptionArrayOutput)
}

type ComputeInstanceGroupHealthCheckHttpOptionOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupHealthCheckHttpOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupHealthCheckHttpOption)(nil)).Elem()
}

func (o ComputeInstanceGroupHealthCheckHttpOptionOutput) ToComputeInstanceGroupHealthCheckHttpOptionOutput() ComputeInstanceGroupHealthCheckHttpOptionOutput {
	return o
}

func (o ComputeInstanceGroupHealthCheckHttpOptionOutput) ToComputeInstanceGroupHealthCheckHttpOptionOutputWithContext(ctx context.Context) ComputeInstanceGroupHealthCheckHttpOptionOutput {
	return o
}

// The URL path used for health check requests.
func (o ComputeInstanceGroupHealthCheckHttpOptionOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceGroupHealthCheckHttpOption) string { return v.Path }).(pulumi.StringOutput)
}

// The port used for TCP health checks.
func (o ComputeInstanceGroupHealthCheckHttpOptionOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ComputeInstanceGroupHealthCheckHttpOption) int { return v.Port }).(pulumi.IntOutput)
}

type ComputeInstanceGroupHealthCheckHttpOptionArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupHealthCheckHttpOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceGroupHealthCheckHttpOption)(nil)).Elem()
}

func (o ComputeInstanceGroupHealthCheckHttpOptionArrayOutput) ToComputeInstanceGroupHealthCheckHttpOptionArrayOutput() ComputeInstanceGroupHealthCheckHttpOptionArrayOutput {
	return o
}

func (o ComputeInstanceGroupHealthCheckHttpOptionArrayOutput) ToComputeInstanceGroupHealthCheckHttpOptionArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupHealthCheckHttpOptionArrayOutput {
	return o
}

func (o ComputeInstanceGroupHealthCheckHttpOptionArrayOutput) Index(i pulumi.IntInput) ComputeInstanceGroupHealthCheckHttpOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeInstanceGroupHealthCheckHttpOption {
		return vs[0].([]ComputeInstanceGroupHealthCheckHttpOption)[vs[1].(int)]
	}).(ComputeInstanceGroupHealthCheckHttpOptionOutput)
}

type ComputeInstanceGroupHealthCheckTcpOption struct {
	// The port used for TCP health checks.
	Port int `pulumi:"port"`
}

// ComputeInstanceGroupHealthCheckTcpOptionInput is an input type that accepts ComputeInstanceGroupHealthCheckTcpOptionArgs and ComputeInstanceGroupHealthCheckTcpOptionOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupHealthCheckTcpOptionInput` via:
//
//          ComputeInstanceGroupHealthCheckTcpOptionArgs{...}
type ComputeInstanceGroupHealthCheckTcpOptionInput interface {
	pulumi.Input

	ToComputeInstanceGroupHealthCheckTcpOptionOutput() ComputeInstanceGroupHealthCheckTcpOptionOutput
	ToComputeInstanceGroupHealthCheckTcpOptionOutputWithContext(context.Context) ComputeInstanceGroupHealthCheckTcpOptionOutput
}

type ComputeInstanceGroupHealthCheckTcpOptionArgs struct {
	// The port used for TCP health checks.
	Port pulumi.IntInput `pulumi:"port"`
}

func (ComputeInstanceGroupHealthCheckTcpOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupHealthCheckTcpOption)(nil)).Elem()
}

func (i ComputeInstanceGroupHealthCheckTcpOptionArgs) ToComputeInstanceGroupHealthCheckTcpOptionOutput() ComputeInstanceGroupHealthCheckTcpOptionOutput {
	return i.ToComputeInstanceGroupHealthCheckTcpOptionOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupHealthCheckTcpOptionArgs) ToComputeInstanceGroupHealthCheckTcpOptionOutputWithContext(ctx context.Context) ComputeInstanceGroupHealthCheckTcpOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupHealthCheckTcpOptionOutput)
}

// ComputeInstanceGroupHealthCheckTcpOptionArrayInput is an input type that accepts ComputeInstanceGroupHealthCheckTcpOptionArray and ComputeInstanceGroupHealthCheckTcpOptionArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupHealthCheckTcpOptionArrayInput` via:
//
//          ComputeInstanceGroupHealthCheckTcpOptionArray{ ComputeInstanceGroupHealthCheckTcpOptionArgs{...} }
type ComputeInstanceGroupHealthCheckTcpOptionArrayInput interface {
	pulumi.Input

	ToComputeInstanceGroupHealthCheckTcpOptionArrayOutput() ComputeInstanceGroupHealthCheckTcpOptionArrayOutput
	ToComputeInstanceGroupHealthCheckTcpOptionArrayOutputWithContext(context.Context) ComputeInstanceGroupHealthCheckTcpOptionArrayOutput
}

type ComputeInstanceGroupHealthCheckTcpOptionArray []ComputeInstanceGroupHealthCheckTcpOptionInput

func (ComputeInstanceGroupHealthCheckTcpOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceGroupHealthCheckTcpOption)(nil)).Elem()
}

func (i ComputeInstanceGroupHealthCheckTcpOptionArray) ToComputeInstanceGroupHealthCheckTcpOptionArrayOutput() ComputeInstanceGroupHealthCheckTcpOptionArrayOutput {
	return i.ToComputeInstanceGroupHealthCheckTcpOptionArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupHealthCheckTcpOptionArray) ToComputeInstanceGroupHealthCheckTcpOptionArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupHealthCheckTcpOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupHealthCheckTcpOptionArrayOutput)
}

type ComputeInstanceGroupHealthCheckTcpOptionOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupHealthCheckTcpOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupHealthCheckTcpOption)(nil)).Elem()
}

func (o ComputeInstanceGroupHealthCheckTcpOptionOutput) ToComputeInstanceGroupHealthCheckTcpOptionOutput() ComputeInstanceGroupHealthCheckTcpOptionOutput {
	return o
}

func (o ComputeInstanceGroupHealthCheckTcpOptionOutput) ToComputeInstanceGroupHealthCheckTcpOptionOutputWithContext(ctx context.Context) ComputeInstanceGroupHealthCheckTcpOptionOutput {
	return o
}

// The port used for TCP health checks.
func (o ComputeInstanceGroupHealthCheckTcpOptionOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ComputeInstanceGroupHealthCheckTcpOption) int { return v.Port }).(pulumi.IntOutput)
}

type ComputeInstanceGroupHealthCheckTcpOptionArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupHealthCheckTcpOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceGroupHealthCheckTcpOption)(nil)).Elem()
}

func (o ComputeInstanceGroupHealthCheckTcpOptionArrayOutput) ToComputeInstanceGroupHealthCheckTcpOptionArrayOutput() ComputeInstanceGroupHealthCheckTcpOptionArrayOutput {
	return o
}

func (o ComputeInstanceGroupHealthCheckTcpOptionArrayOutput) ToComputeInstanceGroupHealthCheckTcpOptionArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupHealthCheckTcpOptionArrayOutput {
	return o
}

func (o ComputeInstanceGroupHealthCheckTcpOptionArrayOutput) Index(i pulumi.IntInput) ComputeInstanceGroupHealthCheckTcpOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeInstanceGroupHealthCheckTcpOption {
		return vs[0].([]ComputeInstanceGroupHealthCheckTcpOption)[vs[1].(int)]
	}).(ComputeInstanceGroupHealthCheckTcpOptionOutput)
}

type ComputeInstanceGroupInstance struct {
	// DNS record fqdn (must have dot at the end).
	Fqdn *string `pulumi:"fqdn"`
	// The ID of the instance.
	InstanceId *string `pulumi:"instanceId"`
	// Name template of the instance.\
	// In order to be unique it must contain at least one of instance unique placeholders:
	// {instance.short_id}
	// {instance.index}
	// combination of {instance.zone_id} and {instance.index_in_zone}
	// Example: my-instance-{instance.index}
	// If not set, default is used: {instance_group.id}-{instance.short_id}
	// It may also contain another placeholders, see metadata doc for full list.
	Name *string `pulumi:"name"`
	// Network specifications for the instance. This can be used multiple times for adding multiple interfaces. The structure is documented below.
	NetworkInterfaces []ComputeInstanceGroupInstanceNetworkInterface `pulumi:"networkInterfaces"`
	// The status of the instance.
	Status          *string `pulumi:"status"`
	StatusChangedAt *string `pulumi:"statusChangedAt"`
	// The status message of the instance.
	StatusMessage *string `pulumi:"statusMessage"`
	// The ID of the availability zone where the instance resides.
	ZoneId *string `pulumi:"zoneId"`
}

// ComputeInstanceGroupInstanceInput is an input type that accepts ComputeInstanceGroupInstanceArgs and ComputeInstanceGroupInstanceOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceInput` via:
//
//          ComputeInstanceGroupInstanceArgs{...}
type ComputeInstanceGroupInstanceInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceOutput() ComputeInstanceGroupInstanceOutput
	ToComputeInstanceGroupInstanceOutputWithContext(context.Context) ComputeInstanceGroupInstanceOutput
}

type ComputeInstanceGroupInstanceArgs struct {
	// DNS record fqdn (must have dot at the end).
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// The ID of the instance.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// Name template of the instance.\
	// In order to be unique it must contain at least one of instance unique placeholders:
	// {instance.short_id}
	// {instance.index}
	// combination of {instance.zone_id} and {instance.index_in_zone}
	// Example: my-instance-{instance.index}
	// If not set, default is used: {instance_group.id}-{instance.short_id}
	// It may also contain another placeholders, see metadata doc for full list.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Network specifications for the instance. This can be used multiple times for adding multiple interfaces. The structure is documented below.
	NetworkInterfaces ComputeInstanceGroupInstanceNetworkInterfaceArrayInput `pulumi:"networkInterfaces"`
	// The status of the instance.
	Status          pulumi.StringPtrInput `pulumi:"status"`
	StatusChangedAt pulumi.StringPtrInput `pulumi:"statusChangedAt"`
	// The status message of the instance.
	StatusMessage pulumi.StringPtrInput `pulumi:"statusMessage"`
	// The ID of the availability zone where the instance resides.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (ComputeInstanceGroupInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstance)(nil)).Elem()
}

func (i ComputeInstanceGroupInstanceArgs) ToComputeInstanceGroupInstanceOutput() ComputeInstanceGroupInstanceOutput {
	return i.ToComputeInstanceGroupInstanceOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceArgs) ToComputeInstanceGroupInstanceOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceOutput)
}

// ComputeInstanceGroupInstanceArrayInput is an input type that accepts ComputeInstanceGroupInstanceArray and ComputeInstanceGroupInstanceArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceArrayInput` via:
//
//          ComputeInstanceGroupInstanceArray{ ComputeInstanceGroupInstanceArgs{...} }
type ComputeInstanceGroupInstanceArrayInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceArrayOutput() ComputeInstanceGroupInstanceArrayOutput
	ToComputeInstanceGroupInstanceArrayOutputWithContext(context.Context) ComputeInstanceGroupInstanceArrayOutput
}

type ComputeInstanceGroupInstanceArray []ComputeInstanceGroupInstanceInput

func (ComputeInstanceGroupInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceGroupInstance)(nil)).Elem()
}

func (i ComputeInstanceGroupInstanceArray) ToComputeInstanceGroupInstanceArrayOutput() ComputeInstanceGroupInstanceArrayOutput {
	return i.ToComputeInstanceGroupInstanceArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceArray) ToComputeInstanceGroupInstanceArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceArrayOutput)
}

type ComputeInstanceGroupInstanceOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstance)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceOutput) ToComputeInstanceGroupInstanceOutput() ComputeInstanceGroupInstanceOutput {
	return o
}

func (o ComputeInstanceGroupInstanceOutput) ToComputeInstanceGroupInstanceOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceOutput {
	return o
}

// DNS record fqdn (must have dot at the end).
func (o ComputeInstanceGroupInstanceOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstance) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The ID of the instance.
func (o ComputeInstanceGroupInstanceOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstance) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// Name template of the instance.\
// In order to be unique it must contain at least one of instance unique placeholders:
// {instance.short_id}
// {instance.index}
// combination of {instance.zone_id} and {instance.index_in_zone}
// Example: my-instance-{instance.index}
// If not set, default is used: {instance_group.id}-{instance.short_id}
// It may also contain another placeholders, see metadata doc for full list.
func (o ComputeInstanceGroupInstanceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstance) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Network specifications for the instance. This can be used multiple times for adding multiple interfaces. The structure is documented below.
func (o ComputeInstanceGroupInstanceOutput) NetworkInterfaces() ComputeInstanceGroupInstanceNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstance) []ComputeInstanceGroupInstanceNetworkInterface {
		return v.NetworkInterfaces
	}).(ComputeInstanceGroupInstanceNetworkInterfaceArrayOutput)
}

// The status of the instance.
func (o ComputeInstanceGroupInstanceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstance) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o ComputeInstanceGroupInstanceOutput) StatusChangedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstance) *string { return v.StatusChangedAt }).(pulumi.StringPtrOutput)
}

// The status message of the instance.
func (o ComputeInstanceGroupInstanceOutput) StatusMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstance) *string { return v.StatusMessage }).(pulumi.StringPtrOutput)
}

// The ID of the availability zone where the instance resides.
func (o ComputeInstanceGroupInstanceOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstance) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

type ComputeInstanceGroupInstanceArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceGroupInstance)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceArrayOutput) ToComputeInstanceGroupInstanceArrayOutput() ComputeInstanceGroupInstanceArrayOutput {
	return o
}

func (o ComputeInstanceGroupInstanceArrayOutput) ToComputeInstanceGroupInstanceArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceArrayOutput {
	return o
}

func (o ComputeInstanceGroupInstanceArrayOutput) Index(i pulumi.IntInput) ComputeInstanceGroupInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeInstanceGroupInstance {
		return vs[0].([]ComputeInstanceGroupInstance)[vs[1].(int)]
	}).(ComputeInstanceGroupInstanceOutput)
}

type ComputeInstanceGroupInstanceNetworkInterface struct {
	// The index of the network interface as generated by the server.
	Index *int `pulumi:"index"`
	// The private IP address to assign to the instance. If empty, the address is automatically assigned from the specified subnet.
	IpAddress *string `pulumi:"ipAddress"`
	// True if IPv4 address allocated for the network interface.
	Ipv4        *bool   `pulumi:"ipv4"`
	Ipv6        *bool   `pulumi:"ipv6"`
	Ipv6Address *string `pulumi:"ipv6Address"`
	// The MAC address assigned to the network interface.
	MacAddress *string `pulumi:"macAddress"`
	// A public address that can be used to access the internet over NAT.
	Nat *bool `pulumi:"nat"`
	// The public IP address of the instance.
	NatIpAddress *string `pulumi:"natIpAddress"`
	// The IP version for the public address.
	NatIpVersion *string `pulumi:"natIpVersion"`
	// The ID of the subnet to attach this interface to. The subnet must reside in the same zone where this instance was created.
	SubnetId *string `pulumi:"subnetId"`
}

// ComputeInstanceGroupInstanceNetworkInterfaceInput is an input type that accepts ComputeInstanceGroupInstanceNetworkInterfaceArgs and ComputeInstanceGroupInstanceNetworkInterfaceOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceNetworkInterfaceInput` via:
//
//          ComputeInstanceGroupInstanceNetworkInterfaceArgs{...}
type ComputeInstanceGroupInstanceNetworkInterfaceInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceNetworkInterfaceOutput() ComputeInstanceGroupInstanceNetworkInterfaceOutput
	ToComputeInstanceGroupInstanceNetworkInterfaceOutputWithContext(context.Context) ComputeInstanceGroupInstanceNetworkInterfaceOutput
}

type ComputeInstanceGroupInstanceNetworkInterfaceArgs struct {
	// The index of the network interface as generated by the server.
	Index pulumi.IntPtrInput `pulumi:"index"`
	// The private IP address to assign to the instance. If empty, the address is automatically assigned from the specified subnet.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// True if IPv4 address allocated for the network interface.
	Ipv4        pulumi.BoolPtrInput   `pulumi:"ipv4"`
	Ipv6        pulumi.BoolPtrInput   `pulumi:"ipv6"`
	Ipv6Address pulumi.StringPtrInput `pulumi:"ipv6Address"`
	// The MAC address assigned to the network interface.
	MacAddress pulumi.StringPtrInput `pulumi:"macAddress"`
	// A public address that can be used to access the internet over NAT.
	Nat pulumi.BoolPtrInput `pulumi:"nat"`
	// The public IP address of the instance.
	NatIpAddress pulumi.StringPtrInput `pulumi:"natIpAddress"`
	// The IP version for the public address.
	NatIpVersion pulumi.StringPtrInput `pulumi:"natIpVersion"`
	// The ID of the subnet to attach this interface to. The subnet must reside in the same zone where this instance was created.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (ComputeInstanceGroupInstanceNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceNetworkInterface)(nil)).Elem()
}

func (i ComputeInstanceGroupInstanceNetworkInterfaceArgs) ToComputeInstanceGroupInstanceNetworkInterfaceOutput() ComputeInstanceGroupInstanceNetworkInterfaceOutput {
	return i.ToComputeInstanceGroupInstanceNetworkInterfaceOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceNetworkInterfaceArgs) ToComputeInstanceGroupInstanceNetworkInterfaceOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceNetworkInterfaceOutput)
}

// ComputeInstanceGroupInstanceNetworkInterfaceArrayInput is an input type that accepts ComputeInstanceGroupInstanceNetworkInterfaceArray and ComputeInstanceGroupInstanceNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceNetworkInterfaceArrayInput` via:
//
//          ComputeInstanceGroupInstanceNetworkInterfaceArray{ ComputeInstanceGroupInstanceNetworkInterfaceArgs{...} }
type ComputeInstanceGroupInstanceNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceNetworkInterfaceArrayOutput() ComputeInstanceGroupInstanceNetworkInterfaceArrayOutput
	ToComputeInstanceGroupInstanceNetworkInterfaceArrayOutputWithContext(context.Context) ComputeInstanceGroupInstanceNetworkInterfaceArrayOutput
}

type ComputeInstanceGroupInstanceNetworkInterfaceArray []ComputeInstanceGroupInstanceNetworkInterfaceInput

func (ComputeInstanceGroupInstanceNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceGroupInstanceNetworkInterface)(nil)).Elem()
}

func (i ComputeInstanceGroupInstanceNetworkInterfaceArray) ToComputeInstanceGroupInstanceNetworkInterfaceArrayOutput() ComputeInstanceGroupInstanceNetworkInterfaceArrayOutput {
	return i.ToComputeInstanceGroupInstanceNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceNetworkInterfaceArray) ToComputeInstanceGroupInstanceNetworkInterfaceArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceNetworkInterfaceArrayOutput)
}

type ComputeInstanceGroupInstanceNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceNetworkInterface)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceNetworkInterfaceOutput) ToComputeInstanceGroupInstanceNetworkInterfaceOutput() ComputeInstanceGroupInstanceNetworkInterfaceOutput {
	return o
}

func (o ComputeInstanceGroupInstanceNetworkInterfaceOutput) ToComputeInstanceGroupInstanceNetworkInterfaceOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceNetworkInterfaceOutput {
	return o
}

// The index of the network interface as generated by the server.
func (o ComputeInstanceGroupInstanceNetworkInterfaceOutput) Index() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceNetworkInterface) *int { return v.Index }).(pulumi.IntPtrOutput)
}

// The private IP address to assign to the instance. If empty, the address is automatically assigned from the specified subnet.
func (o ComputeInstanceGroupInstanceNetworkInterfaceOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceNetworkInterface) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// True if IPv4 address allocated for the network interface.
func (o ComputeInstanceGroupInstanceNetworkInterfaceOutput) Ipv4() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceNetworkInterface) *bool { return v.Ipv4 }).(pulumi.BoolPtrOutput)
}

func (o ComputeInstanceGroupInstanceNetworkInterfaceOutput) Ipv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceNetworkInterface) *bool { return v.Ipv6 }).(pulumi.BoolPtrOutput)
}

func (o ComputeInstanceGroupInstanceNetworkInterfaceOutput) Ipv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceNetworkInterface) *string { return v.Ipv6Address }).(pulumi.StringPtrOutput)
}

// The MAC address assigned to the network interface.
func (o ComputeInstanceGroupInstanceNetworkInterfaceOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceNetworkInterface) *string { return v.MacAddress }).(pulumi.StringPtrOutput)
}

// A public address that can be used to access the internet over NAT.
func (o ComputeInstanceGroupInstanceNetworkInterfaceOutput) Nat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceNetworkInterface) *bool { return v.Nat }).(pulumi.BoolPtrOutput)
}

// The public IP address of the instance.
func (o ComputeInstanceGroupInstanceNetworkInterfaceOutput) NatIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceNetworkInterface) *string { return v.NatIpAddress }).(pulumi.StringPtrOutput)
}

// The IP version for the public address.
func (o ComputeInstanceGroupInstanceNetworkInterfaceOutput) NatIpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceNetworkInterface) *string { return v.NatIpVersion }).(pulumi.StringPtrOutput)
}

// The ID of the subnet to attach this interface to. The subnet must reside in the same zone where this instance was created.
func (o ComputeInstanceGroupInstanceNetworkInterfaceOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceNetworkInterface) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type ComputeInstanceGroupInstanceNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceGroupInstanceNetworkInterface)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceNetworkInterfaceArrayOutput) ToComputeInstanceGroupInstanceNetworkInterfaceArrayOutput() ComputeInstanceGroupInstanceNetworkInterfaceArrayOutput {
	return o
}

func (o ComputeInstanceGroupInstanceNetworkInterfaceArrayOutput) ToComputeInstanceGroupInstanceNetworkInterfaceArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceNetworkInterfaceArrayOutput {
	return o
}

func (o ComputeInstanceGroupInstanceNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) ComputeInstanceGroupInstanceNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeInstanceGroupInstanceNetworkInterface {
		return vs[0].([]ComputeInstanceGroupInstanceNetworkInterface)[vs[1].(int)]
	}).(ComputeInstanceGroupInstanceNetworkInterfaceOutput)
}

type ComputeInstanceGroupInstanceTemplate struct {
	// Boot disk specifications for the instance. The structure is documented below.
	BootDisk ComputeInstanceGroupInstanceTemplateBootDisk `pulumi:"bootDisk"`
	// A description of the boot disk.
	Description *string `pulumi:"description"`
	// Hostname template for the instance.\
	// This field is used to generate the FQDN value of instance.
	// The hostname must be unique within the network and region.
	// If not specified, the hostname will be equal to id of the instance
	// and FQDN will be `<id>.auto.internal`. Otherwise FQDN will be `<hostname>.<region_id>.internal`.
	// In order to be unique it must contain at least on of instance unique placeholders:
	// {instance.short_id}
	// {instance.index}
	// combination of {instance.zone_id} and {instance.index_in_zone}
	// Example: my-instance-{instance.index}
	// If not set, `name` value will be used
	// It may also contain another placeholders, see metadata doc for full list.
	Hostname *string `pulumi:"hostname"`
	// A map of labels of metric.
	Labels map[string]string `pulumi:"labels"`
	// A set of metadata key/value pairs to make available from within the instance.
	Metadata map[string]string `pulumi:"metadata"`
	// Name template of the instance.\
	// In order to be unique it must contain at least one of instance unique placeholders:
	// {instance.short_id}
	// {instance.index}
	// combination of {instance.zone_id} and {instance.index_in_zone}
	// Example: my-instance-{instance.index}
	// If not set, default is used: {instance_group.id}-{instance.short_id}
	// It may also contain another placeholders, see metadata doc for full list.
	Name *string `pulumi:"name"`
	// Network specifications for the instance. This can be used multiple times for adding multiple interfaces. The structure is documented below.
	NetworkInterfaces []ComputeInstanceGroupInstanceTemplateNetworkInterface `pulumi:"networkInterfaces"`
	// Network acceleration type for instance. The structure is documented below.
	NetworkSettings []ComputeInstanceGroupInstanceTemplateNetworkSetting `pulumi:"networkSettings"`
	// The placement policy configuration. The structure is documented below.
	PlacementPolicy *ComputeInstanceGroupInstanceTemplatePlacementPolicy `pulumi:"placementPolicy"`
	// The ID of the hardware platform configuration for the instance. The default is 'standard-v1'.
	PlatformId *string `pulumi:"platformId"`
	// Compute resource specifications for the instance. The structure is documented below.
	Resources ComputeInstanceGroupInstanceTemplateResources `pulumi:"resources"`
	// The scheduling policy configuration. The structure is documented below.
	SchedulingPolicy *ComputeInstanceGroupInstanceTemplateSchedulingPolicy `pulumi:"schedulingPolicy"`
	// A list of disks to attach to the instance. The structure is documented below.
	SecondaryDisks []ComputeInstanceGroupInstanceTemplateSecondaryDisk `pulumi:"secondaryDisks"`
	// The ID of the service account authorized for this instance.
	ServiceAccountId *string `pulumi:"serviceAccountId"`
}

// ComputeInstanceGroupInstanceTemplateInput is an input type that accepts ComputeInstanceGroupInstanceTemplateArgs and ComputeInstanceGroupInstanceTemplateOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceTemplateInput` via:
//
//          ComputeInstanceGroupInstanceTemplateArgs{...}
type ComputeInstanceGroupInstanceTemplateInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceTemplateOutput() ComputeInstanceGroupInstanceTemplateOutput
	ToComputeInstanceGroupInstanceTemplateOutputWithContext(context.Context) ComputeInstanceGroupInstanceTemplateOutput
}

type ComputeInstanceGroupInstanceTemplateArgs struct {
	// Boot disk specifications for the instance. The structure is documented below.
	BootDisk ComputeInstanceGroupInstanceTemplateBootDiskInput `pulumi:"bootDisk"`
	// A description of the boot disk.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Hostname template for the instance.\
	// This field is used to generate the FQDN value of instance.
	// The hostname must be unique within the network and region.
	// If not specified, the hostname will be equal to id of the instance
	// and FQDN will be `<id>.auto.internal`. Otherwise FQDN will be `<hostname>.<region_id>.internal`.
	// In order to be unique it must contain at least on of instance unique placeholders:
	// {instance.short_id}
	// {instance.index}
	// combination of {instance.zone_id} and {instance.index_in_zone}
	// Example: my-instance-{instance.index}
	// If not set, `name` value will be used
	// It may also contain another placeholders, see metadata doc for full list.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// A map of labels of metric.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// A set of metadata key/value pairs to make available from within the instance.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Name template of the instance.\
	// In order to be unique it must contain at least one of instance unique placeholders:
	// {instance.short_id}
	// {instance.index}
	// combination of {instance.zone_id} and {instance.index_in_zone}
	// Example: my-instance-{instance.index}
	// If not set, default is used: {instance_group.id}-{instance.short_id}
	// It may also contain another placeholders, see metadata doc for full list.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Network specifications for the instance. This can be used multiple times for adding multiple interfaces. The structure is documented below.
	NetworkInterfaces ComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayInput `pulumi:"networkInterfaces"`
	// Network acceleration type for instance. The structure is documented below.
	NetworkSettings ComputeInstanceGroupInstanceTemplateNetworkSettingArrayInput `pulumi:"networkSettings"`
	// The placement policy configuration. The structure is documented below.
	PlacementPolicy ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrInput `pulumi:"placementPolicy"`
	// The ID of the hardware platform configuration for the instance. The default is 'standard-v1'.
	PlatformId pulumi.StringPtrInput `pulumi:"platformId"`
	// Compute resource specifications for the instance. The structure is documented below.
	Resources ComputeInstanceGroupInstanceTemplateResourcesInput `pulumi:"resources"`
	// The scheduling policy configuration. The structure is documented below.
	SchedulingPolicy ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrInput `pulumi:"schedulingPolicy"`
	// A list of disks to attach to the instance. The structure is documented below.
	SecondaryDisks ComputeInstanceGroupInstanceTemplateSecondaryDiskArrayInput `pulumi:"secondaryDisks"`
	// The ID of the service account authorized for this instance.
	ServiceAccountId pulumi.StringPtrInput `pulumi:"serviceAccountId"`
}

func (ComputeInstanceGroupInstanceTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceTemplate)(nil)).Elem()
}

func (i ComputeInstanceGroupInstanceTemplateArgs) ToComputeInstanceGroupInstanceTemplateOutput() ComputeInstanceGroupInstanceTemplateOutput {
	return i.ToComputeInstanceGroupInstanceTemplateOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceTemplateArgs) ToComputeInstanceGroupInstanceTemplateOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateOutput)
}

func (i ComputeInstanceGroupInstanceTemplateArgs) ToComputeInstanceGroupInstanceTemplatePtrOutput() ComputeInstanceGroupInstanceTemplatePtrOutput {
	return i.ToComputeInstanceGroupInstanceTemplatePtrOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceTemplateArgs) ToComputeInstanceGroupInstanceTemplatePtrOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateOutput).ToComputeInstanceGroupInstanceTemplatePtrOutputWithContext(ctx)
}

// ComputeInstanceGroupInstanceTemplatePtrInput is an input type that accepts ComputeInstanceGroupInstanceTemplateArgs, ComputeInstanceGroupInstanceTemplatePtr and ComputeInstanceGroupInstanceTemplatePtrOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceTemplatePtrInput` via:
//
//          ComputeInstanceGroupInstanceTemplateArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceGroupInstanceTemplatePtrInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceTemplatePtrOutput() ComputeInstanceGroupInstanceTemplatePtrOutput
	ToComputeInstanceGroupInstanceTemplatePtrOutputWithContext(context.Context) ComputeInstanceGroupInstanceTemplatePtrOutput
}

type computeInstanceGroupInstanceTemplatePtrType ComputeInstanceGroupInstanceTemplateArgs

func ComputeInstanceGroupInstanceTemplatePtr(v *ComputeInstanceGroupInstanceTemplateArgs) ComputeInstanceGroupInstanceTemplatePtrInput {
	return (*computeInstanceGroupInstanceTemplatePtrType)(v)
}

func (*computeInstanceGroupInstanceTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupInstanceTemplate)(nil)).Elem()
}

func (i *computeInstanceGroupInstanceTemplatePtrType) ToComputeInstanceGroupInstanceTemplatePtrOutput() ComputeInstanceGroupInstanceTemplatePtrOutput {
	return i.ToComputeInstanceGroupInstanceTemplatePtrOutputWithContext(context.Background())
}

func (i *computeInstanceGroupInstanceTemplatePtrType) ToComputeInstanceGroupInstanceTemplatePtrOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplatePtrOutput)
}

type ComputeInstanceGroupInstanceTemplateOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceTemplate)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceTemplateOutput) ToComputeInstanceGroupInstanceTemplateOutput() ComputeInstanceGroupInstanceTemplateOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateOutput) ToComputeInstanceGroupInstanceTemplateOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateOutput) ToComputeInstanceGroupInstanceTemplatePtrOutput() ComputeInstanceGroupInstanceTemplatePtrOutput {
	return o.ToComputeInstanceGroupInstanceTemplatePtrOutputWithContext(context.Background())
}

func (o ComputeInstanceGroupInstanceTemplateOutput) ToComputeInstanceGroupInstanceTemplatePtrOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplatePtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplate) *ComputeInstanceGroupInstanceTemplate {
		return &v
	}).(ComputeInstanceGroupInstanceTemplatePtrOutput)
}

// Boot disk specifications for the instance. The structure is documented below.
func (o ComputeInstanceGroupInstanceTemplateOutput) BootDisk() ComputeInstanceGroupInstanceTemplateBootDiskOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplate) ComputeInstanceGroupInstanceTemplateBootDisk {
		return v.BootDisk
	}).(ComputeInstanceGroupInstanceTemplateBootDiskOutput)
}

// A description of the boot disk.
func (o ComputeInstanceGroupInstanceTemplateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplate) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Hostname template for the instance.\
// This field is used to generate the FQDN value of instance.
// The hostname must be unique within the network and region.
// If not specified, the hostname will be equal to id of the instance
// and FQDN will be `<id>.auto.internal`. Otherwise FQDN will be `<hostname>.<region_id>.internal`.
// In order to be unique it must contain at least on of instance unique placeholders:
// {instance.short_id}
// {instance.index}
// combination of {instance.zone_id} and {instance.index_in_zone}
// Example: my-instance-{instance.index}
// If not set, `name` value will be used
// It may also contain another placeholders, see metadata doc for full list.
func (o ComputeInstanceGroupInstanceTemplateOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplate) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// A map of labels of metric.
func (o ComputeInstanceGroupInstanceTemplateOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplate) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// A set of metadata key/value pairs to make available from within the instance.
func (o ComputeInstanceGroupInstanceTemplateOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplate) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Name template of the instance.\
// In order to be unique it must contain at least one of instance unique placeholders:
// {instance.short_id}
// {instance.index}
// combination of {instance.zone_id} and {instance.index_in_zone}
// Example: my-instance-{instance.index}
// If not set, default is used: {instance_group.id}-{instance.short_id}
// It may also contain another placeholders, see metadata doc for full list.
func (o ComputeInstanceGroupInstanceTemplateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Network specifications for the instance. This can be used multiple times for adding multiple interfaces. The structure is documented below.
func (o ComputeInstanceGroupInstanceTemplateOutput) NetworkInterfaces() ComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplate) []ComputeInstanceGroupInstanceTemplateNetworkInterface {
		return v.NetworkInterfaces
	}).(ComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput)
}

// Network acceleration type for instance. The structure is documented below.
func (o ComputeInstanceGroupInstanceTemplateOutput) NetworkSettings() ComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplate) []ComputeInstanceGroupInstanceTemplateNetworkSetting {
		return v.NetworkSettings
	}).(ComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput)
}

// The placement policy configuration. The structure is documented below.
func (o ComputeInstanceGroupInstanceTemplateOutput) PlacementPolicy() ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplate) *ComputeInstanceGroupInstanceTemplatePlacementPolicy {
		return v.PlacementPolicy
	}).(ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput)
}

// The ID of the hardware platform configuration for the instance. The default is 'standard-v1'.
func (o ComputeInstanceGroupInstanceTemplateOutput) PlatformId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplate) *string { return v.PlatformId }).(pulumi.StringPtrOutput)
}

// Compute resource specifications for the instance. The structure is documented below.
func (o ComputeInstanceGroupInstanceTemplateOutput) Resources() ComputeInstanceGroupInstanceTemplateResourcesOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplate) ComputeInstanceGroupInstanceTemplateResources {
		return v.Resources
	}).(ComputeInstanceGroupInstanceTemplateResourcesOutput)
}

// The scheduling policy configuration. The structure is documented below.
func (o ComputeInstanceGroupInstanceTemplateOutput) SchedulingPolicy() ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplate) *ComputeInstanceGroupInstanceTemplateSchedulingPolicy {
		return v.SchedulingPolicy
	}).(ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput)
}

// A list of disks to attach to the instance. The structure is documented below.
func (o ComputeInstanceGroupInstanceTemplateOutput) SecondaryDisks() ComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplate) []ComputeInstanceGroupInstanceTemplateSecondaryDisk {
		return v.SecondaryDisks
	}).(ComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput)
}

// The ID of the service account authorized for this instance.
func (o ComputeInstanceGroupInstanceTemplateOutput) ServiceAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplate) *string { return v.ServiceAccountId }).(pulumi.StringPtrOutput)
}

type ComputeInstanceGroupInstanceTemplatePtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupInstanceTemplate)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceTemplatePtrOutput) ToComputeInstanceGroupInstanceTemplatePtrOutput() ComputeInstanceGroupInstanceTemplatePtrOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplatePtrOutput) ToComputeInstanceGroupInstanceTemplatePtrOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplatePtrOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplatePtrOutput) Elem() ComputeInstanceGroupInstanceTemplateOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplate) ComputeInstanceGroupInstanceTemplate { return *v }).(ComputeInstanceGroupInstanceTemplateOutput)
}

// Boot disk specifications for the instance. The structure is documented below.
func (o ComputeInstanceGroupInstanceTemplatePtrOutput) BootDisk() ComputeInstanceGroupInstanceTemplateBootDiskPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplate) *ComputeInstanceGroupInstanceTemplateBootDisk {
		if v == nil {
			return nil
		}
		return &v.BootDisk
	}).(ComputeInstanceGroupInstanceTemplateBootDiskPtrOutput)
}

// A description of the boot disk.
func (o ComputeInstanceGroupInstanceTemplatePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Hostname template for the instance.\
// This field is used to generate the FQDN value of instance.
// The hostname must be unique within the network and region.
// If not specified, the hostname will be equal to id of the instance
// and FQDN will be `<id>.auto.internal`. Otherwise FQDN will be `<hostname>.<region_id>.internal`.
// In order to be unique it must contain at least on of instance unique placeholders:
// {instance.short_id}
// {instance.index}
// combination of {instance.zone_id} and {instance.index_in_zone}
// Example: my-instance-{instance.index}
// If not set, `name` value will be used
// It may also contain another placeholders, see metadata doc for full list.
func (o ComputeInstanceGroupInstanceTemplatePtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(pulumi.StringPtrOutput)
}

// A map of labels of metric.
func (o ComputeInstanceGroupInstanceTemplatePtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplate) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// A set of metadata key/value pairs to make available from within the instance.
func (o ComputeInstanceGroupInstanceTemplatePtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplate) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// Name template of the instance.\
// In order to be unique it must contain at least one of instance unique placeholders:
// {instance.short_id}
// {instance.index}
// combination of {instance.zone_id} and {instance.index_in_zone}
// Example: my-instance-{instance.index}
// If not set, default is used: {instance_group.id}-{instance.short_id}
// It may also contain another placeholders, see metadata doc for full list.
func (o ComputeInstanceGroupInstanceTemplatePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Network specifications for the instance. This can be used multiple times for adding multiple interfaces. The structure is documented below.
func (o ComputeInstanceGroupInstanceTemplatePtrOutput) NetworkInterfaces() ComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplate) []ComputeInstanceGroupInstanceTemplateNetworkInterface {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(ComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput)
}

// Network acceleration type for instance. The structure is documented below.
func (o ComputeInstanceGroupInstanceTemplatePtrOutput) NetworkSettings() ComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplate) []ComputeInstanceGroupInstanceTemplateNetworkSetting {
		if v == nil {
			return nil
		}
		return v.NetworkSettings
	}).(ComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput)
}

// The placement policy configuration. The structure is documented below.
func (o ComputeInstanceGroupInstanceTemplatePtrOutput) PlacementPolicy() ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplate) *ComputeInstanceGroupInstanceTemplatePlacementPolicy {
		if v == nil {
			return nil
		}
		return v.PlacementPolicy
	}).(ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput)
}

// The ID of the hardware platform configuration for the instance. The default is 'standard-v1'.
func (o ComputeInstanceGroupInstanceTemplatePtrOutput) PlatformId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplate) *string {
		if v == nil {
			return nil
		}
		return v.PlatformId
	}).(pulumi.StringPtrOutput)
}

// Compute resource specifications for the instance. The structure is documented below.
func (o ComputeInstanceGroupInstanceTemplatePtrOutput) Resources() ComputeInstanceGroupInstanceTemplateResourcesPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplate) *ComputeInstanceGroupInstanceTemplateResources {
		if v == nil {
			return nil
		}
		return &v.Resources
	}).(ComputeInstanceGroupInstanceTemplateResourcesPtrOutput)
}

// The scheduling policy configuration. The structure is documented below.
func (o ComputeInstanceGroupInstanceTemplatePtrOutput) SchedulingPolicy() ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplate) *ComputeInstanceGroupInstanceTemplateSchedulingPolicy {
		if v == nil {
			return nil
		}
		return v.SchedulingPolicy
	}).(ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput)
}

// A list of disks to attach to the instance. The structure is documented below.
func (o ComputeInstanceGroupInstanceTemplatePtrOutput) SecondaryDisks() ComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplate) []ComputeInstanceGroupInstanceTemplateSecondaryDisk {
		if v == nil {
			return nil
		}
		return v.SecondaryDisks
	}).(ComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput)
}

// The ID of the service account authorized for this instance.
func (o ComputeInstanceGroupInstanceTemplatePtrOutput) ServiceAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplate) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountId
	}).(pulumi.StringPtrOutput)
}

type ComputeInstanceGroupInstanceTemplateBootDisk struct {
	// This value can be used to reference the device under `/dev/disk/by-id/`.
	DeviceName *string `pulumi:"deviceName"`
	// Parameters for creating a disk alongside the instance. The structure is documented below.
	InitializeParams ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams `pulumi:"initializeParams"`
	// The access mode to the disk resource. By default a disk is attached in `READ_WRITE` mode.
	Mode *string `pulumi:"mode"`
}

// ComputeInstanceGroupInstanceTemplateBootDiskInput is an input type that accepts ComputeInstanceGroupInstanceTemplateBootDiskArgs and ComputeInstanceGroupInstanceTemplateBootDiskOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceTemplateBootDiskInput` via:
//
//          ComputeInstanceGroupInstanceTemplateBootDiskArgs{...}
type ComputeInstanceGroupInstanceTemplateBootDiskInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceTemplateBootDiskOutput() ComputeInstanceGroupInstanceTemplateBootDiskOutput
	ToComputeInstanceGroupInstanceTemplateBootDiskOutputWithContext(context.Context) ComputeInstanceGroupInstanceTemplateBootDiskOutput
}

type ComputeInstanceGroupInstanceTemplateBootDiskArgs struct {
	// This value can be used to reference the device under `/dev/disk/by-id/`.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// Parameters for creating a disk alongside the instance. The structure is documented below.
	InitializeParams ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsInput `pulumi:"initializeParams"`
	// The access mode to the disk resource. By default a disk is attached in `READ_WRITE` mode.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (ComputeInstanceGroupInstanceTemplateBootDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceTemplateBootDisk)(nil)).Elem()
}

func (i ComputeInstanceGroupInstanceTemplateBootDiskArgs) ToComputeInstanceGroupInstanceTemplateBootDiskOutput() ComputeInstanceGroupInstanceTemplateBootDiskOutput {
	return i.ToComputeInstanceGroupInstanceTemplateBootDiskOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceTemplateBootDiskArgs) ToComputeInstanceGroupInstanceTemplateBootDiskOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateBootDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateBootDiskOutput)
}

func (i ComputeInstanceGroupInstanceTemplateBootDiskArgs) ToComputeInstanceGroupInstanceTemplateBootDiskPtrOutput() ComputeInstanceGroupInstanceTemplateBootDiskPtrOutput {
	return i.ToComputeInstanceGroupInstanceTemplateBootDiskPtrOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceTemplateBootDiskArgs) ToComputeInstanceGroupInstanceTemplateBootDiskPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateBootDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateBootDiskOutput).ToComputeInstanceGroupInstanceTemplateBootDiskPtrOutputWithContext(ctx)
}

// ComputeInstanceGroupInstanceTemplateBootDiskPtrInput is an input type that accepts ComputeInstanceGroupInstanceTemplateBootDiskArgs, ComputeInstanceGroupInstanceTemplateBootDiskPtr and ComputeInstanceGroupInstanceTemplateBootDiskPtrOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceTemplateBootDiskPtrInput` via:
//
//          ComputeInstanceGroupInstanceTemplateBootDiskArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceGroupInstanceTemplateBootDiskPtrInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceTemplateBootDiskPtrOutput() ComputeInstanceGroupInstanceTemplateBootDiskPtrOutput
	ToComputeInstanceGroupInstanceTemplateBootDiskPtrOutputWithContext(context.Context) ComputeInstanceGroupInstanceTemplateBootDiskPtrOutput
}

type computeInstanceGroupInstanceTemplateBootDiskPtrType ComputeInstanceGroupInstanceTemplateBootDiskArgs

func ComputeInstanceGroupInstanceTemplateBootDiskPtr(v *ComputeInstanceGroupInstanceTemplateBootDiskArgs) ComputeInstanceGroupInstanceTemplateBootDiskPtrInput {
	return (*computeInstanceGroupInstanceTemplateBootDiskPtrType)(v)
}

func (*computeInstanceGroupInstanceTemplateBootDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupInstanceTemplateBootDisk)(nil)).Elem()
}

func (i *computeInstanceGroupInstanceTemplateBootDiskPtrType) ToComputeInstanceGroupInstanceTemplateBootDiskPtrOutput() ComputeInstanceGroupInstanceTemplateBootDiskPtrOutput {
	return i.ToComputeInstanceGroupInstanceTemplateBootDiskPtrOutputWithContext(context.Background())
}

func (i *computeInstanceGroupInstanceTemplateBootDiskPtrType) ToComputeInstanceGroupInstanceTemplateBootDiskPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateBootDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateBootDiskPtrOutput)
}

type ComputeInstanceGroupInstanceTemplateBootDiskOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceTemplateBootDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceTemplateBootDisk)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceTemplateBootDiskOutput) ToComputeInstanceGroupInstanceTemplateBootDiskOutput() ComputeInstanceGroupInstanceTemplateBootDiskOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateBootDiskOutput) ToComputeInstanceGroupInstanceTemplateBootDiskOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateBootDiskOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateBootDiskOutput) ToComputeInstanceGroupInstanceTemplateBootDiskPtrOutput() ComputeInstanceGroupInstanceTemplateBootDiskPtrOutput {
	return o.ToComputeInstanceGroupInstanceTemplateBootDiskPtrOutputWithContext(context.Background())
}

func (o ComputeInstanceGroupInstanceTemplateBootDiskOutput) ToComputeInstanceGroupInstanceTemplateBootDiskPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateBootDiskPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateBootDisk) *ComputeInstanceGroupInstanceTemplateBootDisk {
		return &v
	}).(ComputeInstanceGroupInstanceTemplateBootDiskPtrOutput)
}

// This value can be used to reference the device under `/dev/disk/by-id/`.
func (o ComputeInstanceGroupInstanceTemplateBootDiskOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateBootDisk) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// Parameters for creating a disk alongside the instance. The structure is documented below.
func (o ComputeInstanceGroupInstanceTemplateBootDiskOutput) InitializeParams() ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateBootDisk) ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams {
		return v.InitializeParams
	}).(ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput)
}

// The access mode to the disk resource. By default a disk is attached in `READ_WRITE` mode.
func (o ComputeInstanceGroupInstanceTemplateBootDiskOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateBootDisk) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type ComputeInstanceGroupInstanceTemplateBootDiskPtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceTemplateBootDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupInstanceTemplateBootDisk)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceTemplateBootDiskPtrOutput) ToComputeInstanceGroupInstanceTemplateBootDiskPtrOutput() ComputeInstanceGroupInstanceTemplateBootDiskPtrOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateBootDiskPtrOutput) ToComputeInstanceGroupInstanceTemplateBootDiskPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateBootDiskPtrOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateBootDiskPtrOutput) Elem() ComputeInstanceGroupInstanceTemplateBootDiskOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplateBootDisk) ComputeInstanceGroupInstanceTemplateBootDisk {
		return *v
	}).(ComputeInstanceGroupInstanceTemplateBootDiskOutput)
}

// This value can be used to reference the device under `/dev/disk/by-id/`.
func (o ComputeInstanceGroupInstanceTemplateBootDiskPtrOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplateBootDisk) *string {
		if v == nil {
			return nil
		}
		return v.DeviceName
	}).(pulumi.StringPtrOutput)
}

// Parameters for creating a disk alongside the instance. The structure is documented below.
func (o ComputeInstanceGroupInstanceTemplateBootDiskPtrOutput) InitializeParams() ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplateBootDisk) *ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams {
		if v == nil {
			return nil
		}
		return &v.InitializeParams
	}).(ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput)
}

// The access mode to the disk resource. By default a disk is attached in `READ_WRITE` mode.
func (o ComputeInstanceGroupInstanceTemplateBootDiskPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplateBootDisk) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams struct {
	// A description of the boot disk.
	Description *string `pulumi:"description"`
	// The disk image to initialize this disk from.
	ImageId *string `pulumi:"imageId"`
	// The number of instances in the instance group.
	Size *int `pulumi:"size"`
	// The snapshot to initialize this disk from.
	SnapshotId *string `pulumi:"snapshotId"`
	// Network acceleration type. By default a network is in `STANDARD` mode.
	Type *string `pulumi:"type"`
}

// ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsInput is an input type that accepts ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsArgs and ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsInput` via:
//
//          ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsArgs{...}
type ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput() ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput
	ToComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutputWithContext(context.Context) ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput
}

type ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsArgs struct {
	// A description of the boot disk.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The disk image to initialize this disk from.
	ImageId pulumi.StringPtrInput `pulumi:"imageId"`
	// The number of instances in the instance group.
	Size pulumi.IntPtrInput `pulumi:"size"`
	// The snapshot to initialize this disk from.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// Network acceleration type. By default a network is in `STANDARD` mode.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams)(nil)).Elem()
}

func (i ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsArgs) ToComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput() ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput {
	return i.ToComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsArgs) ToComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput)
}

func (i ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsArgs) ToComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput() ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput {
	return i.ToComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsArgs) ToComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput).ToComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutputWithContext(ctx)
}

// ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrInput is an input type that accepts ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsArgs, ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtr and ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrInput` via:
//
//          ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput() ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput
	ToComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutputWithContext(context.Context) ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput
}

type computeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrType ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsArgs

func ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtr(v *ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsArgs) ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrInput {
	return (*computeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrType)(v)
}

func (*computeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams)(nil)).Elem()
}

func (i *computeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrType) ToComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput() ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput {
	return i.ToComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutputWithContext(context.Background())
}

func (i *computeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrType) ToComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput)
}

type ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput) ToComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput() ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput) ToComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput) ToComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput() ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput {
	return o.ToComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutputWithContext(context.Background())
}

func (o ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput) ToComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams) *ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams {
		return &v
	}).(ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput)
}

// A description of the boot disk.
func (o ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The disk image to initialize this disk from.
func (o ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput) ImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams) *string { return v.ImageId }).(pulumi.StringPtrOutput)
}

// The number of instances in the instance group.
func (o ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams) *int { return v.Size }).(pulumi.IntPtrOutput)
}

// The snapshot to initialize this disk from.
func (o ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// Network acceleration type. By default a network is in `STANDARD` mode.
func (o ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput) ToComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput() ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput) ToComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput) Elem() ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams) ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams {
		return *v
	}).(ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput)
}

// A description of the boot disk.
func (o ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The disk image to initialize this disk from.
func (o ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput) ImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams) *string {
		if v == nil {
			return nil
		}
		return v.ImageId
	}).(pulumi.StringPtrOutput)
}

// The number of instances in the instance group.
func (o ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams) *int {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.IntPtrOutput)
}

// The snapshot to initialize this disk from.
func (o ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotId
	}).(pulumi.StringPtrOutput)
}

// Network acceleration type. By default a network is in `STANDARD` mode.
func (o ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ComputeInstanceGroupInstanceTemplateNetworkInterface struct {
	// List of dns records.  The structure is documented below.
	DnsRecords []ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord `pulumi:"dnsRecords"`
	// True if IPv4 address allocated for the network interface.
	Ipv4 *bool `pulumi:"ipv4"`
	Ipv6 *bool `pulumi:"ipv6"`
	// List of ipv6 dns records.  The structure is documented below.
	Ipv6DnsRecords []ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord `pulumi:"ipv6DnsRecords"`
	// A public address that can be used to access the internet over NAT.
	Nat *bool `pulumi:"nat"`
	// List of nat dns records.  The structure is documented below.
	NatDnsRecords []ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord `pulumi:"natDnsRecords"`
	// The ID of the network.
	NetworkId *string `pulumi:"networkId"`
	// Security group ids for network interface.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The ID of the subnets to attach this interface to.
	SubnetIds []string `pulumi:"subnetIds"`
}

// ComputeInstanceGroupInstanceTemplateNetworkInterfaceInput is an input type that accepts ComputeInstanceGroupInstanceTemplateNetworkInterfaceArgs and ComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceTemplateNetworkInterfaceInput` via:
//
//          ComputeInstanceGroupInstanceTemplateNetworkInterfaceArgs{...}
type ComputeInstanceGroupInstanceTemplateNetworkInterfaceInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput() ComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput
	ToComputeInstanceGroupInstanceTemplateNetworkInterfaceOutputWithContext(context.Context) ComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput
}

type ComputeInstanceGroupInstanceTemplateNetworkInterfaceArgs struct {
	// List of dns records.  The structure is documented below.
	DnsRecords ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayInput `pulumi:"dnsRecords"`
	// True if IPv4 address allocated for the network interface.
	Ipv4 pulumi.BoolPtrInput `pulumi:"ipv4"`
	Ipv6 pulumi.BoolPtrInput `pulumi:"ipv6"`
	// List of ipv6 dns records.  The structure is documented below.
	Ipv6DnsRecords ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayInput `pulumi:"ipv6DnsRecords"`
	// A public address that can be used to access the internet over NAT.
	Nat pulumi.BoolPtrInput `pulumi:"nat"`
	// List of nat dns records.  The structure is documented below.
	NatDnsRecords ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayInput `pulumi:"natDnsRecords"`
	// The ID of the network.
	NetworkId pulumi.StringPtrInput `pulumi:"networkId"`
	// Security group ids for network interface.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The ID of the subnets to attach this interface to.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
}

func (ComputeInstanceGroupInstanceTemplateNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceTemplateNetworkInterface)(nil)).Elem()
}

func (i ComputeInstanceGroupInstanceTemplateNetworkInterfaceArgs) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput() ComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput {
	return i.ToComputeInstanceGroupInstanceTemplateNetworkInterfaceOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceTemplateNetworkInterfaceArgs) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput)
}

// ComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayInput is an input type that accepts ComputeInstanceGroupInstanceTemplateNetworkInterfaceArray and ComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayInput` via:
//
//          ComputeInstanceGroupInstanceTemplateNetworkInterfaceArray{ ComputeInstanceGroupInstanceTemplateNetworkInterfaceArgs{...} }
type ComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput() ComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput
	ToComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutputWithContext(context.Context) ComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput
}

type ComputeInstanceGroupInstanceTemplateNetworkInterfaceArray []ComputeInstanceGroupInstanceTemplateNetworkInterfaceInput

func (ComputeInstanceGroupInstanceTemplateNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceGroupInstanceTemplateNetworkInterface)(nil)).Elem()
}

func (i ComputeInstanceGroupInstanceTemplateNetworkInterfaceArray) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput() ComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput {
	return i.ToComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceTemplateNetworkInterfaceArray) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput)
}

type ComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceTemplateNetworkInterface)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput() ComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput {
	return o
}

// List of dns records.  The structure is documented below.
func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput) DnsRecords() ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateNetworkInterface) []ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord {
		return v.DnsRecords
	}).(ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput)
}

// True if IPv4 address allocated for the network interface.
func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput) Ipv4() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateNetworkInterface) *bool { return v.Ipv4 }).(pulumi.BoolPtrOutput)
}

func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput) Ipv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateNetworkInterface) *bool { return v.Ipv6 }).(pulumi.BoolPtrOutput)
}

// List of ipv6 dns records.  The structure is documented below.
func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput) Ipv6DnsRecords() ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateNetworkInterface) []ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord {
		return v.Ipv6DnsRecords
	}).(ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput)
}

// A public address that can be used to access the internet over NAT.
func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput) Nat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateNetworkInterface) *bool { return v.Nat }).(pulumi.BoolPtrOutput)
}

// List of nat dns records.  The structure is documented below.
func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput) NatDnsRecords() ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateNetworkInterface) []ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord {
		return v.NatDnsRecords
	}).(ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput)
}

// The ID of the network.
func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput) NetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateNetworkInterface) *string { return v.NetworkId }).(pulumi.StringPtrOutput)
}

// Security group ids for network interface.
func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateNetworkInterface) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The ID of the subnets to attach this interface to.
func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateNetworkInterface) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

type ComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceGroupInstanceTemplateNetworkInterface)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput() ComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) ComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeInstanceGroupInstanceTemplateNetworkInterface {
		return vs[0].([]ComputeInstanceGroupInstanceTemplateNetworkInterface)[vs[1].(int)]
	}).(ComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput)
}

type ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord struct {
	// DNS zone id (if not set, private zone used).
	DnsZoneId *string `pulumi:"dnsZoneId"`
	// DNS record fqdn (must have dot at the end).
	Fqdn string `pulumi:"fqdn"`
	// When set to true, also create PTR DNS record.
	Ptr *bool `pulumi:"ptr"`
	// DNS record TTL.
	Ttl *int `pulumi:"ttl"`
}

// ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordInput is an input type that accepts ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArgs and ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordInput` via:
//
//          ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArgs{...}
type ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput() ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput
	ToComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutputWithContext(context.Context) ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput
}

type ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArgs struct {
	// DNS zone id (if not set, private zone used).
	DnsZoneId pulumi.StringPtrInput `pulumi:"dnsZoneId"`
	// DNS record fqdn (must have dot at the end).
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// When set to true, also create PTR DNS record.
	Ptr pulumi.BoolPtrInput `pulumi:"ptr"`
	// DNS record TTL.
	Ttl pulumi.IntPtrInput `pulumi:"ttl"`
}

func (ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord)(nil)).Elem()
}

func (i ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArgs) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput() ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput {
	return i.ToComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArgs) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput)
}

// ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayInput is an input type that accepts ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArray and ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayInput` via:
//
//          ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArray{ ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArgs{...} }
type ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput() ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput
	ToComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutputWithContext(context.Context) ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput
}

type ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArray []ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordInput

func (ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord)(nil)).Elem()
}

func (i ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArray) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput() ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput {
	return i.ToComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArray) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput)
}

type ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput() ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput {
	return o
}

// DNS zone id (if not set, private zone used).
func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput) DnsZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord) *string { return v.DnsZoneId }).(pulumi.StringPtrOutput)
}

// DNS record fqdn (must have dot at the end).
func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord) string { return v.Fqdn }).(pulumi.StringOutput)
}

// When set to true, also create PTR DNS record.
func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput) Ptr() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord) *bool { return v.Ptr }).(pulumi.BoolPtrOutput)
}

// DNS record TTL.
func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

type ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput() ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput) Index(i pulumi.IntInput) ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord {
		return vs[0].([]ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord)[vs[1].(int)]
	}).(ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput)
}

type ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord struct {
	// DNS zone id (if not set, private zone used).
	DnsZoneId *string `pulumi:"dnsZoneId"`
	// DNS record fqdn (must have dot at the end).
	Fqdn string `pulumi:"fqdn"`
	// When set to true, also create PTR DNS record.
	Ptr *bool `pulumi:"ptr"`
	// DNS record TTL.
	Ttl *int `pulumi:"ttl"`
}

// ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordInput is an input type that accepts ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArgs and ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordInput` via:
//
//          ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArgs{...}
type ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput() ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput
	ToComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutputWithContext(context.Context) ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput
}

type ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArgs struct {
	// DNS zone id (if not set, private zone used).
	DnsZoneId pulumi.StringPtrInput `pulumi:"dnsZoneId"`
	// DNS record fqdn (must have dot at the end).
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// When set to true, also create PTR DNS record.
	Ptr pulumi.BoolPtrInput `pulumi:"ptr"`
	// DNS record TTL.
	Ttl pulumi.IntPtrInput `pulumi:"ttl"`
}

func (ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord)(nil)).Elem()
}

func (i ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArgs) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput() ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput {
	return i.ToComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArgs) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput)
}

// ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayInput is an input type that accepts ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArray and ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayInput` via:
//
//          ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArray{ ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArgs{...} }
type ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput() ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput
	ToComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutputWithContext(context.Context) ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput
}

type ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArray []ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordInput

func (ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord)(nil)).Elem()
}

func (i ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArray) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput() ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput {
	return i.ToComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArray) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput)
}

type ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput() ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput {
	return o
}

// DNS zone id (if not set, private zone used).
func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput) DnsZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord) *string { return v.DnsZoneId }).(pulumi.StringPtrOutput)
}

// DNS record fqdn (must have dot at the end).
func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord) string { return v.Fqdn }).(pulumi.StringOutput)
}

// When set to true, also create PTR DNS record.
func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput) Ptr() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord) *bool { return v.Ptr }).(pulumi.BoolPtrOutput)
}

// DNS record TTL.
func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

type ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput() ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput) Index(i pulumi.IntInput) ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord {
		return vs[0].([]ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord)[vs[1].(int)]
	}).(ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput)
}

type ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord struct {
	// DNS zone id (if not set, private zone used).
	DnsZoneId *string `pulumi:"dnsZoneId"`
	// DNS record fqdn (must have dot at the end).
	Fqdn string `pulumi:"fqdn"`
	// When set to true, also create PTR DNS record.
	Ptr *bool `pulumi:"ptr"`
	// DNS record TTL.
	Ttl *int `pulumi:"ttl"`
}

// ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordInput is an input type that accepts ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArgs and ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordInput` via:
//
//          ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArgs{...}
type ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput() ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput
	ToComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutputWithContext(context.Context) ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput
}

type ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArgs struct {
	// DNS zone id (if not set, private zone used).
	DnsZoneId pulumi.StringPtrInput `pulumi:"dnsZoneId"`
	// DNS record fqdn (must have dot at the end).
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// When set to true, also create PTR DNS record.
	Ptr pulumi.BoolPtrInput `pulumi:"ptr"`
	// DNS record TTL.
	Ttl pulumi.IntPtrInput `pulumi:"ttl"`
}

func (ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord)(nil)).Elem()
}

func (i ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArgs) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput() ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput {
	return i.ToComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArgs) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput)
}

// ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayInput is an input type that accepts ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArray and ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayInput` via:
//
//          ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArray{ ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArgs{...} }
type ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput() ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput
	ToComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutputWithContext(context.Context) ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput
}

type ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArray []ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordInput

func (ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord)(nil)).Elem()
}

func (i ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArray) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput() ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput {
	return i.ToComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArray) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput)
}

type ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput() ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput {
	return o
}

// DNS zone id (if not set, private zone used).
func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput) DnsZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord) *string { return v.DnsZoneId }).(pulumi.StringPtrOutput)
}

// DNS record fqdn (must have dot at the end).
func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord) string { return v.Fqdn }).(pulumi.StringOutput)
}

// When set to true, also create PTR DNS record.
func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput) Ptr() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord) *bool { return v.Ptr }).(pulumi.BoolPtrOutput)
}

// DNS record TTL.
func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

type ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput() ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput) ToComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput) Index(i pulumi.IntInput) ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord {
		return vs[0].([]ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord)[vs[1].(int)]
	}).(ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput)
}

type ComputeInstanceGroupInstanceTemplateNetworkSetting struct {
	// Network acceleration type. By default a network is in `STANDARD` mode.
	Type *string `pulumi:"type"`
}

// ComputeInstanceGroupInstanceTemplateNetworkSettingInput is an input type that accepts ComputeInstanceGroupInstanceTemplateNetworkSettingArgs and ComputeInstanceGroupInstanceTemplateNetworkSettingOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceTemplateNetworkSettingInput` via:
//
//          ComputeInstanceGroupInstanceTemplateNetworkSettingArgs{...}
type ComputeInstanceGroupInstanceTemplateNetworkSettingInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceTemplateNetworkSettingOutput() ComputeInstanceGroupInstanceTemplateNetworkSettingOutput
	ToComputeInstanceGroupInstanceTemplateNetworkSettingOutputWithContext(context.Context) ComputeInstanceGroupInstanceTemplateNetworkSettingOutput
}

type ComputeInstanceGroupInstanceTemplateNetworkSettingArgs struct {
	// Network acceleration type. By default a network is in `STANDARD` mode.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ComputeInstanceGroupInstanceTemplateNetworkSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceTemplateNetworkSetting)(nil)).Elem()
}

func (i ComputeInstanceGroupInstanceTemplateNetworkSettingArgs) ToComputeInstanceGroupInstanceTemplateNetworkSettingOutput() ComputeInstanceGroupInstanceTemplateNetworkSettingOutput {
	return i.ToComputeInstanceGroupInstanceTemplateNetworkSettingOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceTemplateNetworkSettingArgs) ToComputeInstanceGroupInstanceTemplateNetworkSettingOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateNetworkSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateNetworkSettingOutput)
}

// ComputeInstanceGroupInstanceTemplateNetworkSettingArrayInput is an input type that accepts ComputeInstanceGroupInstanceTemplateNetworkSettingArray and ComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceTemplateNetworkSettingArrayInput` via:
//
//          ComputeInstanceGroupInstanceTemplateNetworkSettingArray{ ComputeInstanceGroupInstanceTemplateNetworkSettingArgs{...} }
type ComputeInstanceGroupInstanceTemplateNetworkSettingArrayInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput() ComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput
	ToComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutputWithContext(context.Context) ComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput
}

type ComputeInstanceGroupInstanceTemplateNetworkSettingArray []ComputeInstanceGroupInstanceTemplateNetworkSettingInput

func (ComputeInstanceGroupInstanceTemplateNetworkSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceGroupInstanceTemplateNetworkSetting)(nil)).Elem()
}

func (i ComputeInstanceGroupInstanceTemplateNetworkSettingArray) ToComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput() ComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput {
	return i.ToComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceTemplateNetworkSettingArray) ToComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput)
}

type ComputeInstanceGroupInstanceTemplateNetworkSettingOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceTemplateNetworkSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceTemplateNetworkSetting)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceTemplateNetworkSettingOutput) ToComputeInstanceGroupInstanceTemplateNetworkSettingOutput() ComputeInstanceGroupInstanceTemplateNetworkSettingOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateNetworkSettingOutput) ToComputeInstanceGroupInstanceTemplateNetworkSettingOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateNetworkSettingOutput {
	return o
}

// Network acceleration type. By default a network is in `STANDARD` mode.
func (o ComputeInstanceGroupInstanceTemplateNetworkSettingOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateNetworkSetting) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceGroupInstanceTemplateNetworkSetting)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput) ToComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput() ComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput) ToComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput) Index(i pulumi.IntInput) ComputeInstanceGroupInstanceTemplateNetworkSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeInstanceGroupInstanceTemplateNetworkSetting {
		return vs[0].([]ComputeInstanceGroupInstanceTemplateNetworkSetting)[vs[1].(int)]
	}).(ComputeInstanceGroupInstanceTemplateNetworkSettingOutput)
}

type ComputeInstanceGroupInstanceTemplatePlacementPolicy struct {
	// Specifies the id of the Placement Group to assign to the instances.
	PlacementGroupId string `pulumi:"placementGroupId"`
}

// ComputeInstanceGroupInstanceTemplatePlacementPolicyInput is an input type that accepts ComputeInstanceGroupInstanceTemplatePlacementPolicyArgs and ComputeInstanceGroupInstanceTemplatePlacementPolicyOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceTemplatePlacementPolicyInput` via:
//
//          ComputeInstanceGroupInstanceTemplatePlacementPolicyArgs{...}
type ComputeInstanceGroupInstanceTemplatePlacementPolicyInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceTemplatePlacementPolicyOutput() ComputeInstanceGroupInstanceTemplatePlacementPolicyOutput
	ToComputeInstanceGroupInstanceTemplatePlacementPolicyOutputWithContext(context.Context) ComputeInstanceGroupInstanceTemplatePlacementPolicyOutput
}

type ComputeInstanceGroupInstanceTemplatePlacementPolicyArgs struct {
	// Specifies the id of the Placement Group to assign to the instances.
	PlacementGroupId pulumi.StringInput `pulumi:"placementGroupId"`
}

func (ComputeInstanceGroupInstanceTemplatePlacementPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceTemplatePlacementPolicy)(nil)).Elem()
}

func (i ComputeInstanceGroupInstanceTemplatePlacementPolicyArgs) ToComputeInstanceGroupInstanceTemplatePlacementPolicyOutput() ComputeInstanceGroupInstanceTemplatePlacementPolicyOutput {
	return i.ToComputeInstanceGroupInstanceTemplatePlacementPolicyOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceTemplatePlacementPolicyArgs) ToComputeInstanceGroupInstanceTemplatePlacementPolicyOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplatePlacementPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplatePlacementPolicyOutput)
}

func (i ComputeInstanceGroupInstanceTemplatePlacementPolicyArgs) ToComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput() ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput {
	return i.ToComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceTemplatePlacementPolicyArgs) ToComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplatePlacementPolicyOutput).ToComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutputWithContext(ctx)
}

// ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrInput is an input type that accepts ComputeInstanceGroupInstanceTemplatePlacementPolicyArgs, ComputeInstanceGroupInstanceTemplatePlacementPolicyPtr and ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrInput` via:
//
//          ComputeInstanceGroupInstanceTemplatePlacementPolicyArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput() ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput
	ToComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutputWithContext(context.Context) ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput
}

type computeInstanceGroupInstanceTemplatePlacementPolicyPtrType ComputeInstanceGroupInstanceTemplatePlacementPolicyArgs

func ComputeInstanceGroupInstanceTemplatePlacementPolicyPtr(v *ComputeInstanceGroupInstanceTemplatePlacementPolicyArgs) ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrInput {
	return (*computeInstanceGroupInstanceTemplatePlacementPolicyPtrType)(v)
}

func (*computeInstanceGroupInstanceTemplatePlacementPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupInstanceTemplatePlacementPolicy)(nil)).Elem()
}

func (i *computeInstanceGroupInstanceTemplatePlacementPolicyPtrType) ToComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput() ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput {
	return i.ToComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutputWithContext(context.Background())
}

func (i *computeInstanceGroupInstanceTemplatePlacementPolicyPtrType) ToComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput)
}

type ComputeInstanceGroupInstanceTemplatePlacementPolicyOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceTemplatePlacementPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceTemplatePlacementPolicy)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceTemplatePlacementPolicyOutput) ToComputeInstanceGroupInstanceTemplatePlacementPolicyOutput() ComputeInstanceGroupInstanceTemplatePlacementPolicyOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplatePlacementPolicyOutput) ToComputeInstanceGroupInstanceTemplatePlacementPolicyOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplatePlacementPolicyOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplatePlacementPolicyOutput) ToComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput() ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput {
	return o.ToComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutputWithContext(context.Background())
}

func (o ComputeInstanceGroupInstanceTemplatePlacementPolicyOutput) ToComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplatePlacementPolicy) *ComputeInstanceGroupInstanceTemplatePlacementPolicy {
		return &v
	}).(ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput)
}

// Specifies the id of the Placement Group to assign to the instances.
func (o ComputeInstanceGroupInstanceTemplatePlacementPolicyOutput) PlacementGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplatePlacementPolicy) string { return v.PlacementGroupId }).(pulumi.StringOutput)
}

type ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupInstanceTemplatePlacementPolicy)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput) ToComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput() ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput) ToComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput) Elem() ComputeInstanceGroupInstanceTemplatePlacementPolicyOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplatePlacementPolicy) ComputeInstanceGroupInstanceTemplatePlacementPolicy {
		return *v
	}).(ComputeInstanceGroupInstanceTemplatePlacementPolicyOutput)
}

// Specifies the id of the Placement Group to assign to the instances.
func (o ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput) PlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplatePlacementPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.PlacementGroupId
	}).(pulumi.StringPtrOutput)
}

type ComputeInstanceGroupInstanceTemplateResources struct {
	// If provided, specifies baseline core performance as a percent.
	CoreFraction *int `pulumi:"coreFraction"`
	// The number of CPU cores for the instance.
	Cores int  `pulumi:"cores"`
	Gpus  *int `pulumi:"gpus"`
	// The memory size in GB.
	Memory float64 `pulumi:"memory"`
}

// ComputeInstanceGroupInstanceTemplateResourcesInput is an input type that accepts ComputeInstanceGroupInstanceTemplateResourcesArgs and ComputeInstanceGroupInstanceTemplateResourcesOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceTemplateResourcesInput` via:
//
//          ComputeInstanceGroupInstanceTemplateResourcesArgs{...}
type ComputeInstanceGroupInstanceTemplateResourcesInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceTemplateResourcesOutput() ComputeInstanceGroupInstanceTemplateResourcesOutput
	ToComputeInstanceGroupInstanceTemplateResourcesOutputWithContext(context.Context) ComputeInstanceGroupInstanceTemplateResourcesOutput
}

type ComputeInstanceGroupInstanceTemplateResourcesArgs struct {
	// If provided, specifies baseline core performance as a percent.
	CoreFraction pulumi.IntPtrInput `pulumi:"coreFraction"`
	// The number of CPU cores for the instance.
	Cores pulumi.IntInput    `pulumi:"cores"`
	Gpus  pulumi.IntPtrInput `pulumi:"gpus"`
	// The memory size in GB.
	Memory pulumi.Float64Input `pulumi:"memory"`
}

func (ComputeInstanceGroupInstanceTemplateResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceTemplateResources)(nil)).Elem()
}

func (i ComputeInstanceGroupInstanceTemplateResourcesArgs) ToComputeInstanceGroupInstanceTemplateResourcesOutput() ComputeInstanceGroupInstanceTemplateResourcesOutput {
	return i.ToComputeInstanceGroupInstanceTemplateResourcesOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceTemplateResourcesArgs) ToComputeInstanceGroupInstanceTemplateResourcesOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateResourcesOutput)
}

func (i ComputeInstanceGroupInstanceTemplateResourcesArgs) ToComputeInstanceGroupInstanceTemplateResourcesPtrOutput() ComputeInstanceGroupInstanceTemplateResourcesPtrOutput {
	return i.ToComputeInstanceGroupInstanceTemplateResourcesPtrOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceTemplateResourcesArgs) ToComputeInstanceGroupInstanceTemplateResourcesPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateResourcesOutput).ToComputeInstanceGroupInstanceTemplateResourcesPtrOutputWithContext(ctx)
}

// ComputeInstanceGroupInstanceTemplateResourcesPtrInput is an input type that accepts ComputeInstanceGroupInstanceTemplateResourcesArgs, ComputeInstanceGroupInstanceTemplateResourcesPtr and ComputeInstanceGroupInstanceTemplateResourcesPtrOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceTemplateResourcesPtrInput` via:
//
//          ComputeInstanceGroupInstanceTemplateResourcesArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceGroupInstanceTemplateResourcesPtrInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceTemplateResourcesPtrOutput() ComputeInstanceGroupInstanceTemplateResourcesPtrOutput
	ToComputeInstanceGroupInstanceTemplateResourcesPtrOutputWithContext(context.Context) ComputeInstanceGroupInstanceTemplateResourcesPtrOutput
}

type computeInstanceGroupInstanceTemplateResourcesPtrType ComputeInstanceGroupInstanceTemplateResourcesArgs

func ComputeInstanceGroupInstanceTemplateResourcesPtr(v *ComputeInstanceGroupInstanceTemplateResourcesArgs) ComputeInstanceGroupInstanceTemplateResourcesPtrInput {
	return (*computeInstanceGroupInstanceTemplateResourcesPtrType)(v)
}

func (*computeInstanceGroupInstanceTemplateResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupInstanceTemplateResources)(nil)).Elem()
}

func (i *computeInstanceGroupInstanceTemplateResourcesPtrType) ToComputeInstanceGroupInstanceTemplateResourcesPtrOutput() ComputeInstanceGroupInstanceTemplateResourcesPtrOutput {
	return i.ToComputeInstanceGroupInstanceTemplateResourcesPtrOutputWithContext(context.Background())
}

func (i *computeInstanceGroupInstanceTemplateResourcesPtrType) ToComputeInstanceGroupInstanceTemplateResourcesPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateResourcesPtrOutput)
}

type ComputeInstanceGroupInstanceTemplateResourcesOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceTemplateResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceTemplateResources)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceTemplateResourcesOutput) ToComputeInstanceGroupInstanceTemplateResourcesOutput() ComputeInstanceGroupInstanceTemplateResourcesOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateResourcesOutput) ToComputeInstanceGroupInstanceTemplateResourcesOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateResourcesOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateResourcesOutput) ToComputeInstanceGroupInstanceTemplateResourcesPtrOutput() ComputeInstanceGroupInstanceTemplateResourcesPtrOutput {
	return o.ToComputeInstanceGroupInstanceTemplateResourcesPtrOutputWithContext(context.Background())
}

func (o ComputeInstanceGroupInstanceTemplateResourcesOutput) ToComputeInstanceGroupInstanceTemplateResourcesPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateResourcesPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateResources) *ComputeInstanceGroupInstanceTemplateResources {
		return &v
	}).(ComputeInstanceGroupInstanceTemplateResourcesPtrOutput)
}

// If provided, specifies baseline core performance as a percent.
func (o ComputeInstanceGroupInstanceTemplateResourcesOutput) CoreFraction() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateResources) *int { return v.CoreFraction }).(pulumi.IntPtrOutput)
}

// The number of CPU cores for the instance.
func (o ComputeInstanceGroupInstanceTemplateResourcesOutput) Cores() pulumi.IntOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateResources) int { return v.Cores }).(pulumi.IntOutput)
}

func (o ComputeInstanceGroupInstanceTemplateResourcesOutput) Gpus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateResources) *int { return v.Gpus }).(pulumi.IntPtrOutput)
}

// The memory size in GB.
func (o ComputeInstanceGroupInstanceTemplateResourcesOutput) Memory() pulumi.Float64Output {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateResources) float64 { return v.Memory }).(pulumi.Float64Output)
}

type ComputeInstanceGroupInstanceTemplateResourcesPtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceTemplateResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupInstanceTemplateResources)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceTemplateResourcesPtrOutput) ToComputeInstanceGroupInstanceTemplateResourcesPtrOutput() ComputeInstanceGroupInstanceTemplateResourcesPtrOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateResourcesPtrOutput) ToComputeInstanceGroupInstanceTemplateResourcesPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateResourcesPtrOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateResourcesPtrOutput) Elem() ComputeInstanceGroupInstanceTemplateResourcesOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplateResources) ComputeInstanceGroupInstanceTemplateResources {
		return *v
	}).(ComputeInstanceGroupInstanceTemplateResourcesOutput)
}

// If provided, specifies baseline core performance as a percent.
func (o ComputeInstanceGroupInstanceTemplateResourcesPtrOutput) CoreFraction() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplateResources) *int {
		if v == nil {
			return nil
		}
		return v.CoreFraction
	}).(pulumi.IntPtrOutput)
}

// The number of CPU cores for the instance.
func (o ComputeInstanceGroupInstanceTemplateResourcesPtrOutput) Cores() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplateResources) *int {
		if v == nil {
			return nil
		}
		return &v.Cores
	}).(pulumi.IntPtrOutput)
}

func (o ComputeInstanceGroupInstanceTemplateResourcesPtrOutput) Gpus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplateResources) *int {
		if v == nil {
			return nil
		}
		return v.Gpus
	}).(pulumi.IntPtrOutput)
}

// The memory size in GB.
func (o ComputeInstanceGroupInstanceTemplateResourcesPtrOutput) Memory() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplateResources) *float64 {
		if v == nil {
			return nil
		}
		return &v.Memory
	}).(pulumi.Float64PtrOutput)
}

type ComputeInstanceGroupInstanceTemplateSchedulingPolicy struct {
	// Specifies if the instance is preemptible. Defaults to false.
	Preemptible *bool `pulumi:"preemptible"`
}

// ComputeInstanceGroupInstanceTemplateSchedulingPolicyInput is an input type that accepts ComputeInstanceGroupInstanceTemplateSchedulingPolicyArgs and ComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceTemplateSchedulingPolicyInput` via:
//
//          ComputeInstanceGroupInstanceTemplateSchedulingPolicyArgs{...}
type ComputeInstanceGroupInstanceTemplateSchedulingPolicyInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput() ComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput
	ToComputeInstanceGroupInstanceTemplateSchedulingPolicyOutputWithContext(context.Context) ComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput
}

type ComputeInstanceGroupInstanceTemplateSchedulingPolicyArgs struct {
	// Specifies if the instance is preemptible. Defaults to false.
	Preemptible pulumi.BoolPtrInput `pulumi:"preemptible"`
}

func (ComputeInstanceGroupInstanceTemplateSchedulingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceTemplateSchedulingPolicy)(nil)).Elem()
}

func (i ComputeInstanceGroupInstanceTemplateSchedulingPolicyArgs) ToComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput() ComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput {
	return i.ToComputeInstanceGroupInstanceTemplateSchedulingPolicyOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceTemplateSchedulingPolicyArgs) ToComputeInstanceGroupInstanceTemplateSchedulingPolicyOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput)
}

func (i ComputeInstanceGroupInstanceTemplateSchedulingPolicyArgs) ToComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput() ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput {
	return i.ToComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceTemplateSchedulingPolicyArgs) ToComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput).ToComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutputWithContext(ctx)
}

// ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrInput is an input type that accepts ComputeInstanceGroupInstanceTemplateSchedulingPolicyArgs, ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtr and ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrInput` via:
//
//          ComputeInstanceGroupInstanceTemplateSchedulingPolicyArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput() ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput
	ToComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutputWithContext(context.Context) ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput
}

type computeInstanceGroupInstanceTemplateSchedulingPolicyPtrType ComputeInstanceGroupInstanceTemplateSchedulingPolicyArgs

func ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtr(v *ComputeInstanceGroupInstanceTemplateSchedulingPolicyArgs) ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrInput {
	return (*computeInstanceGroupInstanceTemplateSchedulingPolicyPtrType)(v)
}

func (*computeInstanceGroupInstanceTemplateSchedulingPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupInstanceTemplateSchedulingPolicy)(nil)).Elem()
}

func (i *computeInstanceGroupInstanceTemplateSchedulingPolicyPtrType) ToComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput() ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput {
	return i.ToComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutputWithContext(context.Background())
}

func (i *computeInstanceGroupInstanceTemplateSchedulingPolicyPtrType) ToComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput)
}

type ComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceTemplateSchedulingPolicy)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput) ToComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput() ComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput) ToComputeInstanceGroupInstanceTemplateSchedulingPolicyOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput) ToComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput() ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput {
	return o.ToComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutputWithContext(context.Background())
}

func (o ComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput) ToComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateSchedulingPolicy) *ComputeInstanceGroupInstanceTemplateSchedulingPolicy {
		return &v
	}).(ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput)
}

// Specifies if the instance is preemptible. Defaults to false.
func (o ComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateSchedulingPolicy) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

type ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupInstanceTemplateSchedulingPolicy)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput) ToComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput() ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput) ToComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput) Elem() ComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplateSchedulingPolicy) ComputeInstanceGroupInstanceTemplateSchedulingPolicy {
		return *v
	}).(ComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput)
}

// Specifies if the instance is preemptible. Defaults to false.
func (o ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupInstanceTemplateSchedulingPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.Preemptible
	}).(pulumi.BoolPtrOutput)
}

type ComputeInstanceGroupInstanceTemplateSecondaryDisk struct {
	// This value can be used to reference the device under `/dev/disk/by-id/`.
	DeviceName *string `pulumi:"deviceName"`
	// Parameters for creating a disk alongside the instance. The structure is documented below.
	InitializeParams ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParams `pulumi:"initializeParams"`
	// The access mode to the disk resource. By default a disk is attached in `READ_WRITE` mode.
	Mode *string `pulumi:"mode"`
}

// ComputeInstanceGroupInstanceTemplateSecondaryDiskInput is an input type that accepts ComputeInstanceGroupInstanceTemplateSecondaryDiskArgs and ComputeInstanceGroupInstanceTemplateSecondaryDiskOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceTemplateSecondaryDiskInput` via:
//
//          ComputeInstanceGroupInstanceTemplateSecondaryDiskArgs{...}
type ComputeInstanceGroupInstanceTemplateSecondaryDiskInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceTemplateSecondaryDiskOutput() ComputeInstanceGroupInstanceTemplateSecondaryDiskOutput
	ToComputeInstanceGroupInstanceTemplateSecondaryDiskOutputWithContext(context.Context) ComputeInstanceGroupInstanceTemplateSecondaryDiskOutput
}

type ComputeInstanceGroupInstanceTemplateSecondaryDiskArgs struct {
	// This value can be used to reference the device under `/dev/disk/by-id/`.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// Parameters for creating a disk alongside the instance. The structure is documented below.
	InitializeParams ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsInput `pulumi:"initializeParams"`
	// The access mode to the disk resource. By default a disk is attached in `READ_WRITE` mode.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (ComputeInstanceGroupInstanceTemplateSecondaryDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceTemplateSecondaryDisk)(nil)).Elem()
}

func (i ComputeInstanceGroupInstanceTemplateSecondaryDiskArgs) ToComputeInstanceGroupInstanceTemplateSecondaryDiskOutput() ComputeInstanceGroupInstanceTemplateSecondaryDiskOutput {
	return i.ToComputeInstanceGroupInstanceTemplateSecondaryDiskOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceTemplateSecondaryDiskArgs) ToComputeInstanceGroupInstanceTemplateSecondaryDiskOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateSecondaryDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateSecondaryDiskOutput)
}

// ComputeInstanceGroupInstanceTemplateSecondaryDiskArrayInput is an input type that accepts ComputeInstanceGroupInstanceTemplateSecondaryDiskArray and ComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceTemplateSecondaryDiskArrayInput` via:
//
//          ComputeInstanceGroupInstanceTemplateSecondaryDiskArray{ ComputeInstanceGroupInstanceTemplateSecondaryDiskArgs{...} }
type ComputeInstanceGroupInstanceTemplateSecondaryDiskArrayInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput() ComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput
	ToComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutputWithContext(context.Context) ComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput
}

type ComputeInstanceGroupInstanceTemplateSecondaryDiskArray []ComputeInstanceGroupInstanceTemplateSecondaryDiskInput

func (ComputeInstanceGroupInstanceTemplateSecondaryDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceGroupInstanceTemplateSecondaryDisk)(nil)).Elem()
}

func (i ComputeInstanceGroupInstanceTemplateSecondaryDiskArray) ToComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput() ComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput {
	return i.ToComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceTemplateSecondaryDiskArray) ToComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput)
}

type ComputeInstanceGroupInstanceTemplateSecondaryDiskOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceTemplateSecondaryDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceTemplateSecondaryDisk)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceTemplateSecondaryDiskOutput) ToComputeInstanceGroupInstanceTemplateSecondaryDiskOutput() ComputeInstanceGroupInstanceTemplateSecondaryDiskOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateSecondaryDiskOutput) ToComputeInstanceGroupInstanceTemplateSecondaryDiskOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateSecondaryDiskOutput {
	return o
}

// This value can be used to reference the device under `/dev/disk/by-id/`.
func (o ComputeInstanceGroupInstanceTemplateSecondaryDiskOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateSecondaryDisk) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// Parameters for creating a disk alongside the instance. The structure is documented below.
func (o ComputeInstanceGroupInstanceTemplateSecondaryDiskOutput) InitializeParams() ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateSecondaryDisk) ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParams {
		return v.InitializeParams
	}).(ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput)
}

// The access mode to the disk resource. By default a disk is attached in `READ_WRITE` mode.
func (o ComputeInstanceGroupInstanceTemplateSecondaryDiskOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateSecondaryDisk) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type ComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceGroupInstanceTemplateSecondaryDisk)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput) ToComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput() ComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput) ToComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput) Index(i pulumi.IntInput) ComputeInstanceGroupInstanceTemplateSecondaryDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeInstanceGroupInstanceTemplateSecondaryDisk {
		return vs[0].([]ComputeInstanceGroupInstanceTemplateSecondaryDisk)[vs[1].(int)]
	}).(ComputeInstanceGroupInstanceTemplateSecondaryDiskOutput)
}

type ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParams struct {
	// A description of the boot disk.
	Description *string `pulumi:"description"`
	// The disk image to initialize this disk from.
	ImageId *string `pulumi:"imageId"`
	// The number of instances in the instance group.
	Size *int `pulumi:"size"`
	// The snapshot to initialize this disk from.
	SnapshotId *string `pulumi:"snapshotId"`
	// Network acceleration type. By default a network is in `STANDARD` mode.
	Type *string `pulumi:"type"`
}

// ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsInput is an input type that accepts ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsArgs and ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsInput` via:
//
//          ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsArgs{...}
type ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsInput interface {
	pulumi.Input

	ToComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput() ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput
	ToComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutputWithContext(context.Context) ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput
}

type ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsArgs struct {
	// A description of the boot disk.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The disk image to initialize this disk from.
	ImageId pulumi.StringPtrInput `pulumi:"imageId"`
	// The number of instances in the instance group.
	Size pulumi.IntPtrInput `pulumi:"size"`
	// The snapshot to initialize this disk from.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// Network acceleration type. By default a network is in `STANDARD` mode.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParams)(nil)).Elem()
}

func (i ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsArgs) ToComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput() ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput {
	return i.ToComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsArgs) ToComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput)
}

type ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParams)(nil)).Elem()
}

func (o ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput) ToComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput() ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput {
	return o
}

func (o ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput) ToComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutputWithContext(ctx context.Context) ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput {
	return o
}

// A description of the boot disk.
func (o ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParams) *string {
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The disk image to initialize this disk from.
func (o ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput) ImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParams) *string { return v.ImageId }).(pulumi.StringPtrOutput)
}

// The number of instances in the instance group.
func (o ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParams) *int { return v.Size }).(pulumi.IntPtrOutput)
}

// The snapshot to initialize this disk from.
func (o ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParams) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// Network acceleration type. By default a network is in `STANDARD` mode.
func (o ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParams) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ComputeInstanceGroupLoadBalancer struct {
	// The status message of the instance.
	StatusMessage *string `pulumi:"statusMessage"`
	// A description of the target group.
	TargetGroupDescription *string `pulumi:"targetGroupDescription"`
	TargetGroupId          *string `pulumi:"targetGroupId"`
	// A set of key/value label pairs.
	TargetGroupLabels map[string]string `pulumi:"targetGroupLabels"`
	// The name of the target group.
	TargetGroupName *string `pulumi:"targetGroupName"`
}

// ComputeInstanceGroupLoadBalancerInput is an input type that accepts ComputeInstanceGroupLoadBalancerArgs and ComputeInstanceGroupLoadBalancerOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupLoadBalancerInput` via:
//
//          ComputeInstanceGroupLoadBalancerArgs{...}
type ComputeInstanceGroupLoadBalancerInput interface {
	pulumi.Input

	ToComputeInstanceGroupLoadBalancerOutput() ComputeInstanceGroupLoadBalancerOutput
	ToComputeInstanceGroupLoadBalancerOutputWithContext(context.Context) ComputeInstanceGroupLoadBalancerOutput
}

type ComputeInstanceGroupLoadBalancerArgs struct {
	// The status message of the instance.
	StatusMessage pulumi.StringPtrInput `pulumi:"statusMessage"`
	// A description of the target group.
	TargetGroupDescription pulumi.StringPtrInput `pulumi:"targetGroupDescription"`
	TargetGroupId          pulumi.StringPtrInput `pulumi:"targetGroupId"`
	// A set of key/value label pairs.
	TargetGroupLabels pulumi.StringMapInput `pulumi:"targetGroupLabels"`
	// The name of the target group.
	TargetGroupName pulumi.StringPtrInput `pulumi:"targetGroupName"`
}

func (ComputeInstanceGroupLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupLoadBalancer)(nil)).Elem()
}

func (i ComputeInstanceGroupLoadBalancerArgs) ToComputeInstanceGroupLoadBalancerOutput() ComputeInstanceGroupLoadBalancerOutput {
	return i.ToComputeInstanceGroupLoadBalancerOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupLoadBalancerArgs) ToComputeInstanceGroupLoadBalancerOutputWithContext(ctx context.Context) ComputeInstanceGroupLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupLoadBalancerOutput)
}

func (i ComputeInstanceGroupLoadBalancerArgs) ToComputeInstanceGroupLoadBalancerPtrOutput() ComputeInstanceGroupLoadBalancerPtrOutput {
	return i.ToComputeInstanceGroupLoadBalancerPtrOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupLoadBalancerArgs) ToComputeInstanceGroupLoadBalancerPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupLoadBalancerOutput).ToComputeInstanceGroupLoadBalancerPtrOutputWithContext(ctx)
}

// ComputeInstanceGroupLoadBalancerPtrInput is an input type that accepts ComputeInstanceGroupLoadBalancerArgs, ComputeInstanceGroupLoadBalancerPtr and ComputeInstanceGroupLoadBalancerPtrOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupLoadBalancerPtrInput` via:
//
//          ComputeInstanceGroupLoadBalancerArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceGroupLoadBalancerPtrInput interface {
	pulumi.Input

	ToComputeInstanceGroupLoadBalancerPtrOutput() ComputeInstanceGroupLoadBalancerPtrOutput
	ToComputeInstanceGroupLoadBalancerPtrOutputWithContext(context.Context) ComputeInstanceGroupLoadBalancerPtrOutput
}

type computeInstanceGroupLoadBalancerPtrType ComputeInstanceGroupLoadBalancerArgs

func ComputeInstanceGroupLoadBalancerPtr(v *ComputeInstanceGroupLoadBalancerArgs) ComputeInstanceGroupLoadBalancerPtrInput {
	return (*computeInstanceGroupLoadBalancerPtrType)(v)
}

func (*computeInstanceGroupLoadBalancerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupLoadBalancer)(nil)).Elem()
}

func (i *computeInstanceGroupLoadBalancerPtrType) ToComputeInstanceGroupLoadBalancerPtrOutput() ComputeInstanceGroupLoadBalancerPtrOutput {
	return i.ToComputeInstanceGroupLoadBalancerPtrOutputWithContext(context.Background())
}

func (i *computeInstanceGroupLoadBalancerPtrType) ToComputeInstanceGroupLoadBalancerPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupLoadBalancerPtrOutput)
}

type ComputeInstanceGroupLoadBalancerOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupLoadBalancer)(nil)).Elem()
}

func (o ComputeInstanceGroupLoadBalancerOutput) ToComputeInstanceGroupLoadBalancerOutput() ComputeInstanceGroupLoadBalancerOutput {
	return o
}

func (o ComputeInstanceGroupLoadBalancerOutput) ToComputeInstanceGroupLoadBalancerOutputWithContext(ctx context.Context) ComputeInstanceGroupLoadBalancerOutput {
	return o
}

func (o ComputeInstanceGroupLoadBalancerOutput) ToComputeInstanceGroupLoadBalancerPtrOutput() ComputeInstanceGroupLoadBalancerPtrOutput {
	return o.ToComputeInstanceGroupLoadBalancerPtrOutputWithContext(context.Background())
}

func (o ComputeInstanceGroupLoadBalancerOutput) ToComputeInstanceGroupLoadBalancerPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupLoadBalancerPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupLoadBalancer) *ComputeInstanceGroupLoadBalancer {
		return &v
	}).(ComputeInstanceGroupLoadBalancerPtrOutput)
}

// The status message of the instance.
func (o ComputeInstanceGroupLoadBalancerOutput) StatusMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupLoadBalancer) *string { return v.StatusMessage }).(pulumi.StringPtrOutput)
}

// A description of the target group.
func (o ComputeInstanceGroupLoadBalancerOutput) TargetGroupDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupLoadBalancer) *string { return v.TargetGroupDescription }).(pulumi.StringPtrOutput)
}

func (o ComputeInstanceGroupLoadBalancerOutput) TargetGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupLoadBalancer) *string { return v.TargetGroupId }).(pulumi.StringPtrOutput)
}

// A set of key/value label pairs.
func (o ComputeInstanceGroupLoadBalancerOutput) TargetGroupLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ComputeInstanceGroupLoadBalancer) map[string]string { return v.TargetGroupLabels }).(pulumi.StringMapOutput)
}

// The name of the target group.
func (o ComputeInstanceGroupLoadBalancerOutput) TargetGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupLoadBalancer) *string { return v.TargetGroupName }).(pulumi.StringPtrOutput)
}

type ComputeInstanceGroupLoadBalancerPtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupLoadBalancerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupLoadBalancer)(nil)).Elem()
}

func (o ComputeInstanceGroupLoadBalancerPtrOutput) ToComputeInstanceGroupLoadBalancerPtrOutput() ComputeInstanceGroupLoadBalancerPtrOutput {
	return o
}

func (o ComputeInstanceGroupLoadBalancerPtrOutput) ToComputeInstanceGroupLoadBalancerPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupLoadBalancerPtrOutput {
	return o
}

func (o ComputeInstanceGroupLoadBalancerPtrOutput) Elem() ComputeInstanceGroupLoadBalancerOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupLoadBalancer) ComputeInstanceGroupLoadBalancer { return *v }).(ComputeInstanceGroupLoadBalancerOutput)
}

// The status message of the instance.
func (o ComputeInstanceGroupLoadBalancerPtrOutput) StatusMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupLoadBalancer) *string {
		if v == nil {
			return nil
		}
		return v.StatusMessage
	}).(pulumi.StringPtrOutput)
}

// A description of the target group.
func (o ComputeInstanceGroupLoadBalancerPtrOutput) TargetGroupDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupLoadBalancer) *string {
		if v == nil {
			return nil
		}
		return v.TargetGroupDescription
	}).(pulumi.StringPtrOutput)
}

func (o ComputeInstanceGroupLoadBalancerPtrOutput) TargetGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupLoadBalancer) *string {
		if v == nil {
			return nil
		}
		return v.TargetGroupId
	}).(pulumi.StringPtrOutput)
}

// A set of key/value label pairs.
func (o ComputeInstanceGroupLoadBalancerPtrOutput) TargetGroupLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupLoadBalancer) map[string]string {
		if v == nil {
			return nil
		}
		return v.TargetGroupLabels
	}).(pulumi.StringMapOutput)
}

// The name of the target group.
func (o ComputeInstanceGroupLoadBalancerPtrOutput) TargetGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupLoadBalancer) *string {
		if v == nil {
			return nil
		}
		return v.TargetGroupName
	}).(pulumi.StringPtrOutput)
}

type ComputeInstanceGroupScalePolicy struct {
	// The auto scaling policy of the instance group. The structure is documented below.
	AutoScale *ComputeInstanceGroupScalePolicyAutoScale `pulumi:"autoScale"`
	// The fixed scaling policy of the instance group. The structure is documented below.
	FixedScale *ComputeInstanceGroupScalePolicyFixedScale `pulumi:"fixedScale"`
	// The test auto scaling policy of the instance group. Use it to test how the auto scale works.
	// The structure is documented below.
	TestAutoScale *ComputeInstanceGroupScalePolicyTestAutoScale `pulumi:"testAutoScale"`
}

// ComputeInstanceGroupScalePolicyInput is an input type that accepts ComputeInstanceGroupScalePolicyArgs and ComputeInstanceGroupScalePolicyOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupScalePolicyInput` via:
//
//          ComputeInstanceGroupScalePolicyArgs{...}
type ComputeInstanceGroupScalePolicyInput interface {
	pulumi.Input

	ToComputeInstanceGroupScalePolicyOutput() ComputeInstanceGroupScalePolicyOutput
	ToComputeInstanceGroupScalePolicyOutputWithContext(context.Context) ComputeInstanceGroupScalePolicyOutput
}

type ComputeInstanceGroupScalePolicyArgs struct {
	// The auto scaling policy of the instance group. The structure is documented below.
	AutoScale ComputeInstanceGroupScalePolicyAutoScalePtrInput `pulumi:"autoScale"`
	// The fixed scaling policy of the instance group. The structure is documented below.
	FixedScale ComputeInstanceGroupScalePolicyFixedScalePtrInput `pulumi:"fixedScale"`
	// The test auto scaling policy of the instance group. Use it to test how the auto scale works.
	// The structure is documented below.
	TestAutoScale ComputeInstanceGroupScalePolicyTestAutoScalePtrInput `pulumi:"testAutoScale"`
}

func (ComputeInstanceGroupScalePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupScalePolicy)(nil)).Elem()
}

func (i ComputeInstanceGroupScalePolicyArgs) ToComputeInstanceGroupScalePolicyOutput() ComputeInstanceGroupScalePolicyOutput {
	return i.ToComputeInstanceGroupScalePolicyOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupScalePolicyArgs) ToComputeInstanceGroupScalePolicyOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupScalePolicyOutput)
}

func (i ComputeInstanceGroupScalePolicyArgs) ToComputeInstanceGroupScalePolicyPtrOutput() ComputeInstanceGroupScalePolicyPtrOutput {
	return i.ToComputeInstanceGroupScalePolicyPtrOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupScalePolicyArgs) ToComputeInstanceGroupScalePolicyPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupScalePolicyOutput).ToComputeInstanceGroupScalePolicyPtrOutputWithContext(ctx)
}

// ComputeInstanceGroupScalePolicyPtrInput is an input type that accepts ComputeInstanceGroupScalePolicyArgs, ComputeInstanceGroupScalePolicyPtr and ComputeInstanceGroupScalePolicyPtrOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupScalePolicyPtrInput` via:
//
//          ComputeInstanceGroupScalePolicyArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceGroupScalePolicyPtrInput interface {
	pulumi.Input

	ToComputeInstanceGroupScalePolicyPtrOutput() ComputeInstanceGroupScalePolicyPtrOutput
	ToComputeInstanceGroupScalePolicyPtrOutputWithContext(context.Context) ComputeInstanceGroupScalePolicyPtrOutput
}

type computeInstanceGroupScalePolicyPtrType ComputeInstanceGroupScalePolicyArgs

func ComputeInstanceGroupScalePolicyPtr(v *ComputeInstanceGroupScalePolicyArgs) ComputeInstanceGroupScalePolicyPtrInput {
	return (*computeInstanceGroupScalePolicyPtrType)(v)
}

func (*computeInstanceGroupScalePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupScalePolicy)(nil)).Elem()
}

func (i *computeInstanceGroupScalePolicyPtrType) ToComputeInstanceGroupScalePolicyPtrOutput() ComputeInstanceGroupScalePolicyPtrOutput {
	return i.ToComputeInstanceGroupScalePolicyPtrOutputWithContext(context.Background())
}

func (i *computeInstanceGroupScalePolicyPtrType) ToComputeInstanceGroupScalePolicyPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupScalePolicyPtrOutput)
}

type ComputeInstanceGroupScalePolicyOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupScalePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupScalePolicy)(nil)).Elem()
}

func (o ComputeInstanceGroupScalePolicyOutput) ToComputeInstanceGroupScalePolicyOutput() ComputeInstanceGroupScalePolicyOutput {
	return o
}

func (o ComputeInstanceGroupScalePolicyOutput) ToComputeInstanceGroupScalePolicyOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyOutput {
	return o
}

func (o ComputeInstanceGroupScalePolicyOutput) ToComputeInstanceGroupScalePolicyPtrOutput() ComputeInstanceGroupScalePolicyPtrOutput {
	return o.ToComputeInstanceGroupScalePolicyPtrOutputWithContext(context.Background())
}

func (o ComputeInstanceGroupScalePolicyOutput) ToComputeInstanceGroupScalePolicyPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicy) *ComputeInstanceGroupScalePolicy {
		return &v
	}).(ComputeInstanceGroupScalePolicyPtrOutput)
}

// The auto scaling policy of the instance group. The structure is documented below.
func (o ComputeInstanceGroupScalePolicyOutput) AutoScale() ComputeInstanceGroupScalePolicyAutoScalePtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicy) *ComputeInstanceGroupScalePolicyAutoScale { return v.AutoScale }).(ComputeInstanceGroupScalePolicyAutoScalePtrOutput)
}

// The fixed scaling policy of the instance group. The structure is documented below.
func (o ComputeInstanceGroupScalePolicyOutput) FixedScale() ComputeInstanceGroupScalePolicyFixedScalePtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicy) *ComputeInstanceGroupScalePolicyFixedScale {
		return v.FixedScale
	}).(ComputeInstanceGroupScalePolicyFixedScalePtrOutput)
}

// The test auto scaling policy of the instance group. Use it to test how the auto scale works.
// The structure is documented below.
func (o ComputeInstanceGroupScalePolicyOutput) TestAutoScale() ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicy) *ComputeInstanceGroupScalePolicyTestAutoScale {
		return v.TestAutoScale
	}).(ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput)
}

type ComputeInstanceGroupScalePolicyPtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupScalePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupScalePolicy)(nil)).Elem()
}

func (o ComputeInstanceGroupScalePolicyPtrOutput) ToComputeInstanceGroupScalePolicyPtrOutput() ComputeInstanceGroupScalePolicyPtrOutput {
	return o
}

func (o ComputeInstanceGroupScalePolicyPtrOutput) ToComputeInstanceGroupScalePolicyPtrOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyPtrOutput {
	return o
}

func (o ComputeInstanceGroupScalePolicyPtrOutput) Elem() ComputeInstanceGroupScalePolicyOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupScalePolicy) ComputeInstanceGroupScalePolicy { return *v }).(ComputeInstanceGroupScalePolicyOutput)
}

// The auto scaling policy of the instance group. The structure is documented below.
func (o ComputeInstanceGroupScalePolicyPtrOutput) AutoScale() ComputeInstanceGroupScalePolicyAutoScalePtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupScalePolicy) *ComputeInstanceGroupScalePolicyAutoScale {
		if v == nil {
			return nil
		}
		return v.AutoScale
	}).(ComputeInstanceGroupScalePolicyAutoScalePtrOutput)
}

// The fixed scaling policy of the instance group. The structure is documented below.
func (o ComputeInstanceGroupScalePolicyPtrOutput) FixedScale() ComputeInstanceGroupScalePolicyFixedScalePtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupScalePolicy) *ComputeInstanceGroupScalePolicyFixedScale {
		if v == nil {
			return nil
		}
		return v.FixedScale
	}).(ComputeInstanceGroupScalePolicyFixedScalePtrOutput)
}

// The test auto scaling policy of the instance group. Use it to test how the auto scale works.
// The structure is documented below.
func (o ComputeInstanceGroupScalePolicyPtrOutput) TestAutoScale() ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupScalePolicy) *ComputeInstanceGroupScalePolicyTestAutoScale {
		if v == nil {
			return nil
		}
		return v.TestAutoScale
	}).(ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput)
}

type ComputeInstanceGroupScalePolicyAutoScale struct {
	// Target CPU load level.
	CpuUtilizationTarget *float64 `pulumi:"cpuUtilizationTarget"`
	// A list of custom rules. The structure is documented below.
	CustomRules []ComputeInstanceGroupScalePolicyAutoScaleCustomRule `pulumi:"customRules"`
	// The initial number of instances in the instance group.
	InitialSize int `pulumi:"initialSize"`
	// The maximum number of virtual machines in the group.
	MaxSize *int `pulumi:"maxSize"`
	// The amount of time, in seconds, that metrics are averaged for.
	// If the average value at the end of the interval is higher than the `cpuUtilizationTarget`,
	// the instance group will increase the number of virtual machines in the group.
	MeasurementDuration int `pulumi:"measurementDuration"`
	// The minimum number of virtual machines in a single availability zone.
	MinZoneSize *int `pulumi:"minZoneSize"`
	// The minimum time interval, in seconds, to monitor the load before
	// an instance group can reduce the number of virtual machines in the group. During this time, the group
	// will not decrease even if the average load falls below the value of `cpuUtilizationTarget`.
	StabilizationDuration *int `pulumi:"stabilizationDuration"`
	// The warm-up time of the virtual machine, in seconds. During this time,
	// traffic is fed to the virtual machine, but load metrics are not taken into account.
	WarmupDuration *int `pulumi:"warmupDuration"`
}

// ComputeInstanceGroupScalePolicyAutoScaleInput is an input type that accepts ComputeInstanceGroupScalePolicyAutoScaleArgs and ComputeInstanceGroupScalePolicyAutoScaleOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupScalePolicyAutoScaleInput` via:
//
//          ComputeInstanceGroupScalePolicyAutoScaleArgs{...}
type ComputeInstanceGroupScalePolicyAutoScaleInput interface {
	pulumi.Input

	ToComputeInstanceGroupScalePolicyAutoScaleOutput() ComputeInstanceGroupScalePolicyAutoScaleOutput
	ToComputeInstanceGroupScalePolicyAutoScaleOutputWithContext(context.Context) ComputeInstanceGroupScalePolicyAutoScaleOutput
}

type ComputeInstanceGroupScalePolicyAutoScaleArgs struct {
	// Target CPU load level.
	CpuUtilizationTarget pulumi.Float64PtrInput `pulumi:"cpuUtilizationTarget"`
	// A list of custom rules. The structure is documented below.
	CustomRules ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayInput `pulumi:"customRules"`
	// The initial number of instances in the instance group.
	InitialSize pulumi.IntInput `pulumi:"initialSize"`
	// The maximum number of virtual machines in the group.
	MaxSize pulumi.IntPtrInput `pulumi:"maxSize"`
	// The amount of time, in seconds, that metrics are averaged for.
	// If the average value at the end of the interval is higher than the `cpuUtilizationTarget`,
	// the instance group will increase the number of virtual machines in the group.
	MeasurementDuration pulumi.IntInput `pulumi:"measurementDuration"`
	// The minimum number of virtual machines in a single availability zone.
	MinZoneSize pulumi.IntPtrInput `pulumi:"minZoneSize"`
	// The minimum time interval, in seconds, to monitor the load before
	// an instance group can reduce the number of virtual machines in the group. During this time, the group
	// will not decrease even if the average load falls below the value of `cpuUtilizationTarget`.
	StabilizationDuration pulumi.IntPtrInput `pulumi:"stabilizationDuration"`
	// The warm-up time of the virtual machine, in seconds. During this time,
	// traffic is fed to the virtual machine, but load metrics are not taken into account.
	WarmupDuration pulumi.IntPtrInput `pulumi:"warmupDuration"`
}

func (ComputeInstanceGroupScalePolicyAutoScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupScalePolicyAutoScale)(nil)).Elem()
}

func (i ComputeInstanceGroupScalePolicyAutoScaleArgs) ToComputeInstanceGroupScalePolicyAutoScaleOutput() ComputeInstanceGroupScalePolicyAutoScaleOutput {
	return i.ToComputeInstanceGroupScalePolicyAutoScaleOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupScalePolicyAutoScaleArgs) ToComputeInstanceGroupScalePolicyAutoScaleOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyAutoScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupScalePolicyAutoScaleOutput)
}

func (i ComputeInstanceGroupScalePolicyAutoScaleArgs) ToComputeInstanceGroupScalePolicyAutoScalePtrOutput() ComputeInstanceGroupScalePolicyAutoScalePtrOutput {
	return i.ToComputeInstanceGroupScalePolicyAutoScalePtrOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupScalePolicyAutoScaleArgs) ToComputeInstanceGroupScalePolicyAutoScalePtrOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyAutoScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupScalePolicyAutoScaleOutput).ToComputeInstanceGroupScalePolicyAutoScalePtrOutputWithContext(ctx)
}

// ComputeInstanceGroupScalePolicyAutoScalePtrInput is an input type that accepts ComputeInstanceGroupScalePolicyAutoScaleArgs, ComputeInstanceGroupScalePolicyAutoScalePtr and ComputeInstanceGroupScalePolicyAutoScalePtrOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupScalePolicyAutoScalePtrInput` via:
//
//          ComputeInstanceGroupScalePolicyAutoScaleArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceGroupScalePolicyAutoScalePtrInput interface {
	pulumi.Input

	ToComputeInstanceGroupScalePolicyAutoScalePtrOutput() ComputeInstanceGroupScalePolicyAutoScalePtrOutput
	ToComputeInstanceGroupScalePolicyAutoScalePtrOutputWithContext(context.Context) ComputeInstanceGroupScalePolicyAutoScalePtrOutput
}

type computeInstanceGroupScalePolicyAutoScalePtrType ComputeInstanceGroupScalePolicyAutoScaleArgs

func ComputeInstanceGroupScalePolicyAutoScalePtr(v *ComputeInstanceGroupScalePolicyAutoScaleArgs) ComputeInstanceGroupScalePolicyAutoScalePtrInput {
	return (*computeInstanceGroupScalePolicyAutoScalePtrType)(v)
}

func (*computeInstanceGroupScalePolicyAutoScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupScalePolicyAutoScale)(nil)).Elem()
}

func (i *computeInstanceGroupScalePolicyAutoScalePtrType) ToComputeInstanceGroupScalePolicyAutoScalePtrOutput() ComputeInstanceGroupScalePolicyAutoScalePtrOutput {
	return i.ToComputeInstanceGroupScalePolicyAutoScalePtrOutputWithContext(context.Background())
}

func (i *computeInstanceGroupScalePolicyAutoScalePtrType) ToComputeInstanceGroupScalePolicyAutoScalePtrOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyAutoScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupScalePolicyAutoScalePtrOutput)
}

type ComputeInstanceGroupScalePolicyAutoScaleOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupScalePolicyAutoScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupScalePolicyAutoScale)(nil)).Elem()
}

func (o ComputeInstanceGroupScalePolicyAutoScaleOutput) ToComputeInstanceGroupScalePolicyAutoScaleOutput() ComputeInstanceGroupScalePolicyAutoScaleOutput {
	return o
}

func (o ComputeInstanceGroupScalePolicyAutoScaleOutput) ToComputeInstanceGroupScalePolicyAutoScaleOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyAutoScaleOutput {
	return o
}

func (o ComputeInstanceGroupScalePolicyAutoScaleOutput) ToComputeInstanceGroupScalePolicyAutoScalePtrOutput() ComputeInstanceGroupScalePolicyAutoScalePtrOutput {
	return o.ToComputeInstanceGroupScalePolicyAutoScalePtrOutputWithContext(context.Background())
}

func (o ComputeInstanceGroupScalePolicyAutoScaleOutput) ToComputeInstanceGroupScalePolicyAutoScalePtrOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyAutoScalePtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyAutoScale) *ComputeInstanceGroupScalePolicyAutoScale {
		return &v
	}).(ComputeInstanceGroupScalePolicyAutoScalePtrOutput)
}

// Target CPU load level.
func (o ComputeInstanceGroupScalePolicyAutoScaleOutput) CpuUtilizationTarget() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyAutoScale) *float64 { return v.CpuUtilizationTarget }).(pulumi.Float64PtrOutput)
}

// A list of custom rules. The structure is documented below.
func (o ComputeInstanceGroupScalePolicyAutoScaleOutput) CustomRules() ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyAutoScale) []ComputeInstanceGroupScalePolicyAutoScaleCustomRule {
		return v.CustomRules
	}).(ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput)
}

// The initial number of instances in the instance group.
func (o ComputeInstanceGroupScalePolicyAutoScaleOutput) InitialSize() pulumi.IntOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyAutoScale) int { return v.InitialSize }).(pulumi.IntOutput)
}

// The maximum number of virtual machines in the group.
func (o ComputeInstanceGroupScalePolicyAutoScaleOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyAutoScale) *int { return v.MaxSize }).(pulumi.IntPtrOutput)
}

// The amount of time, in seconds, that metrics are averaged for.
// If the average value at the end of the interval is higher than the `cpuUtilizationTarget`,
// the instance group will increase the number of virtual machines in the group.
func (o ComputeInstanceGroupScalePolicyAutoScaleOutput) MeasurementDuration() pulumi.IntOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyAutoScale) int { return v.MeasurementDuration }).(pulumi.IntOutput)
}

// The minimum number of virtual machines in a single availability zone.
func (o ComputeInstanceGroupScalePolicyAutoScaleOutput) MinZoneSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyAutoScale) *int { return v.MinZoneSize }).(pulumi.IntPtrOutput)
}

// The minimum time interval, in seconds, to monitor the load before
// an instance group can reduce the number of virtual machines in the group. During this time, the group
// will not decrease even if the average load falls below the value of `cpuUtilizationTarget`.
func (o ComputeInstanceGroupScalePolicyAutoScaleOutput) StabilizationDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyAutoScale) *int { return v.StabilizationDuration }).(pulumi.IntPtrOutput)
}

// The warm-up time of the virtual machine, in seconds. During this time,
// traffic is fed to the virtual machine, but load metrics are not taken into account.
func (o ComputeInstanceGroupScalePolicyAutoScaleOutput) WarmupDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyAutoScale) *int { return v.WarmupDuration }).(pulumi.IntPtrOutput)
}

type ComputeInstanceGroupScalePolicyAutoScalePtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupScalePolicyAutoScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupScalePolicyAutoScale)(nil)).Elem()
}

func (o ComputeInstanceGroupScalePolicyAutoScalePtrOutput) ToComputeInstanceGroupScalePolicyAutoScalePtrOutput() ComputeInstanceGroupScalePolicyAutoScalePtrOutput {
	return o
}

func (o ComputeInstanceGroupScalePolicyAutoScalePtrOutput) ToComputeInstanceGroupScalePolicyAutoScalePtrOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyAutoScalePtrOutput {
	return o
}

func (o ComputeInstanceGroupScalePolicyAutoScalePtrOutput) Elem() ComputeInstanceGroupScalePolicyAutoScaleOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupScalePolicyAutoScale) ComputeInstanceGroupScalePolicyAutoScale { return *v }).(ComputeInstanceGroupScalePolicyAutoScaleOutput)
}

// Target CPU load level.
func (o ComputeInstanceGroupScalePolicyAutoScalePtrOutput) CpuUtilizationTarget() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupScalePolicyAutoScale) *float64 {
		if v == nil {
			return nil
		}
		return v.CpuUtilizationTarget
	}).(pulumi.Float64PtrOutput)
}

// A list of custom rules. The structure is documented below.
func (o ComputeInstanceGroupScalePolicyAutoScalePtrOutput) CustomRules() ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupScalePolicyAutoScale) []ComputeInstanceGroupScalePolicyAutoScaleCustomRule {
		if v == nil {
			return nil
		}
		return v.CustomRules
	}).(ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput)
}

// The initial number of instances in the instance group.
func (o ComputeInstanceGroupScalePolicyAutoScalePtrOutput) InitialSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupScalePolicyAutoScale) *int {
		if v == nil {
			return nil
		}
		return &v.InitialSize
	}).(pulumi.IntPtrOutput)
}

// The maximum number of virtual machines in the group.
func (o ComputeInstanceGroupScalePolicyAutoScalePtrOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupScalePolicyAutoScale) *int {
		if v == nil {
			return nil
		}
		return v.MaxSize
	}).(pulumi.IntPtrOutput)
}

// The amount of time, in seconds, that metrics are averaged for.
// If the average value at the end of the interval is higher than the `cpuUtilizationTarget`,
// the instance group will increase the number of virtual machines in the group.
func (o ComputeInstanceGroupScalePolicyAutoScalePtrOutput) MeasurementDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupScalePolicyAutoScale) *int {
		if v == nil {
			return nil
		}
		return &v.MeasurementDuration
	}).(pulumi.IntPtrOutput)
}

// The minimum number of virtual machines in a single availability zone.
func (o ComputeInstanceGroupScalePolicyAutoScalePtrOutput) MinZoneSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupScalePolicyAutoScale) *int {
		if v == nil {
			return nil
		}
		return v.MinZoneSize
	}).(pulumi.IntPtrOutput)
}

// The minimum time interval, in seconds, to monitor the load before
// an instance group can reduce the number of virtual machines in the group. During this time, the group
// will not decrease even if the average load falls below the value of `cpuUtilizationTarget`.
func (o ComputeInstanceGroupScalePolicyAutoScalePtrOutput) StabilizationDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupScalePolicyAutoScale) *int {
		if v == nil {
			return nil
		}
		return v.StabilizationDuration
	}).(pulumi.IntPtrOutput)
}

// The warm-up time of the virtual machine, in seconds. During this time,
// traffic is fed to the virtual machine, but load metrics are not taken into account.
func (o ComputeInstanceGroupScalePolicyAutoScalePtrOutput) WarmupDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupScalePolicyAutoScale) *int {
		if v == nil {
			return nil
		}
		return v.WarmupDuration
	}).(pulumi.IntPtrOutput)
}

type ComputeInstanceGroupScalePolicyAutoScaleCustomRule struct {
	// A map of labels of metric.
	Labels map[string]string `pulumi:"labels"`
	// The name of metric.
	MetricName string `pulumi:"metricName"`
	// Metric type, `GAUGE` or `COUNTER`.
	MetricType string `pulumi:"metricType"`
	// Rule type: `UTILIZATION` - This type means that the metric applies to one instance.
	// First, Instance Groups calculates the average metric value for each instance,
	// then averages the values for instances in one availability zone.
	// This type of metric must have the `instanceId` label. `WORKLOAD` - This type means that the metric applies to instances in one availability zone.
	// This type of metric must have the `zoneId` label.
	RuleType string `pulumi:"ruleType"`
	// Target metric value level.
	Target float64 `pulumi:"target"`
}

// ComputeInstanceGroupScalePolicyAutoScaleCustomRuleInput is an input type that accepts ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArgs and ComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupScalePolicyAutoScaleCustomRuleInput` via:
//
//          ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArgs{...}
type ComputeInstanceGroupScalePolicyAutoScaleCustomRuleInput interface {
	pulumi.Input

	ToComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput() ComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput
	ToComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutputWithContext(context.Context) ComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput
}

type ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArgs struct {
	// A map of labels of metric.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The name of metric.
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// Metric type, `GAUGE` or `COUNTER`.
	MetricType pulumi.StringInput `pulumi:"metricType"`
	// Rule type: `UTILIZATION` - This type means that the metric applies to one instance.
	// First, Instance Groups calculates the average metric value for each instance,
	// then averages the values for instances in one availability zone.
	// This type of metric must have the `instanceId` label. `WORKLOAD` - This type means that the metric applies to instances in one availability zone.
	// This type of metric must have the `zoneId` label.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
	// Target metric value level.
	Target pulumi.Float64Input `pulumi:"target"`
}

func (ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupScalePolicyAutoScaleCustomRule)(nil)).Elem()
}

func (i ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArgs) ToComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput() ComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput {
	return i.ToComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArgs) ToComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput)
}

// ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayInput is an input type that accepts ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArray and ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayInput` via:
//
//          ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArray{ ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArgs{...} }
type ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayInput interface {
	pulumi.Input

	ToComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput() ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput
	ToComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutputWithContext(context.Context) ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput
}

type ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArray []ComputeInstanceGroupScalePolicyAutoScaleCustomRuleInput

func (ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceGroupScalePolicyAutoScaleCustomRule)(nil)).Elem()
}

func (i ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArray) ToComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput() ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput {
	return i.ToComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArray) ToComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput)
}

type ComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupScalePolicyAutoScaleCustomRule)(nil)).Elem()
}

func (o ComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput) ToComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput() ComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput {
	return o
}

func (o ComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput) ToComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput {
	return o
}

// A map of labels of metric.
func (o ComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyAutoScaleCustomRule) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The name of metric.
func (o ComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyAutoScaleCustomRule) string { return v.MetricName }).(pulumi.StringOutput)
}

// Metric type, `GAUGE` or `COUNTER`.
func (o ComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput) MetricType() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyAutoScaleCustomRule) string { return v.MetricType }).(pulumi.StringOutput)
}

// Rule type: `UTILIZATION` - This type means that the metric applies to one instance.
// First, Instance Groups calculates the average metric value for each instance,
// then averages the values for instances in one availability zone.
// This type of metric must have the `instanceId` label. `WORKLOAD` - This type means that the metric applies to instances in one availability zone.
// This type of metric must have the `zoneId` label.
func (o ComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyAutoScaleCustomRule) string { return v.RuleType }).(pulumi.StringOutput)
}

// Target metric value level.
func (o ComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput) Target() pulumi.Float64Output {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyAutoScaleCustomRule) float64 { return v.Target }).(pulumi.Float64Output)
}

type ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceGroupScalePolicyAutoScaleCustomRule)(nil)).Elem()
}

func (o ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput) ToComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput() ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput {
	return o
}

func (o ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput) ToComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput {
	return o
}

func (o ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput) Index(i pulumi.IntInput) ComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeInstanceGroupScalePolicyAutoScaleCustomRule {
		return vs[0].([]ComputeInstanceGroupScalePolicyAutoScaleCustomRule)[vs[1].(int)]
	}).(ComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput)
}

type ComputeInstanceGroupScalePolicyFixedScale struct {
	// The number of instances in the instance group.
	Size int `pulumi:"size"`
}

// ComputeInstanceGroupScalePolicyFixedScaleInput is an input type that accepts ComputeInstanceGroupScalePolicyFixedScaleArgs and ComputeInstanceGroupScalePolicyFixedScaleOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupScalePolicyFixedScaleInput` via:
//
//          ComputeInstanceGroupScalePolicyFixedScaleArgs{...}
type ComputeInstanceGroupScalePolicyFixedScaleInput interface {
	pulumi.Input

	ToComputeInstanceGroupScalePolicyFixedScaleOutput() ComputeInstanceGroupScalePolicyFixedScaleOutput
	ToComputeInstanceGroupScalePolicyFixedScaleOutputWithContext(context.Context) ComputeInstanceGroupScalePolicyFixedScaleOutput
}

type ComputeInstanceGroupScalePolicyFixedScaleArgs struct {
	// The number of instances in the instance group.
	Size pulumi.IntInput `pulumi:"size"`
}

func (ComputeInstanceGroupScalePolicyFixedScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupScalePolicyFixedScale)(nil)).Elem()
}

func (i ComputeInstanceGroupScalePolicyFixedScaleArgs) ToComputeInstanceGroupScalePolicyFixedScaleOutput() ComputeInstanceGroupScalePolicyFixedScaleOutput {
	return i.ToComputeInstanceGroupScalePolicyFixedScaleOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupScalePolicyFixedScaleArgs) ToComputeInstanceGroupScalePolicyFixedScaleOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyFixedScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupScalePolicyFixedScaleOutput)
}

func (i ComputeInstanceGroupScalePolicyFixedScaleArgs) ToComputeInstanceGroupScalePolicyFixedScalePtrOutput() ComputeInstanceGroupScalePolicyFixedScalePtrOutput {
	return i.ToComputeInstanceGroupScalePolicyFixedScalePtrOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupScalePolicyFixedScaleArgs) ToComputeInstanceGroupScalePolicyFixedScalePtrOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyFixedScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupScalePolicyFixedScaleOutput).ToComputeInstanceGroupScalePolicyFixedScalePtrOutputWithContext(ctx)
}

// ComputeInstanceGroupScalePolicyFixedScalePtrInput is an input type that accepts ComputeInstanceGroupScalePolicyFixedScaleArgs, ComputeInstanceGroupScalePolicyFixedScalePtr and ComputeInstanceGroupScalePolicyFixedScalePtrOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupScalePolicyFixedScalePtrInput` via:
//
//          ComputeInstanceGroupScalePolicyFixedScaleArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceGroupScalePolicyFixedScalePtrInput interface {
	pulumi.Input

	ToComputeInstanceGroupScalePolicyFixedScalePtrOutput() ComputeInstanceGroupScalePolicyFixedScalePtrOutput
	ToComputeInstanceGroupScalePolicyFixedScalePtrOutputWithContext(context.Context) ComputeInstanceGroupScalePolicyFixedScalePtrOutput
}

type computeInstanceGroupScalePolicyFixedScalePtrType ComputeInstanceGroupScalePolicyFixedScaleArgs

func ComputeInstanceGroupScalePolicyFixedScalePtr(v *ComputeInstanceGroupScalePolicyFixedScaleArgs) ComputeInstanceGroupScalePolicyFixedScalePtrInput {
	return (*computeInstanceGroupScalePolicyFixedScalePtrType)(v)
}

func (*computeInstanceGroupScalePolicyFixedScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupScalePolicyFixedScale)(nil)).Elem()
}

func (i *computeInstanceGroupScalePolicyFixedScalePtrType) ToComputeInstanceGroupScalePolicyFixedScalePtrOutput() ComputeInstanceGroupScalePolicyFixedScalePtrOutput {
	return i.ToComputeInstanceGroupScalePolicyFixedScalePtrOutputWithContext(context.Background())
}

func (i *computeInstanceGroupScalePolicyFixedScalePtrType) ToComputeInstanceGroupScalePolicyFixedScalePtrOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyFixedScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupScalePolicyFixedScalePtrOutput)
}

type ComputeInstanceGroupScalePolicyFixedScaleOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupScalePolicyFixedScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupScalePolicyFixedScale)(nil)).Elem()
}

func (o ComputeInstanceGroupScalePolicyFixedScaleOutput) ToComputeInstanceGroupScalePolicyFixedScaleOutput() ComputeInstanceGroupScalePolicyFixedScaleOutput {
	return o
}

func (o ComputeInstanceGroupScalePolicyFixedScaleOutput) ToComputeInstanceGroupScalePolicyFixedScaleOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyFixedScaleOutput {
	return o
}

func (o ComputeInstanceGroupScalePolicyFixedScaleOutput) ToComputeInstanceGroupScalePolicyFixedScalePtrOutput() ComputeInstanceGroupScalePolicyFixedScalePtrOutput {
	return o.ToComputeInstanceGroupScalePolicyFixedScalePtrOutputWithContext(context.Background())
}

func (o ComputeInstanceGroupScalePolicyFixedScaleOutput) ToComputeInstanceGroupScalePolicyFixedScalePtrOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyFixedScalePtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyFixedScale) *ComputeInstanceGroupScalePolicyFixedScale {
		return &v
	}).(ComputeInstanceGroupScalePolicyFixedScalePtrOutput)
}

// The number of instances in the instance group.
func (o ComputeInstanceGroupScalePolicyFixedScaleOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyFixedScale) int { return v.Size }).(pulumi.IntOutput)
}

type ComputeInstanceGroupScalePolicyFixedScalePtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupScalePolicyFixedScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupScalePolicyFixedScale)(nil)).Elem()
}

func (o ComputeInstanceGroupScalePolicyFixedScalePtrOutput) ToComputeInstanceGroupScalePolicyFixedScalePtrOutput() ComputeInstanceGroupScalePolicyFixedScalePtrOutput {
	return o
}

func (o ComputeInstanceGroupScalePolicyFixedScalePtrOutput) ToComputeInstanceGroupScalePolicyFixedScalePtrOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyFixedScalePtrOutput {
	return o
}

func (o ComputeInstanceGroupScalePolicyFixedScalePtrOutput) Elem() ComputeInstanceGroupScalePolicyFixedScaleOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupScalePolicyFixedScale) ComputeInstanceGroupScalePolicyFixedScale {
		return *v
	}).(ComputeInstanceGroupScalePolicyFixedScaleOutput)
}

// The number of instances in the instance group.
func (o ComputeInstanceGroupScalePolicyFixedScalePtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupScalePolicyFixedScale) *int {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.IntPtrOutput)
}

type ComputeInstanceGroupScalePolicyTestAutoScale struct {
	// Target CPU load level.
	CpuUtilizationTarget *float64 `pulumi:"cpuUtilizationTarget"`
	// A list of custom rules. The structure is documented below.
	CustomRules []ComputeInstanceGroupScalePolicyTestAutoScaleCustomRule `pulumi:"customRules"`
	// The initial number of instances in the instance group.
	InitialSize int `pulumi:"initialSize"`
	// The maximum number of virtual machines in the group.
	MaxSize *int `pulumi:"maxSize"`
	// The amount of time, in seconds, that metrics are averaged for.
	// If the average value at the end of the interval is higher than the `cpuUtilizationTarget`,
	// the instance group will increase the number of virtual machines in the group.
	MeasurementDuration int `pulumi:"measurementDuration"`
	// The minimum number of virtual machines in a single availability zone.
	MinZoneSize *int `pulumi:"minZoneSize"`
	// The minimum time interval, in seconds, to monitor the load before
	// an instance group can reduce the number of virtual machines in the group. During this time, the group
	// will not decrease even if the average load falls below the value of `cpuUtilizationTarget`.
	StabilizationDuration *int `pulumi:"stabilizationDuration"`
	// The warm-up time of the virtual machine, in seconds. During this time,
	// traffic is fed to the virtual machine, but load metrics are not taken into account.
	WarmupDuration *int `pulumi:"warmupDuration"`
}

// ComputeInstanceGroupScalePolicyTestAutoScaleInput is an input type that accepts ComputeInstanceGroupScalePolicyTestAutoScaleArgs and ComputeInstanceGroupScalePolicyTestAutoScaleOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupScalePolicyTestAutoScaleInput` via:
//
//          ComputeInstanceGroupScalePolicyTestAutoScaleArgs{...}
type ComputeInstanceGroupScalePolicyTestAutoScaleInput interface {
	pulumi.Input

	ToComputeInstanceGroupScalePolicyTestAutoScaleOutput() ComputeInstanceGroupScalePolicyTestAutoScaleOutput
	ToComputeInstanceGroupScalePolicyTestAutoScaleOutputWithContext(context.Context) ComputeInstanceGroupScalePolicyTestAutoScaleOutput
}

type ComputeInstanceGroupScalePolicyTestAutoScaleArgs struct {
	// Target CPU load level.
	CpuUtilizationTarget pulumi.Float64PtrInput `pulumi:"cpuUtilizationTarget"`
	// A list of custom rules. The structure is documented below.
	CustomRules ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayInput `pulumi:"customRules"`
	// The initial number of instances in the instance group.
	InitialSize pulumi.IntInput `pulumi:"initialSize"`
	// The maximum number of virtual machines in the group.
	MaxSize pulumi.IntPtrInput `pulumi:"maxSize"`
	// The amount of time, in seconds, that metrics are averaged for.
	// If the average value at the end of the interval is higher than the `cpuUtilizationTarget`,
	// the instance group will increase the number of virtual machines in the group.
	MeasurementDuration pulumi.IntInput `pulumi:"measurementDuration"`
	// The minimum number of virtual machines in a single availability zone.
	MinZoneSize pulumi.IntPtrInput `pulumi:"minZoneSize"`
	// The minimum time interval, in seconds, to monitor the load before
	// an instance group can reduce the number of virtual machines in the group. During this time, the group
	// will not decrease even if the average load falls below the value of `cpuUtilizationTarget`.
	StabilizationDuration pulumi.IntPtrInput `pulumi:"stabilizationDuration"`
	// The warm-up time of the virtual machine, in seconds. During this time,
	// traffic is fed to the virtual machine, but load metrics are not taken into account.
	WarmupDuration pulumi.IntPtrInput `pulumi:"warmupDuration"`
}

func (ComputeInstanceGroupScalePolicyTestAutoScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupScalePolicyTestAutoScale)(nil)).Elem()
}

func (i ComputeInstanceGroupScalePolicyTestAutoScaleArgs) ToComputeInstanceGroupScalePolicyTestAutoScaleOutput() ComputeInstanceGroupScalePolicyTestAutoScaleOutput {
	return i.ToComputeInstanceGroupScalePolicyTestAutoScaleOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupScalePolicyTestAutoScaleArgs) ToComputeInstanceGroupScalePolicyTestAutoScaleOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyTestAutoScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupScalePolicyTestAutoScaleOutput)
}

func (i ComputeInstanceGroupScalePolicyTestAutoScaleArgs) ToComputeInstanceGroupScalePolicyTestAutoScalePtrOutput() ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput {
	return i.ToComputeInstanceGroupScalePolicyTestAutoScalePtrOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupScalePolicyTestAutoScaleArgs) ToComputeInstanceGroupScalePolicyTestAutoScalePtrOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupScalePolicyTestAutoScaleOutput).ToComputeInstanceGroupScalePolicyTestAutoScalePtrOutputWithContext(ctx)
}

// ComputeInstanceGroupScalePolicyTestAutoScalePtrInput is an input type that accepts ComputeInstanceGroupScalePolicyTestAutoScaleArgs, ComputeInstanceGroupScalePolicyTestAutoScalePtr and ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupScalePolicyTestAutoScalePtrInput` via:
//
//          ComputeInstanceGroupScalePolicyTestAutoScaleArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceGroupScalePolicyTestAutoScalePtrInput interface {
	pulumi.Input

	ToComputeInstanceGroupScalePolicyTestAutoScalePtrOutput() ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput
	ToComputeInstanceGroupScalePolicyTestAutoScalePtrOutputWithContext(context.Context) ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput
}

type computeInstanceGroupScalePolicyTestAutoScalePtrType ComputeInstanceGroupScalePolicyTestAutoScaleArgs

func ComputeInstanceGroupScalePolicyTestAutoScalePtr(v *ComputeInstanceGroupScalePolicyTestAutoScaleArgs) ComputeInstanceGroupScalePolicyTestAutoScalePtrInput {
	return (*computeInstanceGroupScalePolicyTestAutoScalePtrType)(v)
}

func (*computeInstanceGroupScalePolicyTestAutoScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupScalePolicyTestAutoScale)(nil)).Elem()
}

func (i *computeInstanceGroupScalePolicyTestAutoScalePtrType) ToComputeInstanceGroupScalePolicyTestAutoScalePtrOutput() ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput {
	return i.ToComputeInstanceGroupScalePolicyTestAutoScalePtrOutputWithContext(context.Background())
}

func (i *computeInstanceGroupScalePolicyTestAutoScalePtrType) ToComputeInstanceGroupScalePolicyTestAutoScalePtrOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput)
}

type ComputeInstanceGroupScalePolicyTestAutoScaleOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupScalePolicyTestAutoScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupScalePolicyTestAutoScale)(nil)).Elem()
}

func (o ComputeInstanceGroupScalePolicyTestAutoScaleOutput) ToComputeInstanceGroupScalePolicyTestAutoScaleOutput() ComputeInstanceGroupScalePolicyTestAutoScaleOutput {
	return o
}

func (o ComputeInstanceGroupScalePolicyTestAutoScaleOutput) ToComputeInstanceGroupScalePolicyTestAutoScaleOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyTestAutoScaleOutput {
	return o
}

func (o ComputeInstanceGroupScalePolicyTestAutoScaleOutput) ToComputeInstanceGroupScalePolicyTestAutoScalePtrOutput() ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput {
	return o.ToComputeInstanceGroupScalePolicyTestAutoScalePtrOutputWithContext(context.Background())
}

func (o ComputeInstanceGroupScalePolicyTestAutoScaleOutput) ToComputeInstanceGroupScalePolicyTestAutoScalePtrOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyTestAutoScale) *ComputeInstanceGroupScalePolicyTestAutoScale {
		return &v
	}).(ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput)
}

// Target CPU load level.
func (o ComputeInstanceGroupScalePolicyTestAutoScaleOutput) CpuUtilizationTarget() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyTestAutoScale) *float64 { return v.CpuUtilizationTarget }).(pulumi.Float64PtrOutput)
}

// A list of custom rules. The structure is documented below.
func (o ComputeInstanceGroupScalePolicyTestAutoScaleOutput) CustomRules() ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyTestAutoScale) []ComputeInstanceGroupScalePolicyTestAutoScaleCustomRule {
		return v.CustomRules
	}).(ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput)
}

// The initial number of instances in the instance group.
func (o ComputeInstanceGroupScalePolicyTestAutoScaleOutput) InitialSize() pulumi.IntOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyTestAutoScale) int { return v.InitialSize }).(pulumi.IntOutput)
}

// The maximum number of virtual machines in the group.
func (o ComputeInstanceGroupScalePolicyTestAutoScaleOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyTestAutoScale) *int { return v.MaxSize }).(pulumi.IntPtrOutput)
}

// The amount of time, in seconds, that metrics are averaged for.
// If the average value at the end of the interval is higher than the `cpuUtilizationTarget`,
// the instance group will increase the number of virtual machines in the group.
func (o ComputeInstanceGroupScalePolicyTestAutoScaleOutput) MeasurementDuration() pulumi.IntOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyTestAutoScale) int { return v.MeasurementDuration }).(pulumi.IntOutput)
}

// The minimum number of virtual machines in a single availability zone.
func (o ComputeInstanceGroupScalePolicyTestAutoScaleOutput) MinZoneSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyTestAutoScale) *int { return v.MinZoneSize }).(pulumi.IntPtrOutput)
}

// The minimum time interval, in seconds, to monitor the load before
// an instance group can reduce the number of virtual machines in the group. During this time, the group
// will not decrease even if the average load falls below the value of `cpuUtilizationTarget`.
func (o ComputeInstanceGroupScalePolicyTestAutoScaleOutput) StabilizationDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyTestAutoScale) *int { return v.StabilizationDuration }).(pulumi.IntPtrOutput)
}

// The warm-up time of the virtual machine, in seconds. During this time,
// traffic is fed to the virtual machine, but load metrics are not taken into account.
func (o ComputeInstanceGroupScalePolicyTestAutoScaleOutput) WarmupDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyTestAutoScale) *int { return v.WarmupDuration }).(pulumi.IntPtrOutput)
}

type ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupScalePolicyTestAutoScale)(nil)).Elem()
}

func (o ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput) ToComputeInstanceGroupScalePolicyTestAutoScalePtrOutput() ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput {
	return o
}

func (o ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput) ToComputeInstanceGroupScalePolicyTestAutoScalePtrOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput {
	return o
}

func (o ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput) Elem() ComputeInstanceGroupScalePolicyTestAutoScaleOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupScalePolicyTestAutoScale) ComputeInstanceGroupScalePolicyTestAutoScale {
		return *v
	}).(ComputeInstanceGroupScalePolicyTestAutoScaleOutput)
}

// Target CPU load level.
func (o ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput) CpuUtilizationTarget() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupScalePolicyTestAutoScale) *float64 {
		if v == nil {
			return nil
		}
		return v.CpuUtilizationTarget
	}).(pulumi.Float64PtrOutput)
}

// A list of custom rules. The structure is documented below.
func (o ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput) CustomRules() ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupScalePolicyTestAutoScale) []ComputeInstanceGroupScalePolicyTestAutoScaleCustomRule {
		if v == nil {
			return nil
		}
		return v.CustomRules
	}).(ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput)
}

// The initial number of instances in the instance group.
func (o ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput) InitialSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupScalePolicyTestAutoScale) *int {
		if v == nil {
			return nil
		}
		return &v.InitialSize
	}).(pulumi.IntPtrOutput)
}

// The maximum number of virtual machines in the group.
func (o ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupScalePolicyTestAutoScale) *int {
		if v == nil {
			return nil
		}
		return v.MaxSize
	}).(pulumi.IntPtrOutput)
}

// The amount of time, in seconds, that metrics are averaged for.
// If the average value at the end of the interval is higher than the `cpuUtilizationTarget`,
// the instance group will increase the number of virtual machines in the group.
func (o ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput) MeasurementDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupScalePolicyTestAutoScale) *int {
		if v == nil {
			return nil
		}
		return &v.MeasurementDuration
	}).(pulumi.IntPtrOutput)
}

// The minimum number of virtual machines in a single availability zone.
func (o ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput) MinZoneSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupScalePolicyTestAutoScale) *int {
		if v == nil {
			return nil
		}
		return v.MinZoneSize
	}).(pulumi.IntPtrOutput)
}

// The minimum time interval, in seconds, to monitor the load before
// an instance group can reduce the number of virtual machines in the group. During this time, the group
// will not decrease even if the average load falls below the value of `cpuUtilizationTarget`.
func (o ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput) StabilizationDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupScalePolicyTestAutoScale) *int {
		if v == nil {
			return nil
		}
		return v.StabilizationDuration
	}).(pulumi.IntPtrOutput)
}

// The warm-up time of the virtual machine, in seconds. During this time,
// traffic is fed to the virtual machine, but load metrics are not taken into account.
func (o ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput) WarmupDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupScalePolicyTestAutoScale) *int {
		if v == nil {
			return nil
		}
		return v.WarmupDuration
	}).(pulumi.IntPtrOutput)
}

type ComputeInstanceGroupScalePolicyTestAutoScaleCustomRule struct {
	// A map of labels of metric.
	Labels map[string]string `pulumi:"labels"`
	// The name of metric.
	MetricName string `pulumi:"metricName"`
	// Metric type, `GAUGE` or `COUNTER`.
	MetricType string `pulumi:"metricType"`
	// Rule type: `UTILIZATION` - This type means that the metric applies to one instance.
	// First, Instance Groups calculates the average metric value for each instance,
	// then averages the values for instances in one availability zone.
	// This type of metric must have the `instanceId` label. `WORKLOAD` - This type means that the metric applies to instances in one availability zone.
	// This type of metric must have the `zoneId` label.
	RuleType string `pulumi:"ruleType"`
	// Target metric value level.
	Target float64 `pulumi:"target"`
}

// ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleInput is an input type that accepts ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArgs and ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleInput` via:
//
//          ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArgs{...}
type ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleInput interface {
	pulumi.Input

	ToComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput() ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput
	ToComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutputWithContext(context.Context) ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput
}

type ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArgs struct {
	// A map of labels of metric.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The name of metric.
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// Metric type, `GAUGE` or `COUNTER`.
	MetricType pulumi.StringInput `pulumi:"metricType"`
	// Rule type: `UTILIZATION` - This type means that the metric applies to one instance.
	// First, Instance Groups calculates the average metric value for each instance,
	// then averages the values for instances in one availability zone.
	// This type of metric must have the `instanceId` label. `WORKLOAD` - This type means that the metric applies to instances in one availability zone.
	// This type of metric must have the `zoneId` label.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
	// Target metric value level.
	Target pulumi.Float64Input `pulumi:"target"`
}

func (ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupScalePolicyTestAutoScaleCustomRule)(nil)).Elem()
}

func (i ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArgs) ToComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput() ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput {
	return i.ToComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArgs) ToComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput)
}

// ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayInput is an input type that accepts ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArray and ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayInput` via:
//
//          ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArray{ ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArgs{...} }
type ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayInput interface {
	pulumi.Input

	ToComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput() ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput
	ToComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutputWithContext(context.Context) ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput
}

type ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArray []ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleInput

func (ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceGroupScalePolicyTestAutoScaleCustomRule)(nil)).Elem()
}

func (i ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArray) ToComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput() ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput {
	return i.ToComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArray) ToComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput)
}

type ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceGroupScalePolicyTestAutoScaleCustomRule)(nil)).Elem()
}

func (o ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput) ToComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput() ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput {
	return o
}

func (o ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput) ToComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput {
	return o
}

// A map of labels of metric.
func (o ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyTestAutoScaleCustomRule) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The name of metric.
func (o ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyTestAutoScaleCustomRule) string { return v.MetricName }).(pulumi.StringOutput)
}

// Metric type, `GAUGE` or `COUNTER`.
func (o ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput) MetricType() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyTestAutoScaleCustomRule) string { return v.MetricType }).(pulumi.StringOutput)
}

// Rule type: `UTILIZATION` - This type means that the metric applies to one instance.
// First, Instance Groups calculates the average metric value for each instance,
// then averages the values for instances in one availability zone.
// This type of metric must have the `instanceId` label. `WORKLOAD` - This type means that the metric applies to instances in one availability zone.
// This type of metric must have the `zoneId` label.
func (o ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyTestAutoScaleCustomRule) string { return v.RuleType }).(pulumi.StringOutput)
}

// Target metric value level.
func (o ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput) Target() pulumi.Float64Output {
	return o.ApplyT(func(v ComputeInstanceGroupScalePolicyTestAutoScaleCustomRule) float64 { return v.Target }).(pulumi.Float64Output)
}

type ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceGroupScalePolicyTestAutoScaleCustomRule)(nil)).Elem()
}

func (o ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput) ToComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput() ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput {
	return o
}

func (o ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput) ToComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutputWithContext(ctx context.Context) ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput {
	return o
}

func (o ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput) Index(i pulumi.IntInput) ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeInstanceGroupScalePolicyTestAutoScaleCustomRule {
		return vs[0].([]ComputeInstanceGroupScalePolicyTestAutoScaleCustomRule)[vs[1].(int)]
	}).(ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput)
}

type ComputeInstanceNetworkInterface struct {
	Index *int `pulumi:"index"`
	// The private IP address to assign to the instance. If
	// empty, the address will be automatically assigned from the specified subnet.
	IpAddress *string `pulumi:"ipAddress"`
	// Allocate an IPv4 address for the interface. The default value is `true`.
	Ipv4 *bool `pulumi:"ipv4"`
	// If true, allocate an IPv6 address for the interface.
	// The address will be automatically assigned from the specified subnet.
	Ipv6 *bool `pulumi:"ipv6"`
	// The private IPv6 address to assign to the instance.
	Ipv6Address *string `pulumi:"ipv6Address"`
	MacAddress  *string `pulumi:"macAddress"`
	// Provide a public address, for instance, to access the internet over NAT.
	Nat *bool `pulumi:"nat"`
	// Provide a public address, for instance, to access the internet over NAT. Address should be already reserved in web UI.
	NatIpAddress *string `pulumi:"natIpAddress"`
	NatIpVersion *string `pulumi:"natIpVersion"`
	// Security group ids for network interface.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// ID of the subnet to attach this
	// interface to. The subnet must exist in the same zone where this instance will be
	// created.
	SubnetId string `pulumi:"subnetId"`
}

// ComputeInstanceNetworkInterfaceInput is an input type that accepts ComputeInstanceNetworkInterfaceArgs and ComputeInstanceNetworkInterfaceOutput values.
// You can construct a concrete instance of `ComputeInstanceNetworkInterfaceInput` via:
//
//          ComputeInstanceNetworkInterfaceArgs{...}
type ComputeInstanceNetworkInterfaceInput interface {
	pulumi.Input

	ToComputeInstanceNetworkInterfaceOutput() ComputeInstanceNetworkInterfaceOutput
	ToComputeInstanceNetworkInterfaceOutputWithContext(context.Context) ComputeInstanceNetworkInterfaceOutput
}

type ComputeInstanceNetworkInterfaceArgs struct {
	Index pulumi.IntPtrInput `pulumi:"index"`
	// The private IP address to assign to the instance. If
	// empty, the address will be automatically assigned from the specified subnet.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// Allocate an IPv4 address for the interface. The default value is `true`.
	Ipv4 pulumi.BoolPtrInput `pulumi:"ipv4"`
	// If true, allocate an IPv6 address for the interface.
	// The address will be automatically assigned from the specified subnet.
	Ipv6 pulumi.BoolPtrInput `pulumi:"ipv6"`
	// The private IPv6 address to assign to the instance.
	Ipv6Address pulumi.StringPtrInput `pulumi:"ipv6Address"`
	MacAddress  pulumi.StringPtrInput `pulumi:"macAddress"`
	// Provide a public address, for instance, to access the internet over NAT.
	Nat pulumi.BoolPtrInput `pulumi:"nat"`
	// Provide a public address, for instance, to access the internet over NAT. Address should be already reserved in web UI.
	NatIpAddress pulumi.StringPtrInput `pulumi:"natIpAddress"`
	NatIpVersion pulumi.StringPtrInput `pulumi:"natIpVersion"`
	// Security group ids for network interface.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// ID of the subnet to attach this
	// interface to. The subnet must exist in the same zone where this instance will be
	// created.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (ComputeInstanceNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceNetworkInterface)(nil)).Elem()
}

func (i ComputeInstanceNetworkInterfaceArgs) ToComputeInstanceNetworkInterfaceOutput() ComputeInstanceNetworkInterfaceOutput {
	return i.ToComputeInstanceNetworkInterfaceOutputWithContext(context.Background())
}

func (i ComputeInstanceNetworkInterfaceArgs) ToComputeInstanceNetworkInterfaceOutputWithContext(ctx context.Context) ComputeInstanceNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceNetworkInterfaceOutput)
}

// ComputeInstanceNetworkInterfaceArrayInput is an input type that accepts ComputeInstanceNetworkInterfaceArray and ComputeInstanceNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceNetworkInterfaceArrayInput` via:
//
//          ComputeInstanceNetworkInterfaceArray{ ComputeInstanceNetworkInterfaceArgs{...} }
type ComputeInstanceNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToComputeInstanceNetworkInterfaceArrayOutput() ComputeInstanceNetworkInterfaceArrayOutput
	ToComputeInstanceNetworkInterfaceArrayOutputWithContext(context.Context) ComputeInstanceNetworkInterfaceArrayOutput
}

type ComputeInstanceNetworkInterfaceArray []ComputeInstanceNetworkInterfaceInput

func (ComputeInstanceNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceNetworkInterface)(nil)).Elem()
}

func (i ComputeInstanceNetworkInterfaceArray) ToComputeInstanceNetworkInterfaceArrayOutput() ComputeInstanceNetworkInterfaceArrayOutput {
	return i.ToComputeInstanceNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceNetworkInterfaceArray) ToComputeInstanceNetworkInterfaceArrayOutputWithContext(ctx context.Context) ComputeInstanceNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceNetworkInterfaceArrayOutput)
}

type ComputeInstanceNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (ComputeInstanceNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceNetworkInterface)(nil)).Elem()
}

func (o ComputeInstanceNetworkInterfaceOutput) ToComputeInstanceNetworkInterfaceOutput() ComputeInstanceNetworkInterfaceOutput {
	return o
}

func (o ComputeInstanceNetworkInterfaceOutput) ToComputeInstanceNetworkInterfaceOutputWithContext(ctx context.Context) ComputeInstanceNetworkInterfaceOutput {
	return o
}

func (o ComputeInstanceNetworkInterfaceOutput) Index() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceNetworkInterface) *int { return v.Index }).(pulumi.IntPtrOutput)
}

// The private IP address to assign to the instance. If
// empty, the address will be automatically assigned from the specified subnet.
func (o ComputeInstanceNetworkInterfaceOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceNetworkInterface) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Allocate an IPv4 address for the interface. The default value is `true`.
func (o ComputeInstanceNetworkInterfaceOutput) Ipv4() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComputeInstanceNetworkInterface) *bool { return v.Ipv4 }).(pulumi.BoolPtrOutput)
}

// If true, allocate an IPv6 address for the interface.
// The address will be automatically assigned from the specified subnet.
func (o ComputeInstanceNetworkInterfaceOutput) Ipv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComputeInstanceNetworkInterface) *bool { return v.Ipv6 }).(pulumi.BoolPtrOutput)
}

// The private IPv6 address to assign to the instance.
func (o ComputeInstanceNetworkInterfaceOutput) Ipv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceNetworkInterface) *string { return v.Ipv6Address }).(pulumi.StringPtrOutput)
}

func (o ComputeInstanceNetworkInterfaceOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceNetworkInterface) *string { return v.MacAddress }).(pulumi.StringPtrOutput)
}

// Provide a public address, for instance, to access the internet over NAT.
func (o ComputeInstanceNetworkInterfaceOutput) Nat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComputeInstanceNetworkInterface) *bool { return v.Nat }).(pulumi.BoolPtrOutput)
}

// Provide a public address, for instance, to access the internet over NAT. Address should be already reserved in web UI.
func (o ComputeInstanceNetworkInterfaceOutput) NatIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceNetworkInterface) *string { return v.NatIpAddress }).(pulumi.StringPtrOutput)
}

func (o ComputeInstanceNetworkInterfaceOutput) NatIpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceNetworkInterface) *string { return v.NatIpVersion }).(pulumi.StringPtrOutput)
}

// Security group ids for network interface.
func (o ComputeInstanceNetworkInterfaceOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComputeInstanceNetworkInterface) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// ID of the subnet to attach this
// interface to. The subnet must exist in the same zone where this instance will be
// created.
func (o ComputeInstanceNetworkInterfaceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceNetworkInterface) string { return v.SubnetId }).(pulumi.StringOutput)
}

type ComputeInstanceNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceNetworkInterface)(nil)).Elem()
}

func (o ComputeInstanceNetworkInterfaceArrayOutput) ToComputeInstanceNetworkInterfaceArrayOutput() ComputeInstanceNetworkInterfaceArrayOutput {
	return o
}

func (o ComputeInstanceNetworkInterfaceArrayOutput) ToComputeInstanceNetworkInterfaceArrayOutputWithContext(ctx context.Context) ComputeInstanceNetworkInterfaceArrayOutput {
	return o
}

func (o ComputeInstanceNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) ComputeInstanceNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeInstanceNetworkInterface {
		return vs[0].([]ComputeInstanceNetworkInterface)[vs[1].(int)]
	}).(ComputeInstanceNetworkInterfaceOutput)
}

type ComputeInstancePlacementPolicy struct {
	// Specifies the id of the Placement Group to assign to the instance.
	PlacementGroupId string `pulumi:"placementGroupId"`
}

// ComputeInstancePlacementPolicyInput is an input type that accepts ComputeInstancePlacementPolicyArgs and ComputeInstancePlacementPolicyOutput values.
// You can construct a concrete instance of `ComputeInstancePlacementPolicyInput` via:
//
//          ComputeInstancePlacementPolicyArgs{...}
type ComputeInstancePlacementPolicyInput interface {
	pulumi.Input

	ToComputeInstancePlacementPolicyOutput() ComputeInstancePlacementPolicyOutput
	ToComputeInstancePlacementPolicyOutputWithContext(context.Context) ComputeInstancePlacementPolicyOutput
}

type ComputeInstancePlacementPolicyArgs struct {
	// Specifies the id of the Placement Group to assign to the instance.
	PlacementGroupId pulumi.StringInput `pulumi:"placementGroupId"`
}

func (ComputeInstancePlacementPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstancePlacementPolicy)(nil)).Elem()
}

func (i ComputeInstancePlacementPolicyArgs) ToComputeInstancePlacementPolicyOutput() ComputeInstancePlacementPolicyOutput {
	return i.ToComputeInstancePlacementPolicyOutputWithContext(context.Background())
}

func (i ComputeInstancePlacementPolicyArgs) ToComputeInstancePlacementPolicyOutputWithContext(ctx context.Context) ComputeInstancePlacementPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstancePlacementPolicyOutput)
}

func (i ComputeInstancePlacementPolicyArgs) ToComputeInstancePlacementPolicyPtrOutput() ComputeInstancePlacementPolicyPtrOutput {
	return i.ToComputeInstancePlacementPolicyPtrOutputWithContext(context.Background())
}

func (i ComputeInstancePlacementPolicyArgs) ToComputeInstancePlacementPolicyPtrOutputWithContext(ctx context.Context) ComputeInstancePlacementPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstancePlacementPolicyOutput).ToComputeInstancePlacementPolicyPtrOutputWithContext(ctx)
}

// ComputeInstancePlacementPolicyPtrInput is an input type that accepts ComputeInstancePlacementPolicyArgs, ComputeInstancePlacementPolicyPtr and ComputeInstancePlacementPolicyPtrOutput values.
// You can construct a concrete instance of `ComputeInstancePlacementPolicyPtrInput` via:
//
//          ComputeInstancePlacementPolicyArgs{...}
//
//  or:
//
//          nil
type ComputeInstancePlacementPolicyPtrInput interface {
	pulumi.Input

	ToComputeInstancePlacementPolicyPtrOutput() ComputeInstancePlacementPolicyPtrOutput
	ToComputeInstancePlacementPolicyPtrOutputWithContext(context.Context) ComputeInstancePlacementPolicyPtrOutput
}

type computeInstancePlacementPolicyPtrType ComputeInstancePlacementPolicyArgs

func ComputeInstancePlacementPolicyPtr(v *ComputeInstancePlacementPolicyArgs) ComputeInstancePlacementPolicyPtrInput {
	return (*computeInstancePlacementPolicyPtrType)(v)
}

func (*computeInstancePlacementPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstancePlacementPolicy)(nil)).Elem()
}

func (i *computeInstancePlacementPolicyPtrType) ToComputeInstancePlacementPolicyPtrOutput() ComputeInstancePlacementPolicyPtrOutput {
	return i.ToComputeInstancePlacementPolicyPtrOutputWithContext(context.Background())
}

func (i *computeInstancePlacementPolicyPtrType) ToComputeInstancePlacementPolicyPtrOutputWithContext(ctx context.Context) ComputeInstancePlacementPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstancePlacementPolicyPtrOutput)
}

type ComputeInstancePlacementPolicyOutput struct{ *pulumi.OutputState }

func (ComputeInstancePlacementPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstancePlacementPolicy)(nil)).Elem()
}

func (o ComputeInstancePlacementPolicyOutput) ToComputeInstancePlacementPolicyOutput() ComputeInstancePlacementPolicyOutput {
	return o
}

func (o ComputeInstancePlacementPolicyOutput) ToComputeInstancePlacementPolicyOutputWithContext(ctx context.Context) ComputeInstancePlacementPolicyOutput {
	return o
}

func (o ComputeInstancePlacementPolicyOutput) ToComputeInstancePlacementPolicyPtrOutput() ComputeInstancePlacementPolicyPtrOutput {
	return o.ToComputeInstancePlacementPolicyPtrOutputWithContext(context.Background())
}

func (o ComputeInstancePlacementPolicyOutput) ToComputeInstancePlacementPolicyPtrOutputWithContext(ctx context.Context) ComputeInstancePlacementPolicyPtrOutput {
	return o.ApplyT(func(v ComputeInstancePlacementPolicy) *ComputeInstancePlacementPolicy {
		return &v
	}).(ComputeInstancePlacementPolicyPtrOutput)
}

// Specifies the id of the Placement Group to assign to the instance.
func (o ComputeInstancePlacementPolicyOutput) PlacementGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstancePlacementPolicy) string { return v.PlacementGroupId }).(pulumi.StringOutput)
}

type ComputeInstancePlacementPolicyPtrOutput struct{ *pulumi.OutputState }

func (ComputeInstancePlacementPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstancePlacementPolicy)(nil)).Elem()
}

func (o ComputeInstancePlacementPolicyPtrOutput) ToComputeInstancePlacementPolicyPtrOutput() ComputeInstancePlacementPolicyPtrOutput {
	return o
}

func (o ComputeInstancePlacementPolicyPtrOutput) ToComputeInstancePlacementPolicyPtrOutputWithContext(ctx context.Context) ComputeInstancePlacementPolicyPtrOutput {
	return o
}

func (o ComputeInstancePlacementPolicyPtrOutput) Elem() ComputeInstancePlacementPolicyOutput {
	return o.ApplyT(func(v *ComputeInstancePlacementPolicy) ComputeInstancePlacementPolicy { return *v }).(ComputeInstancePlacementPolicyOutput)
}

// Specifies the id of the Placement Group to assign to the instance.
func (o ComputeInstancePlacementPolicyPtrOutput) PlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstancePlacementPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.PlacementGroupId
	}).(pulumi.StringPtrOutput)
}

type ComputeInstanceResources struct {
	// If provided, specifies baseline performance for a core as a percent.
	CoreFraction *int `pulumi:"coreFraction"`
	// CPU cores for the instance.
	Cores int  `pulumi:"cores"`
	Gpus  *int `pulumi:"gpus"`
	// Memory size in GB.
	Memory float64 `pulumi:"memory"`
}

// ComputeInstanceResourcesInput is an input type that accepts ComputeInstanceResourcesArgs and ComputeInstanceResourcesOutput values.
// You can construct a concrete instance of `ComputeInstanceResourcesInput` via:
//
//          ComputeInstanceResourcesArgs{...}
type ComputeInstanceResourcesInput interface {
	pulumi.Input

	ToComputeInstanceResourcesOutput() ComputeInstanceResourcesOutput
	ToComputeInstanceResourcesOutputWithContext(context.Context) ComputeInstanceResourcesOutput
}

type ComputeInstanceResourcesArgs struct {
	// If provided, specifies baseline performance for a core as a percent.
	CoreFraction pulumi.IntPtrInput `pulumi:"coreFraction"`
	// CPU cores for the instance.
	Cores pulumi.IntInput    `pulumi:"cores"`
	Gpus  pulumi.IntPtrInput `pulumi:"gpus"`
	// Memory size in GB.
	Memory pulumi.Float64Input `pulumi:"memory"`
}

func (ComputeInstanceResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceResources)(nil)).Elem()
}

func (i ComputeInstanceResourcesArgs) ToComputeInstanceResourcesOutput() ComputeInstanceResourcesOutput {
	return i.ToComputeInstanceResourcesOutputWithContext(context.Background())
}

func (i ComputeInstanceResourcesArgs) ToComputeInstanceResourcesOutputWithContext(ctx context.Context) ComputeInstanceResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceResourcesOutput)
}

func (i ComputeInstanceResourcesArgs) ToComputeInstanceResourcesPtrOutput() ComputeInstanceResourcesPtrOutput {
	return i.ToComputeInstanceResourcesPtrOutputWithContext(context.Background())
}

func (i ComputeInstanceResourcesArgs) ToComputeInstanceResourcesPtrOutputWithContext(ctx context.Context) ComputeInstanceResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceResourcesOutput).ToComputeInstanceResourcesPtrOutputWithContext(ctx)
}

// ComputeInstanceResourcesPtrInput is an input type that accepts ComputeInstanceResourcesArgs, ComputeInstanceResourcesPtr and ComputeInstanceResourcesPtrOutput values.
// You can construct a concrete instance of `ComputeInstanceResourcesPtrInput` via:
//
//          ComputeInstanceResourcesArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceResourcesPtrInput interface {
	pulumi.Input

	ToComputeInstanceResourcesPtrOutput() ComputeInstanceResourcesPtrOutput
	ToComputeInstanceResourcesPtrOutputWithContext(context.Context) ComputeInstanceResourcesPtrOutput
}

type computeInstanceResourcesPtrType ComputeInstanceResourcesArgs

func ComputeInstanceResourcesPtr(v *ComputeInstanceResourcesArgs) ComputeInstanceResourcesPtrInput {
	return (*computeInstanceResourcesPtrType)(v)
}

func (*computeInstanceResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceResources)(nil)).Elem()
}

func (i *computeInstanceResourcesPtrType) ToComputeInstanceResourcesPtrOutput() ComputeInstanceResourcesPtrOutput {
	return i.ToComputeInstanceResourcesPtrOutputWithContext(context.Background())
}

func (i *computeInstanceResourcesPtrType) ToComputeInstanceResourcesPtrOutputWithContext(ctx context.Context) ComputeInstanceResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceResourcesPtrOutput)
}

type ComputeInstanceResourcesOutput struct{ *pulumi.OutputState }

func (ComputeInstanceResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceResources)(nil)).Elem()
}

func (o ComputeInstanceResourcesOutput) ToComputeInstanceResourcesOutput() ComputeInstanceResourcesOutput {
	return o
}

func (o ComputeInstanceResourcesOutput) ToComputeInstanceResourcesOutputWithContext(ctx context.Context) ComputeInstanceResourcesOutput {
	return o
}

func (o ComputeInstanceResourcesOutput) ToComputeInstanceResourcesPtrOutput() ComputeInstanceResourcesPtrOutput {
	return o.ToComputeInstanceResourcesPtrOutputWithContext(context.Background())
}

func (o ComputeInstanceResourcesOutput) ToComputeInstanceResourcesPtrOutputWithContext(ctx context.Context) ComputeInstanceResourcesPtrOutput {
	return o.ApplyT(func(v ComputeInstanceResources) *ComputeInstanceResources {
		return &v
	}).(ComputeInstanceResourcesPtrOutput)
}

// If provided, specifies baseline performance for a core as a percent.
func (o ComputeInstanceResourcesOutput) CoreFraction() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceResources) *int { return v.CoreFraction }).(pulumi.IntPtrOutput)
}

// CPU cores for the instance.
func (o ComputeInstanceResourcesOutput) Cores() pulumi.IntOutput {
	return o.ApplyT(func(v ComputeInstanceResources) int { return v.Cores }).(pulumi.IntOutput)
}

func (o ComputeInstanceResourcesOutput) Gpus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceResources) *int { return v.Gpus }).(pulumi.IntPtrOutput)
}

// Memory size in GB.
func (o ComputeInstanceResourcesOutput) Memory() pulumi.Float64Output {
	return o.ApplyT(func(v ComputeInstanceResources) float64 { return v.Memory }).(pulumi.Float64Output)
}

type ComputeInstanceResourcesPtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceResources)(nil)).Elem()
}

func (o ComputeInstanceResourcesPtrOutput) ToComputeInstanceResourcesPtrOutput() ComputeInstanceResourcesPtrOutput {
	return o
}

func (o ComputeInstanceResourcesPtrOutput) ToComputeInstanceResourcesPtrOutputWithContext(ctx context.Context) ComputeInstanceResourcesPtrOutput {
	return o
}

func (o ComputeInstanceResourcesPtrOutput) Elem() ComputeInstanceResourcesOutput {
	return o.ApplyT(func(v *ComputeInstanceResources) ComputeInstanceResources { return *v }).(ComputeInstanceResourcesOutput)
}

// If provided, specifies baseline performance for a core as a percent.
func (o ComputeInstanceResourcesPtrOutput) CoreFraction() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceResources) *int {
		if v == nil {
			return nil
		}
		return v.CoreFraction
	}).(pulumi.IntPtrOutput)
}

// CPU cores for the instance.
func (o ComputeInstanceResourcesPtrOutput) Cores() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceResources) *int {
		if v == nil {
			return nil
		}
		return &v.Cores
	}).(pulumi.IntPtrOutput)
}

func (o ComputeInstanceResourcesPtrOutput) Gpus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceResources) *int {
		if v == nil {
			return nil
		}
		return v.Gpus
	}).(pulumi.IntPtrOutput)
}

// Memory size in GB.
func (o ComputeInstanceResourcesPtrOutput) Memory() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ComputeInstanceResources) *float64 {
		if v == nil {
			return nil
		}
		return &v.Memory
	}).(pulumi.Float64PtrOutput)
}

type ComputeInstanceSchedulingPolicy struct {
	// Specifies if the instance is preemptible. Defaults to false.
	Preemptible *bool `pulumi:"preemptible"`
}

// ComputeInstanceSchedulingPolicyInput is an input type that accepts ComputeInstanceSchedulingPolicyArgs and ComputeInstanceSchedulingPolicyOutput values.
// You can construct a concrete instance of `ComputeInstanceSchedulingPolicyInput` via:
//
//          ComputeInstanceSchedulingPolicyArgs{...}
type ComputeInstanceSchedulingPolicyInput interface {
	pulumi.Input

	ToComputeInstanceSchedulingPolicyOutput() ComputeInstanceSchedulingPolicyOutput
	ToComputeInstanceSchedulingPolicyOutputWithContext(context.Context) ComputeInstanceSchedulingPolicyOutput
}

type ComputeInstanceSchedulingPolicyArgs struct {
	// Specifies if the instance is preemptible. Defaults to false.
	Preemptible pulumi.BoolPtrInput `pulumi:"preemptible"`
}

func (ComputeInstanceSchedulingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceSchedulingPolicy)(nil)).Elem()
}

func (i ComputeInstanceSchedulingPolicyArgs) ToComputeInstanceSchedulingPolicyOutput() ComputeInstanceSchedulingPolicyOutput {
	return i.ToComputeInstanceSchedulingPolicyOutputWithContext(context.Background())
}

func (i ComputeInstanceSchedulingPolicyArgs) ToComputeInstanceSchedulingPolicyOutputWithContext(ctx context.Context) ComputeInstanceSchedulingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceSchedulingPolicyOutput)
}

func (i ComputeInstanceSchedulingPolicyArgs) ToComputeInstanceSchedulingPolicyPtrOutput() ComputeInstanceSchedulingPolicyPtrOutput {
	return i.ToComputeInstanceSchedulingPolicyPtrOutputWithContext(context.Background())
}

func (i ComputeInstanceSchedulingPolicyArgs) ToComputeInstanceSchedulingPolicyPtrOutputWithContext(ctx context.Context) ComputeInstanceSchedulingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceSchedulingPolicyOutput).ToComputeInstanceSchedulingPolicyPtrOutputWithContext(ctx)
}

// ComputeInstanceSchedulingPolicyPtrInput is an input type that accepts ComputeInstanceSchedulingPolicyArgs, ComputeInstanceSchedulingPolicyPtr and ComputeInstanceSchedulingPolicyPtrOutput values.
// You can construct a concrete instance of `ComputeInstanceSchedulingPolicyPtrInput` via:
//
//          ComputeInstanceSchedulingPolicyArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceSchedulingPolicyPtrInput interface {
	pulumi.Input

	ToComputeInstanceSchedulingPolicyPtrOutput() ComputeInstanceSchedulingPolicyPtrOutput
	ToComputeInstanceSchedulingPolicyPtrOutputWithContext(context.Context) ComputeInstanceSchedulingPolicyPtrOutput
}

type computeInstanceSchedulingPolicyPtrType ComputeInstanceSchedulingPolicyArgs

func ComputeInstanceSchedulingPolicyPtr(v *ComputeInstanceSchedulingPolicyArgs) ComputeInstanceSchedulingPolicyPtrInput {
	return (*computeInstanceSchedulingPolicyPtrType)(v)
}

func (*computeInstanceSchedulingPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceSchedulingPolicy)(nil)).Elem()
}

func (i *computeInstanceSchedulingPolicyPtrType) ToComputeInstanceSchedulingPolicyPtrOutput() ComputeInstanceSchedulingPolicyPtrOutput {
	return i.ToComputeInstanceSchedulingPolicyPtrOutputWithContext(context.Background())
}

func (i *computeInstanceSchedulingPolicyPtrType) ToComputeInstanceSchedulingPolicyPtrOutputWithContext(ctx context.Context) ComputeInstanceSchedulingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceSchedulingPolicyPtrOutput)
}

type ComputeInstanceSchedulingPolicyOutput struct{ *pulumi.OutputState }

func (ComputeInstanceSchedulingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceSchedulingPolicy)(nil)).Elem()
}

func (o ComputeInstanceSchedulingPolicyOutput) ToComputeInstanceSchedulingPolicyOutput() ComputeInstanceSchedulingPolicyOutput {
	return o
}

func (o ComputeInstanceSchedulingPolicyOutput) ToComputeInstanceSchedulingPolicyOutputWithContext(ctx context.Context) ComputeInstanceSchedulingPolicyOutput {
	return o
}

func (o ComputeInstanceSchedulingPolicyOutput) ToComputeInstanceSchedulingPolicyPtrOutput() ComputeInstanceSchedulingPolicyPtrOutput {
	return o.ToComputeInstanceSchedulingPolicyPtrOutputWithContext(context.Background())
}

func (o ComputeInstanceSchedulingPolicyOutput) ToComputeInstanceSchedulingPolicyPtrOutputWithContext(ctx context.Context) ComputeInstanceSchedulingPolicyPtrOutput {
	return o.ApplyT(func(v ComputeInstanceSchedulingPolicy) *ComputeInstanceSchedulingPolicy {
		return &v
	}).(ComputeInstanceSchedulingPolicyPtrOutput)
}

// Specifies if the instance is preemptible. Defaults to false.
func (o ComputeInstanceSchedulingPolicyOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComputeInstanceSchedulingPolicy) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

type ComputeInstanceSchedulingPolicyPtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceSchedulingPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceSchedulingPolicy)(nil)).Elem()
}

func (o ComputeInstanceSchedulingPolicyPtrOutput) ToComputeInstanceSchedulingPolicyPtrOutput() ComputeInstanceSchedulingPolicyPtrOutput {
	return o
}

func (o ComputeInstanceSchedulingPolicyPtrOutput) ToComputeInstanceSchedulingPolicyPtrOutputWithContext(ctx context.Context) ComputeInstanceSchedulingPolicyPtrOutput {
	return o
}

func (o ComputeInstanceSchedulingPolicyPtrOutput) Elem() ComputeInstanceSchedulingPolicyOutput {
	return o.ApplyT(func(v *ComputeInstanceSchedulingPolicy) ComputeInstanceSchedulingPolicy { return *v }).(ComputeInstanceSchedulingPolicyOutput)
}

// Specifies if the instance is preemptible. Defaults to false.
func (o ComputeInstanceSchedulingPolicyPtrOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceSchedulingPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.Preemptible
	}).(pulumi.BoolPtrOutput)
}

type ComputeInstanceSecondaryDisk struct {
	// Whether the disk is auto-deleted when the instance
	// is deleted. The default value is false.
	AutoDelete *bool `pulumi:"autoDelete"`
	// Name that can be used to access an attached disk
	// under `/dev/disk/by-id/`.
	DeviceName *string `pulumi:"deviceName"`
	// ID of the disk that is attached to the instance.
	DiskId string `pulumi:"diskId"`
	// Type of access to the disk resource. By default, a disk is attached in `READ_WRITE` mode.
	Mode *string `pulumi:"mode"`
}

// ComputeInstanceSecondaryDiskInput is an input type that accepts ComputeInstanceSecondaryDiskArgs and ComputeInstanceSecondaryDiskOutput values.
// You can construct a concrete instance of `ComputeInstanceSecondaryDiskInput` via:
//
//          ComputeInstanceSecondaryDiskArgs{...}
type ComputeInstanceSecondaryDiskInput interface {
	pulumi.Input

	ToComputeInstanceSecondaryDiskOutput() ComputeInstanceSecondaryDiskOutput
	ToComputeInstanceSecondaryDiskOutputWithContext(context.Context) ComputeInstanceSecondaryDiskOutput
}

type ComputeInstanceSecondaryDiskArgs struct {
	// Whether the disk is auto-deleted when the instance
	// is deleted. The default value is false.
	AutoDelete pulumi.BoolPtrInput `pulumi:"autoDelete"`
	// Name that can be used to access an attached disk
	// under `/dev/disk/by-id/`.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// ID of the disk that is attached to the instance.
	DiskId pulumi.StringInput `pulumi:"diskId"`
	// Type of access to the disk resource. By default, a disk is attached in `READ_WRITE` mode.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (ComputeInstanceSecondaryDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceSecondaryDisk)(nil)).Elem()
}

func (i ComputeInstanceSecondaryDiskArgs) ToComputeInstanceSecondaryDiskOutput() ComputeInstanceSecondaryDiskOutput {
	return i.ToComputeInstanceSecondaryDiskOutputWithContext(context.Background())
}

func (i ComputeInstanceSecondaryDiskArgs) ToComputeInstanceSecondaryDiskOutputWithContext(ctx context.Context) ComputeInstanceSecondaryDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceSecondaryDiskOutput)
}

// ComputeInstanceSecondaryDiskArrayInput is an input type that accepts ComputeInstanceSecondaryDiskArray and ComputeInstanceSecondaryDiskArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceSecondaryDiskArrayInput` via:
//
//          ComputeInstanceSecondaryDiskArray{ ComputeInstanceSecondaryDiskArgs{...} }
type ComputeInstanceSecondaryDiskArrayInput interface {
	pulumi.Input

	ToComputeInstanceSecondaryDiskArrayOutput() ComputeInstanceSecondaryDiskArrayOutput
	ToComputeInstanceSecondaryDiskArrayOutputWithContext(context.Context) ComputeInstanceSecondaryDiskArrayOutput
}

type ComputeInstanceSecondaryDiskArray []ComputeInstanceSecondaryDiskInput

func (ComputeInstanceSecondaryDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceSecondaryDisk)(nil)).Elem()
}

func (i ComputeInstanceSecondaryDiskArray) ToComputeInstanceSecondaryDiskArrayOutput() ComputeInstanceSecondaryDiskArrayOutput {
	return i.ToComputeInstanceSecondaryDiskArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceSecondaryDiskArray) ToComputeInstanceSecondaryDiskArrayOutputWithContext(ctx context.Context) ComputeInstanceSecondaryDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceSecondaryDiskArrayOutput)
}

type ComputeInstanceSecondaryDiskOutput struct{ *pulumi.OutputState }

func (ComputeInstanceSecondaryDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceSecondaryDisk)(nil)).Elem()
}

func (o ComputeInstanceSecondaryDiskOutput) ToComputeInstanceSecondaryDiskOutput() ComputeInstanceSecondaryDiskOutput {
	return o
}

func (o ComputeInstanceSecondaryDiskOutput) ToComputeInstanceSecondaryDiskOutputWithContext(ctx context.Context) ComputeInstanceSecondaryDiskOutput {
	return o
}

// Whether the disk is auto-deleted when the instance
// is deleted. The default value is false.
func (o ComputeInstanceSecondaryDiskOutput) AutoDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComputeInstanceSecondaryDisk) *bool { return v.AutoDelete }).(pulumi.BoolPtrOutput)
}

// Name that can be used to access an attached disk
// under `/dev/disk/by-id/`.
func (o ComputeInstanceSecondaryDiskOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceSecondaryDisk) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// ID of the disk that is attached to the instance.
func (o ComputeInstanceSecondaryDiskOutput) DiskId() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceSecondaryDisk) string { return v.DiskId }).(pulumi.StringOutput)
}

// Type of access to the disk resource. By default, a disk is attached in `READ_WRITE` mode.
func (o ComputeInstanceSecondaryDiskOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceSecondaryDisk) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type ComputeInstanceSecondaryDiskArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceSecondaryDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceSecondaryDisk)(nil)).Elem()
}

func (o ComputeInstanceSecondaryDiskArrayOutput) ToComputeInstanceSecondaryDiskArrayOutput() ComputeInstanceSecondaryDiskArrayOutput {
	return o
}

func (o ComputeInstanceSecondaryDiskArrayOutput) ToComputeInstanceSecondaryDiskArrayOutputWithContext(ctx context.Context) ComputeInstanceSecondaryDiskArrayOutput {
	return o
}

func (o ComputeInstanceSecondaryDiskArrayOutput) Index(i pulumi.IntInput) ComputeInstanceSecondaryDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeInstanceSecondaryDisk {
		return vs[0].([]ComputeInstanceSecondaryDisk)[vs[1].(int)]
	}).(ComputeInstanceSecondaryDiskOutput)
}

type DataprocClusterClusterConfig struct {
	// Data Proc specific options. The structure is documented below.
	Hadoop *DataprocClusterClusterConfigHadoop `pulumi:"hadoop"`
	// Configuration of the Data Proc subcluster. The structure is documented below.
	SubclusterSpecs []DataprocClusterClusterConfigSubclusterSpec `pulumi:"subclusterSpecs"`
	// Version of Data Proc image.
	VersionId *string `pulumi:"versionId"`
}

// DataprocClusterClusterConfigInput is an input type that accepts DataprocClusterClusterConfigArgs and DataprocClusterClusterConfigOutput values.
// You can construct a concrete instance of `DataprocClusterClusterConfigInput` via:
//
//          DataprocClusterClusterConfigArgs{...}
type DataprocClusterClusterConfigInput interface {
	pulumi.Input

	ToDataprocClusterClusterConfigOutput() DataprocClusterClusterConfigOutput
	ToDataprocClusterClusterConfigOutputWithContext(context.Context) DataprocClusterClusterConfigOutput
}

type DataprocClusterClusterConfigArgs struct {
	// Data Proc specific options. The structure is documented below.
	Hadoop DataprocClusterClusterConfigHadoopPtrInput `pulumi:"hadoop"`
	// Configuration of the Data Proc subcluster. The structure is documented below.
	SubclusterSpecs DataprocClusterClusterConfigSubclusterSpecArrayInput `pulumi:"subclusterSpecs"`
	// Version of Data Proc image.
	VersionId pulumi.StringPtrInput `pulumi:"versionId"`
}

func (DataprocClusterClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataprocClusterClusterConfig)(nil)).Elem()
}

func (i DataprocClusterClusterConfigArgs) ToDataprocClusterClusterConfigOutput() DataprocClusterClusterConfigOutput {
	return i.ToDataprocClusterClusterConfigOutputWithContext(context.Background())
}

func (i DataprocClusterClusterConfigArgs) ToDataprocClusterClusterConfigOutputWithContext(ctx context.Context) DataprocClusterClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataprocClusterClusterConfigOutput)
}

func (i DataprocClusterClusterConfigArgs) ToDataprocClusterClusterConfigPtrOutput() DataprocClusterClusterConfigPtrOutput {
	return i.ToDataprocClusterClusterConfigPtrOutputWithContext(context.Background())
}

func (i DataprocClusterClusterConfigArgs) ToDataprocClusterClusterConfigPtrOutputWithContext(ctx context.Context) DataprocClusterClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataprocClusterClusterConfigOutput).ToDataprocClusterClusterConfigPtrOutputWithContext(ctx)
}

// DataprocClusterClusterConfigPtrInput is an input type that accepts DataprocClusterClusterConfigArgs, DataprocClusterClusterConfigPtr and DataprocClusterClusterConfigPtrOutput values.
// You can construct a concrete instance of `DataprocClusterClusterConfigPtrInput` via:
//
//          DataprocClusterClusterConfigArgs{...}
//
//  or:
//
//          nil
type DataprocClusterClusterConfigPtrInput interface {
	pulumi.Input

	ToDataprocClusterClusterConfigPtrOutput() DataprocClusterClusterConfigPtrOutput
	ToDataprocClusterClusterConfigPtrOutputWithContext(context.Context) DataprocClusterClusterConfigPtrOutput
}

type dataprocClusterClusterConfigPtrType DataprocClusterClusterConfigArgs

func DataprocClusterClusterConfigPtr(v *DataprocClusterClusterConfigArgs) DataprocClusterClusterConfigPtrInput {
	return (*dataprocClusterClusterConfigPtrType)(v)
}

func (*dataprocClusterClusterConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataprocClusterClusterConfig)(nil)).Elem()
}

func (i *dataprocClusterClusterConfigPtrType) ToDataprocClusterClusterConfigPtrOutput() DataprocClusterClusterConfigPtrOutput {
	return i.ToDataprocClusterClusterConfigPtrOutputWithContext(context.Background())
}

func (i *dataprocClusterClusterConfigPtrType) ToDataprocClusterClusterConfigPtrOutputWithContext(ctx context.Context) DataprocClusterClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataprocClusterClusterConfigPtrOutput)
}

type DataprocClusterClusterConfigOutput struct{ *pulumi.OutputState }

func (DataprocClusterClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataprocClusterClusterConfig)(nil)).Elem()
}

func (o DataprocClusterClusterConfigOutput) ToDataprocClusterClusterConfigOutput() DataprocClusterClusterConfigOutput {
	return o
}

func (o DataprocClusterClusterConfigOutput) ToDataprocClusterClusterConfigOutputWithContext(ctx context.Context) DataprocClusterClusterConfigOutput {
	return o
}

func (o DataprocClusterClusterConfigOutput) ToDataprocClusterClusterConfigPtrOutput() DataprocClusterClusterConfigPtrOutput {
	return o.ToDataprocClusterClusterConfigPtrOutputWithContext(context.Background())
}

func (o DataprocClusterClusterConfigOutput) ToDataprocClusterClusterConfigPtrOutputWithContext(ctx context.Context) DataprocClusterClusterConfigPtrOutput {
	return o.ApplyT(func(v DataprocClusterClusterConfig) *DataprocClusterClusterConfig {
		return &v
	}).(DataprocClusterClusterConfigPtrOutput)
}

// Data Proc specific options. The structure is documented below.
func (o DataprocClusterClusterConfigOutput) Hadoop() DataprocClusterClusterConfigHadoopPtrOutput {
	return o.ApplyT(func(v DataprocClusterClusterConfig) *DataprocClusterClusterConfigHadoop { return v.Hadoop }).(DataprocClusterClusterConfigHadoopPtrOutput)
}

// Configuration of the Data Proc subcluster. The structure is documented below.
func (o DataprocClusterClusterConfigOutput) SubclusterSpecs() DataprocClusterClusterConfigSubclusterSpecArrayOutput {
	return o.ApplyT(func(v DataprocClusterClusterConfig) []DataprocClusterClusterConfigSubclusterSpec {
		return v.SubclusterSpecs
	}).(DataprocClusterClusterConfigSubclusterSpecArrayOutput)
}

// Version of Data Proc image.
func (o DataprocClusterClusterConfigOutput) VersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataprocClusterClusterConfig) *string { return v.VersionId }).(pulumi.StringPtrOutput)
}

type DataprocClusterClusterConfigPtrOutput struct{ *pulumi.OutputState }

func (DataprocClusterClusterConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataprocClusterClusterConfig)(nil)).Elem()
}

func (o DataprocClusterClusterConfigPtrOutput) ToDataprocClusterClusterConfigPtrOutput() DataprocClusterClusterConfigPtrOutput {
	return o
}

func (o DataprocClusterClusterConfigPtrOutput) ToDataprocClusterClusterConfigPtrOutputWithContext(ctx context.Context) DataprocClusterClusterConfigPtrOutput {
	return o
}

func (o DataprocClusterClusterConfigPtrOutput) Elem() DataprocClusterClusterConfigOutput {
	return o.ApplyT(func(v *DataprocClusterClusterConfig) DataprocClusterClusterConfig { return *v }).(DataprocClusterClusterConfigOutput)
}

// Data Proc specific options. The structure is documented below.
func (o DataprocClusterClusterConfigPtrOutput) Hadoop() DataprocClusterClusterConfigHadoopPtrOutput {
	return o.ApplyT(func(v *DataprocClusterClusterConfig) *DataprocClusterClusterConfigHadoop {
		if v == nil {
			return nil
		}
		return v.Hadoop
	}).(DataprocClusterClusterConfigHadoopPtrOutput)
}

// Configuration of the Data Proc subcluster. The structure is documented below.
func (o DataprocClusterClusterConfigPtrOutput) SubclusterSpecs() DataprocClusterClusterConfigSubclusterSpecArrayOutput {
	return o.ApplyT(func(v *DataprocClusterClusterConfig) []DataprocClusterClusterConfigSubclusterSpec {
		if v == nil {
			return nil
		}
		return v.SubclusterSpecs
	}).(DataprocClusterClusterConfigSubclusterSpecArrayOutput)
}

// Version of Data Proc image.
func (o DataprocClusterClusterConfigPtrOutput) VersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataprocClusterClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.VersionId
	}).(pulumi.StringPtrOutput)
}

type DataprocClusterClusterConfigHadoop struct {
	// A set of key/value pairs that are used to configure cluster services.
	Properties map[string]string `pulumi:"properties"`
	// List of services to run on Data Proc cluster.
	Services []string `pulumi:"services"`
	// List of SSH public keys to put to the hosts of the cluster. For information on how to connect to the cluster, see [the official documentation](https://cloud.yandex.com/docs/data-proc/operations/connect).
	SshPublicKeys []string `pulumi:"sshPublicKeys"`
}

// DataprocClusterClusterConfigHadoopInput is an input type that accepts DataprocClusterClusterConfigHadoopArgs and DataprocClusterClusterConfigHadoopOutput values.
// You can construct a concrete instance of `DataprocClusterClusterConfigHadoopInput` via:
//
//          DataprocClusterClusterConfigHadoopArgs{...}
type DataprocClusterClusterConfigHadoopInput interface {
	pulumi.Input

	ToDataprocClusterClusterConfigHadoopOutput() DataprocClusterClusterConfigHadoopOutput
	ToDataprocClusterClusterConfigHadoopOutputWithContext(context.Context) DataprocClusterClusterConfigHadoopOutput
}

type DataprocClusterClusterConfigHadoopArgs struct {
	// A set of key/value pairs that are used to configure cluster services.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// List of services to run on Data Proc cluster.
	Services pulumi.StringArrayInput `pulumi:"services"`
	// List of SSH public keys to put to the hosts of the cluster. For information on how to connect to the cluster, see [the official documentation](https://cloud.yandex.com/docs/data-proc/operations/connect).
	SshPublicKeys pulumi.StringArrayInput `pulumi:"sshPublicKeys"`
}

func (DataprocClusterClusterConfigHadoopArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataprocClusterClusterConfigHadoop)(nil)).Elem()
}

func (i DataprocClusterClusterConfigHadoopArgs) ToDataprocClusterClusterConfigHadoopOutput() DataprocClusterClusterConfigHadoopOutput {
	return i.ToDataprocClusterClusterConfigHadoopOutputWithContext(context.Background())
}

func (i DataprocClusterClusterConfigHadoopArgs) ToDataprocClusterClusterConfigHadoopOutputWithContext(ctx context.Context) DataprocClusterClusterConfigHadoopOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataprocClusterClusterConfigHadoopOutput)
}

func (i DataprocClusterClusterConfigHadoopArgs) ToDataprocClusterClusterConfigHadoopPtrOutput() DataprocClusterClusterConfigHadoopPtrOutput {
	return i.ToDataprocClusterClusterConfigHadoopPtrOutputWithContext(context.Background())
}

func (i DataprocClusterClusterConfigHadoopArgs) ToDataprocClusterClusterConfigHadoopPtrOutputWithContext(ctx context.Context) DataprocClusterClusterConfigHadoopPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataprocClusterClusterConfigHadoopOutput).ToDataprocClusterClusterConfigHadoopPtrOutputWithContext(ctx)
}

// DataprocClusterClusterConfigHadoopPtrInput is an input type that accepts DataprocClusterClusterConfigHadoopArgs, DataprocClusterClusterConfigHadoopPtr and DataprocClusterClusterConfigHadoopPtrOutput values.
// You can construct a concrete instance of `DataprocClusterClusterConfigHadoopPtrInput` via:
//
//          DataprocClusterClusterConfigHadoopArgs{...}
//
//  or:
//
//          nil
type DataprocClusterClusterConfigHadoopPtrInput interface {
	pulumi.Input

	ToDataprocClusterClusterConfigHadoopPtrOutput() DataprocClusterClusterConfigHadoopPtrOutput
	ToDataprocClusterClusterConfigHadoopPtrOutputWithContext(context.Context) DataprocClusterClusterConfigHadoopPtrOutput
}

type dataprocClusterClusterConfigHadoopPtrType DataprocClusterClusterConfigHadoopArgs

func DataprocClusterClusterConfigHadoopPtr(v *DataprocClusterClusterConfigHadoopArgs) DataprocClusterClusterConfigHadoopPtrInput {
	return (*dataprocClusterClusterConfigHadoopPtrType)(v)
}

func (*dataprocClusterClusterConfigHadoopPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataprocClusterClusterConfigHadoop)(nil)).Elem()
}

func (i *dataprocClusterClusterConfigHadoopPtrType) ToDataprocClusterClusterConfigHadoopPtrOutput() DataprocClusterClusterConfigHadoopPtrOutput {
	return i.ToDataprocClusterClusterConfigHadoopPtrOutputWithContext(context.Background())
}

func (i *dataprocClusterClusterConfigHadoopPtrType) ToDataprocClusterClusterConfigHadoopPtrOutputWithContext(ctx context.Context) DataprocClusterClusterConfigHadoopPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataprocClusterClusterConfigHadoopPtrOutput)
}

type DataprocClusterClusterConfigHadoopOutput struct{ *pulumi.OutputState }

func (DataprocClusterClusterConfigHadoopOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataprocClusterClusterConfigHadoop)(nil)).Elem()
}

func (o DataprocClusterClusterConfigHadoopOutput) ToDataprocClusterClusterConfigHadoopOutput() DataprocClusterClusterConfigHadoopOutput {
	return o
}

func (o DataprocClusterClusterConfigHadoopOutput) ToDataprocClusterClusterConfigHadoopOutputWithContext(ctx context.Context) DataprocClusterClusterConfigHadoopOutput {
	return o
}

func (o DataprocClusterClusterConfigHadoopOutput) ToDataprocClusterClusterConfigHadoopPtrOutput() DataprocClusterClusterConfigHadoopPtrOutput {
	return o.ToDataprocClusterClusterConfigHadoopPtrOutputWithContext(context.Background())
}

func (o DataprocClusterClusterConfigHadoopOutput) ToDataprocClusterClusterConfigHadoopPtrOutputWithContext(ctx context.Context) DataprocClusterClusterConfigHadoopPtrOutput {
	return o.ApplyT(func(v DataprocClusterClusterConfigHadoop) *DataprocClusterClusterConfigHadoop {
		return &v
	}).(DataprocClusterClusterConfigHadoopPtrOutput)
}

// A set of key/value pairs that are used to configure cluster services.
func (o DataprocClusterClusterConfigHadoopOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataprocClusterClusterConfigHadoop) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// List of services to run on Data Proc cluster.
func (o DataprocClusterClusterConfigHadoopOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataprocClusterClusterConfigHadoop) []string { return v.Services }).(pulumi.StringArrayOutput)
}

// List of SSH public keys to put to the hosts of the cluster. For information on how to connect to the cluster, see [the official documentation](https://cloud.yandex.com/docs/data-proc/operations/connect).
func (o DataprocClusterClusterConfigHadoopOutput) SshPublicKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataprocClusterClusterConfigHadoop) []string { return v.SshPublicKeys }).(pulumi.StringArrayOutput)
}

type DataprocClusterClusterConfigHadoopPtrOutput struct{ *pulumi.OutputState }

func (DataprocClusterClusterConfigHadoopPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataprocClusterClusterConfigHadoop)(nil)).Elem()
}

func (o DataprocClusterClusterConfigHadoopPtrOutput) ToDataprocClusterClusterConfigHadoopPtrOutput() DataprocClusterClusterConfigHadoopPtrOutput {
	return o
}

func (o DataprocClusterClusterConfigHadoopPtrOutput) ToDataprocClusterClusterConfigHadoopPtrOutputWithContext(ctx context.Context) DataprocClusterClusterConfigHadoopPtrOutput {
	return o
}

func (o DataprocClusterClusterConfigHadoopPtrOutput) Elem() DataprocClusterClusterConfigHadoopOutput {
	return o.ApplyT(func(v *DataprocClusterClusterConfigHadoop) DataprocClusterClusterConfigHadoop { return *v }).(DataprocClusterClusterConfigHadoopOutput)
}

// A set of key/value pairs that are used to configure cluster services.
func (o DataprocClusterClusterConfigHadoopPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataprocClusterClusterConfigHadoop) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// List of services to run on Data Proc cluster.
func (o DataprocClusterClusterConfigHadoopPtrOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataprocClusterClusterConfigHadoop) []string {
		if v == nil {
			return nil
		}
		return v.Services
	}).(pulumi.StringArrayOutput)
}

// List of SSH public keys to put to the hosts of the cluster. For information on how to connect to the cluster, see [the official documentation](https://cloud.yandex.com/docs/data-proc/operations/connect).
func (o DataprocClusterClusterConfigHadoopPtrOutput) SshPublicKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataprocClusterClusterConfigHadoop) []string {
		if v == nil {
			return nil
		}
		return v.SshPublicKeys
	}).(pulumi.StringArrayOutput)
}

type DataprocClusterClusterConfigSubclusterSpec struct {
	// Number of hosts within Data Proc subcluster.
	HostsCount int `pulumi:"hostsCount"`
	// (Computed) ID of a new Data Proc cluster.
	Id *string `pulumi:"id"`
	// Name of the Data Proc subcluster.
	Name string `pulumi:"name"`
	// Resources allocated to each host of the Data Proc subcluster. The structure is documented below.
	Resources DataprocClusterClusterConfigSubclusterSpecResources `pulumi:"resources"`
	// Role of the subcluster in the Data Proc cluster.
	Role string `pulumi:"role"`
	// The ID of the subnet, to which hosts of the subcluster belong. Subnets of all the subclusters must belong to the same VPC network.
	SubnetId string `pulumi:"subnetId"`
}

// DataprocClusterClusterConfigSubclusterSpecInput is an input type that accepts DataprocClusterClusterConfigSubclusterSpecArgs and DataprocClusterClusterConfigSubclusterSpecOutput values.
// You can construct a concrete instance of `DataprocClusterClusterConfigSubclusterSpecInput` via:
//
//          DataprocClusterClusterConfigSubclusterSpecArgs{...}
type DataprocClusterClusterConfigSubclusterSpecInput interface {
	pulumi.Input

	ToDataprocClusterClusterConfigSubclusterSpecOutput() DataprocClusterClusterConfigSubclusterSpecOutput
	ToDataprocClusterClusterConfigSubclusterSpecOutputWithContext(context.Context) DataprocClusterClusterConfigSubclusterSpecOutput
}

type DataprocClusterClusterConfigSubclusterSpecArgs struct {
	// Number of hosts within Data Proc subcluster.
	HostsCount pulumi.IntInput `pulumi:"hostsCount"`
	// (Computed) ID of a new Data Proc cluster.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the Data Proc subcluster.
	Name pulumi.StringInput `pulumi:"name"`
	// Resources allocated to each host of the Data Proc subcluster. The structure is documented below.
	Resources DataprocClusterClusterConfigSubclusterSpecResourcesInput `pulumi:"resources"`
	// Role of the subcluster in the Data Proc cluster.
	Role pulumi.StringInput `pulumi:"role"`
	// The ID of the subnet, to which hosts of the subcluster belong. Subnets of all the subclusters must belong to the same VPC network.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (DataprocClusterClusterConfigSubclusterSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataprocClusterClusterConfigSubclusterSpec)(nil)).Elem()
}

func (i DataprocClusterClusterConfigSubclusterSpecArgs) ToDataprocClusterClusterConfigSubclusterSpecOutput() DataprocClusterClusterConfigSubclusterSpecOutput {
	return i.ToDataprocClusterClusterConfigSubclusterSpecOutputWithContext(context.Background())
}

func (i DataprocClusterClusterConfigSubclusterSpecArgs) ToDataprocClusterClusterConfigSubclusterSpecOutputWithContext(ctx context.Context) DataprocClusterClusterConfigSubclusterSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataprocClusterClusterConfigSubclusterSpecOutput)
}

// DataprocClusterClusterConfigSubclusterSpecArrayInput is an input type that accepts DataprocClusterClusterConfigSubclusterSpecArray and DataprocClusterClusterConfigSubclusterSpecArrayOutput values.
// You can construct a concrete instance of `DataprocClusterClusterConfigSubclusterSpecArrayInput` via:
//
//          DataprocClusterClusterConfigSubclusterSpecArray{ DataprocClusterClusterConfigSubclusterSpecArgs{...} }
type DataprocClusterClusterConfigSubclusterSpecArrayInput interface {
	pulumi.Input

	ToDataprocClusterClusterConfigSubclusterSpecArrayOutput() DataprocClusterClusterConfigSubclusterSpecArrayOutput
	ToDataprocClusterClusterConfigSubclusterSpecArrayOutputWithContext(context.Context) DataprocClusterClusterConfigSubclusterSpecArrayOutput
}

type DataprocClusterClusterConfigSubclusterSpecArray []DataprocClusterClusterConfigSubclusterSpecInput

func (DataprocClusterClusterConfigSubclusterSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataprocClusterClusterConfigSubclusterSpec)(nil)).Elem()
}

func (i DataprocClusterClusterConfigSubclusterSpecArray) ToDataprocClusterClusterConfigSubclusterSpecArrayOutput() DataprocClusterClusterConfigSubclusterSpecArrayOutput {
	return i.ToDataprocClusterClusterConfigSubclusterSpecArrayOutputWithContext(context.Background())
}

func (i DataprocClusterClusterConfigSubclusterSpecArray) ToDataprocClusterClusterConfigSubclusterSpecArrayOutputWithContext(ctx context.Context) DataprocClusterClusterConfigSubclusterSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataprocClusterClusterConfigSubclusterSpecArrayOutput)
}

type DataprocClusterClusterConfigSubclusterSpecOutput struct{ *pulumi.OutputState }

func (DataprocClusterClusterConfigSubclusterSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataprocClusterClusterConfigSubclusterSpec)(nil)).Elem()
}

func (o DataprocClusterClusterConfigSubclusterSpecOutput) ToDataprocClusterClusterConfigSubclusterSpecOutput() DataprocClusterClusterConfigSubclusterSpecOutput {
	return o
}

func (o DataprocClusterClusterConfigSubclusterSpecOutput) ToDataprocClusterClusterConfigSubclusterSpecOutputWithContext(ctx context.Context) DataprocClusterClusterConfigSubclusterSpecOutput {
	return o
}

// Number of hosts within Data Proc subcluster.
func (o DataprocClusterClusterConfigSubclusterSpecOutput) HostsCount() pulumi.IntOutput {
	return o.ApplyT(func(v DataprocClusterClusterConfigSubclusterSpec) int { return v.HostsCount }).(pulumi.IntOutput)
}

// (Computed) ID of a new Data Proc cluster.
func (o DataprocClusterClusterConfigSubclusterSpecOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataprocClusterClusterConfigSubclusterSpec) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the Data Proc subcluster.
func (o DataprocClusterClusterConfigSubclusterSpecOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataprocClusterClusterConfigSubclusterSpec) string { return v.Name }).(pulumi.StringOutput)
}

// Resources allocated to each host of the Data Proc subcluster. The structure is documented below.
func (o DataprocClusterClusterConfigSubclusterSpecOutput) Resources() DataprocClusterClusterConfigSubclusterSpecResourcesOutput {
	return o.ApplyT(func(v DataprocClusterClusterConfigSubclusterSpec) DataprocClusterClusterConfigSubclusterSpecResources {
		return v.Resources
	}).(DataprocClusterClusterConfigSubclusterSpecResourcesOutput)
}

// Role of the subcluster in the Data Proc cluster.
func (o DataprocClusterClusterConfigSubclusterSpecOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v DataprocClusterClusterConfigSubclusterSpec) string { return v.Role }).(pulumi.StringOutput)
}

// The ID of the subnet, to which hosts of the subcluster belong. Subnets of all the subclusters must belong to the same VPC network.
func (o DataprocClusterClusterConfigSubclusterSpecOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v DataprocClusterClusterConfigSubclusterSpec) string { return v.SubnetId }).(pulumi.StringOutput)
}

type DataprocClusterClusterConfigSubclusterSpecArrayOutput struct{ *pulumi.OutputState }

func (DataprocClusterClusterConfigSubclusterSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataprocClusterClusterConfigSubclusterSpec)(nil)).Elem()
}

func (o DataprocClusterClusterConfigSubclusterSpecArrayOutput) ToDataprocClusterClusterConfigSubclusterSpecArrayOutput() DataprocClusterClusterConfigSubclusterSpecArrayOutput {
	return o
}

func (o DataprocClusterClusterConfigSubclusterSpecArrayOutput) ToDataprocClusterClusterConfigSubclusterSpecArrayOutputWithContext(ctx context.Context) DataprocClusterClusterConfigSubclusterSpecArrayOutput {
	return o
}

func (o DataprocClusterClusterConfigSubclusterSpecArrayOutput) Index(i pulumi.IntInput) DataprocClusterClusterConfigSubclusterSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataprocClusterClusterConfigSubclusterSpec {
		return vs[0].([]DataprocClusterClusterConfigSubclusterSpec)[vs[1].(int)]
	}).(DataprocClusterClusterConfigSubclusterSpecOutput)
}

type DataprocClusterClusterConfigSubclusterSpecResources struct {
	// Volume of the storage available to a host, in gigabytes.
	DiskSize int `pulumi:"diskSize"`
	// Type of the storage of a host. One of `network-hdd` (default) or `network-ssd`.
	DiskTypeId *string `pulumi:"diskTypeId"`
	// The ID of the preset for computational resources available to a host. All available presets are listed in the [documentation](https://cloud.yandex.com/docs/data-proc/concepts/instance-types).
	ResourcePresetId string `pulumi:"resourcePresetId"`
}

// DataprocClusterClusterConfigSubclusterSpecResourcesInput is an input type that accepts DataprocClusterClusterConfigSubclusterSpecResourcesArgs and DataprocClusterClusterConfigSubclusterSpecResourcesOutput values.
// You can construct a concrete instance of `DataprocClusterClusterConfigSubclusterSpecResourcesInput` via:
//
//          DataprocClusterClusterConfigSubclusterSpecResourcesArgs{...}
type DataprocClusterClusterConfigSubclusterSpecResourcesInput interface {
	pulumi.Input

	ToDataprocClusterClusterConfigSubclusterSpecResourcesOutput() DataprocClusterClusterConfigSubclusterSpecResourcesOutput
	ToDataprocClusterClusterConfigSubclusterSpecResourcesOutputWithContext(context.Context) DataprocClusterClusterConfigSubclusterSpecResourcesOutput
}

type DataprocClusterClusterConfigSubclusterSpecResourcesArgs struct {
	// Volume of the storage available to a host, in gigabytes.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// Type of the storage of a host. One of `network-hdd` (default) or `network-ssd`.
	DiskTypeId pulumi.StringPtrInput `pulumi:"diskTypeId"`
	// The ID of the preset for computational resources available to a host. All available presets are listed in the [documentation](https://cloud.yandex.com/docs/data-proc/concepts/instance-types).
	ResourcePresetId pulumi.StringInput `pulumi:"resourcePresetId"`
}

func (DataprocClusterClusterConfigSubclusterSpecResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataprocClusterClusterConfigSubclusterSpecResources)(nil)).Elem()
}

func (i DataprocClusterClusterConfigSubclusterSpecResourcesArgs) ToDataprocClusterClusterConfigSubclusterSpecResourcesOutput() DataprocClusterClusterConfigSubclusterSpecResourcesOutput {
	return i.ToDataprocClusterClusterConfigSubclusterSpecResourcesOutputWithContext(context.Background())
}

func (i DataprocClusterClusterConfigSubclusterSpecResourcesArgs) ToDataprocClusterClusterConfigSubclusterSpecResourcesOutputWithContext(ctx context.Context) DataprocClusterClusterConfigSubclusterSpecResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataprocClusterClusterConfigSubclusterSpecResourcesOutput)
}

type DataprocClusterClusterConfigSubclusterSpecResourcesOutput struct{ *pulumi.OutputState }

func (DataprocClusterClusterConfigSubclusterSpecResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataprocClusterClusterConfigSubclusterSpecResources)(nil)).Elem()
}

func (o DataprocClusterClusterConfigSubclusterSpecResourcesOutput) ToDataprocClusterClusterConfigSubclusterSpecResourcesOutput() DataprocClusterClusterConfigSubclusterSpecResourcesOutput {
	return o
}

func (o DataprocClusterClusterConfigSubclusterSpecResourcesOutput) ToDataprocClusterClusterConfigSubclusterSpecResourcesOutputWithContext(ctx context.Context) DataprocClusterClusterConfigSubclusterSpecResourcesOutput {
	return o
}

// Volume of the storage available to a host, in gigabytes.
func (o DataprocClusterClusterConfigSubclusterSpecResourcesOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v DataprocClusterClusterConfigSubclusterSpecResources) int { return v.DiskSize }).(pulumi.IntOutput)
}

// Type of the storage of a host. One of `network-hdd` (default) or `network-ssd`.
func (o DataprocClusterClusterConfigSubclusterSpecResourcesOutput) DiskTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataprocClusterClusterConfigSubclusterSpecResources) *string { return v.DiskTypeId }).(pulumi.StringPtrOutput)
}

// The ID of the preset for computational resources available to a host. All available presets are listed in the [documentation](https://cloud.yandex.com/docs/data-proc/concepts/instance-types).
func (o DataprocClusterClusterConfigSubclusterSpecResourcesOutput) ResourcePresetId() pulumi.StringOutput {
	return o.ApplyT(func(v DataprocClusterClusterConfigSubclusterSpecResources) string { return v.ResourcePresetId }).(pulumi.StringOutput)
}

type FunctionContent struct {
	ZipFilename string `pulumi:"zipFilename"`
}

// FunctionContentInput is an input type that accepts FunctionContentArgs and FunctionContentOutput values.
// You can construct a concrete instance of `FunctionContentInput` via:
//
//          FunctionContentArgs{...}
type FunctionContentInput interface {
	pulumi.Input

	ToFunctionContentOutput() FunctionContentOutput
	ToFunctionContentOutputWithContext(context.Context) FunctionContentOutput
}

type FunctionContentArgs struct {
	ZipFilename pulumi.StringInput `pulumi:"zipFilename"`
}

func (FunctionContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionContent)(nil)).Elem()
}

func (i FunctionContentArgs) ToFunctionContentOutput() FunctionContentOutput {
	return i.ToFunctionContentOutputWithContext(context.Background())
}

func (i FunctionContentArgs) ToFunctionContentOutputWithContext(ctx context.Context) FunctionContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionContentOutput)
}

func (i FunctionContentArgs) ToFunctionContentPtrOutput() FunctionContentPtrOutput {
	return i.ToFunctionContentPtrOutputWithContext(context.Background())
}

func (i FunctionContentArgs) ToFunctionContentPtrOutputWithContext(ctx context.Context) FunctionContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionContentOutput).ToFunctionContentPtrOutputWithContext(ctx)
}

// FunctionContentPtrInput is an input type that accepts FunctionContentArgs, FunctionContentPtr and FunctionContentPtrOutput values.
// You can construct a concrete instance of `FunctionContentPtrInput` via:
//
//          FunctionContentArgs{...}
//
//  or:
//
//          nil
type FunctionContentPtrInput interface {
	pulumi.Input

	ToFunctionContentPtrOutput() FunctionContentPtrOutput
	ToFunctionContentPtrOutputWithContext(context.Context) FunctionContentPtrOutput
}

type functionContentPtrType FunctionContentArgs

func FunctionContentPtr(v *FunctionContentArgs) FunctionContentPtrInput {
	return (*functionContentPtrType)(v)
}

func (*functionContentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionContent)(nil)).Elem()
}

func (i *functionContentPtrType) ToFunctionContentPtrOutput() FunctionContentPtrOutput {
	return i.ToFunctionContentPtrOutputWithContext(context.Background())
}

func (i *functionContentPtrType) ToFunctionContentPtrOutputWithContext(ctx context.Context) FunctionContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionContentPtrOutput)
}

type FunctionContentOutput struct{ *pulumi.OutputState }

func (FunctionContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionContent)(nil)).Elem()
}

func (o FunctionContentOutput) ToFunctionContentOutput() FunctionContentOutput {
	return o
}

func (o FunctionContentOutput) ToFunctionContentOutputWithContext(ctx context.Context) FunctionContentOutput {
	return o
}

func (o FunctionContentOutput) ToFunctionContentPtrOutput() FunctionContentPtrOutput {
	return o.ToFunctionContentPtrOutputWithContext(context.Background())
}

func (o FunctionContentOutput) ToFunctionContentPtrOutputWithContext(ctx context.Context) FunctionContentPtrOutput {
	return o.ApplyT(func(v FunctionContent) *FunctionContent {
		return &v
	}).(FunctionContentPtrOutput)
}
func (o FunctionContentOutput) ZipFilename() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionContent) string { return v.ZipFilename }).(pulumi.StringOutput)
}

type FunctionContentPtrOutput struct{ *pulumi.OutputState }

func (FunctionContentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionContent)(nil)).Elem()
}

func (o FunctionContentPtrOutput) ToFunctionContentPtrOutput() FunctionContentPtrOutput {
	return o
}

func (o FunctionContentPtrOutput) ToFunctionContentPtrOutputWithContext(ctx context.Context) FunctionContentPtrOutput {
	return o
}

func (o FunctionContentPtrOutput) Elem() FunctionContentOutput {
	return o.ApplyT(func(v *FunctionContent) FunctionContent { return *v }).(FunctionContentOutput)
}

func (o FunctionContentPtrOutput) ZipFilename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionContent) *string {
		if v == nil {
			return nil
		}
		return &v.ZipFilename
	}).(pulumi.StringPtrOutput)
}

type FunctionPackage struct {
	BucketName string  `pulumi:"bucketName"`
	ObjectName string  `pulumi:"objectName"`
	Sha256     *string `pulumi:"sha256"`
}

// FunctionPackageInput is an input type that accepts FunctionPackageArgs and FunctionPackageOutput values.
// You can construct a concrete instance of `FunctionPackageInput` via:
//
//          FunctionPackageArgs{...}
type FunctionPackageInput interface {
	pulumi.Input

	ToFunctionPackageOutput() FunctionPackageOutput
	ToFunctionPackageOutputWithContext(context.Context) FunctionPackageOutput
}

type FunctionPackageArgs struct {
	BucketName pulumi.StringInput    `pulumi:"bucketName"`
	ObjectName pulumi.StringInput    `pulumi:"objectName"`
	Sha256     pulumi.StringPtrInput `pulumi:"sha256"`
}

func (FunctionPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionPackage)(nil)).Elem()
}

func (i FunctionPackageArgs) ToFunctionPackageOutput() FunctionPackageOutput {
	return i.ToFunctionPackageOutputWithContext(context.Background())
}

func (i FunctionPackageArgs) ToFunctionPackageOutputWithContext(ctx context.Context) FunctionPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionPackageOutput)
}

func (i FunctionPackageArgs) ToFunctionPackagePtrOutput() FunctionPackagePtrOutput {
	return i.ToFunctionPackagePtrOutputWithContext(context.Background())
}

func (i FunctionPackageArgs) ToFunctionPackagePtrOutputWithContext(ctx context.Context) FunctionPackagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionPackageOutput).ToFunctionPackagePtrOutputWithContext(ctx)
}

// FunctionPackagePtrInput is an input type that accepts FunctionPackageArgs, FunctionPackagePtr and FunctionPackagePtrOutput values.
// You can construct a concrete instance of `FunctionPackagePtrInput` via:
//
//          FunctionPackageArgs{...}
//
//  or:
//
//          nil
type FunctionPackagePtrInput interface {
	pulumi.Input

	ToFunctionPackagePtrOutput() FunctionPackagePtrOutput
	ToFunctionPackagePtrOutputWithContext(context.Context) FunctionPackagePtrOutput
}

type functionPackagePtrType FunctionPackageArgs

func FunctionPackagePtr(v *FunctionPackageArgs) FunctionPackagePtrInput {
	return (*functionPackagePtrType)(v)
}

func (*functionPackagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionPackage)(nil)).Elem()
}

func (i *functionPackagePtrType) ToFunctionPackagePtrOutput() FunctionPackagePtrOutput {
	return i.ToFunctionPackagePtrOutputWithContext(context.Background())
}

func (i *functionPackagePtrType) ToFunctionPackagePtrOutputWithContext(ctx context.Context) FunctionPackagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionPackagePtrOutput)
}

type FunctionPackageOutput struct{ *pulumi.OutputState }

func (FunctionPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionPackage)(nil)).Elem()
}

func (o FunctionPackageOutput) ToFunctionPackageOutput() FunctionPackageOutput {
	return o
}

func (o FunctionPackageOutput) ToFunctionPackageOutputWithContext(ctx context.Context) FunctionPackageOutput {
	return o
}

func (o FunctionPackageOutput) ToFunctionPackagePtrOutput() FunctionPackagePtrOutput {
	return o.ToFunctionPackagePtrOutputWithContext(context.Background())
}

func (o FunctionPackageOutput) ToFunctionPackagePtrOutputWithContext(ctx context.Context) FunctionPackagePtrOutput {
	return o.ApplyT(func(v FunctionPackage) *FunctionPackage {
		return &v
	}).(FunctionPackagePtrOutput)
}
func (o FunctionPackageOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionPackage) string { return v.BucketName }).(pulumi.StringOutput)
}

func (o FunctionPackageOutput) ObjectName() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionPackage) string { return v.ObjectName }).(pulumi.StringOutput)
}

func (o FunctionPackageOutput) Sha256() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionPackage) *string { return v.Sha256 }).(pulumi.StringPtrOutput)
}

type FunctionPackagePtrOutput struct{ *pulumi.OutputState }

func (FunctionPackagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionPackage)(nil)).Elem()
}

func (o FunctionPackagePtrOutput) ToFunctionPackagePtrOutput() FunctionPackagePtrOutput {
	return o
}

func (o FunctionPackagePtrOutput) ToFunctionPackagePtrOutputWithContext(ctx context.Context) FunctionPackagePtrOutput {
	return o
}

func (o FunctionPackagePtrOutput) Elem() FunctionPackageOutput {
	return o.ApplyT(func(v *FunctionPackage) FunctionPackage { return *v }).(FunctionPackageOutput)
}

func (o FunctionPackagePtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionPackage) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o FunctionPackagePtrOutput) ObjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionPackage) *string {
		if v == nil {
			return nil
		}
		return &v.ObjectName
	}).(pulumi.StringPtrOutput)
}

func (o FunctionPackagePtrOutput) Sha256() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionPackage) *string {
		if v == nil {
			return nil
		}
		return v.Sha256
	}).(pulumi.StringPtrOutput)
}

type FunctionTriggerDlq struct {
	QueueId          string `pulumi:"queueId"`
	ServiceAccountId string `pulumi:"serviceAccountId"`
}

// FunctionTriggerDlqInput is an input type that accepts FunctionTriggerDlqArgs and FunctionTriggerDlqOutput values.
// You can construct a concrete instance of `FunctionTriggerDlqInput` via:
//
//          FunctionTriggerDlqArgs{...}
type FunctionTriggerDlqInput interface {
	pulumi.Input

	ToFunctionTriggerDlqOutput() FunctionTriggerDlqOutput
	ToFunctionTriggerDlqOutputWithContext(context.Context) FunctionTriggerDlqOutput
}

type FunctionTriggerDlqArgs struct {
	QueueId          pulumi.StringInput `pulumi:"queueId"`
	ServiceAccountId pulumi.StringInput `pulumi:"serviceAccountId"`
}

func (FunctionTriggerDlqArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTriggerDlq)(nil)).Elem()
}

func (i FunctionTriggerDlqArgs) ToFunctionTriggerDlqOutput() FunctionTriggerDlqOutput {
	return i.ToFunctionTriggerDlqOutputWithContext(context.Background())
}

func (i FunctionTriggerDlqArgs) ToFunctionTriggerDlqOutputWithContext(ctx context.Context) FunctionTriggerDlqOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerDlqOutput)
}

func (i FunctionTriggerDlqArgs) ToFunctionTriggerDlqPtrOutput() FunctionTriggerDlqPtrOutput {
	return i.ToFunctionTriggerDlqPtrOutputWithContext(context.Background())
}

func (i FunctionTriggerDlqArgs) ToFunctionTriggerDlqPtrOutputWithContext(ctx context.Context) FunctionTriggerDlqPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerDlqOutput).ToFunctionTriggerDlqPtrOutputWithContext(ctx)
}

// FunctionTriggerDlqPtrInput is an input type that accepts FunctionTriggerDlqArgs, FunctionTriggerDlqPtr and FunctionTriggerDlqPtrOutput values.
// You can construct a concrete instance of `FunctionTriggerDlqPtrInput` via:
//
//          FunctionTriggerDlqArgs{...}
//
//  or:
//
//          nil
type FunctionTriggerDlqPtrInput interface {
	pulumi.Input

	ToFunctionTriggerDlqPtrOutput() FunctionTriggerDlqPtrOutput
	ToFunctionTriggerDlqPtrOutputWithContext(context.Context) FunctionTriggerDlqPtrOutput
}

type functionTriggerDlqPtrType FunctionTriggerDlqArgs

func FunctionTriggerDlqPtr(v *FunctionTriggerDlqArgs) FunctionTriggerDlqPtrInput {
	return (*functionTriggerDlqPtrType)(v)
}

func (*functionTriggerDlqPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTriggerDlq)(nil)).Elem()
}

func (i *functionTriggerDlqPtrType) ToFunctionTriggerDlqPtrOutput() FunctionTriggerDlqPtrOutput {
	return i.ToFunctionTriggerDlqPtrOutputWithContext(context.Background())
}

func (i *functionTriggerDlqPtrType) ToFunctionTriggerDlqPtrOutputWithContext(ctx context.Context) FunctionTriggerDlqPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerDlqPtrOutput)
}

type FunctionTriggerDlqOutput struct{ *pulumi.OutputState }

func (FunctionTriggerDlqOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTriggerDlq)(nil)).Elem()
}

func (o FunctionTriggerDlqOutput) ToFunctionTriggerDlqOutput() FunctionTriggerDlqOutput {
	return o
}

func (o FunctionTriggerDlqOutput) ToFunctionTriggerDlqOutputWithContext(ctx context.Context) FunctionTriggerDlqOutput {
	return o
}

func (o FunctionTriggerDlqOutput) ToFunctionTriggerDlqPtrOutput() FunctionTriggerDlqPtrOutput {
	return o.ToFunctionTriggerDlqPtrOutputWithContext(context.Background())
}

func (o FunctionTriggerDlqOutput) ToFunctionTriggerDlqPtrOutputWithContext(ctx context.Context) FunctionTriggerDlqPtrOutput {
	return o.ApplyT(func(v FunctionTriggerDlq) *FunctionTriggerDlq {
		return &v
	}).(FunctionTriggerDlqPtrOutput)
}
func (o FunctionTriggerDlqOutput) QueueId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionTriggerDlq) string { return v.QueueId }).(pulumi.StringOutput)
}

func (o FunctionTriggerDlqOutput) ServiceAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionTriggerDlq) string { return v.ServiceAccountId }).(pulumi.StringOutput)
}

type FunctionTriggerDlqPtrOutput struct{ *pulumi.OutputState }

func (FunctionTriggerDlqPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTriggerDlq)(nil)).Elem()
}

func (o FunctionTriggerDlqPtrOutput) ToFunctionTriggerDlqPtrOutput() FunctionTriggerDlqPtrOutput {
	return o
}

func (o FunctionTriggerDlqPtrOutput) ToFunctionTriggerDlqPtrOutputWithContext(ctx context.Context) FunctionTriggerDlqPtrOutput {
	return o
}

func (o FunctionTriggerDlqPtrOutput) Elem() FunctionTriggerDlqOutput {
	return o.ApplyT(func(v *FunctionTriggerDlq) FunctionTriggerDlq { return *v }).(FunctionTriggerDlqOutput)
}

func (o FunctionTriggerDlqPtrOutput) QueueId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerDlq) *string {
		if v == nil {
			return nil
		}
		return &v.QueueId
	}).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerDlqPtrOutput) ServiceAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerDlq) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceAccountId
	}).(pulumi.StringPtrOutput)
}

type FunctionTriggerFunction struct {
	Id               string  `pulumi:"id"`
	RetryAttempts    *string `pulumi:"retryAttempts"`
	RetryInterval    *string `pulumi:"retryInterval"`
	ServiceAccountId *string `pulumi:"serviceAccountId"`
	Tag              *string `pulumi:"tag"`
}

// FunctionTriggerFunctionInput is an input type that accepts FunctionTriggerFunctionArgs and FunctionTriggerFunctionOutput values.
// You can construct a concrete instance of `FunctionTriggerFunctionInput` via:
//
//          FunctionTriggerFunctionArgs{...}
type FunctionTriggerFunctionInput interface {
	pulumi.Input

	ToFunctionTriggerFunctionOutput() FunctionTriggerFunctionOutput
	ToFunctionTriggerFunctionOutputWithContext(context.Context) FunctionTriggerFunctionOutput
}

type FunctionTriggerFunctionArgs struct {
	Id               pulumi.StringInput    `pulumi:"id"`
	RetryAttempts    pulumi.StringPtrInput `pulumi:"retryAttempts"`
	RetryInterval    pulumi.StringPtrInput `pulumi:"retryInterval"`
	ServiceAccountId pulumi.StringPtrInput `pulumi:"serviceAccountId"`
	Tag              pulumi.StringPtrInput `pulumi:"tag"`
}

func (FunctionTriggerFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTriggerFunction)(nil)).Elem()
}

func (i FunctionTriggerFunctionArgs) ToFunctionTriggerFunctionOutput() FunctionTriggerFunctionOutput {
	return i.ToFunctionTriggerFunctionOutputWithContext(context.Background())
}

func (i FunctionTriggerFunctionArgs) ToFunctionTriggerFunctionOutputWithContext(ctx context.Context) FunctionTriggerFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerFunctionOutput)
}

func (i FunctionTriggerFunctionArgs) ToFunctionTriggerFunctionPtrOutput() FunctionTriggerFunctionPtrOutput {
	return i.ToFunctionTriggerFunctionPtrOutputWithContext(context.Background())
}

func (i FunctionTriggerFunctionArgs) ToFunctionTriggerFunctionPtrOutputWithContext(ctx context.Context) FunctionTriggerFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerFunctionOutput).ToFunctionTriggerFunctionPtrOutputWithContext(ctx)
}

// FunctionTriggerFunctionPtrInput is an input type that accepts FunctionTriggerFunctionArgs, FunctionTriggerFunctionPtr and FunctionTriggerFunctionPtrOutput values.
// You can construct a concrete instance of `FunctionTriggerFunctionPtrInput` via:
//
//          FunctionTriggerFunctionArgs{...}
//
//  or:
//
//          nil
type FunctionTriggerFunctionPtrInput interface {
	pulumi.Input

	ToFunctionTriggerFunctionPtrOutput() FunctionTriggerFunctionPtrOutput
	ToFunctionTriggerFunctionPtrOutputWithContext(context.Context) FunctionTriggerFunctionPtrOutput
}

type functionTriggerFunctionPtrType FunctionTriggerFunctionArgs

func FunctionTriggerFunctionPtr(v *FunctionTriggerFunctionArgs) FunctionTriggerFunctionPtrInput {
	return (*functionTriggerFunctionPtrType)(v)
}

func (*functionTriggerFunctionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTriggerFunction)(nil)).Elem()
}

func (i *functionTriggerFunctionPtrType) ToFunctionTriggerFunctionPtrOutput() FunctionTriggerFunctionPtrOutput {
	return i.ToFunctionTriggerFunctionPtrOutputWithContext(context.Background())
}

func (i *functionTriggerFunctionPtrType) ToFunctionTriggerFunctionPtrOutputWithContext(ctx context.Context) FunctionTriggerFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerFunctionPtrOutput)
}

type FunctionTriggerFunctionOutput struct{ *pulumi.OutputState }

func (FunctionTriggerFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTriggerFunction)(nil)).Elem()
}

func (o FunctionTriggerFunctionOutput) ToFunctionTriggerFunctionOutput() FunctionTriggerFunctionOutput {
	return o
}

func (o FunctionTriggerFunctionOutput) ToFunctionTriggerFunctionOutputWithContext(ctx context.Context) FunctionTriggerFunctionOutput {
	return o
}

func (o FunctionTriggerFunctionOutput) ToFunctionTriggerFunctionPtrOutput() FunctionTriggerFunctionPtrOutput {
	return o.ToFunctionTriggerFunctionPtrOutputWithContext(context.Background())
}

func (o FunctionTriggerFunctionOutput) ToFunctionTriggerFunctionPtrOutputWithContext(ctx context.Context) FunctionTriggerFunctionPtrOutput {
	return o.ApplyT(func(v FunctionTriggerFunction) *FunctionTriggerFunction {
		return &v
	}).(FunctionTriggerFunctionPtrOutput)
}
func (o FunctionTriggerFunctionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionTriggerFunction) string { return v.Id }).(pulumi.StringOutput)
}

func (o FunctionTriggerFunctionOutput) RetryAttempts() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionTriggerFunction) *string { return v.RetryAttempts }).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerFunctionOutput) RetryInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionTriggerFunction) *string { return v.RetryInterval }).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerFunctionOutput) ServiceAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionTriggerFunction) *string { return v.ServiceAccountId }).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerFunctionOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionTriggerFunction) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type FunctionTriggerFunctionPtrOutput struct{ *pulumi.OutputState }

func (FunctionTriggerFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTriggerFunction)(nil)).Elem()
}

func (o FunctionTriggerFunctionPtrOutput) ToFunctionTriggerFunctionPtrOutput() FunctionTriggerFunctionPtrOutput {
	return o
}

func (o FunctionTriggerFunctionPtrOutput) ToFunctionTriggerFunctionPtrOutputWithContext(ctx context.Context) FunctionTriggerFunctionPtrOutput {
	return o
}

func (o FunctionTriggerFunctionPtrOutput) Elem() FunctionTriggerFunctionOutput {
	return o.ApplyT(func(v *FunctionTriggerFunction) FunctionTriggerFunction { return *v }).(FunctionTriggerFunctionOutput)
}

func (o FunctionTriggerFunctionPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerFunction) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerFunctionPtrOutput) RetryAttempts() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerFunction) *string {
		if v == nil {
			return nil
		}
		return v.RetryAttempts
	}).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerFunctionPtrOutput) RetryInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerFunction) *string {
		if v == nil {
			return nil
		}
		return v.RetryInterval
	}).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerFunctionPtrOutput) ServiceAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerFunction) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountId
	}).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerFunctionPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerFunction) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

type FunctionTriggerIot struct {
	DeviceId   *string `pulumi:"deviceId"`
	RegistryId string  `pulumi:"registryId"`
	Topic      *string `pulumi:"topic"`
}

// FunctionTriggerIotInput is an input type that accepts FunctionTriggerIotArgs and FunctionTriggerIotOutput values.
// You can construct a concrete instance of `FunctionTriggerIotInput` via:
//
//          FunctionTriggerIotArgs{...}
type FunctionTriggerIotInput interface {
	pulumi.Input

	ToFunctionTriggerIotOutput() FunctionTriggerIotOutput
	ToFunctionTriggerIotOutputWithContext(context.Context) FunctionTriggerIotOutput
}

type FunctionTriggerIotArgs struct {
	DeviceId   pulumi.StringPtrInput `pulumi:"deviceId"`
	RegistryId pulumi.StringInput    `pulumi:"registryId"`
	Topic      pulumi.StringPtrInput `pulumi:"topic"`
}

func (FunctionTriggerIotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTriggerIot)(nil)).Elem()
}

func (i FunctionTriggerIotArgs) ToFunctionTriggerIotOutput() FunctionTriggerIotOutput {
	return i.ToFunctionTriggerIotOutputWithContext(context.Background())
}

func (i FunctionTriggerIotArgs) ToFunctionTriggerIotOutputWithContext(ctx context.Context) FunctionTriggerIotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerIotOutput)
}

func (i FunctionTriggerIotArgs) ToFunctionTriggerIotPtrOutput() FunctionTriggerIotPtrOutput {
	return i.ToFunctionTriggerIotPtrOutputWithContext(context.Background())
}

func (i FunctionTriggerIotArgs) ToFunctionTriggerIotPtrOutputWithContext(ctx context.Context) FunctionTriggerIotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerIotOutput).ToFunctionTriggerIotPtrOutputWithContext(ctx)
}

// FunctionTriggerIotPtrInput is an input type that accepts FunctionTriggerIotArgs, FunctionTriggerIotPtr and FunctionTriggerIotPtrOutput values.
// You can construct a concrete instance of `FunctionTriggerIotPtrInput` via:
//
//          FunctionTriggerIotArgs{...}
//
//  or:
//
//          nil
type FunctionTriggerIotPtrInput interface {
	pulumi.Input

	ToFunctionTriggerIotPtrOutput() FunctionTriggerIotPtrOutput
	ToFunctionTriggerIotPtrOutputWithContext(context.Context) FunctionTriggerIotPtrOutput
}

type functionTriggerIotPtrType FunctionTriggerIotArgs

func FunctionTriggerIotPtr(v *FunctionTriggerIotArgs) FunctionTriggerIotPtrInput {
	return (*functionTriggerIotPtrType)(v)
}

func (*functionTriggerIotPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTriggerIot)(nil)).Elem()
}

func (i *functionTriggerIotPtrType) ToFunctionTriggerIotPtrOutput() FunctionTriggerIotPtrOutput {
	return i.ToFunctionTriggerIotPtrOutputWithContext(context.Background())
}

func (i *functionTriggerIotPtrType) ToFunctionTriggerIotPtrOutputWithContext(ctx context.Context) FunctionTriggerIotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerIotPtrOutput)
}

type FunctionTriggerIotOutput struct{ *pulumi.OutputState }

func (FunctionTriggerIotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTriggerIot)(nil)).Elem()
}

func (o FunctionTriggerIotOutput) ToFunctionTriggerIotOutput() FunctionTriggerIotOutput {
	return o
}

func (o FunctionTriggerIotOutput) ToFunctionTriggerIotOutputWithContext(ctx context.Context) FunctionTriggerIotOutput {
	return o
}

func (o FunctionTriggerIotOutput) ToFunctionTriggerIotPtrOutput() FunctionTriggerIotPtrOutput {
	return o.ToFunctionTriggerIotPtrOutputWithContext(context.Background())
}

func (o FunctionTriggerIotOutput) ToFunctionTriggerIotPtrOutputWithContext(ctx context.Context) FunctionTriggerIotPtrOutput {
	return o.ApplyT(func(v FunctionTriggerIot) *FunctionTriggerIot {
		return &v
	}).(FunctionTriggerIotPtrOutput)
}
func (o FunctionTriggerIotOutput) DeviceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionTriggerIot) *string { return v.DeviceId }).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerIotOutput) RegistryId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionTriggerIot) string { return v.RegistryId }).(pulumi.StringOutput)
}

func (o FunctionTriggerIotOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionTriggerIot) *string { return v.Topic }).(pulumi.StringPtrOutput)
}

type FunctionTriggerIotPtrOutput struct{ *pulumi.OutputState }

func (FunctionTriggerIotPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTriggerIot)(nil)).Elem()
}

func (o FunctionTriggerIotPtrOutput) ToFunctionTriggerIotPtrOutput() FunctionTriggerIotPtrOutput {
	return o
}

func (o FunctionTriggerIotPtrOutput) ToFunctionTriggerIotPtrOutputWithContext(ctx context.Context) FunctionTriggerIotPtrOutput {
	return o
}

func (o FunctionTriggerIotPtrOutput) Elem() FunctionTriggerIotOutput {
	return o.ApplyT(func(v *FunctionTriggerIot) FunctionTriggerIot { return *v }).(FunctionTriggerIotOutput)
}

func (o FunctionTriggerIotPtrOutput) DeviceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerIot) *string {
		if v == nil {
			return nil
		}
		return v.DeviceId
	}).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerIotPtrOutput) RegistryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerIot) *string {
		if v == nil {
			return nil
		}
		return &v.RegistryId
	}).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerIotPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerIot) *string {
		if v == nil {
			return nil
		}
		return v.Topic
	}).(pulumi.StringPtrOutput)
}

type FunctionTriggerLogGroup struct {
	BatchCutoff string   `pulumi:"batchCutoff"`
	BatchSize   *string  `pulumi:"batchSize"`
	LogGroupIds []string `pulumi:"logGroupIds"`
}

// FunctionTriggerLogGroupInput is an input type that accepts FunctionTriggerLogGroupArgs and FunctionTriggerLogGroupOutput values.
// You can construct a concrete instance of `FunctionTriggerLogGroupInput` via:
//
//          FunctionTriggerLogGroupArgs{...}
type FunctionTriggerLogGroupInput interface {
	pulumi.Input

	ToFunctionTriggerLogGroupOutput() FunctionTriggerLogGroupOutput
	ToFunctionTriggerLogGroupOutputWithContext(context.Context) FunctionTriggerLogGroupOutput
}

type FunctionTriggerLogGroupArgs struct {
	BatchCutoff pulumi.StringInput      `pulumi:"batchCutoff"`
	BatchSize   pulumi.StringPtrInput   `pulumi:"batchSize"`
	LogGroupIds pulumi.StringArrayInput `pulumi:"logGroupIds"`
}

func (FunctionTriggerLogGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTriggerLogGroup)(nil)).Elem()
}

func (i FunctionTriggerLogGroupArgs) ToFunctionTriggerLogGroupOutput() FunctionTriggerLogGroupOutput {
	return i.ToFunctionTriggerLogGroupOutputWithContext(context.Background())
}

func (i FunctionTriggerLogGroupArgs) ToFunctionTriggerLogGroupOutputWithContext(ctx context.Context) FunctionTriggerLogGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerLogGroupOutput)
}

func (i FunctionTriggerLogGroupArgs) ToFunctionTriggerLogGroupPtrOutput() FunctionTriggerLogGroupPtrOutput {
	return i.ToFunctionTriggerLogGroupPtrOutputWithContext(context.Background())
}

func (i FunctionTriggerLogGroupArgs) ToFunctionTriggerLogGroupPtrOutputWithContext(ctx context.Context) FunctionTriggerLogGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerLogGroupOutput).ToFunctionTriggerLogGroupPtrOutputWithContext(ctx)
}

// FunctionTriggerLogGroupPtrInput is an input type that accepts FunctionTriggerLogGroupArgs, FunctionTriggerLogGroupPtr and FunctionTriggerLogGroupPtrOutput values.
// You can construct a concrete instance of `FunctionTriggerLogGroupPtrInput` via:
//
//          FunctionTriggerLogGroupArgs{...}
//
//  or:
//
//          nil
type FunctionTriggerLogGroupPtrInput interface {
	pulumi.Input

	ToFunctionTriggerLogGroupPtrOutput() FunctionTriggerLogGroupPtrOutput
	ToFunctionTriggerLogGroupPtrOutputWithContext(context.Context) FunctionTriggerLogGroupPtrOutput
}

type functionTriggerLogGroupPtrType FunctionTriggerLogGroupArgs

func FunctionTriggerLogGroupPtr(v *FunctionTriggerLogGroupArgs) FunctionTriggerLogGroupPtrInput {
	return (*functionTriggerLogGroupPtrType)(v)
}

func (*functionTriggerLogGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTriggerLogGroup)(nil)).Elem()
}

func (i *functionTriggerLogGroupPtrType) ToFunctionTriggerLogGroupPtrOutput() FunctionTriggerLogGroupPtrOutput {
	return i.ToFunctionTriggerLogGroupPtrOutputWithContext(context.Background())
}

func (i *functionTriggerLogGroupPtrType) ToFunctionTriggerLogGroupPtrOutputWithContext(ctx context.Context) FunctionTriggerLogGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerLogGroupPtrOutput)
}

type FunctionTriggerLogGroupOutput struct{ *pulumi.OutputState }

func (FunctionTriggerLogGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTriggerLogGroup)(nil)).Elem()
}

func (o FunctionTriggerLogGroupOutput) ToFunctionTriggerLogGroupOutput() FunctionTriggerLogGroupOutput {
	return o
}

func (o FunctionTriggerLogGroupOutput) ToFunctionTriggerLogGroupOutputWithContext(ctx context.Context) FunctionTriggerLogGroupOutput {
	return o
}

func (o FunctionTriggerLogGroupOutput) ToFunctionTriggerLogGroupPtrOutput() FunctionTriggerLogGroupPtrOutput {
	return o.ToFunctionTriggerLogGroupPtrOutputWithContext(context.Background())
}

func (o FunctionTriggerLogGroupOutput) ToFunctionTriggerLogGroupPtrOutputWithContext(ctx context.Context) FunctionTriggerLogGroupPtrOutput {
	return o.ApplyT(func(v FunctionTriggerLogGroup) *FunctionTriggerLogGroup {
		return &v
	}).(FunctionTriggerLogGroupPtrOutput)
}
func (o FunctionTriggerLogGroupOutput) BatchCutoff() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionTriggerLogGroup) string { return v.BatchCutoff }).(pulumi.StringOutput)
}

func (o FunctionTriggerLogGroupOutput) BatchSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionTriggerLogGroup) *string { return v.BatchSize }).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerLogGroupOutput) LogGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionTriggerLogGroup) []string { return v.LogGroupIds }).(pulumi.StringArrayOutput)
}

type FunctionTriggerLogGroupPtrOutput struct{ *pulumi.OutputState }

func (FunctionTriggerLogGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTriggerLogGroup)(nil)).Elem()
}

func (o FunctionTriggerLogGroupPtrOutput) ToFunctionTriggerLogGroupPtrOutput() FunctionTriggerLogGroupPtrOutput {
	return o
}

func (o FunctionTriggerLogGroupPtrOutput) ToFunctionTriggerLogGroupPtrOutputWithContext(ctx context.Context) FunctionTriggerLogGroupPtrOutput {
	return o
}

func (o FunctionTriggerLogGroupPtrOutput) Elem() FunctionTriggerLogGroupOutput {
	return o.ApplyT(func(v *FunctionTriggerLogGroup) FunctionTriggerLogGroup { return *v }).(FunctionTriggerLogGroupOutput)
}

func (o FunctionTriggerLogGroupPtrOutput) BatchCutoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerLogGroup) *string {
		if v == nil {
			return nil
		}
		return &v.BatchCutoff
	}).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerLogGroupPtrOutput) BatchSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerLogGroup) *string {
		if v == nil {
			return nil
		}
		return v.BatchSize
	}).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerLogGroupPtrOutput) LogGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionTriggerLogGroup) []string {
		if v == nil {
			return nil
		}
		return v.LogGroupIds
	}).(pulumi.StringArrayOutput)
}

type FunctionTriggerMessageQueue struct {
	BatchCutoff       string  `pulumi:"batchCutoff"`
	BatchSize         *string `pulumi:"batchSize"`
	QueueId           string  `pulumi:"queueId"`
	ServiceAccountId  string  `pulumi:"serviceAccountId"`
	VisibilityTimeout *string `pulumi:"visibilityTimeout"`
}

// FunctionTriggerMessageQueueInput is an input type that accepts FunctionTriggerMessageQueueArgs and FunctionTriggerMessageQueueOutput values.
// You can construct a concrete instance of `FunctionTriggerMessageQueueInput` via:
//
//          FunctionTriggerMessageQueueArgs{...}
type FunctionTriggerMessageQueueInput interface {
	pulumi.Input

	ToFunctionTriggerMessageQueueOutput() FunctionTriggerMessageQueueOutput
	ToFunctionTriggerMessageQueueOutputWithContext(context.Context) FunctionTriggerMessageQueueOutput
}

type FunctionTriggerMessageQueueArgs struct {
	BatchCutoff       pulumi.StringInput    `pulumi:"batchCutoff"`
	BatchSize         pulumi.StringPtrInput `pulumi:"batchSize"`
	QueueId           pulumi.StringInput    `pulumi:"queueId"`
	ServiceAccountId  pulumi.StringInput    `pulumi:"serviceAccountId"`
	VisibilityTimeout pulumi.StringPtrInput `pulumi:"visibilityTimeout"`
}

func (FunctionTriggerMessageQueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTriggerMessageQueue)(nil)).Elem()
}

func (i FunctionTriggerMessageQueueArgs) ToFunctionTriggerMessageQueueOutput() FunctionTriggerMessageQueueOutput {
	return i.ToFunctionTriggerMessageQueueOutputWithContext(context.Background())
}

func (i FunctionTriggerMessageQueueArgs) ToFunctionTriggerMessageQueueOutputWithContext(ctx context.Context) FunctionTriggerMessageQueueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerMessageQueueOutput)
}

func (i FunctionTriggerMessageQueueArgs) ToFunctionTriggerMessageQueuePtrOutput() FunctionTriggerMessageQueuePtrOutput {
	return i.ToFunctionTriggerMessageQueuePtrOutputWithContext(context.Background())
}

func (i FunctionTriggerMessageQueueArgs) ToFunctionTriggerMessageQueuePtrOutputWithContext(ctx context.Context) FunctionTriggerMessageQueuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerMessageQueueOutput).ToFunctionTriggerMessageQueuePtrOutputWithContext(ctx)
}

// FunctionTriggerMessageQueuePtrInput is an input type that accepts FunctionTriggerMessageQueueArgs, FunctionTriggerMessageQueuePtr and FunctionTriggerMessageQueuePtrOutput values.
// You can construct a concrete instance of `FunctionTriggerMessageQueuePtrInput` via:
//
//          FunctionTriggerMessageQueueArgs{...}
//
//  or:
//
//          nil
type FunctionTriggerMessageQueuePtrInput interface {
	pulumi.Input

	ToFunctionTriggerMessageQueuePtrOutput() FunctionTriggerMessageQueuePtrOutput
	ToFunctionTriggerMessageQueuePtrOutputWithContext(context.Context) FunctionTriggerMessageQueuePtrOutput
}

type functionTriggerMessageQueuePtrType FunctionTriggerMessageQueueArgs

func FunctionTriggerMessageQueuePtr(v *FunctionTriggerMessageQueueArgs) FunctionTriggerMessageQueuePtrInput {
	return (*functionTriggerMessageQueuePtrType)(v)
}

func (*functionTriggerMessageQueuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTriggerMessageQueue)(nil)).Elem()
}

func (i *functionTriggerMessageQueuePtrType) ToFunctionTriggerMessageQueuePtrOutput() FunctionTriggerMessageQueuePtrOutput {
	return i.ToFunctionTriggerMessageQueuePtrOutputWithContext(context.Background())
}

func (i *functionTriggerMessageQueuePtrType) ToFunctionTriggerMessageQueuePtrOutputWithContext(ctx context.Context) FunctionTriggerMessageQueuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerMessageQueuePtrOutput)
}

type FunctionTriggerMessageQueueOutput struct{ *pulumi.OutputState }

func (FunctionTriggerMessageQueueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTriggerMessageQueue)(nil)).Elem()
}

func (o FunctionTriggerMessageQueueOutput) ToFunctionTriggerMessageQueueOutput() FunctionTriggerMessageQueueOutput {
	return o
}

func (o FunctionTriggerMessageQueueOutput) ToFunctionTriggerMessageQueueOutputWithContext(ctx context.Context) FunctionTriggerMessageQueueOutput {
	return o
}

func (o FunctionTriggerMessageQueueOutput) ToFunctionTriggerMessageQueuePtrOutput() FunctionTriggerMessageQueuePtrOutput {
	return o.ToFunctionTriggerMessageQueuePtrOutputWithContext(context.Background())
}

func (o FunctionTriggerMessageQueueOutput) ToFunctionTriggerMessageQueuePtrOutputWithContext(ctx context.Context) FunctionTriggerMessageQueuePtrOutput {
	return o.ApplyT(func(v FunctionTriggerMessageQueue) *FunctionTriggerMessageQueue {
		return &v
	}).(FunctionTriggerMessageQueuePtrOutput)
}
func (o FunctionTriggerMessageQueueOutput) BatchCutoff() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionTriggerMessageQueue) string { return v.BatchCutoff }).(pulumi.StringOutput)
}

func (o FunctionTriggerMessageQueueOutput) BatchSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionTriggerMessageQueue) *string { return v.BatchSize }).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerMessageQueueOutput) QueueId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionTriggerMessageQueue) string { return v.QueueId }).(pulumi.StringOutput)
}

func (o FunctionTriggerMessageQueueOutput) ServiceAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionTriggerMessageQueue) string { return v.ServiceAccountId }).(pulumi.StringOutput)
}

func (o FunctionTriggerMessageQueueOutput) VisibilityTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionTriggerMessageQueue) *string { return v.VisibilityTimeout }).(pulumi.StringPtrOutput)
}

type FunctionTriggerMessageQueuePtrOutput struct{ *pulumi.OutputState }

func (FunctionTriggerMessageQueuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTriggerMessageQueue)(nil)).Elem()
}

func (o FunctionTriggerMessageQueuePtrOutput) ToFunctionTriggerMessageQueuePtrOutput() FunctionTriggerMessageQueuePtrOutput {
	return o
}

func (o FunctionTriggerMessageQueuePtrOutput) ToFunctionTriggerMessageQueuePtrOutputWithContext(ctx context.Context) FunctionTriggerMessageQueuePtrOutput {
	return o
}

func (o FunctionTriggerMessageQueuePtrOutput) Elem() FunctionTriggerMessageQueueOutput {
	return o.ApplyT(func(v *FunctionTriggerMessageQueue) FunctionTriggerMessageQueue { return *v }).(FunctionTriggerMessageQueueOutput)
}

func (o FunctionTriggerMessageQueuePtrOutput) BatchCutoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerMessageQueue) *string {
		if v == nil {
			return nil
		}
		return &v.BatchCutoff
	}).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerMessageQueuePtrOutput) BatchSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerMessageQueue) *string {
		if v == nil {
			return nil
		}
		return v.BatchSize
	}).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerMessageQueuePtrOutput) QueueId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerMessageQueue) *string {
		if v == nil {
			return nil
		}
		return &v.QueueId
	}).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerMessageQueuePtrOutput) ServiceAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerMessageQueue) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceAccountId
	}).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerMessageQueuePtrOutput) VisibilityTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerMessageQueue) *string {
		if v == nil {
			return nil
		}
		return v.VisibilityTimeout
	}).(pulumi.StringPtrOutput)
}

type FunctionTriggerObjectStorage struct {
	BucketId string  `pulumi:"bucketId"`
	Create   *bool   `pulumi:"create"`
	Delete   *bool   `pulumi:"delete"`
	Prefix   *string `pulumi:"prefix"`
	Suffix   *string `pulumi:"suffix"`
	Update   *bool   `pulumi:"update"`
}

// FunctionTriggerObjectStorageInput is an input type that accepts FunctionTriggerObjectStorageArgs and FunctionTriggerObjectStorageOutput values.
// You can construct a concrete instance of `FunctionTriggerObjectStorageInput` via:
//
//          FunctionTriggerObjectStorageArgs{...}
type FunctionTriggerObjectStorageInput interface {
	pulumi.Input

	ToFunctionTriggerObjectStorageOutput() FunctionTriggerObjectStorageOutput
	ToFunctionTriggerObjectStorageOutputWithContext(context.Context) FunctionTriggerObjectStorageOutput
}

type FunctionTriggerObjectStorageArgs struct {
	BucketId pulumi.StringInput    `pulumi:"bucketId"`
	Create   pulumi.BoolPtrInput   `pulumi:"create"`
	Delete   pulumi.BoolPtrInput   `pulumi:"delete"`
	Prefix   pulumi.StringPtrInput `pulumi:"prefix"`
	Suffix   pulumi.StringPtrInput `pulumi:"suffix"`
	Update   pulumi.BoolPtrInput   `pulumi:"update"`
}

func (FunctionTriggerObjectStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTriggerObjectStorage)(nil)).Elem()
}

func (i FunctionTriggerObjectStorageArgs) ToFunctionTriggerObjectStorageOutput() FunctionTriggerObjectStorageOutput {
	return i.ToFunctionTriggerObjectStorageOutputWithContext(context.Background())
}

func (i FunctionTriggerObjectStorageArgs) ToFunctionTriggerObjectStorageOutputWithContext(ctx context.Context) FunctionTriggerObjectStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerObjectStorageOutput)
}

func (i FunctionTriggerObjectStorageArgs) ToFunctionTriggerObjectStoragePtrOutput() FunctionTriggerObjectStoragePtrOutput {
	return i.ToFunctionTriggerObjectStoragePtrOutputWithContext(context.Background())
}

func (i FunctionTriggerObjectStorageArgs) ToFunctionTriggerObjectStoragePtrOutputWithContext(ctx context.Context) FunctionTriggerObjectStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerObjectStorageOutput).ToFunctionTriggerObjectStoragePtrOutputWithContext(ctx)
}

// FunctionTriggerObjectStoragePtrInput is an input type that accepts FunctionTriggerObjectStorageArgs, FunctionTriggerObjectStoragePtr and FunctionTriggerObjectStoragePtrOutput values.
// You can construct a concrete instance of `FunctionTriggerObjectStoragePtrInput` via:
//
//          FunctionTriggerObjectStorageArgs{...}
//
//  or:
//
//          nil
type FunctionTriggerObjectStoragePtrInput interface {
	pulumi.Input

	ToFunctionTriggerObjectStoragePtrOutput() FunctionTriggerObjectStoragePtrOutput
	ToFunctionTriggerObjectStoragePtrOutputWithContext(context.Context) FunctionTriggerObjectStoragePtrOutput
}

type functionTriggerObjectStoragePtrType FunctionTriggerObjectStorageArgs

func FunctionTriggerObjectStoragePtr(v *FunctionTriggerObjectStorageArgs) FunctionTriggerObjectStoragePtrInput {
	return (*functionTriggerObjectStoragePtrType)(v)
}

func (*functionTriggerObjectStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTriggerObjectStorage)(nil)).Elem()
}

func (i *functionTriggerObjectStoragePtrType) ToFunctionTriggerObjectStoragePtrOutput() FunctionTriggerObjectStoragePtrOutput {
	return i.ToFunctionTriggerObjectStoragePtrOutputWithContext(context.Background())
}

func (i *functionTriggerObjectStoragePtrType) ToFunctionTriggerObjectStoragePtrOutputWithContext(ctx context.Context) FunctionTriggerObjectStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerObjectStoragePtrOutput)
}

type FunctionTriggerObjectStorageOutput struct{ *pulumi.OutputState }

func (FunctionTriggerObjectStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTriggerObjectStorage)(nil)).Elem()
}

func (o FunctionTriggerObjectStorageOutput) ToFunctionTriggerObjectStorageOutput() FunctionTriggerObjectStorageOutput {
	return o
}

func (o FunctionTriggerObjectStorageOutput) ToFunctionTriggerObjectStorageOutputWithContext(ctx context.Context) FunctionTriggerObjectStorageOutput {
	return o
}

func (o FunctionTriggerObjectStorageOutput) ToFunctionTriggerObjectStoragePtrOutput() FunctionTriggerObjectStoragePtrOutput {
	return o.ToFunctionTriggerObjectStoragePtrOutputWithContext(context.Background())
}

func (o FunctionTriggerObjectStorageOutput) ToFunctionTriggerObjectStoragePtrOutputWithContext(ctx context.Context) FunctionTriggerObjectStoragePtrOutput {
	return o.ApplyT(func(v FunctionTriggerObjectStorage) *FunctionTriggerObjectStorage {
		return &v
	}).(FunctionTriggerObjectStoragePtrOutput)
}
func (o FunctionTriggerObjectStorageOutput) BucketId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionTriggerObjectStorage) string { return v.BucketId }).(pulumi.StringOutput)
}

func (o FunctionTriggerObjectStorageOutput) Create() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionTriggerObjectStorage) *bool { return v.Create }).(pulumi.BoolPtrOutput)
}

func (o FunctionTriggerObjectStorageOutput) Delete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionTriggerObjectStorage) *bool { return v.Delete }).(pulumi.BoolPtrOutput)
}

func (o FunctionTriggerObjectStorageOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionTriggerObjectStorage) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerObjectStorageOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionTriggerObjectStorage) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerObjectStorageOutput) Update() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionTriggerObjectStorage) *bool { return v.Update }).(pulumi.BoolPtrOutput)
}

type FunctionTriggerObjectStoragePtrOutput struct{ *pulumi.OutputState }

func (FunctionTriggerObjectStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTriggerObjectStorage)(nil)).Elem()
}

func (o FunctionTriggerObjectStoragePtrOutput) ToFunctionTriggerObjectStoragePtrOutput() FunctionTriggerObjectStoragePtrOutput {
	return o
}

func (o FunctionTriggerObjectStoragePtrOutput) ToFunctionTriggerObjectStoragePtrOutputWithContext(ctx context.Context) FunctionTriggerObjectStoragePtrOutput {
	return o
}

func (o FunctionTriggerObjectStoragePtrOutput) Elem() FunctionTriggerObjectStorageOutput {
	return o.ApplyT(func(v *FunctionTriggerObjectStorage) FunctionTriggerObjectStorage { return *v }).(FunctionTriggerObjectStorageOutput)
}

func (o FunctionTriggerObjectStoragePtrOutput) BucketId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerObjectStorage) *string {
		if v == nil {
			return nil
		}
		return &v.BucketId
	}).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerObjectStoragePtrOutput) Create() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerObjectStorage) *bool {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.BoolPtrOutput)
}

func (o FunctionTriggerObjectStoragePtrOutput) Delete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerObjectStorage) *bool {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.BoolPtrOutput)
}

func (o FunctionTriggerObjectStoragePtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerObjectStorage) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerObjectStoragePtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerObjectStorage) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

func (o FunctionTriggerObjectStoragePtrOutput) Update() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerObjectStorage) *bool {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.BoolPtrOutput)
}

type FunctionTriggerTimer struct {
	CronExpression string `pulumi:"cronExpression"`
}

// FunctionTriggerTimerInput is an input type that accepts FunctionTriggerTimerArgs and FunctionTriggerTimerOutput values.
// You can construct a concrete instance of `FunctionTriggerTimerInput` via:
//
//          FunctionTriggerTimerArgs{...}
type FunctionTriggerTimerInput interface {
	pulumi.Input

	ToFunctionTriggerTimerOutput() FunctionTriggerTimerOutput
	ToFunctionTriggerTimerOutputWithContext(context.Context) FunctionTriggerTimerOutput
}

type FunctionTriggerTimerArgs struct {
	CronExpression pulumi.StringInput `pulumi:"cronExpression"`
}

func (FunctionTriggerTimerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTriggerTimer)(nil)).Elem()
}

func (i FunctionTriggerTimerArgs) ToFunctionTriggerTimerOutput() FunctionTriggerTimerOutput {
	return i.ToFunctionTriggerTimerOutputWithContext(context.Background())
}

func (i FunctionTriggerTimerArgs) ToFunctionTriggerTimerOutputWithContext(ctx context.Context) FunctionTriggerTimerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerTimerOutput)
}

func (i FunctionTriggerTimerArgs) ToFunctionTriggerTimerPtrOutput() FunctionTriggerTimerPtrOutput {
	return i.ToFunctionTriggerTimerPtrOutputWithContext(context.Background())
}

func (i FunctionTriggerTimerArgs) ToFunctionTriggerTimerPtrOutputWithContext(ctx context.Context) FunctionTriggerTimerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerTimerOutput).ToFunctionTriggerTimerPtrOutputWithContext(ctx)
}

// FunctionTriggerTimerPtrInput is an input type that accepts FunctionTriggerTimerArgs, FunctionTriggerTimerPtr and FunctionTriggerTimerPtrOutput values.
// You can construct a concrete instance of `FunctionTriggerTimerPtrInput` via:
//
//          FunctionTriggerTimerArgs{...}
//
//  or:
//
//          nil
type FunctionTriggerTimerPtrInput interface {
	pulumi.Input

	ToFunctionTriggerTimerPtrOutput() FunctionTriggerTimerPtrOutput
	ToFunctionTriggerTimerPtrOutputWithContext(context.Context) FunctionTriggerTimerPtrOutput
}

type functionTriggerTimerPtrType FunctionTriggerTimerArgs

func FunctionTriggerTimerPtr(v *FunctionTriggerTimerArgs) FunctionTriggerTimerPtrInput {
	return (*functionTriggerTimerPtrType)(v)
}

func (*functionTriggerTimerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTriggerTimer)(nil)).Elem()
}

func (i *functionTriggerTimerPtrType) ToFunctionTriggerTimerPtrOutput() FunctionTriggerTimerPtrOutput {
	return i.ToFunctionTriggerTimerPtrOutputWithContext(context.Background())
}

func (i *functionTriggerTimerPtrType) ToFunctionTriggerTimerPtrOutputWithContext(ctx context.Context) FunctionTriggerTimerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerTimerPtrOutput)
}

type FunctionTriggerTimerOutput struct{ *pulumi.OutputState }

func (FunctionTriggerTimerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTriggerTimer)(nil)).Elem()
}

func (o FunctionTriggerTimerOutput) ToFunctionTriggerTimerOutput() FunctionTriggerTimerOutput {
	return o
}

func (o FunctionTriggerTimerOutput) ToFunctionTriggerTimerOutputWithContext(ctx context.Context) FunctionTriggerTimerOutput {
	return o
}

func (o FunctionTriggerTimerOutput) ToFunctionTriggerTimerPtrOutput() FunctionTriggerTimerPtrOutput {
	return o.ToFunctionTriggerTimerPtrOutputWithContext(context.Background())
}

func (o FunctionTriggerTimerOutput) ToFunctionTriggerTimerPtrOutputWithContext(ctx context.Context) FunctionTriggerTimerPtrOutput {
	return o.ApplyT(func(v FunctionTriggerTimer) *FunctionTriggerTimer {
		return &v
	}).(FunctionTriggerTimerPtrOutput)
}
func (o FunctionTriggerTimerOutput) CronExpression() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionTriggerTimer) string { return v.CronExpression }).(pulumi.StringOutput)
}

type FunctionTriggerTimerPtrOutput struct{ *pulumi.OutputState }

func (FunctionTriggerTimerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTriggerTimer)(nil)).Elem()
}

func (o FunctionTriggerTimerPtrOutput) ToFunctionTriggerTimerPtrOutput() FunctionTriggerTimerPtrOutput {
	return o
}

func (o FunctionTriggerTimerPtrOutput) ToFunctionTriggerTimerPtrOutputWithContext(ctx context.Context) FunctionTriggerTimerPtrOutput {
	return o
}

func (o FunctionTriggerTimerPtrOutput) Elem() FunctionTriggerTimerOutput {
	return o.ApplyT(func(v *FunctionTriggerTimer) FunctionTriggerTimer { return *v }).(FunctionTriggerTimerOutput)
}

func (o FunctionTriggerTimerPtrOutput) CronExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerTimer) *string {
		if v == nil {
			return nil
		}
		return &v.CronExpression
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterKmsProvider struct {
	// KMS key ID.
	KeyId *string `pulumi:"keyId"`
}

// KubernetesClusterKmsProviderInput is an input type that accepts KubernetesClusterKmsProviderArgs and KubernetesClusterKmsProviderOutput values.
// You can construct a concrete instance of `KubernetesClusterKmsProviderInput` via:
//
//          KubernetesClusterKmsProviderArgs{...}
type KubernetesClusterKmsProviderInput interface {
	pulumi.Input

	ToKubernetesClusterKmsProviderOutput() KubernetesClusterKmsProviderOutput
	ToKubernetesClusterKmsProviderOutputWithContext(context.Context) KubernetesClusterKmsProviderOutput
}

type KubernetesClusterKmsProviderArgs struct {
	// KMS key ID.
	KeyId pulumi.StringPtrInput `pulumi:"keyId"`
}

func (KubernetesClusterKmsProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKmsProvider)(nil)).Elem()
}

func (i KubernetesClusterKmsProviderArgs) ToKubernetesClusterKmsProviderOutput() KubernetesClusterKmsProviderOutput {
	return i.ToKubernetesClusterKmsProviderOutputWithContext(context.Background())
}

func (i KubernetesClusterKmsProviderArgs) ToKubernetesClusterKmsProviderOutputWithContext(ctx context.Context) KubernetesClusterKmsProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKmsProviderOutput)
}

func (i KubernetesClusterKmsProviderArgs) ToKubernetesClusterKmsProviderPtrOutput() KubernetesClusterKmsProviderPtrOutput {
	return i.ToKubernetesClusterKmsProviderPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterKmsProviderArgs) ToKubernetesClusterKmsProviderPtrOutputWithContext(ctx context.Context) KubernetesClusterKmsProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKmsProviderOutput).ToKubernetesClusterKmsProviderPtrOutputWithContext(ctx)
}

// KubernetesClusterKmsProviderPtrInput is an input type that accepts KubernetesClusterKmsProviderArgs, KubernetesClusterKmsProviderPtr and KubernetesClusterKmsProviderPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterKmsProviderPtrInput` via:
//
//          KubernetesClusterKmsProviderArgs{...}
//
//  or:
//
//          nil
type KubernetesClusterKmsProviderPtrInput interface {
	pulumi.Input

	ToKubernetesClusterKmsProviderPtrOutput() KubernetesClusterKmsProviderPtrOutput
	ToKubernetesClusterKmsProviderPtrOutputWithContext(context.Context) KubernetesClusterKmsProviderPtrOutput
}

type kubernetesClusterKmsProviderPtrType KubernetesClusterKmsProviderArgs

func KubernetesClusterKmsProviderPtr(v *KubernetesClusterKmsProviderArgs) KubernetesClusterKmsProviderPtrInput {
	return (*kubernetesClusterKmsProviderPtrType)(v)
}

func (*kubernetesClusterKmsProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterKmsProvider)(nil)).Elem()
}

func (i *kubernetesClusterKmsProviderPtrType) ToKubernetesClusterKmsProviderPtrOutput() KubernetesClusterKmsProviderPtrOutput {
	return i.ToKubernetesClusterKmsProviderPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterKmsProviderPtrType) ToKubernetesClusterKmsProviderPtrOutputWithContext(ctx context.Context) KubernetesClusterKmsProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKmsProviderPtrOutput)
}

type KubernetesClusterKmsProviderOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKmsProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKmsProvider)(nil)).Elem()
}

func (o KubernetesClusterKmsProviderOutput) ToKubernetesClusterKmsProviderOutput() KubernetesClusterKmsProviderOutput {
	return o
}

func (o KubernetesClusterKmsProviderOutput) ToKubernetesClusterKmsProviderOutputWithContext(ctx context.Context) KubernetesClusterKmsProviderOutput {
	return o
}

func (o KubernetesClusterKmsProviderOutput) ToKubernetesClusterKmsProviderPtrOutput() KubernetesClusterKmsProviderPtrOutput {
	return o.ToKubernetesClusterKmsProviderPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterKmsProviderOutput) ToKubernetesClusterKmsProviderPtrOutputWithContext(ctx context.Context) KubernetesClusterKmsProviderPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKmsProvider) *KubernetesClusterKmsProvider {
		return &v
	}).(KubernetesClusterKmsProviderPtrOutput)
}

// KMS key ID.
func (o KubernetesClusterKmsProviderOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKmsProvider) *string { return v.KeyId }).(pulumi.StringPtrOutput)
}

type KubernetesClusterKmsProviderPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKmsProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterKmsProvider)(nil)).Elem()
}

func (o KubernetesClusterKmsProviderPtrOutput) ToKubernetesClusterKmsProviderPtrOutput() KubernetesClusterKmsProviderPtrOutput {
	return o
}

func (o KubernetesClusterKmsProviderPtrOutput) ToKubernetesClusterKmsProviderPtrOutputWithContext(ctx context.Context) KubernetesClusterKmsProviderPtrOutput {
	return o
}

func (o KubernetesClusterKmsProviderPtrOutput) Elem() KubernetesClusterKmsProviderOutput {
	return o.ApplyT(func(v *KubernetesClusterKmsProvider) KubernetesClusterKmsProvider { return *v }).(KubernetesClusterKmsProviderOutput)
}

// KMS key ID.
func (o KubernetesClusterKmsProviderPtrOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterKmsProvider) *string {
		if v == nil {
			return nil
		}
		return v.KeyId
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterMaster struct {
	// (Computed) PEM-encoded public certificate that is the root of trust for the Kubernetes cluster.
	ClusterCaCertificate *string `pulumi:"clusterCaCertificate"`
	// (Computed) An IPv4 external network address that is assigned to the master.
	ExternalV4Address *string `pulumi:"externalV4Address"`
	// (Computed) External endpoint that can be used to access Kubernetes cluster API from the internet (outside of the cloud).
	ExternalV4Endpoint *string `pulumi:"externalV4Endpoint"`
	// (Computed) An IPv4 internal network address that is assigned to the master.
	InternalV4Address *string `pulumi:"internalV4Address"`
	// (Computed) Internal endpoint that can be used to connect to the master from cloud networks.
	InternalV4Endpoint *string `pulumi:"internalV4Endpoint"`
	// (Optional) (Computed) Maintenance policy for Kubernetes master.
	// If policy is omitted, automatic revision upgrades of the kubernetes master are enabled and could happen at any time.
	// Revision upgrades are performed only within the same minor version, e.g. 1.13.
	// Minor version upgrades (e.g. 1.13->1.14) should be performed manually. The structure is documented below.
	MaintenancePolicy *KubernetesClusterMasterMaintenancePolicy `pulumi:"maintenancePolicy"`
	// (Optional) (Computed) Boolean flag. When `true`, Kubernetes master will have visible ipv4 address.
	PublicIp *bool `pulumi:"publicIp"`
	// (Optional) Initialize parameters for Regional Master (highly available master). The structure is documented below.
	Regional *KubernetesClusterMasterRegional `pulumi:"regional"`
	// (Optional) List of security group IDs to which the Kubernetes cluster belongs.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// (Optional) (Computed) Version of Kubernetes that will be used for master.
	Version *string `pulumi:"version"`
	// (Computed) Information about cluster version. The structure is documented below.
	VersionInfo *KubernetesClusterMasterVersionInfo `pulumi:"versionInfo"`
	// (Optional) Initialize parameters for Zonal Master (single node master). The structure is documented below.
	Zonal *KubernetesClusterMasterZonal `pulumi:"zonal"`
}

// KubernetesClusterMasterInput is an input type that accepts KubernetesClusterMasterArgs and KubernetesClusterMasterOutput values.
// You can construct a concrete instance of `KubernetesClusterMasterInput` via:
//
//          KubernetesClusterMasterArgs{...}
type KubernetesClusterMasterInput interface {
	pulumi.Input

	ToKubernetesClusterMasterOutput() KubernetesClusterMasterOutput
	ToKubernetesClusterMasterOutputWithContext(context.Context) KubernetesClusterMasterOutput
}

type KubernetesClusterMasterArgs struct {
	// (Computed) PEM-encoded public certificate that is the root of trust for the Kubernetes cluster.
	ClusterCaCertificate pulumi.StringPtrInput `pulumi:"clusterCaCertificate"`
	// (Computed) An IPv4 external network address that is assigned to the master.
	ExternalV4Address pulumi.StringPtrInput `pulumi:"externalV4Address"`
	// (Computed) External endpoint that can be used to access Kubernetes cluster API from the internet (outside of the cloud).
	ExternalV4Endpoint pulumi.StringPtrInput `pulumi:"externalV4Endpoint"`
	// (Computed) An IPv4 internal network address that is assigned to the master.
	InternalV4Address pulumi.StringPtrInput `pulumi:"internalV4Address"`
	// (Computed) Internal endpoint that can be used to connect to the master from cloud networks.
	InternalV4Endpoint pulumi.StringPtrInput `pulumi:"internalV4Endpoint"`
	// (Optional) (Computed) Maintenance policy for Kubernetes master.
	// If policy is omitted, automatic revision upgrades of the kubernetes master are enabled and could happen at any time.
	// Revision upgrades are performed only within the same minor version, e.g. 1.13.
	// Minor version upgrades (e.g. 1.13->1.14) should be performed manually. The structure is documented below.
	MaintenancePolicy KubernetesClusterMasterMaintenancePolicyPtrInput `pulumi:"maintenancePolicy"`
	// (Optional) (Computed) Boolean flag. When `true`, Kubernetes master will have visible ipv4 address.
	PublicIp pulumi.BoolPtrInput `pulumi:"publicIp"`
	// (Optional) Initialize parameters for Regional Master (highly available master). The structure is documented below.
	Regional KubernetesClusterMasterRegionalPtrInput `pulumi:"regional"`
	// (Optional) List of security group IDs to which the Kubernetes cluster belongs.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// (Optional) (Computed) Version of Kubernetes that will be used for master.
	Version pulumi.StringPtrInput `pulumi:"version"`
	// (Computed) Information about cluster version. The structure is documented below.
	VersionInfo KubernetesClusterMasterVersionInfoPtrInput `pulumi:"versionInfo"`
	// (Optional) Initialize parameters for Zonal Master (single node master). The structure is documented below.
	Zonal KubernetesClusterMasterZonalPtrInput `pulumi:"zonal"`
}

func (KubernetesClusterMasterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMaster)(nil)).Elem()
}

func (i KubernetesClusterMasterArgs) ToKubernetesClusterMasterOutput() KubernetesClusterMasterOutput {
	return i.ToKubernetesClusterMasterOutputWithContext(context.Background())
}

func (i KubernetesClusterMasterArgs) ToKubernetesClusterMasterOutputWithContext(ctx context.Context) KubernetesClusterMasterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMasterOutput)
}

func (i KubernetesClusterMasterArgs) ToKubernetesClusterMasterPtrOutput() KubernetesClusterMasterPtrOutput {
	return i.ToKubernetesClusterMasterPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterMasterArgs) ToKubernetesClusterMasterPtrOutputWithContext(ctx context.Context) KubernetesClusterMasterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMasterOutput).ToKubernetesClusterMasterPtrOutputWithContext(ctx)
}

// KubernetesClusterMasterPtrInput is an input type that accepts KubernetesClusterMasterArgs, KubernetesClusterMasterPtr and KubernetesClusterMasterPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterMasterPtrInput` via:
//
//          KubernetesClusterMasterArgs{...}
//
//  or:
//
//          nil
type KubernetesClusterMasterPtrInput interface {
	pulumi.Input

	ToKubernetesClusterMasterPtrOutput() KubernetesClusterMasterPtrOutput
	ToKubernetesClusterMasterPtrOutputWithContext(context.Context) KubernetesClusterMasterPtrOutput
}

type kubernetesClusterMasterPtrType KubernetesClusterMasterArgs

func KubernetesClusterMasterPtr(v *KubernetesClusterMasterArgs) KubernetesClusterMasterPtrInput {
	return (*kubernetesClusterMasterPtrType)(v)
}

func (*kubernetesClusterMasterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterMaster)(nil)).Elem()
}

func (i *kubernetesClusterMasterPtrType) ToKubernetesClusterMasterPtrOutput() KubernetesClusterMasterPtrOutput {
	return i.ToKubernetesClusterMasterPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterMasterPtrType) ToKubernetesClusterMasterPtrOutputWithContext(ctx context.Context) KubernetesClusterMasterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMasterPtrOutput)
}

type KubernetesClusterMasterOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMasterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMaster)(nil)).Elem()
}

func (o KubernetesClusterMasterOutput) ToKubernetesClusterMasterOutput() KubernetesClusterMasterOutput {
	return o
}

func (o KubernetesClusterMasterOutput) ToKubernetesClusterMasterOutputWithContext(ctx context.Context) KubernetesClusterMasterOutput {
	return o
}

func (o KubernetesClusterMasterOutput) ToKubernetesClusterMasterPtrOutput() KubernetesClusterMasterPtrOutput {
	return o.ToKubernetesClusterMasterPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterMasterOutput) ToKubernetesClusterMasterPtrOutputWithContext(ctx context.Context) KubernetesClusterMasterPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaster) *KubernetesClusterMaster {
		return &v
	}).(KubernetesClusterMasterPtrOutput)
}

// (Computed) PEM-encoded public certificate that is the root of trust for the Kubernetes cluster.
func (o KubernetesClusterMasterOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaster) *string { return v.ClusterCaCertificate }).(pulumi.StringPtrOutput)
}

// (Computed) An IPv4 external network address that is assigned to the master.
func (o KubernetesClusterMasterOutput) ExternalV4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaster) *string { return v.ExternalV4Address }).(pulumi.StringPtrOutput)
}

// (Computed) External endpoint that can be used to access Kubernetes cluster API from the internet (outside of the cloud).
func (o KubernetesClusterMasterOutput) ExternalV4Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaster) *string { return v.ExternalV4Endpoint }).(pulumi.StringPtrOutput)
}

// (Computed) An IPv4 internal network address that is assigned to the master.
func (o KubernetesClusterMasterOutput) InternalV4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaster) *string { return v.InternalV4Address }).(pulumi.StringPtrOutput)
}

// (Computed) Internal endpoint that can be used to connect to the master from cloud networks.
func (o KubernetesClusterMasterOutput) InternalV4Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaster) *string { return v.InternalV4Endpoint }).(pulumi.StringPtrOutput)
}

// (Optional) (Computed) Maintenance policy for Kubernetes master.
// If policy is omitted, automatic revision upgrades of the kubernetes master are enabled and could happen at any time.
// Revision upgrades are performed only within the same minor version, e.g. 1.13.
// Minor version upgrades (e.g. 1.13->1.14) should be performed manually. The structure is documented below.
func (o KubernetesClusterMasterOutput) MaintenancePolicy() KubernetesClusterMasterMaintenancePolicyPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaster) *KubernetesClusterMasterMaintenancePolicy { return v.MaintenancePolicy }).(KubernetesClusterMasterMaintenancePolicyPtrOutput)
}

// (Optional) (Computed) Boolean flag. When `true`, Kubernetes master will have visible ipv4 address.
func (o KubernetesClusterMasterOutput) PublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaster) *bool { return v.PublicIp }).(pulumi.BoolPtrOutput)
}

// (Optional) Initialize parameters for Regional Master (highly available master). The structure is documented below.
func (o KubernetesClusterMasterOutput) Regional() KubernetesClusterMasterRegionalPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaster) *KubernetesClusterMasterRegional { return v.Regional }).(KubernetesClusterMasterRegionalPtrOutput)
}

// (Optional) List of security group IDs to which the Kubernetes cluster belongs.
func (o KubernetesClusterMasterOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterMaster) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// (Optional) (Computed) Version of Kubernetes that will be used for master.
func (o KubernetesClusterMasterOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaster) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// (Computed) Information about cluster version. The structure is documented below.
func (o KubernetesClusterMasterOutput) VersionInfo() KubernetesClusterMasterVersionInfoPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaster) *KubernetesClusterMasterVersionInfo { return v.VersionInfo }).(KubernetesClusterMasterVersionInfoPtrOutput)
}

// (Optional) Initialize parameters for Zonal Master (single node master). The structure is documented below.
func (o KubernetesClusterMasterOutput) Zonal() KubernetesClusterMasterZonalPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaster) *KubernetesClusterMasterZonal { return v.Zonal }).(KubernetesClusterMasterZonalPtrOutput)
}

type KubernetesClusterMasterPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMasterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterMaster)(nil)).Elem()
}

func (o KubernetesClusterMasterPtrOutput) ToKubernetesClusterMasterPtrOutput() KubernetesClusterMasterPtrOutput {
	return o
}

func (o KubernetesClusterMasterPtrOutput) ToKubernetesClusterMasterPtrOutputWithContext(ctx context.Context) KubernetesClusterMasterPtrOutput {
	return o
}

func (o KubernetesClusterMasterPtrOutput) Elem() KubernetesClusterMasterOutput {
	return o.ApplyT(func(v *KubernetesClusterMaster) KubernetesClusterMaster { return *v }).(KubernetesClusterMasterOutput)
}

// (Computed) PEM-encoded public certificate that is the root of trust for the Kubernetes cluster.
func (o KubernetesClusterMasterPtrOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaster) *string {
		if v == nil {
			return nil
		}
		return v.ClusterCaCertificate
	}).(pulumi.StringPtrOutput)
}

// (Computed) An IPv4 external network address that is assigned to the master.
func (o KubernetesClusterMasterPtrOutput) ExternalV4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaster) *string {
		if v == nil {
			return nil
		}
		return v.ExternalV4Address
	}).(pulumi.StringPtrOutput)
}

// (Computed) External endpoint that can be used to access Kubernetes cluster API from the internet (outside of the cloud).
func (o KubernetesClusterMasterPtrOutput) ExternalV4Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaster) *string {
		if v == nil {
			return nil
		}
		return v.ExternalV4Endpoint
	}).(pulumi.StringPtrOutput)
}

// (Computed) An IPv4 internal network address that is assigned to the master.
func (o KubernetesClusterMasterPtrOutput) InternalV4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaster) *string {
		if v == nil {
			return nil
		}
		return v.InternalV4Address
	}).(pulumi.StringPtrOutput)
}

// (Computed) Internal endpoint that can be used to connect to the master from cloud networks.
func (o KubernetesClusterMasterPtrOutput) InternalV4Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaster) *string {
		if v == nil {
			return nil
		}
		return v.InternalV4Endpoint
	}).(pulumi.StringPtrOutput)
}

// (Optional) (Computed) Maintenance policy for Kubernetes master.
// If policy is omitted, automatic revision upgrades of the kubernetes master are enabled and could happen at any time.
// Revision upgrades are performed only within the same minor version, e.g. 1.13.
// Minor version upgrades (e.g. 1.13->1.14) should be performed manually. The structure is documented below.
func (o KubernetesClusterMasterPtrOutput) MaintenancePolicy() KubernetesClusterMasterMaintenancePolicyPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaster) *KubernetesClusterMasterMaintenancePolicy {
		if v == nil {
			return nil
		}
		return v.MaintenancePolicy
	}).(KubernetesClusterMasterMaintenancePolicyPtrOutput)
}

// (Optional) (Computed) Boolean flag. When `true`, Kubernetes master will have visible ipv4 address.
func (o KubernetesClusterMasterPtrOutput) PublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaster) *bool {
		if v == nil {
			return nil
		}
		return v.PublicIp
	}).(pulumi.BoolPtrOutput)
}

// (Optional) Initialize parameters for Regional Master (highly available master). The structure is documented below.
func (o KubernetesClusterMasterPtrOutput) Regional() KubernetesClusterMasterRegionalPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaster) *KubernetesClusterMasterRegional {
		if v == nil {
			return nil
		}
		return v.Regional
	}).(KubernetesClusterMasterRegionalPtrOutput)
}

// (Optional) List of security group IDs to which the Kubernetes cluster belongs.
func (o KubernetesClusterMasterPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterMaster) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// (Optional) (Computed) Version of Kubernetes that will be used for master.
func (o KubernetesClusterMasterPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaster) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// (Computed) Information about cluster version. The structure is documented below.
func (o KubernetesClusterMasterPtrOutput) VersionInfo() KubernetesClusterMasterVersionInfoPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaster) *KubernetesClusterMasterVersionInfo {
		if v == nil {
			return nil
		}
		return v.VersionInfo
	}).(KubernetesClusterMasterVersionInfoPtrOutput)
}

// (Optional) Initialize parameters for Zonal Master (single node master). The structure is documented below.
func (o KubernetesClusterMasterPtrOutput) Zonal() KubernetesClusterMasterZonalPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaster) *KubernetesClusterMasterZonal {
		if v == nil {
			return nil
		}
		return v.Zonal
	}).(KubernetesClusterMasterZonalPtrOutput)
}

type KubernetesClusterMasterMaintenancePolicy struct {
	// (Required) Boolean flag that specifies if master can be upgraded automatically. When omitted, default value is TRUE.
	AutoUpgrade bool `pulumi:"autoUpgrade"`
	// (Optional) (Computed) This structure specifies maintenance window, when update for master is allowed. When omitted, it defaults to any time.
	// To specify time of day interval, for all days, one element should be provided, with two fields set, `startTime` and `duration`.
	// Please see `zonalClusterResourceName` config example.
	MaintenanceWindows []KubernetesClusterMasterMaintenancePolicyMaintenanceWindow `pulumi:"maintenanceWindows"`
}

// KubernetesClusterMasterMaintenancePolicyInput is an input type that accepts KubernetesClusterMasterMaintenancePolicyArgs and KubernetesClusterMasterMaintenancePolicyOutput values.
// You can construct a concrete instance of `KubernetesClusterMasterMaintenancePolicyInput` via:
//
//          KubernetesClusterMasterMaintenancePolicyArgs{...}
type KubernetesClusterMasterMaintenancePolicyInput interface {
	pulumi.Input

	ToKubernetesClusterMasterMaintenancePolicyOutput() KubernetesClusterMasterMaintenancePolicyOutput
	ToKubernetesClusterMasterMaintenancePolicyOutputWithContext(context.Context) KubernetesClusterMasterMaintenancePolicyOutput
}

type KubernetesClusterMasterMaintenancePolicyArgs struct {
	// (Required) Boolean flag that specifies if master can be upgraded automatically. When omitted, default value is TRUE.
	AutoUpgrade pulumi.BoolInput `pulumi:"autoUpgrade"`
	// (Optional) (Computed) This structure specifies maintenance window, when update for master is allowed. When omitted, it defaults to any time.
	// To specify time of day interval, for all days, one element should be provided, with two fields set, `startTime` and `duration`.
	// Please see `zonalClusterResourceName` config example.
	MaintenanceWindows KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayInput `pulumi:"maintenanceWindows"`
}

func (KubernetesClusterMasterMaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMasterMaintenancePolicy)(nil)).Elem()
}

func (i KubernetesClusterMasterMaintenancePolicyArgs) ToKubernetesClusterMasterMaintenancePolicyOutput() KubernetesClusterMasterMaintenancePolicyOutput {
	return i.ToKubernetesClusterMasterMaintenancePolicyOutputWithContext(context.Background())
}

func (i KubernetesClusterMasterMaintenancePolicyArgs) ToKubernetesClusterMasterMaintenancePolicyOutputWithContext(ctx context.Context) KubernetesClusterMasterMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMasterMaintenancePolicyOutput)
}

func (i KubernetesClusterMasterMaintenancePolicyArgs) ToKubernetesClusterMasterMaintenancePolicyPtrOutput() KubernetesClusterMasterMaintenancePolicyPtrOutput {
	return i.ToKubernetesClusterMasterMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterMasterMaintenancePolicyArgs) ToKubernetesClusterMasterMaintenancePolicyPtrOutputWithContext(ctx context.Context) KubernetesClusterMasterMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMasterMaintenancePolicyOutput).ToKubernetesClusterMasterMaintenancePolicyPtrOutputWithContext(ctx)
}

// KubernetesClusterMasterMaintenancePolicyPtrInput is an input type that accepts KubernetesClusterMasterMaintenancePolicyArgs, KubernetesClusterMasterMaintenancePolicyPtr and KubernetesClusterMasterMaintenancePolicyPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterMasterMaintenancePolicyPtrInput` via:
//
//          KubernetesClusterMasterMaintenancePolicyArgs{...}
//
//  or:
//
//          nil
type KubernetesClusterMasterMaintenancePolicyPtrInput interface {
	pulumi.Input

	ToKubernetesClusterMasterMaintenancePolicyPtrOutput() KubernetesClusterMasterMaintenancePolicyPtrOutput
	ToKubernetesClusterMasterMaintenancePolicyPtrOutputWithContext(context.Context) KubernetesClusterMasterMaintenancePolicyPtrOutput
}

type kubernetesClusterMasterMaintenancePolicyPtrType KubernetesClusterMasterMaintenancePolicyArgs

func KubernetesClusterMasterMaintenancePolicyPtr(v *KubernetesClusterMasterMaintenancePolicyArgs) KubernetesClusterMasterMaintenancePolicyPtrInput {
	return (*kubernetesClusterMasterMaintenancePolicyPtrType)(v)
}

func (*kubernetesClusterMasterMaintenancePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterMasterMaintenancePolicy)(nil)).Elem()
}

func (i *kubernetesClusterMasterMaintenancePolicyPtrType) ToKubernetesClusterMasterMaintenancePolicyPtrOutput() KubernetesClusterMasterMaintenancePolicyPtrOutput {
	return i.ToKubernetesClusterMasterMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterMasterMaintenancePolicyPtrType) ToKubernetesClusterMasterMaintenancePolicyPtrOutputWithContext(ctx context.Context) KubernetesClusterMasterMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMasterMaintenancePolicyPtrOutput)
}

type KubernetesClusterMasterMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMasterMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMasterMaintenancePolicy)(nil)).Elem()
}

func (o KubernetesClusterMasterMaintenancePolicyOutput) ToKubernetesClusterMasterMaintenancePolicyOutput() KubernetesClusterMasterMaintenancePolicyOutput {
	return o
}

func (o KubernetesClusterMasterMaintenancePolicyOutput) ToKubernetesClusterMasterMaintenancePolicyOutputWithContext(ctx context.Context) KubernetesClusterMasterMaintenancePolicyOutput {
	return o
}

func (o KubernetesClusterMasterMaintenancePolicyOutput) ToKubernetesClusterMasterMaintenancePolicyPtrOutput() KubernetesClusterMasterMaintenancePolicyPtrOutput {
	return o.ToKubernetesClusterMasterMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterMasterMaintenancePolicyOutput) ToKubernetesClusterMasterMaintenancePolicyPtrOutputWithContext(ctx context.Context) KubernetesClusterMasterMaintenancePolicyPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMasterMaintenancePolicy) *KubernetesClusterMasterMaintenancePolicy {
		return &v
	}).(KubernetesClusterMasterMaintenancePolicyPtrOutput)
}

// (Required) Boolean flag that specifies if master can be upgraded automatically. When omitted, default value is TRUE.
func (o KubernetesClusterMasterMaintenancePolicyOutput) AutoUpgrade() pulumi.BoolOutput {
	return o.ApplyT(func(v KubernetesClusterMasterMaintenancePolicy) bool { return v.AutoUpgrade }).(pulumi.BoolOutput)
}

// (Optional) (Computed) This structure specifies maintenance window, when update for master is allowed. When omitted, it defaults to any time.
// To specify time of day interval, for all days, one element should be provided, with two fields set, `startTime` and `duration`.
// Please see `zonalClusterResourceName` config example.
func (o KubernetesClusterMasterMaintenancePolicyOutput) MaintenanceWindows() KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v KubernetesClusterMasterMaintenancePolicy) []KubernetesClusterMasterMaintenancePolicyMaintenanceWindow {
		return v.MaintenanceWindows
	}).(KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput)
}

type KubernetesClusterMasterMaintenancePolicyPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMasterMaintenancePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterMasterMaintenancePolicy)(nil)).Elem()
}

func (o KubernetesClusterMasterMaintenancePolicyPtrOutput) ToKubernetesClusterMasterMaintenancePolicyPtrOutput() KubernetesClusterMasterMaintenancePolicyPtrOutput {
	return o
}

func (o KubernetesClusterMasterMaintenancePolicyPtrOutput) ToKubernetesClusterMasterMaintenancePolicyPtrOutputWithContext(ctx context.Context) KubernetesClusterMasterMaintenancePolicyPtrOutput {
	return o
}

func (o KubernetesClusterMasterMaintenancePolicyPtrOutput) Elem() KubernetesClusterMasterMaintenancePolicyOutput {
	return o.ApplyT(func(v *KubernetesClusterMasterMaintenancePolicy) KubernetesClusterMasterMaintenancePolicy { return *v }).(KubernetesClusterMasterMaintenancePolicyOutput)
}

// (Required) Boolean flag that specifies if master can be upgraded automatically. When omitted, default value is TRUE.
func (o KubernetesClusterMasterMaintenancePolicyPtrOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMasterMaintenancePolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.AutoUpgrade
	}).(pulumi.BoolPtrOutput)
}

// (Optional) (Computed) This structure specifies maintenance window, when update for master is allowed. When omitted, it defaults to any time.
// To specify time of day interval, for all days, one element should be provided, with two fields set, `startTime` and `duration`.
// Please see `zonalClusterResourceName` config example.
func (o KubernetesClusterMasterMaintenancePolicyPtrOutput) MaintenanceWindows() KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterMasterMaintenancePolicy) []KubernetesClusterMasterMaintenancePolicyMaintenanceWindow {
		if v == nil {
			return nil
		}
		return v.MaintenanceWindows
	}).(KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput)
}

type KubernetesClusterMasterMaintenancePolicyMaintenanceWindow struct {
	Day       *string `pulumi:"day"`
	Duration  string  `pulumi:"duration"`
	StartTime string  `pulumi:"startTime"`
}

// KubernetesClusterMasterMaintenancePolicyMaintenanceWindowInput is an input type that accepts KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArgs and KubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput values.
// You can construct a concrete instance of `KubernetesClusterMasterMaintenancePolicyMaintenanceWindowInput` via:
//
//          KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArgs{...}
type KubernetesClusterMasterMaintenancePolicyMaintenanceWindowInput interface {
	pulumi.Input

	ToKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput() KubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput
	ToKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutputWithContext(context.Context) KubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput
}

type KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArgs struct {
	Day       pulumi.StringPtrInput `pulumi:"day"`
	Duration  pulumi.StringInput    `pulumi:"duration"`
	StartTime pulumi.StringInput    `pulumi:"startTime"`
}

func (KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMasterMaintenancePolicyMaintenanceWindow)(nil)).Elem()
}

func (i KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArgs) ToKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput() KubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput {
	return i.ToKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutputWithContext(context.Background())
}

func (i KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArgs) ToKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutputWithContext(ctx context.Context) KubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput)
}

// KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayInput is an input type that accepts KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArray and KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayInput` via:
//
//          KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArray{ KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArgs{...} }
type KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput() KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput
	ToKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutputWithContext(context.Context) KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput
}

type KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArray []KubernetesClusterMasterMaintenancePolicyMaintenanceWindowInput

func (KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterMasterMaintenancePolicyMaintenanceWindow)(nil)).Elem()
}

func (i KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArray) ToKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput() KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput {
	return i.ToKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArray) ToKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutputWithContext(ctx context.Context) KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput)
}

type KubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMasterMaintenancePolicyMaintenanceWindow)(nil)).Elem()
}

func (o KubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput) ToKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput() KubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput {
	return o
}

func (o KubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput) ToKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutputWithContext(ctx context.Context) KubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput {
	return o
}

func (o KubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput) Day() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMasterMaintenancePolicyMaintenanceWindow) *string { return v.Day }).(pulumi.StringPtrOutput)
}

func (o KubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterMasterMaintenancePolicyMaintenanceWindow) string { return v.Duration }).(pulumi.StringOutput)
}

func (o KubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterMasterMaintenancePolicyMaintenanceWindow) string { return v.StartTime }).(pulumi.StringOutput)
}

type KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterMasterMaintenancePolicyMaintenanceWindow)(nil)).Elem()
}

func (o KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput) ToKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput() KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput {
	return o
}

func (o KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput) ToKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutputWithContext(ctx context.Context) KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput {
	return o
}

func (o KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) KubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterMasterMaintenancePolicyMaintenanceWindow {
		return vs[0].([]KubernetesClusterMasterMaintenancePolicyMaintenanceWindow)[vs[1].(int)]
	}).(KubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput)
}

type KubernetesClusterMasterRegional struct {
	// Array of locations, where master instances will be allocated. The structure is documented below.
	Locations []KubernetesClusterMasterRegionalLocation `pulumi:"locations"`
	// (Required) Name of availability region (e.g. "ru-central1"), where master instances will be allocated.
	Region string `pulumi:"region"`
}

// KubernetesClusterMasterRegionalInput is an input type that accepts KubernetesClusterMasterRegionalArgs and KubernetesClusterMasterRegionalOutput values.
// You can construct a concrete instance of `KubernetesClusterMasterRegionalInput` via:
//
//          KubernetesClusterMasterRegionalArgs{...}
type KubernetesClusterMasterRegionalInput interface {
	pulumi.Input

	ToKubernetesClusterMasterRegionalOutput() KubernetesClusterMasterRegionalOutput
	ToKubernetesClusterMasterRegionalOutputWithContext(context.Context) KubernetesClusterMasterRegionalOutput
}

type KubernetesClusterMasterRegionalArgs struct {
	// Array of locations, where master instances will be allocated. The structure is documented below.
	Locations KubernetesClusterMasterRegionalLocationArrayInput `pulumi:"locations"`
	// (Required) Name of availability region (e.g. "ru-central1"), where master instances will be allocated.
	Region pulumi.StringInput `pulumi:"region"`
}

func (KubernetesClusterMasterRegionalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMasterRegional)(nil)).Elem()
}

func (i KubernetesClusterMasterRegionalArgs) ToKubernetesClusterMasterRegionalOutput() KubernetesClusterMasterRegionalOutput {
	return i.ToKubernetesClusterMasterRegionalOutputWithContext(context.Background())
}

func (i KubernetesClusterMasterRegionalArgs) ToKubernetesClusterMasterRegionalOutputWithContext(ctx context.Context) KubernetesClusterMasterRegionalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMasterRegionalOutput)
}

func (i KubernetesClusterMasterRegionalArgs) ToKubernetesClusterMasterRegionalPtrOutput() KubernetesClusterMasterRegionalPtrOutput {
	return i.ToKubernetesClusterMasterRegionalPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterMasterRegionalArgs) ToKubernetesClusterMasterRegionalPtrOutputWithContext(ctx context.Context) KubernetesClusterMasterRegionalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMasterRegionalOutput).ToKubernetesClusterMasterRegionalPtrOutputWithContext(ctx)
}

// KubernetesClusterMasterRegionalPtrInput is an input type that accepts KubernetesClusterMasterRegionalArgs, KubernetesClusterMasterRegionalPtr and KubernetesClusterMasterRegionalPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterMasterRegionalPtrInput` via:
//
//          KubernetesClusterMasterRegionalArgs{...}
//
//  or:
//
//          nil
type KubernetesClusterMasterRegionalPtrInput interface {
	pulumi.Input

	ToKubernetesClusterMasterRegionalPtrOutput() KubernetesClusterMasterRegionalPtrOutput
	ToKubernetesClusterMasterRegionalPtrOutputWithContext(context.Context) KubernetesClusterMasterRegionalPtrOutput
}

type kubernetesClusterMasterRegionalPtrType KubernetesClusterMasterRegionalArgs

func KubernetesClusterMasterRegionalPtr(v *KubernetesClusterMasterRegionalArgs) KubernetesClusterMasterRegionalPtrInput {
	return (*kubernetesClusterMasterRegionalPtrType)(v)
}

func (*kubernetesClusterMasterRegionalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterMasterRegional)(nil)).Elem()
}

func (i *kubernetesClusterMasterRegionalPtrType) ToKubernetesClusterMasterRegionalPtrOutput() KubernetesClusterMasterRegionalPtrOutput {
	return i.ToKubernetesClusterMasterRegionalPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterMasterRegionalPtrType) ToKubernetesClusterMasterRegionalPtrOutputWithContext(ctx context.Context) KubernetesClusterMasterRegionalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMasterRegionalPtrOutput)
}

type KubernetesClusterMasterRegionalOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMasterRegionalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMasterRegional)(nil)).Elem()
}

func (o KubernetesClusterMasterRegionalOutput) ToKubernetesClusterMasterRegionalOutput() KubernetesClusterMasterRegionalOutput {
	return o
}

func (o KubernetesClusterMasterRegionalOutput) ToKubernetesClusterMasterRegionalOutputWithContext(ctx context.Context) KubernetesClusterMasterRegionalOutput {
	return o
}

func (o KubernetesClusterMasterRegionalOutput) ToKubernetesClusterMasterRegionalPtrOutput() KubernetesClusterMasterRegionalPtrOutput {
	return o.ToKubernetesClusterMasterRegionalPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterMasterRegionalOutput) ToKubernetesClusterMasterRegionalPtrOutputWithContext(ctx context.Context) KubernetesClusterMasterRegionalPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMasterRegional) *KubernetesClusterMasterRegional {
		return &v
	}).(KubernetesClusterMasterRegionalPtrOutput)
}

// Array of locations, where master instances will be allocated. The structure is documented below.
func (o KubernetesClusterMasterRegionalOutput) Locations() KubernetesClusterMasterRegionalLocationArrayOutput {
	return o.ApplyT(func(v KubernetesClusterMasterRegional) []KubernetesClusterMasterRegionalLocation { return v.Locations }).(KubernetesClusterMasterRegionalLocationArrayOutput)
}

// (Required) Name of availability region (e.g. "ru-central1"), where master instances will be allocated.
func (o KubernetesClusterMasterRegionalOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterMasterRegional) string { return v.Region }).(pulumi.StringOutput)
}

type KubernetesClusterMasterRegionalPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMasterRegionalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterMasterRegional)(nil)).Elem()
}

func (o KubernetesClusterMasterRegionalPtrOutput) ToKubernetesClusterMasterRegionalPtrOutput() KubernetesClusterMasterRegionalPtrOutput {
	return o
}

func (o KubernetesClusterMasterRegionalPtrOutput) ToKubernetesClusterMasterRegionalPtrOutputWithContext(ctx context.Context) KubernetesClusterMasterRegionalPtrOutput {
	return o
}

func (o KubernetesClusterMasterRegionalPtrOutput) Elem() KubernetesClusterMasterRegionalOutput {
	return o.ApplyT(func(v *KubernetesClusterMasterRegional) KubernetesClusterMasterRegional { return *v }).(KubernetesClusterMasterRegionalOutput)
}

// Array of locations, where master instances will be allocated. The structure is documented below.
func (o KubernetesClusterMasterRegionalPtrOutput) Locations() KubernetesClusterMasterRegionalLocationArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterMasterRegional) []KubernetesClusterMasterRegionalLocation {
		if v == nil {
			return nil
		}
		return v.Locations
	}).(KubernetesClusterMasterRegionalLocationArrayOutput)
}

// (Required) Name of availability region (e.g. "ru-central1"), where master instances will be allocated.
func (o KubernetesClusterMasterRegionalPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMasterRegional) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterMasterRegionalLocation struct {
	// (Optional) ID of the subnet.
	SubnetId *string `pulumi:"subnetId"`
	// (Optional) ID of the availability zone.
	Zone *string `pulumi:"zone"`
}

// KubernetesClusterMasterRegionalLocationInput is an input type that accepts KubernetesClusterMasterRegionalLocationArgs and KubernetesClusterMasterRegionalLocationOutput values.
// You can construct a concrete instance of `KubernetesClusterMasterRegionalLocationInput` via:
//
//          KubernetesClusterMasterRegionalLocationArgs{...}
type KubernetesClusterMasterRegionalLocationInput interface {
	pulumi.Input

	ToKubernetesClusterMasterRegionalLocationOutput() KubernetesClusterMasterRegionalLocationOutput
	ToKubernetesClusterMasterRegionalLocationOutputWithContext(context.Context) KubernetesClusterMasterRegionalLocationOutput
}

type KubernetesClusterMasterRegionalLocationArgs struct {
	// (Optional) ID of the subnet.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// (Optional) ID of the availability zone.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (KubernetesClusterMasterRegionalLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMasterRegionalLocation)(nil)).Elem()
}

func (i KubernetesClusterMasterRegionalLocationArgs) ToKubernetesClusterMasterRegionalLocationOutput() KubernetesClusterMasterRegionalLocationOutput {
	return i.ToKubernetesClusterMasterRegionalLocationOutputWithContext(context.Background())
}

func (i KubernetesClusterMasterRegionalLocationArgs) ToKubernetesClusterMasterRegionalLocationOutputWithContext(ctx context.Context) KubernetesClusterMasterRegionalLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMasterRegionalLocationOutput)
}

// KubernetesClusterMasterRegionalLocationArrayInput is an input type that accepts KubernetesClusterMasterRegionalLocationArray and KubernetesClusterMasterRegionalLocationArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterMasterRegionalLocationArrayInput` via:
//
//          KubernetesClusterMasterRegionalLocationArray{ KubernetesClusterMasterRegionalLocationArgs{...} }
type KubernetesClusterMasterRegionalLocationArrayInput interface {
	pulumi.Input

	ToKubernetesClusterMasterRegionalLocationArrayOutput() KubernetesClusterMasterRegionalLocationArrayOutput
	ToKubernetesClusterMasterRegionalLocationArrayOutputWithContext(context.Context) KubernetesClusterMasterRegionalLocationArrayOutput
}

type KubernetesClusterMasterRegionalLocationArray []KubernetesClusterMasterRegionalLocationInput

func (KubernetesClusterMasterRegionalLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterMasterRegionalLocation)(nil)).Elem()
}

func (i KubernetesClusterMasterRegionalLocationArray) ToKubernetesClusterMasterRegionalLocationArrayOutput() KubernetesClusterMasterRegionalLocationArrayOutput {
	return i.ToKubernetesClusterMasterRegionalLocationArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterMasterRegionalLocationArray) ToKubernetesClusterMasterRegionalLocationArrayOutputWithContext(ctx context.Context) KubernetesClusterMasterRegionalLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMasterRegionalLocationArrayOutput)
}

type KubernetesClusterMasterRegionalLocationOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMasterRegionalLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMasterRegionalLocation)(nil)).Elem()
}

func (o KubernetesClusterMasterRegionalLocationOutput) ToKubernetesClusterMasterRegionalLocationOutput() KubernetesClusterMasterRegionalLocationOutput {
	return o
}

func (o KubernetesClusterMasterRegionalLocationOutput) ToKubernetesClusterMasterRegionalLocationOutputWithContext(ctx context.Context) KubernetesClusterMasterRegionalLocationOutput {
	return o
}

// (Optional) ID of the subnet.
func (o KubernetesClusterMasterRegionalLocationOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMasterRegionalLocation) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// (Optional) ID of the availability zone.
func (o KubernetesClusterMasterRegionalLocationOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMasterRegionalLocation) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type KubernetesClusterMasterRegionalLocationArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMasterRegionalLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterMasterRegionalLocation)(nil)).Elem()
}

func (o KubernetesClusterMasterRegionalLocationArrayOutput) ToKubernetesClusterMasterRegionalLocationArrayOutput() KubernetesClusterMasterRegionalLocationArrayOutput {
	return o
}

func (o KubernetesClusterMasterRegionalLocationArrayOutput) ToKubernetesClusterMasterRegionalLocationArrayOutputWithContext(ctx context.Context) KubernetesClusterMasterRegionalLocationArrayOutput {
	return o
}

func (o KubernetesClusterMasterRegionalLocationArrayOutput) Index(i pulumi.IntInput) KubernetesClusterMasterRegionalLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterMasterRegionalLocation {
		return vs[0].([]KubernetesClusterMasterRegionalLocation)[vs[1].(int)]
	}).(KubernetesClusterMasterRegionalLocationOutput)
}

type KubernetesClusterMasterVersionInfo struct {
	// Current Kubernetes version, major.minor (e.g. 1.15).
	CurrentVersion *string `pulumi:"currentVersion"`
	// Boolean flag.
	// Newer revisions may include Kubernetes patches (e.g 1.15.1 > 1.15.2) as well
	// as some internal component updates - new features or bug fixes in yandex-specific
	// components either on the master or nodes.
	NewRevisionAvailable *bool `pulumi:"newRevisionAvailable"`
	// Human readable description of the changes to be applied
	// when updating to the latest revision. Empty if newRevisionAvailable is false.
	NewRevisionSummary *string `pulumi:"newRevisionSummary"`
	// Boolean flag. The current version is on the deprecation schedule,
	// component (master or node group) should be upgraded.
	VersionDeprecated *bool `pulumi:"versionDeprecated"`
}

// KubernetesClusterMasterVersionInfoInput is an input type that accepts KubernetesClusterMasterVersionInfoArgs and KubernetesClusterMasterVersionInfoOutput values.
// You can construct a concrete instance of `KubernetesClusterMasterVersionInfoInput` via:
//
//          KubernetesClusterMasterVersionInfoArgs{...}
type KubernetesClusterMasterVersionInfoInput interface {
	pulumi.Input

	ToKubernetesClusterMasterVersionInfoOutput() KubernetesClusterMasterVersionInfoOutput
	ToKubernetesClusterMasterVersionInfoOutputWithContext(context.Context) KubernetesClusterMasterVersionInfoOutput
}

type KubernetesClusterMasterVersionInfoArgs struct {
	// Current Kubernetes version, major.minor (e.g. 1.15).
	CurrentVersion pulumi.StringPtrInput `pulumi:"currentVersion"`
	// Boolean flag.
	// Newer revisions may include Kubernetes patches (e.g 1.15.1 > 1.15.2) as well
	// as some internal component updates - new features or bug fixes in yandex-specific
	// components either on the master or nodes.
	NewRevisionAvailable pulumi.BoolPtrInput `pulumi:"newRevisionAvailable"`
	// Human readable description of the changes to be applied
	// when updating to the latest revision. Empty if newRevisionAvailable is false.
	NewRevisionSummary pulumi.StringPtrInput `pulumi:"newRevisionSummary"`
	// Boolean flag. The current version is on the deprecation schedule,
	// component (master or node group) should be upgraded.
	VersionDeprecated pulumi.BoolPtrInput `pulumi:"versionDeprecated"`
}

func (KubernetesClusterMasterVersionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMasterVersionInfo)(nil)).Elem()
}

func (i KubernetesClusterMasterVersionInfoArgs) ToKubernetesClusterMasterVersionInfoOutput() KubernetesClusterMasterVersionInfoOutput {
	return i.ToKubernetesClusterMasterVersionInfoOutputWithContext(context.Background())
}

func (i KubernetesClusterMasterVersionInfoArgs) ToKubernetesClusterMasterVersionInfoOutputWithContext(ctx context.Context) KubernetesClusterMasterVersionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMasterVersionInfoOutput)
}

func (i KubernetesClusterMasterVersionInfoArgs) ToKubernetesClusterMasterVersionInfoPtrOutput() KubernetesClusterMasterVersionInfoPtrOutput {
	return i.ToKubernetesClusterMasterVersionInfoPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterMasterVersionInfoArgs) ToKubernetesClusterMasterVersionInfoPtrOutputWithContext(ctx context.Context) KubernetesClusterMasterVersionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMasterVersionInfoOutput).ToKubernetesClusterMasterVersionInfoPtrOutputWithContext(ctx)
}

// KubernetesClusterMasterVersionInfoPtrInput is an input type that accepts KubernetesClusterMasterVersionInfoArgs, KubernetesClusterMasterVersionInfoPtr and KubernetesClusterMasterVersionInfoPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterMasterVersionInfoPtrInput` via:
//
//          KubernetesClusterMasterVersionInfoArgs{...}
//
//  or:
//
//          nil
type KubernetesClusterMasterVersionInfoPtrInput interface {
	pulumi.Input

	ToKubernetesClusterMasterVersionInfoPtrOutput() KubernetesClusterMasterVersionInfoPtrOutput
	ToKubernetesClusterMasterVersionInfoPtrOutputWithContext(context.Context) KubernetesClusterMasterVersionInfoPtrOutput
}

type kubernetesClusterMasterVersionInfoPtrType KubernetesClusterMasterVersionInfoArgs

func KubernetesClusterMasterVersionInfoPtr(v *KubernetesClusterMasterVersionInfoArgs) KubernetesClusterMasterVersionInfoPtrInput {
	return (*kubernetesClusterMasterVersionInfoPtrType)(v)
}

func (*kubernetesClusterMasterVersionInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterMasterVersionInfo)(nil)).Elem()
}

func (i *kubernetesClusterMasterVersionInfoPtrType) ToKubernetesClusterMasterVersionInfoPtrOutput() KubernetesClusterMasterVersionInfoPtrOutput {
	return i.ToKubernetesClusterMasterVersionInfoPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterMasterVersionInfoPtrType) ToKubernetesClusterMasterVersionInfoPtrOutputWithContext(ctx context.Context) KubernetesClusterMasterVersionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMasterVersionInfoPtrOutput)
}

type KubernetesClusterMasterVersionInfoOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMasterVersionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMasterVersionInfo)(nil)).Elem()
}

func (o KubernetesClusterMasterVersionInfoOutput) ToKubernetesClusterMasterVersionInfoOutput() KubernetesClusterMasterVersionInfoOutput {
	return o
}

func (o KubernetesClusterMasterVersionInfoOutput) ToKubernetesClusterMasterVersionInfoOutputWithContext(ctx context.Context) KubernetesClusterMasterVersionInfoOutput {
	return o
}

func (o KubernetesClusterMasterVersionInfoOutput) ToKubernetesClusterMasterVersionInfoPtrOutput() KubernetesClusterMasterVersionInfoPtrOutput {
	return o.ToKubernetesClusterMasterVersionInfoPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterMasterVersionInfoOutput) ToKubernetesClusterMasterVersionInfoPtrOutputWithContext(ctx context.Context) KubernetesClusterMasterVersionInfoPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMasterVersionInfo) *KubernetesClusterMasterVersionInfo {
		return &v
	}).(KubernetesClusterMasterVersionInfoPtrOutput)
}

// Current Kubernetes version, major.minor (e.g. 1.15).
func (o KubernetesClusterMasterVersionInfoOutput) CurrentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMasterVersionInfo) *string { return v.CurrentVersion }).(pulumi.StringPtrOutput)
}

// Boolean flag.
// Newer revisions may include Kubernetes patches (e.g 1.15.1 > 1.15.2) as well
// as some internal component updates - new features or bug fixes in yandex-specific
// components either on the master or nodes.
func (o KubernetesClusterMasterVersionInfoOutput) NewRevisionAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMasterVersionInfo) *bool { return v.NewRevisionAvailable }).(pulumi.BoolPtrOutput)
}

// Human readable description of the changes to be applied
// when updating to the latest revision. Empty if newRevisionAvailable is false.
func (o KubernetesClusterMasterVersionInfoOutput) NewRevisionSummary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMasterVersionInfo) *string { return v.NewRevisionSummary }).(pulumi.StringPtrOutput)
}

// Boolean flag. The current version is on the deprecation schedule,
// component (master or node group) should be upgraded.
func (o KubernetesClusterMasterVersionInfoOutput) VersionDeprecated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMasterVersionInfo) *bool { return v.VersionDeprecated }).(pulumi.BoolPtrOutput)
}

type KubernetesClusterMasterVersionInfoPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMasterVersionInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterMasterVersionInfo)(nil)).Elem()
}

func (o KubernetesClusterMasterVersionInfoPtrOutput) ToKubernetesClusterMasterVersionInfoPtrOutput() KubernetesClusterMasterVersionInfoPtrOutput {
	return o
}

func (o KubernetesClusterMasterVersionInfoPtrOutput) ToKubernetesClusterMasterVersionInfoPtrOutputWithContext(ctx context.Context) KubernetesClusterMasterVersionInfoPtrOutput {
	return o
}

func (o KubernetesClusterMasterVersionInfoPtrOutput) Elem() KubernetesClusterMasterVersionInfoOutput {
	return o.ApplyT(func(v *KubernetesClusterMasterVersionInfo) KubernetesClusterMasterVersionInfo { return *v }).(KubernetesClusterMasterVersionInfoOutput)
}

// Current Kubernetes version, major.minor (e.g. 1.15).
func (o KubernetesClusterMasterVersionInfoPtrOutput) CurrentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMasterVersionInfo) *string {
		if v == nil {
			return nil
		}
		return v.CurrentVersion
	}).(pulumi.StringPtrOutput)
}

// Boolean flag.
// Newer revisions may include Kubernetes patches (e.g 1.15.1 > 1.15.2) as well
// as some internal component updates - new features or bug fixes in yandex-specific
// components either on the master or nodes.
func (o KubernetesClusterMasterVersionInfoPtrOutput) NewRevisionAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMasterVersionInfo) *bool {
		if v == nil {
			return nil
		}
		return v.NewRevisionAvailable
	}).(pulumi.BoolPtrOutput)
}

// Human readable description of the changes to be applied
// when updating to the latest revision. Empty if newRevisionAvailable is false.
func (o KubernetesClusterMasterVersionInfoPtrOutput) NewRevisionSummary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMasterVersionInfo) *string {
		if v == nil {
			return nil
		}
		return v.NewRevisionSummary
	}).(pulumi.StringPtrOutput)
}

// Boolean flag. The current version is on the deprecation schedule,
// component (master or node group) should be upgraded.
func (o KubernetesClusterMasterVersionInfoPtrOutput) VersionDeprecated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMasterVersionInfo) *bool {
		if v == nil {
			return nil
		}
		return v.VersionDeprecated
	}).(pulumi.BoolPtrOutput)
}

type KubernetesClusterMasterZonal struct {
	// (Optional) ID of the subnet.
	SubnetId *string `pulumi:"subnetId"`
	// (Optional) ID of the availability zone.
	Zone *string `pulumi:"zone"`
}

// KubernetesClusterMasterZonalInput is an input type that accepts KubernetesClusterMasterZonalArgs and KubernetesClusterMasterZonalOutput values.
// You can construct a concrete instance of `KubernetesClusterMasterZonalInput` via:
//
//          KubernetesClusterMasterZonalArgs{...}
type KubernetesClusterMasterZonalInput interface {
	pulumi.Input

	ToKubernetesClusterMasterZonalOutput() KubernetesClusterMasterZonalOutput
	ToKubernetesClusterMasterZonalOutputWithContext(context.Context) KubernetesClusterMasterZonalOutput
}

type KubernetesClusterMasterZonalArgs struct {
	// (Optional) ID of the subnet.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// (Optional) ID of the availability zone.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (KubernetesClusterMasterZonalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMasterZonal)(nil)).Elem()
}

func (i KubernetesClusterMasterZonalArgs) ToKubernetesClusterMasterZonalOutput() KubernetesClusterMasterZonalOutput {
	return i.ToKubernetesClusterMasterZonalOutputWithContext(context.Background())
}

func (i KubernetesClusterMasterZonalArgs) ToKubernetesClusterMasterZonalOutputWithContext(ctx context.Context) KubernetesClusterMasterZonalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMasterZonalOutput)
}

func (i KubernetesClusterMasterZonalArgs) ToKubernetesClusterMasterZonalPtrOutput() KubernetesClusterMasterZonalPtrOutput {
	return i.ToKubernetesClusterMasterZonalPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterMasterZonalArgs) ToKubernetesClusterMasterZonalPtrOutputWithContext(ctx context.Context) KubernetesClusterMasterZonalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMasterZonalOutput).ToKubernetesClusterMasterZonalPtrOutputWithContext(ctx)
}

// KubernetesClusterMasterZonalPtrInput is an input type that accepts KubernetesClusterMasterZonalArgs, KubernetesClusterMasterZonalPtr and KubernetesClusterMasterZonalPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterMasterZonalPtrInput` via:
//
//          KubernetesClusterMasterZonalArgs{...}
//
//  or:
//
//          nil
type KubernetesClusterMasterZonalPtrInput interface {
	pulumi.Input

	ToKubernetesClusterMasterZonalPtrOutput() KubernetesClusterMasterZonalPtrOutput
	ToKubernetesClusterMasterZonalPtrOutputWithContext(context.Context) KubernetesClusterMasterZonalPtrOutput
}

type kubernetesClusterMasterZonalPtrType KubernetesClusterMasterZonalArgs

func KubernetesClusterMasterZonalPtr(v *KubernetesClusterMasterZonalArgs) KubernetesClusterMasterZonalPtrInput {
	return (*kubernetesClusterMasterZonalPtrType)(v)
}

func (*kubernetesClusterMasterZonalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterMasterZonal)(nil)).Elem()
}

func (i *kubernetesClusterMasterZonalPtrType) ToKubernetesClusterMasterZonalPtrOutput() KubernetesClusterMasterZonalPtrOutput {
	return i.ToKubernetesClusterMasterZonalPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterMasterZonalPtrType) ToKubernetesClusterMasterZonalPtrOutputWithContext(ctx context.Context) KubernetesClusterMasterZonalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMasterZonalPtrOutput)
}

type KubernetesClusterMasterZonalOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMasterZonalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMasterZonal)(nil)).Elem()
}

func (o KubernetesClusterMasterZonalOutput) ToKubernetesClusterMasterZonalOutput() KubernetesClusterMasterZonalOutput {
	return o
}

func (o KubernetesClusterMasterZonalOutput) ToKubernetesClusterMasterZonalOutputWithContext(ctx context.Context) KubernetesClusterMasterZonalOutput {
	return o
}

func (o KubernetesClusterMasterZonalOutput) ToKubernetesClusterMasterZonalPtrOutput() KubernetesClusterMasterZonalPtrOutput {
	return o.ToKubernetesClusterMasterZonalPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterMasterZonalOutput) ToKubernetesClusterMasterZonalPtrOutputWithContext(ctx context.Context) KubernetesClusterMasterZonalPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMasterZonal) *KubernetesClusterMasterZonal {
		return &v
	}).(KubernetesClusterMasterZonalPtrOutput)
}

// (Optional) ID of the subnet.
func (o KubernetesClusterMasterZonalOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMasterZonal) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// (Optional) ID of the availability zone.
func (o KubernetesClusterMasterZonalOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMasterZonal) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type KubernetesClusterMasterZonalPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMasterZonalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterMasterZonal)(nil)).Elem()
}

func (o KubernetesClusterMasterZonalPtrOutput) ToKubernetesClusterMasterZonalPtrOutput() KubernetesClusterMasterZonalPtrOutput {
	return o
}

func (o KubernetesClusterMasterZonalPtrOutput) ToKubernetesClusterMasterZonalPtrOutputWithContext(ctx context.Context) KubernetesClusterMasterZonalPtrOutput {
	return o
}

func (o KubernetesClusterMasterZonalPtrOutput) Elem() KubernetesClusterMasterZonalOutput {
	return o.ApplyT(func(v *KubernetesClusterMasterZonal) KubernetesClusterMasterZonal { return *v }).(KubernetesClusterMasterZonalOutput)
}

// (Optional) ID of the subnet.
func (o KubernetesClusterMasterZonalPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMasterZonal) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// (Optional) ID of the availability zone.
func (o KubernetesClusterMasterZonalPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMasterZonal) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

type KubernetesNodeGroupAllocationPolicy struct {
	// Repeated field, that specify subnets (zones), that will be used by node group compute instances. The structure is documented below.
	Locations []KubernetesNodeGroupAllocationPolicyLocation `pulumi:"locations"`
}

// KubernetesNodeGroupAllocationPolicyInput is an input type that accepts KubernetesNodeGroupAllocationPolicyArgs and KubernetesNodeGroupAllocationPolicyOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupAllocationPolicyInput` via:
//
//          KubernetesNodeGroupAllocationPolicyArgs{...}
type KubernetesNodeGroupAllocationPolicyInput interface {
	pulumi.Input

	ToKubernetesNodeGroupAllocationPolicyOutput() KubernetesNodeGroupAllocationPolicyOutput
	ToKubernetesNodeGroupAllocationPolicyOutputWithContext(context.Context) KubernetesNodeGroupAllocationPolicyOutput
}

type KubernetesNodeGroupAllocationPolicyArgs struct {
	// Repeated field, that specify subnets (zones), that will be used by node group compute instances. The structure is documented below.
	Locations KubernetesNodeGroupAllocationPolicyLocationArrayInput `pulumi:"locations"`
}

func (KubernetesNodeGroupAllocationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupAllocationPolicy)(nil)).Elem()
}

func (i KubernetesNodeGroupAllocationPolicyArgs) ToKubernetesNodeGroupAllocationPolicyOutput() KubernetesNodeGroupAllocationPolicyOutput {
	return i.ToKubernetesNodeGroupAllocationPolicyOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupAllocationPolicyArgs) ToKubernetesNodeGroupAllocationPolicyOutputWithContext(ctx context.Context) KubernetesNodeGroupAllocationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupAllocationPolicyOutput)
}

func (i KubernetesNodeGroupAllocationPolicyArgs) ToKubernetesNodeGroupAllocationPolicyPtrOutput() KubernetesNodeGroupAllocationPolicyPtrOutput {
	return i.ToKubernetesNodeGroupAllocationPolicyPtrOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupAllocationPolicyArgs) ToKubernetesNodeGroupAllocationPolicyPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupAllocationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupAllocationPolicyOutput).ToKubernetesNodeGroupAllocationPolicyPtrOutputWithContext(ctx)
}

// KubernetesNodeGroupAllocationPolicyPtrInput is an input type that accepts KubernetesNodeGroupAllocationPolicyArgs, KubernetesNodeGroupAllocationPolicyPtr and KubernetesNodeGroupAllocationPolicyPtrOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupAllocationPolicyPtrInput` via:
//
//          KubernetesNodeGroupAllocationPolicyArgs{...}
//
//  or:
//
//          nil
type KubernetesNodeGroupAllocationPolicyPtrInput interface {
	pulumi.Input

	ToKubernetesNodeGroupAllocationPolicyPtrOutput() KubernetesNodeGroupAllocationPolicyPtrOutput
	ToKubernetesNodeGroupAllocationPolicyPtrOutputWithContext(context.Context) KubernetesNodeGroupAllocationPolicyPtrOutput
}

type kubernetesNodeGroupAllocationPolicyPtrType KubernetesNodeGroupAllocationPolicyArgs

func KubernetesNodeGroupAllocationPolicyPtr(v *KubernetesNodeGroupAllocationPolicyArgs) KubernetesNodeGroupAllocationPolicyPtrInput {
	return (*kubernetesNodeGroupAllocationPolicyPtrType)(v)
}

func (*kubernetesNodeGroupAllocationPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodeGroupAllocationPolicy)(nil)).Elem()
}

func (i *kubernetesNodeGroupAllocationPolicyPtrType) ToKubernetesNodeGroupAllocationPolicyPtrOutput() KubernetesNodeGroupAllocationPolicyPtrOutput {
	return i.ToKubernetesNodeGroupAllocationPolicyPtrOutputWithContext(context.Background())
}

func (i *kubernetesNodeGroupAllocationPolicyPtrType) ToKubernetesNodeGroupAllocationPolicyPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupAllocationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupAllocationPolicyPtrOutput)
}

type KubernetesNodeGroupAllocationPolicyOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupAllocationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupAllocationPolicy)(nil)).Elem()
}

func (o KubernetesNodeGroupAllocationPolicyOutput) ToKubernetesNodeGroupAllocationPolicyOutput() KubernetesNodeGroupAllocationPolicyOutput {
	return o
}

func (o KubernetesNodeGroupAllocationPolicyOutput) ToKubernetesNodeGroupAllocationPolicyOutputWithContext(ctx context.Context) KubernetesNodeGroupAllocationPolicyOutput {
	return o
}

func (o KubernetesNodeGroupAllocationPolicyOutput) ToKubernetesNodeGroupAllocationPolicyPtrOutput() KubernetesNodeGroupAllocationPolicyPtrOutput {
	return o.ToKubernetesNodeGroupAllocationPolicyPtrOutputWithContext(context.Background())
}

func (o KubernetesNodeGroupAllocationPolicyOutput) ToKubernetesNodeGroupAllocationPolicyPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupAllocationPolicyPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupAllocationPolicy) *KubernetesNodeGroupAllocationPolicy {
		return &v
	}).(KubernetesNodeGroupAllocationPolicyPtrOutput)
}

// Repeated field, that specify subnets (zones), that will be used by node group compute instances. The structure is documented below.
func (o KubernetesNodeGroupAllocationPolicyOutput) Locations() KubernetesNodeGroupAllocationPolicyLocationArrayOutput {
	return o.ApplyT(func(v KubernetesNodeGroupAllocationPolicy) []KubernetesNodeGroupAllocationPolicyLocation {
		return v.Locations
	}).(KubernetesNodeGroupAllocationPolicyLocationArrayOutput)
}

type KubernetesNodeGroupAllocationPolicyPtrOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupAllocationPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodeGroupAllocationPolicy)(nil)).Elem()
}

func (o KubernetesNodeGroupAllocationPolicyPtrOutput) ToKubernetesNodeGroupAllocationPolicyPtrOutput() KubernetesNodeGroupAllocationPolicyPtrOutput {
	return o
}

func (o KubernetesNodeGroupAllocationPolicyPtrOutput) ToKubernetesNodeGroupAllocationPolicyPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupAllocationPolicyPtrOutput {
	return o
}

func (o KubernetesNodeGroupAllocationPolicyPtrOutput) Elem() KubernetesNodeGroupAllocationPolicyOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupAllocationPolicy) KubernetesNodeGroupAllocationPolicy { return *v }).(KubernetesNodeGroupAllocationPolicyOutput)
}

// Repeated field, that specify subnets (zones), that will be used by node group compute instances. The structure is documented below.
func (o KubernetesNodeGroupAllocationPolicyPtrOutput) Locations() KubernetesNodeGroupAllocationPolicyLocationArrayOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupAllocationPolicy) []KubernetesNodeGroupAllocationPolicyLocation {
		if v == nil {
			return nil
		}
		return v.Locations
	}).(KubernetesNodeGroupAllocationPolicyLocationArrayOutput)
}

type KubernetesNodeGroupAllocationPolicyLocation struct {
	// ID of the subnet, that will be used by one compute instance in node group.
	//
	// Deprecated: The 'subnet_id' field has been deprecated. Please use 'subnet_ids under network_interface' instead.
	SubnetId *string `pulumi:"subnetId"`
	// ID of the availability zone where for one compute instance in node group.
	Zone *string `pulumi:"zone"`
}

// KubernetesNodeGroupAllocationPolicyLocationInput is an input type that accepts KubernetesNodeGroupAllocationPolicyLocationArgs and KubernetesNodeGroupAllocationPolicyLocationOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupAllocationPolicyLocationInput` via:
//
//          KubernetesNodeGroupAllocationPolicyLocationArgs{...}
type KubernetesNodeGroupAllocationPolicyLocationInput interface {
	pulumi.Input

	ToKubernetesNodeGroupAllocationPolicyLocationOutput() KubernetesNodeGroupAllocationPolicyLocationOutput
	ToKubernetesNodeGroupAllocationPolicyLocationOutputWithContext(context.Context) KubernetesNodeGroupAllocationPolicyLocationOutput
}

type KubernetesNodeGroupAllocationPolicyLocationArgs struct {
	// ID of the subnet, that will be used by one compute instance in node group.
	//
	// Deprecated: The 'subnet_id' field has been deprecated. Please use 'subnet_ids under network_interface' instead.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// ID of the availability zone where for one compute instance in node group.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (KubernetesNodeGroupAllocationPolicyLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupAllocationPolicyLocation)(nil)).Elem()
}

func (i KubernetesNodeGroupAllocationPolicyLocationArgs) ToKubernetesNodeGroupAllocationPolicyLocationOutput() KubernetesNodeGroupAllocationPolicyLocationOutput {
	return i.ToKubernetesNodeGroupAllocationPolicyLocationOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupAllocationPolicyLocationArgs) ToKubernetesNodeGroupAllocationPolicyLocationOutputWithContext(ctx context.Context) KubernetesNodeGroupAllocationPolicyLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupAllocationPolicyLocationOutput)
}

// KubernetesNodeGroupAllocationPolicyLocationArrayInput is an input type that accepts KubernetesNodeGroupAllocationPolicyLocationArray and KubernetesNodeGroupAllocationPolicyLocationArrayOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupAllocationPolicyLocationArrayInput` via:
//
//          KubernetesNodeGroupAllocationPolicyLocationArray{ KubernetesNodeGroupAllocationPolicyLocationArgs{...} }
type KubernetesNodeGroupAllocationPolicyLocationArrayInput interface {
	pulumi.Input

	ToKubernetesNodeGroupAllocationPolicyLocationArrayOutput() KubernetesNodeGroupAllocationPolicyLocationArrayOutput
	ToKubernetesNodeGroupAllocationPolicyLocationArrayOutputWithContext(context.Context) KubernetesNodeGroupAllocationPolicyLocationArrayOutput
}

type KubernetesNodeGroupAllocationPolicyLocationArray []KubernetesNodeGroupAllocationPolicyLocationInput

func (KubernetesNodeGroupAllocationPolicyLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesNodeGroupAllocationPolicyLocation)(nil)).Elem()
}

func (i KubernetesNodeGroupAllocationPolicyLocationArray) ToKubernetesNodeGroupAllocationPolicyLocationArrayOutput() KubernetesNodeGroupAllocationPolicyLocationArrayOutput {
	return i.ToKubernetesNodeGroupAllocationPolicyLocationArrayOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupAllocationPolicyLocationArray) ToKubernetesNodeGroupAllocationPolicyLocationArrayOutputWithContext(ctx context.Context) KubernetesNodeGroupAllocationPolicyLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupAllocationPolicyLocationArrayOutput)
}

type KubernetesNodeGroupAllocationPolicyLocationOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupAllocationPolicyLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupAllocationPolicyLocation)(nil)).Elem()
}

func (o KubernetesNodeGroupAllocationPolicyLocationOutput) ToKubernetesNodeGroupAllocationPolicyLocationOutput() KubernetesNodeGroupAllocationPolicyLocationOutput {
	return o
}

func (o KubernetesNodeGroupAllocationPolicyLocationOutput) ToKubernetesNodeGroupAllocationPolicyLocationOutputWithContext(ctx context.Context) KubernetesNodeGroupAllocationPolicyLocationOutput {
	return o
}

// ID of the subnet, that will be used by one compute instance in node group.
//
// Deprecated: The 'subnet_id' field has been deprecated. Please use 'subnet_ids under network_interface' instead.
func (o KubernetesNodeGroupAllocationPolicyLocationOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupAllocationPolicyLocation) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// ID of the availability zone where for one compute instance in node group.
func (o KubernetesNodeGroupAllocationPolicyLocationOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupAllocationPolicyLocation) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type KubernetesNodeGroupAllocationPolicyLocationArrayOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupAllocationPolicyLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesNodeGroupAllocationPolicyLocation)(nil)).Elem()
}

func (o KubernetesNodeGroupAllocationPolicyLocationArrayOutput) ToKubernetesNodeGroupAllocationPolicyLocationArrayOutput() KubernetesNodeGroupAllocationPolicyLocationArrayOutput {
	return o
}

func (o KubernetesNodeGroupAllocationPolicyLocationArrayOutput) ToKubernetesNodeGroupAllocationPolicyLocationArrayOutputWithContext(ctx context.Context) KubernetesNodeGroupAllocationPolicyLocationArrayOutput {
	return o
}

func (o KubernetesNodeGroupAllocationPolicyLocationArrayOutput) Index(i pulumi.IntInput) KubernetesNodeGroupAllocationPolicyLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesNodeGroupAllocationPolicyLocation {
		return vs[0].([]KubernetesNodeGroupAllocationPolicyLocation)[vs[1].(int)]
	}).(KubernetesNodeGroupAllocationPolicyLocationOutput)
}

type KubernetesNodeGroupDeployPolicy struct {
	// The maximum number of instances that can be temporarily allocated above the group's target size during the update.
	MaxExpansion int `pulumi:"maxExpansion"`
	// The maximum number of running instances that can be taken offline during update.
	MaxUnavailable int `pulumi:"maxUnavailable"`
}

// KubernetesNodeGroupDeployPolicyInput is an input type that accepts KubernetesNodeGroupDeployPolicyArgs and KubernetesNodeGroupDeployPolicyOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupDeployPolicyInput` via:
//
//          KubernetesNodeGroupDeployPolicyArgs{...}
type KubernetesNodeGroupDeployPolicyInput interface {
	pulumi.Input

	ToKubernetesNodeGroupDeployPolicyOutput() KubernetesNodeGroupDeployPolicyOutput
	ToKubernetesNodeGroupDeployPolicyOutputWithContext(context.Context) KubernetesNodeGroupDeployPolicyOutput
}

type KubernetesNodeGroupDeployPolicyArgs struct {
	// The maximum number of instances that can be temporarily allocated above the group's target size during the update.
	MaxExpansion pulumi.IntInput `pulumi:"maxExpansion"`
	// The maximum number of running instances that can be taken offline during update.
	MaxUnavailable pulumi.IntInput `pulumi:"maxUnavailable"`
}

func (KubernetesNodeGroupDeployPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupDeployPolicy)(nil)).Elem()
}

func (i KubernetesNodeGroupDeployPolicyArgs) ToKubernetesNodeGroupDeployPolicyOutput() KubernetesNodeGroupDeployPolicyOutput {
	return i.ToKubernetesNodeGroupDeployPolicyOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupDeployPolicyArgs) ToKubernetesNodeGroupDeployPolicyOutputWithContext(ctx context.Context) KubernetesNodeGroupDeployPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupDeployPolicyOutput)
}

func (i KubernetesNodeGroupDeployPolicyArgs) ToKubernetesNodeGroupDeployPolicyPtrOutput() KubernetesNodeGroupDeployPolicyPtrOutput {
	return i.ToKubernetesNodeGroupDeployPolicyPtrOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupDeployPolicyArgs) ToKubernetesNodeGroupDeployPolicyPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupDeployPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupDeployPolicyOutput).ToKubernetesNodeGroupDeployPolicyPtrOutputWithContext(ctx)
}

// KubernetesNodeGroupDeployPolicyPtrInput is an input type that accepts KubernetesNodeGroupDeployPolicyArgs, KubernetesNodeGroupDeployPolicyPtr and KubernetesNodeGroupDeployPolicyPtrOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupDeployPolicyPtrInput` via:
//
//          KubernetesNodeGroupDeployPolicyArgs{...}
//
//  or:
//
//          nil
type KubernetesNodeGroupDeployPolicyPtrInput interface {
	pulumi.Input

	ToKubernetesNodeGroupDeployPolicyPtrOutput() KubernetesNodeGroupDeployPolicyPtrOutput
	ToKubernetesNodeGroupDeployPolicyPtrOutputWithContext(context.Context) KubernetesNodeGroupDeployPolicyPtrOutput
}

type kubernetesNodeGroupDeployPolicyPtrType KubernetesNodeGroupDeployPolicyArgs

func KubernetesNodeGroupDeployPolicyPtr(v *KubernetesNodeGroupDeployPolicyArgs) KubernetesNodeGroupDeployPolicyPtrInput {
	return (*kubernetesNodeGroupDeployPolicyPtrType)(v)
}

func (*kubernetesNodeGroupDeployPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodeGroupDeployPolicy)(nil)).Elem()
}

func (i *kubernetesNodeGroupDeployPolicyPtrType) ToKubernetesNodeGroupDeployPolicyPtrOutput() KubernetesNodeGroupDeployPolicyPtrOutput {
	return i.ToKubernetesNodeGroupDeployPolicyPtrOutputWithContext(context.Background())
}

func (i *kubernetesNodeGroupDeployPolicyPtrType) ToKubernetesNodeGroupDeployPolicyPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupDeployPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupDeployPolicyPtrOutput)
}

type KubernetesNodeGroupDeployPolicyOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupDeployPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupDeployPolicy)(nil)).Elem()
}

func (o KubernetesNodeGroupDeployPolicyOutput) ToKubernetesNodeGroupDeployPolicyOutput() KubernetesNodeGroupDeployPolicyOutput {
	return o
}

func (o KubernetesNodeGroupDeployPolicyOutput) ToKubernetesNodeGroupDeployPolicyOutputWithContext(ctx context.Context) KubernetesNodeGroupDeployPolicyOutput {
	return o
}

func (o KubernetesNodeGroupDeployPolicyOutput) ToKubernetesNodeGroupDeployPolicyPtrOutput() KubernetesNodeGroupDeployPolicyPtrOutput {
	return o.ToKubernetesNodeGroupDeployPolicyPtrOutputWithContext(context.Background())
}

func (o KubernetesNodeGroupDeployPolicyOutput) ToKubernetesNodeGroupDeployPolicyPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupDeployPolicyPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupDeployPolicy) *KubernetesNodeGroupDeployPolicy {
		return &v
	}).(KubernetesNodeGroupDeployPolicyPtrOutput)
}

// The maximum number of instances that can be temporarily allocated above the group's target size during the update.
func (o KubernetesNodeGroupDeployPolicyOutput) MaxExpansion() pulumi.IntOutput {
	return o.ApplyT(func(v KubernetesNodeGroupDeployPolicy) int { return v.MaxExpansion }).(pulumi.IntOutput)
}

// The maximum number of running instances that can be taken offline during update.
func (o KubernetesNodeGroupDeployPolicyOutput) MaxUnavailable() pulumi.IntOutput {
	return o.ApplyT(func(v KubernetesNodeGroupDeployPolicy) int { return v.MaxUnavailable }).(pulumi.IntOutput)
}

type KubernetesNodeGroupDeployPolicyPtrOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupDeployPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodeGroupDeployPolicy)(nil)).Elem()
}

func (o KubernetesNodeGroupDeployPolicyPtrOutput) ToKubernetesNodeGroupDeployPolicyPtrOutput() KubernetesNodeGroupDeployPolicyPtrOutput {
	return o
}

func (o KubernetesNodeGroupDeployPolicyPtrOutput) ToKubernetesNodeGroupDeployPolicyPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupDeployPolicyPtrOutput {
	return o
}

func (o KubernetesNodeGroupDeployPolicyPtrOutput) Elem() KubernetesNodeGroupDeployPolicyOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupDeployPolicy) KubernetesNodeGroupDeployPolicy { return *v }).(KubernetesNodeGroupDeployPolicyOutput)
}

// The maximum number of instances that can be temporarily allocated above the group's target size during the update.
func (o KubernetesNodeGroupDeployPolicyPtrOutput) MaxExpansion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupDeployPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.MaxExpansion
	}).(pulumi.IntPtrOutput)
}

// The maximum number of running instances that can be taken offline during update.
func (o KubernetesNodeGroupDeployPolicyPtrOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupDeployPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.MaxUnavailable
	}).(pulumi.IntPtrOutput)
}

type KubernetesNodeGroupInstanceTemplate struct {
	// The specifications for boot disks that will be attached to the instance. The structure is documented below.
	BootDisk *KubernetesNodeGroupInstanceTemplateBootDisk `pulumi:"bootDisk"`
	// The set of metadata `key:value` pairs assigned to this instance template. This includes custom metadata and predefined keys.
	// * `resources.0.memory` - The memory size allocated to the instance.
	// * `resources.0.cores` - Number of CPU cores allocated to the instance.
	// * `resources.0.core_fraction` - Baseline core performance as a percent.
	// * `resources.0.gpus` - Number of GPU cores allocated to the instance.
	Metadata map[string]string `pulumi:"metadata"`
	// A public address that can be used to access the internet over NAT.
	//
	// Deprecated: The 'nat' field has been deprecated. Please use 'nat under network_interface' instead.
	Nat *bool `pulumi:"nat"`
	// An array with the network interfaces that will be attached to the instance. The structure is documented below.
	NetworkInterfaces []KubernetesNodeGroupInstanceTemplateNetworkInterface `pulumi:"networkInterfaces"`
	// The ID of the hardware platform configuration for the node group compute instances.
	PlatformId *string                                       `pulumi:"platformId"`
	Resources  *KubernetesNodeGroupInstanceTemplateResources `pulumi:"resources"`
	// The scheduling policy for the instances in node group. The structure is documented below.
	SchedulingPolicy *KubernetesNodeGroupInstanceTemplateSchedulingPolicy `pulumi:"schedulingPolicy"`
}

// KubernetesNodeGroupInstanceTemplateInput is an input type that accepts KubernetesNodeGroupInstanceTemplateArgs and KubernetesNodeGroupInstanceTemplateOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupInstanceTemplateInput` via:
//
//          KubernetesNodeGroupInstanceTemplateArgs{...}
type KubernetesNodeGroupInstanceTemplateInput interface {
	pulumi.Input

	ToKubernetesNodeGroupInstanceTemplateOutput() KubernetesNodeGroupInstanceTemplateOutput
	ToKubernetesNodeGroupInstanceTemplateOutputWithContext(context.Context) KubernetesNodeGroupInstanceTemplateOutput
}

type KubernetesNodeGroupInstanceTemplateArgs struct {
	// The specifications for boot disks that will be attached to the instance. The structure is documented below.
	BootDisk KubernetesNodeGroupInstanceTemplateBootDiskPtrInput `pulumi:"bootDisk"`
	// The set of metadata `key:value` pairs assigned to this instance template. This includes custom metadata and predefined keys.
	// * `resources.0.memory` - The memory size allocated to the instance.
	// * `resources.0.cores` - Number of CPU cores allocated to the instance.
	// * `resources.0.core_fraction` - Baseline core performance as a percent.
	// * `resources.0.gpus` - Number of GPU cores allocated to the instance.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// A public address that can be used to access the internet over NAT.
	//
	// Deprecated: The 'nat' field has been deprecated. Please use 'nat under network_interface' instead.
	Nat pulumi.BoolPtrInput `pulumi:"nat"`
	// An array with the network interfaces that will be attached to the instance. The structure is documented below.
	NetworkInterfaces KubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayInput `pulumi:"networkInterfaces"`
	// The ID of the hardware platform configuration for the node group compute instances.
	PlatformId pulumi.StringPtrInput                                `pulumi:"platformId"`
	Resources  KubernetesNodeGroupInstanceTemplateResourcesPtrInput `pulumi:"resources"`
	// The scheduling policy for the instances in node group. The structure is documented below.
	SchedulingPolicy KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrInput `pulumi:"schedulingPolicy"`
}

func (KubernetesNodeGroupInstanceTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupInstanceTemplate)(nil)).Elem()
}

func (i KubernetesNodeGroupInstanceTemplateArgs) ToKubernetesNodeGroupInstanceTemplateOutput() KubernetesNodeGroupInstanceTemplateOutput {
	return i.ToKubernetesNodeGroupInstanceTemplateOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupInstanceTemplateArgs) ToKubernetesNodeGroupInstanceTemplateOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupInstanceTemplateOutput)
}

func (i KubernetesNodeGroupInstanceTemplateArgs) ToKubernetesNodeGroupInstanceTemplatePtrOutput() KubernetesNodeGroupInstanceTemplatePtrOutput {
	return i.ToKubernetesNodeGroupInstanceTemplatePtrOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupInstanceTemplateArgs) ToKubernetesNodeGroupInstanceTemplatePtrOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupInstanceTemplateOutput).ToKubernetesNodeGroupInstanceTemplatePtrOutputWithContext(ctx)
}

// KubernetesNodeGroupInstanceTemplatePtrInput is an input type that accepts KubernetesNodeGroupInstanceTemplateArgs, KubernetesNodeGroupInstanceTemplatePtr and KubernetesNodeGroupInstanceTemplatePtrOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupInstanceTemplatePtrInput` via:
//
//          KubernetesNodeGroupInstanceTemplateArgs{...}
//
//  or:
//
//          nil
type KubernetesNodeGroupInstanceTemplatePtrInput interface {
	pulumi.Input

	ToKubernetesNodeGroupInstanceTemplatePtrOutput() KubernetesNodeGroupInstanceTemplatePtrOutput
	ToKubernetesNodeGroupInstanceTemplatePtrOutputWithContext(context.Context) KubernetesNodeGroupInstanceTemplatePtrOutput
}

type kubernetesNodeGroupInstanceTemplatePtrType KubernetesNodeGroupInstanceTemplateArgs

func KubernetesNodeGroupInstanceTemplatePtr(v *KubernetesNodeGroupInstanceTemplateArgs) KubernetesNodeGroupInstanceTemplatePtrInput {
	return (*kubernetesNodeGroupInstanceTemplatePtrType)(v)
}

func (*kubernetesNodeGroupInstanceTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodeGroupInstanceTemplate)(nil)).Elem()
}

func (i *kubernetesNodeGroupInstanceTemplatePtrType) ToKubernetesNodeGroupInstanceTemplatePtrOutput() KubernetesNodeGroupInstanceTemplatePtrOutput {
	return i.ToKubernetesNodeGroupInstanceTemplatePtrOutputWithContext(context.Background())
}

func (i *kubernetesNodeGroupInstanceTemplatePtrType) ToKubernetesNodeGroupInstanceTemplatePtrOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupInstanceTemplatePtrOutput)
}

type KubernetesNodeGroupInstanceTemplateOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupInstanceTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupInstanceTemplate)(nil)).Elem()
}

func (o KubernetesNodeGroupInstanceTemplateOutput) ToKubernetesNodeGroupInstanceTemplateOutput() KubernetesNodeGroupInstanceTemplateOutput {
	return o
}

func (o KubernetesNodeGroupInstanceTemplateOutput) ToKubernetesNodeGroupInstanceTemplateOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplateOutput {
	return o
}

func (o KubernetesNodeGroupInstanceTemplateOutput) ToKubernetesNodeGroupInstanceTemplatePtrOutput() KubernetesNodeGroupInstanceTemplatePtrOutput {
	return o.ToKubernetesNodeGroupInstanceTemplatePtrOutputWithContext(context.Background())
}

func (o KubernetesNodeGroupInstanceTemplateOutput) ToKubernetesNodeGroupInstanceTemplatePtrOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplatePtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupInstanceTemplate) *KubernetesNodeGroupInstanceTemplate {
		return &v
	}).(KubernetesNodeGroupInstanceTemplatePtrOutput)
}

// The specifications for boot disks that will be attached to the instance. The structure is documented below.
func (o KubernetesNodeGroupInstanceTemplateOutput) BootDisk() KubernetesNodeGroupInstanceTemplateBootDiskPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupInstanceTemplate) *KubernetesNodeGroupInstanceTemplateBootDisk {
		return v.BootDisk
	}).(KubernetesNodeGroupInstanceTemplateBootDiskPtrOutput)
}

// The set of metadata `key:value` pairs assigned to this instance template. This includes custom metadata and predefined keys.
// * `resources.0.memory` - The memory size allocated to the instance.
// * `resources.0.cores` - Number of CPU cores allocated to the instance.
// * `resources.0.core_fraction` - Baseline core performance as a percent.
// * `resources.0.gpus` - Number of GPU cores allocated to the instance.
func (o KubernetesNodeGroupInstanceTemplateOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v KubernetesNodeGroupInstanceTemplate) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// A public address that can be used to access the internet over NAT.
//
// Deprecated: The 'nat' field has been deprecated. Please use 'nat under network_interface' instead.
func (o KubernetesNodeGroupInstanceTemplateOutput) Nat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupInstanceTemplate) *bool { return v.Nat }).(pulumi.BoolPtrOutput)
}

// An array with the network interfaces that will be attached to the instance. The structure is documented below.
func (o KubernetesNodeGroupInstanceTemplateOutput) NetworkInterfaces() KubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v KubernetesNodeGroupInstanceTemplate) []KubernetesNodeGroupInstanceTemplateNetworkInterface {
		return v.NetworkInterfaces
	}).(KubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput)
}

// The ID of the hardware platform configuration for the node group compute instances.
func (o KubernetesNodeGroupInstanceTemplateOutput) PlatformId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupInstanceTemplate) *string { return v.PlatformId }).(pulumi.StringPtrOutput)
}

func (o KubernetesNodeGroupInstanceTemplateOutput) Resources() KubernetesNodeGroupInstanceTemplateResourcesPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupInstanceTemplate) *KubernetesNodeGroupInstanceTemplateResources {
		return v.Resources
	}).(KubernetesNodeGroupInstanceTemplateResourcesPtrOutput)
}

// The scheduling policy for the instances in node group. The structure is documented below.
func (o KubernetesNodeGroupInstanceTemplateOutput) SchedulingPolicy() KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupInstanceTemplate) *KubernetesNodeGroupInstanceTemplateSchedulingPolicy {
		return v.SchedulingPolicy
	}).(KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput)
}

type KubernetesNodeGroupInstanceTemplatePtrOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupInstanceTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodeGroupInstanceTemplate)(nil)).Elem()
}

func (o KubernetesNodeGroupInstanceTemplatePtrOutput) ToKubernetesNodeGroupInstanceTemplatePtrOutput() KubernetesNodeGroupInstanceTemplatePtrOutput {
	return o
}

func (o KubernetesNodeGroupInstanceTemplatePtrOutput) ToKubernetesNodeGroupInstanceTemplatePtrOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplatePtrOutput {
	return o
}

func (o KubernetesNodeGroupInstanceTemplatePtrOutput) Elem() KubernetesNodeGroupInstanceTemplateOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupInstanceTemplate) KubernetesNodeGroupInstanceTemplate { return *v }).(KubernetesNodeGroupInstanceTemplateOutput)
}

// The specifications for boot disks that will be attached to the instance. The structure is documented below.
func (o KubernetesNodeGroupInstanceTemplatePtrOutput) BootDisk() KubernetesNodeGroupInstanceTemplateBootDiskPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupInstanceTemplate) *KubernetesNodeGroupInstanceTemplateBootDisk {
		if v == nil {
			return nil
		}
		return v.BootDisk
	}).(KubernetesNodeGroupInstanceTemplateBootDiskPtrOutput)
}

// The set of metadata `key:value` pairs assigned to this instance template. This includes custom metadata and predefined keys.
// * `resources.0.memory` - The memory size allocated to the instance.
// * `resources.0.cores` - Number of CPU cores allocated to the instance.
// * `resources.0.core_fraction` - Baseline core performance as a percent.
// * `resources.0.gpus` - Number of GPU cores allocated to the instance.
func (o KubernetesNodeGroupInstanceTemplatePtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupInstanceTemplate) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// A public address that can be used to access the internet over NAT.
//
// Deprecated: The 'nat' field has been deprecated. Please use 'nat under network_interface' instead.
func (o KubernetesNodeGroupInstanceTemplatePtrOutput) Nat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupInstanceTemplate) *bool {
		if v == nil {
			return nil
		}
		return v.Nat
	}).(pulumi.BoolPtrOutput)
}

// An array with the network interfaces that will be attached to the instance. The structure is documented below.
func (o KubernetesNodeGroupInstanceTemplatePtrOutput) NetworkInterfaces() KubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupInstanceTemplate) []KubernetesNodeGroupInstanceTemplateNetworkInterface {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(KubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput)
}

// The ID of the hardware platform configuration for the node group compute instances.
func (o KubernetesNodeGroupInstanceTemplatePtrOutput) PlatformId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupInstanceTemplate) *string {
		if v == nil {
			return nil
		}
		return v.PlatformId
	}).(pulumi.StringPtrOutput)
}

func (o KubernetesNodeGroupInstanceTemplatePtrOutput) Resources() KubernetesNodeGroupInstanceTemplateResourcesPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupInstanceTemplate) *KubernetesNodeGroupInstanceTemplateResources {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(KubernetesNodeGroupInstanceTemplateResourcesPtrOutput)
}

// The scheduling policy for the instances in node group. The structure is documented below.
func (o KubernetesNodeGroupInstanceTemplatePtrOutput) SchedulingPolicy() KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupInstanceTemplate) *KubernetesNodeGroupInstanceTemplateSchedulingPolicy {
		if v == nil {
			return nil
		}
		return v.SchedulingPolicy
	}).(KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput)
}

type KubernetesNodeGroupInstanceTemplateBootDisk struct {
	// The number of instances in the node group.
	Size *int `pulumi:"size"`
	// The disk type.
	Type *string `pulumi:"type"`
}

// KubernetesNodeGroupInstanceTemplateBootDiskInput is an input type that accepts KubernetesNodeGroupInstanceTemplateBootDiskArgs and KubernetesNodeGroupInstanceTemplateBootDiskOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupInstanceTemplateBootDiskInput` via:
//
//          KubernetesNodeGroupInstanceTemplateBootDiskArgs{...}
type KubernetesNodeGroupInstanceTemplateBootDiskInput interface {
	pulumi.Input

	ToKubernetesNodeGroupInstanceTemplateBootDiskOutput() KubernetesNodeGroupInstanceTemplateBootDiskOutput
	ToKubernetesNodeGroupInstanceTemplateBootDiskOutputWithContext(context.Context) KubernetesNodeGroupInstanceTemplateBootDiskOutput
}

type KubernetesNodeGroupInstanceTemplateBootDiskArgs struct {
	// The number of instances in the node group.
	Size pulumi.IntPtrInput `pulumi:"size"`
	// The disk type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KubernetesNodeGroupInstanceTemplateBootDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupInstanceTemplateBootDisk)(nil)).Elem()
}

func (i KubernetesNodeGroupInstanceTemplateBootDiskArgs) ToKubernetesNodeGroupInstanceTemplateBootDiskOutput() KubernetesNodeGroupInstanceTemplateBootDiskOutput {
	return i.ToKubernetesNodeGroupInstanceTemplateBootDiskOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupInstanceTemplateBootDiskArgs) ToKubernetesNodeGroupInstanceTemplateBootDiskOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplateBootDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupInstanceTemplateBootDiskOutput)
}

func (i KubernetesNodeGroupInstanceTemplateBootDiskArgs) ToKubernetesNodeGroupInstanceTemplateBootDiskPtrOutput() KubernetesNodeGroupInstanceTemplateBootDiskPtrOutput {
	return i.ToKubernetesNodeGroupInstanceTemplateBootDiskPtrOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupInstanceTemplateBootDiskArgs) ToKubernetesNodeGroupInstanceTemplateBootDiskPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplateBootDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupInstanceTemplateBootDiskOutput).ToKubernetesNodeGroupInstanceTemplateBootDiskPtrOutputWithContext(ctx)
}

// KubernetesNodeGroupInstanceTemplateBootDiskPtrInput is an input type that accepts KubernetesNodeGroupInstanceTemplateBootDiskArgs, KubernetesNodeGroupInstanceTemplateBootDiskPtr and KubernetesNodeGroupInstanceTemplateBootDiskPtrOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupInstanceTemplateBootDiskPtrInput` via:
//
//          KubernetesNodeGroupInstanceTemplateBootDiskArgs{...}
//
//  or:
//
//          nil
type KubernetesNodeGroupInstanceTemplateBootDiskPtrInput interface {
	pulumi.Input

	ToKubernetesNodeGroupInstanceTemplateBootDiskPtrOutput() KubernetesNodeGroupInstanceTemplateBootDiskPtrOutput
	ToKubernetesNodeGroupInstanceTemplateBootDiskPtrOutputWithContext(context.Context) KubernetesNodeGroupInstanceTemplateBootDiskPtrOutput
}

type kubernetesNodeGroupInstanceTemplateBootDiskPtrType KubernetesNodeGroupInstanceTemplateBootDiskArgs

func KubernetesNodeGroupInstanceTemplateBootDiskPtr(v *KubernetesNodeGroupInstanceTemplateBootDiskArgs) KubernetesNodeGroupInstanceTemplateBootDiskPtrInput {
	return (*kubernetesNodeGroupInstanceTemplateBootDiskPtrType)(v)
}

func (*kubernetesNodeGroupInstanceTemplateBootDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodeGroupInstanceTemplateBootDisk)(nil)).Elem()
}

func (i *kubernetesNodeGroupInstanceTemplateBootDiskPtrType) ToKubernetesNodeGroupInstanceTemplateBootDiskPtrOutput() KubernetesNodeGroupInstanceTemplateBootDiskPtrOutput {
	return i.ToKubernetesNodeGroupInstanceTemplateBootDiskPtrOutputWithContext(context.Background())
}

func (i *kubernetesNodeGroupInstanceTemplateBootDiskPtrType) ToKubernetesNodeGroupInstanceTemplateBootDiskPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplateBootDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupInstanceTemplateBootDiskPtrOutput)
}

type KubernetesNodeGroupInstanceTemplateBootDiskOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupInstanceTemplateBootDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupInstanceTemplateBootDisk)(nil)).Elem()
}

func (o KubernetesNodeGroupInstanceTemplateBootDiskOutput) ToKubernetesNodeGroupInstanceTemplateBootDiskOutput() KubernetesNodeGroupInstanceTemplateBootDiskOutput {
	return o
}

func (o KubernetesNodeGroupInstanceTemplateBootDiskOutput) ToKubernetesNodeGroupInstanceTemplateBootDiskOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplateBootDiskOutput {
	return o
}

func (o KubernetesNodeGroupInstanceTemplateBootDiskOutput) ToKubernetesNodeGroupInstanceTemplateBootDiskPtrOutput() KubernetesNodeGroupInstanceTemplateBootDiskPtrOutput {
	return o.ToKubernetesNodeGroupInstanceTemplateBootDiskPtrOutputWithContext(context.Background())
}

func (o KubernetesNodeGroupInstanceTemplateBootDiskOutput) ToKubernetesNodeGroupInstanceTemplateBootDiskPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplateBootDiskPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupInstanceTemplateBootDisk) *KubernetesNodeGroupInstanceTemplateBootDisk {
		return &v
	}).(KubernetesNodeGroupInstanceTemplateBootDiskPtrOutput)
}

// The number of instances in the node group.
func (o KubernetesNodeGroupInstanceTemplateBootDiskOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupInstanceTemplateBootDisk) *int { return v.Size }).(pulumi.IntPtrOutput)
}

// The disk type.
func (o KubernetesNodeGroupInstanceTemplateBootDiskOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupInstanceTemplateBootDisk) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KubernetesNodeGroupInstanceTemplateBootDiskPtrOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupInstanceTemplateBootDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodeGroupInstanceTemplateBootDisk)(nil)).Elem()
}

func (o KubernetesNodeGroupInstanceTemplateBootDiskPtrOutput) ToKubernetesNodeGroupInstanceTemplateBootDiskPtrOutput() KubernetesNodeGroupInstanceTemplateBootDiskPtrOutput {
	return o
}

func (o KubernetesNodeGroupInstanceTemplateBootDiskPtrOutput) ToKubernetesNodeGroupInstanceTemplateBootDiskPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplateBootDiskPtrOutput {
	return o
}

func (o KubernetesNodeGroupInstanceTemplateBootDiskPtrOutput) Elem() KubernetesNodeGroupInstanceTemplateBootDiskOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupInstanceTemplateBootDisk) KubernetesNodeGroupInstanceTemplateBootDisk {
		return *v
	}).(KubernetesNodeGroupInstanceTemplateBootDiskOutput)
}

// The number of instances in the node group.
func (o KubernetesNodeGroupInstanceTemplateBootDiskPtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupInstanceTemplateBootDisk) *int {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.IntPtrOutput)
}

// The disk type.
func (o KubernetesNodeGroupInstanceTemplateBootDiskPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupInstanceTemplateBootDisk) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type KubernetesNodeGroupInstanceTemplateNetworkInterface struct {
	// A public address that can be used to access the internet over NAT.
	Nat *bool `pulumi:"nat"`
	// Security group ids for network interface.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The IDs of the subnets.
	SubnetIds []string `pulumi:"subnetIds"`
}

// KubernetesNodeGroupInstanceTemplateNetworkInterfaceInput is an input type that accepts KubernetesNodeGroupInstanceTemplateNetworkInterfaceArgs and KubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupInstanceTemplateNetworkInterfaceInput` via:
//
//          KubernetesNodeGroupInstanceTemplateNetworkInterfaceArgs{...}
type KubernetesNodeGroupInstanceTemplateNetworkInterfaceInput interface {
	pulumi.Input

	ToKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput() KubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput
	ToKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutputWithContext(context.Context) KubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput
}

type KubernetesNodeGroupInstanceTemplateNetworkInterfaceArgs struct {
	// A public address that can be used to access the internet over NAT.
	Nat pulumi.BoolPtrInput `pulumi:"nat"`
	// Security group ids for network interface.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The IDs of the subnets.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
}

func (KubernetesNodeGroupInstanceTemplateNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupInstanceTemplateNetworkInterface)(nil)).Elem()
}

func (i KubernetesNodeGroupInstanceTemplateNetworkInterfaceArgs) ToKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput() KubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput {
	return i.ToKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupInstanceTemplateNetworkInterfaceArgs) ToKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput)
}

// KubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayInput is an input type that accepts KubernetesNodeGroupInstanceTemplateNetworkInterfaceArray and KubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayInput` via:
//
//          KubernetesNodeGroupInstanceTemplateNetworkInterfaceArray{ KubernetesNodeGroupInstanceTemplateNetworkInterfaceArgs{...} }
type KubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput() KubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput
	ToKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutputWithContext(context.Context) KubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput
}

type KubernetesNodeGroupInstanceTemplateNetworkInterfaceArray []KubernetesNodeGroupInstanceTemplateNetworkInterfaceInput

func (KubernetesNodeGroupInstanceTemplateNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesNodeGroupInstanceTemplateNetworkInterface)(nil)).Elem()
}

func (i KubernetesNodeGroupInstanceTemplateNetworkInterfaceArray) ToKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput() KubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput {
	return i.ToKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupInstanceTemplateNetworkInterfaceArray) ToKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput)
}

type KubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupInstanceTemplateNetworkInterface)(nil)).Elem()
}

func (o KubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput) ToKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput() KubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput {
	return o
}

func (o KubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput) ToKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput {
	return o
}

// A public address that can be used to access the internet over NAT.
func (o KubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput) Nat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupInstanceTemplateNetworkInterface) *bool { return v.Nat }).(pulumi.BoolPtrOutput)
}

// Security group ids for network interface.
func (o KubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesNodeGroupInstanceTemplateNetworkInterface) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The IDs of the subnets.
func (o KubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesNodeGroupInstanceTemplateNetworkInterface) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

type KubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesNodeGroupInstanceTemplateNetworkInterface)(nil)).Elem()
}

func (o KubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput) ToKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput() KubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput {
	return o
}

func (o KubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput) ToKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput {
	return o
}

func (o KubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) KubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesNodeGroupInstanceTemplateNetworkInterface {
		return vs[0].([]KubernetesNodeGroupInstanceTemplateNetworkInterface)[vs[1].(int)]
	}).(KubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput)
}

type KubernetesNodeGroupInstanceTemplateResources struct {
	CoreFraction *int     `pulumi:"coreFraction"`
	Cores        *int     `pulumi:"cores"`
	Gpus         *int     `pulumi:"gpus"`
	Memory       *float64 `pulumi:"memory"`
}

// KubernetesNodeGroupInstanceTemplateResourcesInput is an input type that accepts KubernetesNodeGroupInstanceTemplateResourcesArgs and KubernetesNodeGroupInstanceTemplateResourcesOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupInstanceTemplateResourcesInput` via:
//
//          KubernetesNodeGroupInstanceTemplateResourcesArgs{...}
type KubernetesNodeGroupInstanceTemplateResourcesInput interface {
	pulumi.Input

	ToKubernetesNodeGroupInstanceTemplateResourcesOutput() KubernetesNodeGroupInstanceTemplateResourcesOutput
	ToKubernetesNodeGroupInstanceTemplateResourcesOutputWithContext(context.Context) KubernetesNodeGroupInstanceTemplateResourcesOutput
}

type KubernetesNodeGroupInstanceTemplateResourcesArgs struct {
	CoreFraction pulumi.IntPtrInput     `pulumi:"coreFraction"`
	Cores        pulumi.IntPtrInput     `pulumi:"cores"`
	Gpus         pulumi.IntPtrInput     `pulumi:"gpus"`
	Memory       pulumi.Float64PtrInput `pulumi:"memory"`
}

func (KubernetesNodeGroupInstanceTemplateResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupInstanceTemplateResources)(nil)).Elem()
}

func (i KubernetesNodeGroupInstanceTemplateResourcesArgs) ToKubernetesNodeGroupInstanceTemplateResourcesOutput() KubernetesNodeGroupInstanceTemplateResourcesOutput {
	return i.ToKubernetesNodeGroupInstanceTemplateResourcesOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupInstanceTemplateResourcesArgs) ToKubernetesNodeGroupInstanceTemplateResourcesOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplateResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupInstanceTemplateResourcesOutput)
}

func (i KubernetesNodeGroupInstanceTemplateResourcesArgs) ToKubernetesNodeGroupInstanceTemplateResourcesPtrOutput() KubernetesNodeGroupInstanceTemplateResourcesPtrOutput {
	return i.ToKubernetesNodeGroupInstanceTemplateResourcesPtrOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupInstanceTemplateResourcesArgs) ToKubernetesNodeGroupInstanceTemplateResourcesPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplateResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupInstanceTemplateResourcesOutput).ToKubernetesNodeGroupInstanceTemplateResourcesPtrOutputWithContext(ctx)
}

// KubernetesNodeGroupInstanceTemplateResourcesPtrInput is an input type that accepts KubernetesNodeGroupInstanceTemplateResourcesArgs, KubernetesNodeGroupInstanceTemplateResourcesPtr and KubernetesNodeGroupInstanceTemplateResourcesPtrOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupInstanceTemplateResourcesPtrInput` via:
//
//          KubernetesNodeGroupInstanceTemplateResourcesArgs{...}
//
//  or:
//
//          nil
type KubernetesNodeGroupInstanceTemplateResourcesPtrInput interface {
	pulumi.Input

	ToKubernetesNodeGroupInstanceTemplateResourcesPtrOutput() KubernetesNodeGroupInstanceTemplateResourcesPtrOutput
	ToKubernetesNodeGroupInstanceTemplateResourcesPtrOutputWithContext(context.Context) KubernetesNodeGroupInstanceTemplateResourcesPtrOutput
}

type kubernetesNodeGroupInstanceTemplateResourcesPtrType KubernetesNodeGroupInstanceTemplateResourcesArgs

func KubernetesNodeGroupInstanceTemplateResourcesPtr(v *KubernetesNodeGroupInstanceTemplateResourcesArgs) KubernetesNodeGroupInstanceTemplateResourcesPtrInput {
	return (*kubernetesNodeGroupInstanceTemplateResourcesPtrType)(v)
}

func (*kubernetesNodeGroupInstanceTemplateResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodeGroupInstanceTemplateResources)(nil)).Elem()
}

func (i *kubernetesNodeGroupInstanceTemplateResourcesPtrType) ToKubernetesNodeGroupInstanceTemplateResourcesPtrOutput() KubernetesNodeGroupInstanceTemplateResourcesPtrOutput {
	return i.ToKubernetesNodeGroupInstanceTemplateResourcesPtrOutputWithContext(context.Background())
}

func (i *kubernetesNodeGroupInstanceTemplateResourcesPtrType) ToKubernetesNodeGroupInstanceTemplateResourcesPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplateResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupInstanceTemplateResourcesPtrOutput)
}

type KubernetesNodeGroupInstanceTemplateResourcesOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupInstanceTemplateResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupInstanceTemplateResources)(nil)).Elem()
}

func (o KubernetesNodeGroupInstanceTemplateResourcesOutput) ToKubernetesNodeGroupInstanceTemplateResourcesOutput() KubernetesNodeGroupInstanceTemplateResourcesOutput {
	return o
}

func (o KubernetesNodeGroupInstanceTemplateResourcesOutput) ToKubernetesNodeGroupInstanceTemplateResourcesOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplateResourcesOutput {
	return o
}

func (o KubernetesNodeGroupInstanceTemplateResourcesOutput) ToKubernetesNodeGroupInstanceTemplateResourcesPtrOutput() KubernetesNodeGroupInstanceTemplateResourcesPtrOutput {
	return o.ToKubernetesNodeGroupInstanceTemplateResourcesPtrOutputWithContext(context.Background())
}

func (o KubernetesNodeGroupInstanceTemplateResourcesOutput) ToKubernetesNodeGroupInstanceTemplateResourcesPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplateResourcesPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupInstanceTemplateResources) *KubernetesNodeGroupInstanceTemplateResources {
		return &v
	}).(KubernetesNodeGroupInstanceTemplateResourcesPtrOutput)
}
func (o KubernetesNodeGroupInstanceTemplateResourcesOutput) CoreFraction() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupInstanceTemplateResources) *int { return v.CoreFraction }).(pulumi.IntPtrOutput)
}

func (o KubernetesNodeGroupInstanceTemplateResourcesOutput) Cores() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupInstanceTemplateResources) *int { return v.Cores }).(pulumi.IntPtrOutput)
}

func (o KubernetesNodeGroupInstanceTemplateResourcesOutput) Gpus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupInstanceTemplateResources) *int { return v.Gpus }).(pulumi.IntPtrOutput)
}

func (o KubernetesNodeGroupInstanceTemplateResourcesOutput) Memory() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupInstanceTemplateResources) *float64 { return v.Memory }).(pulumi.Float64PtrOutput)
}

type KubernetesNodeGroupInstanceTemplateResourcesPtrOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupInstanceTemplateResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodeGroupInstanceTemplateResources)(nil)).Elem()
}

func (o KubernetesNodeGroupInstanceTemplateResourcesPtrOutput) ToKubernetesNodeGroupInstanceTemplateResourcesPtrOutput() KubernetesNodeGroupInstanceTemplateResourcesPtrOutput {
	return o
}

func (o KubernetesNodeGroupInstanceTemplateResourcesPtrOutput) ToKubernetesNodeGroupInstanceTemplateResourcesPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplateResourcesPtrOutput {
	return o
}

func (o KubernetesNodeGroupInstanceTemplateResourcesPtrOutput) Elem() KubernetesNodeGroupInstanceTemplateResourcesOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupInstanceTemplateResources) KubernetesNodeGroupInstanceTemplateResources {
		return *v
	}).(KubernetesNodeGroupInstanceTemplateResourcesOutput)
}

func (o KubernetesNodeGroupInstanceTemplateResourcesPtrOutput) CoreFraction() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupInstanceTemplateResources) *int {
		if v == nil {
			return nil
		}
		return v.CoreFraction
	}).(pulumi.IntPtrOutput)
}

func (o KubernetesNodeGroupInstanceTemplateResourcesPtrOutput) Cores() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupInstanceTemplateResources) *int {
		if v == nil {
			return nil
		}
		return v.Cores
	}).(pulumi.IntPtrOutput)
}

func (o KubernetesNodeGroupInstanceTemplateResourcesPtrOutput) Gpus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupInstanceTemplateResources) *int {
		if v == nil {
			return nil
		}
		return v.Gpus
	}).(pulumi.IntPtrOutput)
}

func (o KubernetesNodeGroupInstanceTemplateResourcesPtrOutput) Memory() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupInstanceTemplateResources) *float64 {
		if v == nil {
			return nil
		}
		return v.Memory
	}).(pulumi.Float64PtrOutput)
}

type KubernetesNodeGroupInstanceTemplateSchedulingPolicy struct {
	// Specifies if the instance is preemptible. Defaults to false.
	Preemptible *bool `pulumi:"preemptible"`
}

// KubernetesNodeGroupInstanceTemplateSchedulingPolicyInput is an input type that accepts KubernetesNodeGroupInstanceTemplateSchedulingPolicyArgs and KubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupInstanceTemplateSchedulingPolicyInput` via:
//
//          KubernetesNodeGroupInstanceTemplateSchedulingPolicyArgs{...}
type KubernetesNodeGroupInstanceTemplateSchedulingPolicyInput interface {
	pulumi.Input

	ToKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput() KubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput
	ToKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutputWithContext(context.Context) KubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput
}

type KubernetesNodeGroupInstanceTemplateSchedulingPolicyArgs struct {
	// Specifies if the instance is preemptible. Defaults to false.
	Preemptible pulumi.BoolPtrInput `pulumi:"preemptible"`
}

func (KubernetesNodeGroupInstanceTemplateSchedulingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupInstanceTemplateSchedulingPolicy)(nil)).Elem()
}

func (i KubernetesNodeGroupInstanceTemplateSchedulingPolicyArgs) ToKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput() KubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput {
	return i.ToKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupInstanceTemplateSchedulingPolicyArgs) ToKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput)
}

func (i KubernetesNodeGroupInstanceTemplateSchedulingPolicyArgs) ToKubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput() KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput {
	return i.ToKubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupInstanceTemplateSchedulingPolicyArgs) ToKubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput).ToKubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutputWithContext(ctx)
}

// KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrInput is an input type that accepts KubernetesNodeGroupInstanceTemplateSchedulingPolicyArgs, KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtr and KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrInput` via:
//
//          KubernetesNodeGroupInstanceTemplateSchedulingPolicyArgs{...}
//
//  or:
//
//          nil
type KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrInput interface {
	pulumi.Input

	ToKubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput() KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput
	ToKubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutputWithContext(context.Context) KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput
}

type kubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrType KubernetesNodeGroupInstanceTemplateSchedulingPolicyArgs

func KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtr(v *KubernetesNodeGroupInstanceTemplateSchedulingPolicyArgs) KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrInput {
	return (*kubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrType)(v)
}

func (*kubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodeGroupInstanceTemplateSchedulingPolicy)(nil)).Elem()
}

func (i *kubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrType) ToKubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput() KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput {
	return i.ToKubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutputWithContext(context.Background())
}

func (i *kubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrType) ToKubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput)
}

type KubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupInstanceTemplateSchedulingPolicy)(nil)).Elem()
}

func (o KubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput) ToKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput() KubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput {
	return o
}

func (o KubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput) ToKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput {
	return o
}

func (o KubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput) ToKubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput() KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput {
	return o.ToKubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutputWithContext(context.Background())
}

func (o KubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput) ToKubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupInstanceTemplateSchedulingPolicy) *KubernetesNodeGroupInstanceTemplateSchedulingPolicy {
		return &v
	}).(KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput)
}

// Specifies if the instance is preemptible. Defaults to false.
func (o KubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupInstanceTemplateSchedulingPolicy) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

type KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodeGroupInstanceTemplateSchedulingPolicy)(nil)).Elem()
}

func (o KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput) ToKubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput() KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput {
	return o
}

func (o KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput) ToKubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput {
	return o
}

func (o KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput) Elem() KubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupInstanceTemplateSchedulingPolicy) KubernetesNodeGroupInstanceTemplateSchedulingPolicy {
		return *v
	}).(KubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput)
}

// Specifies if the instance is preemptible. Defaults to false.
func (o KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupInstanceTemplateSchedulingPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.Preemptible
	}).(pulumi.BoolPtrOutput)
}

type KubernetesNodeGroupMaintenancePolicy struct {
	// Boolean flag that specifies if node group can be repaired automatically. When omitted, default value is TRUE.
	AutoRepair bool `pulumi:"autoRepair"`
	// Boolean flag that specifies if node group can be upgraded automatically. When omitted, default value is TRUE.
	AutoUpgrade bool `pulumi:"autoUpgrade"`
	// (Computed) Set of day intervals, when maintenance is allowed for this node group. When omitted, it defaults to any time.
	MaintenanceWindows []KubernetesNodeGroupMaintenancePolicyMaintenanceWindow `pulumi:"maintenanceWindows"`
}

// KubernetesNodeGroupMaintenancePolicyInput is an input type that accepts KubernetesNodeGroupMaintenancePolicyArgs and KubernetesNodeGroupMaintenancePolicyOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupMaintenancePolicyInput` via:
//
//          KubernetesNodeGroupMaintenancePolicyArgs{...}
type KubernetesNodeGroupMaintenancePolicyInput interface {
	pulumi.Input

	ToKubernetesNodeGroupMaintenancePolicyOutput() KubernetesNodeGroupMaintenancePolicyOutput
	ToKubernetesNodeGroupMaintenancePolicyOutputWithContext(context.Context) KubernetesNodeGroupMaintenancePolicyOutput
}

type KubernetesNodeGroupMaintenancePolicyArgs struct {
	// Boolean flag that specifies if node group can be repaired automatically. When omitted, default value is TRUE.
	AutoRepair pulumi.BoolInput `pulumi:"autoRepair"`
	// Boolean flag that specifies if node group can be upgraded automatically. When omitted, default value is TRUE.
	AutoUpgrade pulumi.BoolInput `pulumi:"autoUpgrade"`
	// (Computed) Set of day intervals, when maintenance is allowed for this node group. When omitted, it defaults to any time.
	MaintenanceWindows KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayInput `pulumi:"maintenanceWindows"`
}

func (KubernetesNodeGroupMaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupMaintenancePolicy)(nil)).Elem()
}

func (i KubernetesNodeGroupMaintenancePolicyArgs) ToKubernetesNodeGroupMaintenancePolicyOutput() KubernetesNodeGroupMaintenancePolicyOutput {
	return i.ToKubernetesNodeGroupMaintenancePolicyOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupMaintenancePolicyArgs) ToKubernetesNodeGroupMaintenancePolicyOutputWithContext(ctx context.Context) KubernetesNodeGroupMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupMaintenancePolicyOutput)
}

func (i KubernetesNodeGroupMaintenancePolicyArgs) ToKubernetesNodeGroupMaintenancePolicyPtrOutput() KubernetesNodeGroupMaintenancePolicyPtrOutput {
	return i.ToKubernetesNodeGroupMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupMaintenancePolicyArgs) ToKubernetesNodeGroupMaintenancePolicyPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupMaintenancePolicyOutput).ToKubernetesNodeGroupMaintenancePolicyPtrOutputWithContext(ctx)
}

// KubernetesNodeGroupMaintenancePolicyPtrInput is an input type that accepts KubernetesNodeGroupMaintenancePolicyArgs, KubernetesNodeGroupMaintenancePolicyPtr and KubernetesNodeGroupMaintenancePolicyPtrOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupMaintenancePolicyPtrInput` via:
//
//          KubernetesNodeGroupMaintenancePolicyArgs{...}
//
//  or:
//
//          nil
type KubernetesNodeGroupMaintenancePolicyPtrInput interface {
	pulumi.Input

	ToKubernetesNodeGroupMaintenancePolicyPtrOutput() KubernetesNodeGroupMaintenancePolicyPtrOutput
	ToKubernetesNodeGroupMaintenancePolicyPtrOutputWithContext(context.Context) KubernetesNodeGroupMaintenancePolicyPtrOutput
}

type kubernetesNodeGroupMaintenancePolicyPtrType KubernetesNodeGroupMaintenancePolicyArgs

func KubernetesNodeGroupMaintenancePolicyPtr(v *KubernetesNodeGroupMaintenancePolicyArgs) KubernetesNodeGroupMaintenancePolicyPtrInput {
	return (*kubernetesNodeGroupMaintenancePolicyPtrType)(v)
}

func (*kubernetesNodeGroupMaintenancePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodeGroupMaintenancePolicy)(nil)).Elem()
}

func (i *kubernetesNodeGroupMaintenancePolicyPtrType) ToKubernetesNodeGroupMaintenancePolicyPtrOutput() KubernetesNodeGroupMaintenancePolicyPtrOutput {
	return i.ToKubernetesNodeGroupMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i *kubernetesNodeGroupMaintenancePolicyPtrType) ToKubernetesNodeGroupMaintenancePolicyPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupMaintenancePolicyPtrOutput)
}

type KubernetesNodeGroupMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupMaintenancePolicy)(nil)).Elem()
}

func (o KubernetesNodeGroupMaintenancePolicyOutput) ToKubernetesNodeGroupMaintenancePolicyOutput() KubernetesNodeGroupMaintenancePolicyOutput {
	return o
}

func (o KubernetesNodeGroupMaintenancePolicyOutput) ToKubernetesNodeGroupMaintenancePolicyOutputWithContext(ctx context.Context) KubernetesNodeGroupMaintenancePolicyOutput {
	return o
}

func (o KubernetesNodeGroupMaintenancePolicyOutput) ToKubernetesNodeGroupMaintenancePolicyPtrOutput() KubernetesNodeGroupMaintenancePolicyPtrOutput {
	return o.ToKubernetesNodeGroupMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (o KubernetesNodeGroupMaintenancePolicyOutput) ToKubernetesNodeGroupMaintenancePolicyPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupMaintenancePolicyPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupMaintenancePolicy) *KubernetesNodeGroupMaintenancePolicy {
		return &v
	}).(KubernetesNodeGroupMaintenancePolicyPtrOutput)
}

// Boolean flag that specifies if node group can be repaired automatically. When omitted, default value is TRUE.
func (o KubernetesNodeGroupMaintenancePolicyOutput) AutoRepair() pulumi.BoolOutput {
	return o.ApplyT(func(v KubernetesNodeGroupMaintenancePolicy) bool { return v.AutoRepair }).(pulumi.BoolOutput)
}

// Boolean flag that specifies if node group can be upgraded automatically. When omitted, default value is TRUE.
func (o KubernetesNodeGroupMaintenancePolicyOutput) AutoUpgrade() pulumi.BoolOutput {
	return o.ApplyT(func(v KubernetesNodeGroupMaintenancePolicy) bool { return v.AutoUpgrade }).(pulumi.BoolOutput)
}

// (Computed) Set of day intervals, when maintenance is allowed for this node group. When omitted, it defaults to any time.
func (o KubernetesNodeGroupMaintenancePolicyOutput) MaintenanceWindows() KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v KubernetesNodeGroupMaintenancePolicy) []KubernetesNodeGroupMaintenancePolicyMaintenanceWindow {
		return v.MaintenanceWindows
	}).(KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput)
}

type KubernetesNodeGroupMaintenancePolicyPtrOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupMaintenancePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodeGroupMaintenancePolicy)(nil)).Elem()
}

func (o KubernetesNodeGroupMaintenancePolicyPtrOutput) ToKubernetesNodeGroupMaintenancePolicyPtrOutput() KubernetesNodeGroupMaintenancePolicyPtrOutput {
	return o
}

func (o KubernetesNodeGroupMaintenancePolicyPtrOutput) ToKubernetesNodeGroupMaintenancePolicyPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupMaintenancePolicyPtrOutput {
	return o
}

func (o KubernetesNodeGroupMaintenancePolicyPtrOutput) Elem() KubernetesNodeGroupMaintenancePolicyOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupMaintenancePolicy) KubernetesNodeGroupMaintenancePolicy { return *v }).(KubernetesNodeGroupMaintenancePolicyOutput)
}

// Boolean flag that specifies if node group can be repaired automatically. When omitted, default value is TRUE.
func (o KubernetesNodeGroupMaintenancePolicyPtrOutput) AutoRepair() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupMaintenancePolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.AutoRepair
	}).(pulumi.BoolPtrOutput)
}

// Boolean flag that specifies if node group can be upgraded automatically. When omitted, default value is TRUE.
func (o KubernetesNodeGroupMaintenancePolicyPtrOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupMaintenancePolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.AutoUpgrade
	}).(pulumi.BoolPtrOutput)
}

// (Computed) Set of day intervals, when maintenance is allowed for this node group. When omitted, it defaults to any time.
func (o KubernetesNodeGroupMaintenancePolicyPtrOutput) MaintenanceWindows() KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupMaintenancePolicy) []KubernetesNodeGroupMaintenancePolicyMaintenanceWindow {
		if v == nil {
			return nil
		}
		return v.MaintenanceWindows
	}).(KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput)
}

type KubernetesNodeGroupMaintenancePolicyMaintenanceWindow struct {
	Day       *string `pulumi:"day"`
	Duration  string  `pulumi:"duration"`
	StartTime string  `pulumi:"startTime"`
}

// KubernetesNodeGroupMaintenancePolicyMaintenanceWindowInput is an input type that accepts KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArgs and KubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupMaintenancePolicyMaintenanceWindowInput` via:
//
//          KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArgs{...}
type KubernetesNodeGroupMaintenancePolicyMaintenanceWindowInput interface {
	pulumi.Input

	ToKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput() KubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput
	ToKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutputWithContext(context.Context) KubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput
}

type KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArgs struct {
	Day       pulumi.StringPtrInput `pulumi:"day"`
	Duration  pulumi.StringInput    `pulumi:"duration"`
	StartTime pulumi.StringInput    `pulumi:"startTime"`
}

func (KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupMaintenancePolicyMaintenanceWindow)(nil)).Elem()
}

func (i KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArgs) ToKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput() KubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput {
	return i.ToKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArgs) ToKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutputWithContext(ctx context.Context) KubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput)
}

// KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayInput is an input type that accepts KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArray and KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayInput` via:
//
//          KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArray{ KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArgs{...} }
type KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput() KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput
	ToKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutputWithContext(context.Context) KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput
}

type KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArray []KubernetesNodeGroupMaintenancePolicyMaintenanceWindowInput

func (KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesNodeGroupMaintenancePolicyMaintenanceWindow)(nil)).Elem()
}

func (i KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArray) ToKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput() KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput {
	return i.ToKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArray) ToKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutputWithContext(ctx context.Context) KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput)
}

type KubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupMaintenancePolicyMaintenanceWindow)(nil)).Elem()
}

func (o KubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput) ToKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput() KubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput {
	return o
}

func (o KubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput) ToKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutputWithContext(ctx context.Context) KubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput {
	return o
}

func (o KubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput) Day() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupMaintenancePolicyMaintenanceWindow) *string { return v.Day }).(pulumi.StringPtrOutput)
}

func (o KubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesNodeGroupMaintenancePolicyMaintenanceWindow) string { return v.Duration }).(pulumi.StringOutput)
}

func (o KubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesNodeGroupMaintenancePolicyMaintenanceWindow) string { return v.StartTime }).(pulumi.StringOutput)
}

type KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesNodeGroupMaintenancePolicyMaintenanceWindow)(nil)).Elem()
}

func (o KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput) ToKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput() KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput {
	return o
}

func (o KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput) ToKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutputWithContext(ctx context.Context) KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput {
	return o
}

func (o KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) KubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesNodeGroupMaintenancePolicyMaintenanceWindow {
		return vs[0].([]KubernetesNodeGroupMaintenancePolicyMaintenanceWindow)[vs[1].(int)]
	}).(KubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput)
}

type KubernetesNodeGroupScalePolicy struct {
	// Scale policy for an autoscaled node group. The structure is documented below.
	AutoScale *KubernetesNodeGroupScalePolicyAutoScale `pulumi:"autoScale"`
	// Scale policy for a fixed scale node group. The structure is documented below.
	FixedScale *KubernetesNodeGroupScalePolicyFixedScale `pulumi:"fixedScale"`
}

// KubernetesNodeGroupScalePolicyInput is an input type that accepts KubernetesNodeGroupScalePolicyArgs and KubernetesNodeGroupScalePolicyOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupScalePolicyInput` via:
//
//          KubernetesNodeGroupScalePolicyArgs{...}
type KubernetesNodeGroupScalePolicyInput interface {
	pulumi.Input

	ToKubernetesNodeGroupScalePolicyOutput() KubernetesNodeGroupScalePolicyOutput
	ToKubernetesNodeGroupScalePolicyOutputWithContext(context.Context) KubernetesNodeGroupScalePolicyOutput
}

type KubernetesNodeGroupScalePolicyArgs struct {
	// Scale policy for an autoscaled node group. The structure is documented below.
	AutoScale KubernetesNodeGroupScalePolicyAutoScalePtrInput `pulumi:"autoScale"`
	// Scale policy for a fixed scale node group. The structure is documented below.
	FixedScale KubernetesNodeGroupScalePolicyFixedScalePtrInput `pulumi:"fixedScale"`
}

func (KubernetesNodeGroupScalePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupScalePolicy)(nil)).Elem()
}

func (i KubernetesNodeGroupScalePolicyArgs) ToKubernetesNodeGroupScalePolicyOutput() KubernetesNodeGroupScalePolicyOutput {
	return i.ToKubernetesNodeGroupScalePolicyOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupScalePolicyArgs) ToKubernetesNodeGroupScalePolicyOutputWithContext(ctx context.Context) KubernetesNodeGroupScalePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupScalePolicyOutput)
}

func (i KubernetesNodeGroupScalePolicyArgs) ToKubernetesNodeGroupScalePolicyPtrOutput() KubernetesNodeGroupScalePolicyPtrOutput {
	return i.ToKubernetesNodeGroupScalePolicyPtrOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupScalePolicyArgs) ToKubernetesNodeGroupScalePolicyPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupScalePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupScalePolicyOutput).ToKubernetesNodeGroupScalePolicyPtrOutputWithContext(ctx)
}

// KubernetesNodeGroupScalePolicyPtrInput is an input type that accepts KubernetesNodeGroupScalePolicyArgs, KubernetesNodeGroupScalePolicyPtr and KubernetesNodeGroupScalePolicyPtrOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupScalePolicyPtrInput` via:
//
//          KubernetesNodeGroupScalePolicyArgs{...}
//
//  or:
//
//          nil
type KubernetesNodeGroupScalePolicyPtrInput interface {
	pulumi.Input

	ToKubernetesNodeGroupScalePolicyPtrOutput() KubernetesNodeGroupScalePolicyPtrOutput
	ToKubernetesNodeGroupScalePolicyPtrOutputWithContext(context.Context) KubernetesNodeGroupScalePolicyPtrOutput
}

type kubernetesNodeGroupScalePolicyPtrType KubernetesNodeGroupScalePolicyArgs

func KubernetesNodeGroupScalePolicyPtr(v *KubernetesNodeGroupScalePolicyArgs) KubernetesNodeGroupScalePolicyPtrInput {
	return (*kubernetesNodeGroupScalePolicyPtrType)(v)
}

func (*kubernetesNodeGroupScalePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodeGroupScalePolicy)(nil)).Elem()
}

func (i *kubernetesNodeGroupScalePolicyPtrType) ToKubernetesNodeGroupScalePolicyPtrOutput() KubernetesNodeGroupScalePolicyPtrOutput {
	return i.ToKubernetesNodeGroupScalePolicyPtrOutputWithContext(context.Background())
}

func (i *kubernetesNodeGroupScalePolicyPtrType) ToKubernetesNodeGroupScalePolicyPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupScalePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupScalePolicyPtrOutput)
}

type KubernetesNodeGroupScalePolicyOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupScalePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupScalePolicy)(nil)).Elem()
}

func (o KubernetesNodeGroupScalePolicyOutput) ToKubernetesNodeGroupScalePolicyOutput() KubernetesNodeGroupScalePolicyOutput {
	return o
}

func (o KubernetesNodeGroupScalePolicyOutput) ToKubernetesNodeGroupScalePolicyOutputWithContext(ctx context.Context) KubernetesNodeGroupScalePolicyOutput {
	return o
}

func (o KubernetesNodeGroupScalePolicyOutput) ToKubernetesNodeGroupScalePolicyPtrOutput() KubernetesNodeGroupScalePolicyPtrOutput {
	return o.ToKubernetesNodeGroupScalePolicyPtrOutputWithContext(context.Background())
}

func (o KubernetesNodeGroupScalePolicyOutput) ToKubernetesNodeGroupScalePolicyPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupScalePolicyPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupScalePolicy) *KubernetesNodeGroupScalePolicy {
		return &v
	}).(KubernetesNodeGroupScalePolicyPtrOutput)
}

// Scale policy for an autoscaled node group. The structure is documented below.
func (o KubernetesNodeGroupScalePolicyOutput) AutoScale() KubernetesNodeGroupScalePolicyAutoScalePtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupScalePolicy) *KubernetesNodeGroupScalePolicyAutoScale { return v.AutoScale }).(KubernetesNodeGroupScalePolicyAutoScalePtrOutput)
}

// Scale policy for a fixed scale node group. The structure is documented below.
func (o KubernetesNodeGroupScalePolicyOutput) FixedScale() KubernetesNodeGroupScalePolicyFixedScalePtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupScalePolicy) *KubernetesNodeGroupScalePolicyFixedScale { return v.FixedScale }).(KubernetesNodeGroupScalePolicyFixedScalePtrOutput)
}

type KubernetesNodeGroupScalePolicyPtrOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupScalePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodeGroupScalePolicy)(nil)).Elem()
}

func (o KubernetesNodeGroupScalePolicyPtrOutput) ToKubernetesNodeGroupScalePolicyPtrOutput() KubernetesNodeGroupScalePolicyPtrOutput {
	return o
}

func (o KubernetesNodeGroupScalePolicyPtrOutput) ToKubernetesNodeGroupScalePolicyPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupScalePolicyPtrOutput {
	return o
}

func (o KubernetesNodeGroupScalePolicyPtrOutput) Elem() KubernetesNodeGroupScalePolicyOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupScalePolicy) KubernetesNodeGroupScalePolicy { return *v }).(KubernetesNodeGroupScalePolicyOutput)
}

// Scale policy for an autoscaled node group. The structure is documented below.
func (o KubernetesNodeGroupScalePolicyPtrOutput) AutoScale() KubernetesNodeGroupScalePolicyAutoScalePtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupScalePolicy) *KubernetesNodeGroupScalePolicyAutoScale {
		if v == nil {
			return nil
		}
		return v.AutoScale
	}).(KubernetesNodeGroupScalePolicyAutoScalePtrOutput)
}

// Scale policy for a fixed scale node group. The structure is documented below.
func (o KubernetesNodeGroupScalePolicyPtrOutput) FixedScale() KubernetesNodeGroupScalePolicyFixedScalePtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupScalePolicy) *KubernetesNodeGroupScalePolicyFixedScale {
		if v == nil {
			return nil
		}
		return v.FixedScale
	}).(KubernetesNodeGroupScalePolicyFixedScalePtrOutput)
}

type KubernetesNodeGroupScalePolicyAutoScale struct {
	// Initial number of instances in the node group.
	Initial int `pulumi:"initial"`
	// Maximum number of instances in the node group.
	Max int `pulumi:"max"`
	// Minimum number of instances in the node group.
	Min int `pulumi:"min"`
}

// KubernetesNodeGroupScalePolicyAutoScaleInput is an input type that accepts KubernetesNodeGroupScalePolicyAutoScaleArgs and KubernetesNodeGroupScalePolicyAutoScaleOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupScalePolicyAutoScaleInput` via:
//
//          KubernetesNodeGroupScalePolicyAutoScaleArgs{...}
type KubernetesNodeGroupScalePolicyAutoScaleInput interface {
	pulumi.Input

	ToKubernetesNodeGroupScalePolicyAutoScaleOutput() KubernetesNodeGroupScalePolicyAutoScaleOutput
	ToKubernetesNodeGroupScalePolicyAutoScaleOutputWithContext(context.Context) KubernetesNodeGroupScalePolicyAutoScaleOutput
}

type KubernetesNodeGroupScalePolicyAutoScaleArgs struct {
	// Initial number of instances in the node group.
	Initial pulumi.IntInput `pulumi:"initial"`
	// Maximum number of instances in the node group.
	Max pulumi.IntInput `pulumi:"max"`
	// Minimum number of instances in the node group.
	Min pulumi.IntInput `pulumi:"min"`
}

func (KubernetesNodeGroupScalePolicyAutoScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupScalePolicyAutoScale)(nil)).Elem()
}

func (i KubernetesNodeGroupScalePolicyAutoScaleArgs) ToKubernetesNodeGroupScalePolicyAutoScaleOutput() KubernetesNodeGroupScalePolicyAutoScaleOutput {
	return i.ToKubernetesNodeGroupScalePolicyAutoScaleOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupScalePolicyAutoScaleArgs) ToKubernetesNodeGroupScalePolicyAutoScaleOutputWithContext(ctx context.Context) KubernetesNodeGroupScalePolicyAutoScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupScalePolicyAutoScaleOutput)
}

func (i KubernetesNodeGroupScalePolicyAutoScaleArgs) ToKubernetesNodeGroupScalePolicyAutoScalePtrOutput() KubernetesNodeGroupScalePolicyAutoScalePtrOutput {
	return i.ToKubernetesNodeGroupScalePolicyAutoScalePtrOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupScalePolicyAutoScaleArgs) ToKubernetesNodeGroupScalePolicyAutoScalePtrOutputWithContext(ctx context.Context) KubernetesNodeGroupScalePolicyAutoScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupScalePolicyAutoScaleOutput).ToKubernetesNodeGroupScalePolicyAutoScalePtrOutputWithContext(ctx)
}

// KubernetesNodeGroupScalePolicyAutoScalePtrInput is an input type that accepts KubernetesNodeGroupScalePolicyAutoScaleArgs, KubernetesNodeGroupScalePolicyAutoScalePtr and KubernetesNodeGroupScalePolicyAutoScalePtrOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupScalePolicyAutoScalePtrInput` via:
//
//          KubernetesNodeGroupScalePolicyAutoScaleArgs{...}
//
//  or:
//
//          nil
type KubernetesNodeGroupScalePolicyAutoScalePtrInput interface {
	pulumi.Input

	ToKubernetesNodeGroupScalePolicyAutoScalePtrOutput() KubernetesNodeGroupScalePolicyAutoScalePtrOutput
	ToKubernetesNodeGroupScalePolicyAutoScalePtrOutputWithContext(context.Context) KubernetesNodeGroupScalePolicyAutoScalePtrOutput
}

type kubernetesNodeGroupScalePolicyAutoScalePtrType KubernetesNodeGroupScalePolicyAutoScaleArgs

func KubernetesNodeGroupScalePolicyAutoScalePtr(v *KubernetesNodeGroupScalePolicyAutoScaleArgs) KubernetesNodeGroupScalePolicyAutoScalePtrInput {
	return (*kubernetesNodeGroupScalePolicyAutoScalePtrType)(v)
}

func (*kubernetesNodeGroupScalePolicyAutoScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodeGroupScalePolicyAutoScale)(nil)).Elem()
}

func (i *kubernetesNodeGroupScalePolicyAutoScalePtrType) ToKubernetesNodeGroupScalePolicyAutoScalePtrOutput() KubernetesNodeGroupScalePolicyAutoScalePtrOutput {
	return i.ToKubernetesNodeGroupScalePolicyAutoScalePtrOutputWithContext(context.Background())
}

func (i *kubernetesNodeGroupScalePolicyAutoScalePtrType) ToKubernetesNodeGroupScalePolicyAutoScalePtrOutputWithContext(ctx context.Context) KubernetesNodeGroupScalePolicyAutoScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupScalePolicyAutoScalePtrOutput)
}

type KubernetesNodeGroupScalePolicyAutoScaleOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupScalePolicyAutoScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupScalePolicyAutoScale)(nil)).Elem()
}

func (o KubernetesNodeGroupScalePolicyAutoScaleOutput) ToKubernetesNodeGroupScalePolicyAutoScaleOutput() KubernetesNodeGroupScalePolicyAutoScaleOutput {
	return o
}

func (o KubernetesNodeGroupScalePolicyAutoScaleOutput) ToKubernetesNodeGroupScalePolicyAutoScaleOutputWithContext(ctx context.Context) KubernetesNodeGroupScalePolicyAutoScaleOutput {
	return o
}

func (o KubernetesNodeGroupScalePolicyAutoScaleOutput) ToKubernetesNodeGroupScalePolicyAutoScalePtrOutput() KubernetesNodeGroupScalePolicyAutoScalePtrOutput {
	return o.ToKubernetesNodeGroupScalePolicyAutoScalePtrOutputWithContext(context.Background())
}

func (o KubernetesNodeGroupScalePolicyAutoScaleOutput) ToKubernetesNodeGroupScalePolicyAutoScalePtrOutputWithContext(ctx context.Context) KubernetesNodeGroupScalePolicyAutoScalePtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupScalePolicyAutoScale) *KubernetesNodeGroupScalePolicyAutoScale {
		return &v
	}).(KubernetesNodeGroupScalePolicyAutoScalePtrOutput)
}

// Initial number of instances in the node group.
func (o KubernetesNodeGroupScalePolicyAutoScaleOutput) Initial() pulumi.IntOutput {
	return o.ApplyT(func(v KubernetesNodeGroupScalePolicyAutoScale) int { return v.Initial }).(pulumi.IntOutput)
}

// Maximum number of instances in the node group.
func (o KubernetesNodeGroupScalePolicyAutoScaleOutput) Max() pulumi.IntOutput {
	return o.ApplyT(func(v KubernetesNodeGroupScalePolicyAutoScale) int { return v.Max }).(pulumi.IntOutput)
}

// Minimum number of instances in the node group.
func (o KubernetesNodeGroupScalePolicyAutoScaleOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v KubernetesNodeGroupScalePolicyAutoScale) int { return v.Min }).(pulumi.IntOutput)
}

type KubernetesNodeGroupScalePolicyAutoScalePtrOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupScalePolicyAutoScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodeGroupScalePolicyAutoScale)(nil)).Elem()
}

func (o KubernetesNodeGroupScalePolicyAutoScalePtrOutput) ToKubernetesNodeGroupScalePolicyAutoScalePtrOutput() KubernetesNodeGroupScalePolicyAutoScalePtrOutput {
	return o
}

func (o KubernetesNodeGroupScalePolicyAutoScalePtrOutput) ToKubernetesNodeGroupScalePolicyAutoScalePtrOutputWithContext(ctx context.Context) KubernetesNodeGroupScalePolicyAutoScalePtrOutput {
	return o
}

func (o KubernetesNodeGroupScalePolicyAutoScalePtrOutput) Elem() KubernetesNodeGroupScalePolicyAutoScaleOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupScalePolicyAutoScale) KubernetesNodeGroupScalePolicyAutoScale { return *v }).(KubernetesNodeGroupScalePolicyAutoScaleOutput)
}

// Initial number of instances in the node group.
func (o KubernetesNodeGroupScalePolicyAutoScalePtrOutput) Initial() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupScalePolicyAutoScale) *int {
		if v == nil {
			return nil
		}
		return &v.Initial
	}).(pulumi.IntPtrOutput)
}

// Maximum number of instances in the node group.
func (o KubernetesNodeGroupScalePolicyAutoScalePtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupScalePolicyAutoScale) *int {
		if v == nil {
			return nil
		}
		return &v.Max
	}).(pulumi.IntPtrOutput)
}

// Minimum number of instances in the node group.
func (o KubernetesNodeGroupScalePolicyAutoScalePtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupScalePolicyAutoScale) *int {
		if v == nil {
			return nil
		}
		return &v.Min
	}).(pulumi.IntPtrOutput)
}

type KubernetesNodeGroupScalePolicyFixedScale struct {
	// The number of instances in the node group.
	Size *int `pulumi:"size"`
}

// KubernetesNodeGroupScalePolicyFixedScaleInput is an input type that accepts KubernetesNodeGroupScalePolicyFixedScaleArgs and KubernetesNodeGroupScalePolicyFixedScaleOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupScalePolicyFixedScaleInput` via:
//
//          KubernetesNodeGroupScalePolicyFixedScaleArgs{...}
type KubernetesNodeGroupScalePolicyFixedScaleInput interface {
	pulumi.Input

	ToKubernetesNodeGroupScalePolicyFixedScaleOutput() KubernetesNodeGroupScalePolicyFixedScaleOutput
	ToKubernetesNodeGroupScalePolicyFixedScaleOutputWithContext(context.Context) KubernetesNodeGroupScalePolicyFixedScaleOutput
}

type KubernetesNodeGroupScalePolicyFixedScaleArgs struct {
	// The number of instances in the node group.
	Size pulumi.IntPtrInput `pulumi:"size"`
}

func (KubernetesNodeGroupScalePolicyFixedScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupScalePolicyFixedScale)(nil)).Elem()
}

func (i KubernetesNodeGroupScalePolicyFixedScaleArgs) ToKubernetesNodeGroupScalePolicyFixedScaleOutput() KubernetesNodeGroupScalePolicyFixedScaleOutput {
	return i.ToKubernetesNodeGroupScalePolicyFixedScaleOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupScalePolicyFixedScaleArgs) ToKubernetesNodeGroupScalePolicyFixedScaleOutputWithContext(ctx context.Context) KubernetesNodeGroupScalePolicyFixedScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupScalePolicyFixedScaleOutput)
}

func (i KubernetesNodeGroupScalePolicyFixedScaleArgs) ToKubernetesNodeGroupScalePolicyFixedScalePtrOutput() KubernetesNodeGroupScalePolicyFixedScalePtrOutput {
	return i.ToKubernetesNodeGroupScalePolicyFixedScalePtrOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupScalePolicyFixedScaleArgs) ToKubernetesNodeGroupScalePolicyFixedScalePtrOutputWithContext(ctx context.Context) KubernetesNodeGroupScalePolicyFixedScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupScalePolicyFixedScaleOutput).ToKubernetesNodeGroupScalePolicyFixedScalePtrOutputWithContext(ctx)
}

// KubernetesNodeGroupScalePolicyFixedScalePtrInput is an input type that accepts KubernetesNodeGroupScalePolicyFixedScaleArgs, KubernetesNodeGroupScalePolicyFixedScalePtr and KubernetesNodeGroupScalePolicyFixedScalePtrOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupScalePolicyFixedScalePtrInput` via:
//
//          KubernetesNodeGroupScalePolicyFixedScaleArgs{...}
//
//  or:
//
//          nil
type KubernetesNodeGroupScalePolicyFixedScalePtrInput interface {
	pulumi.Input

	ToKubernetesNodeGroupScalePolicyFixedScalePtrOutput() KubernetesNodeGroupScalePolicyFixedScalePtrOutput
	ToKubernetesNodeGroupScalePolicyFixedScalePtrOutputWithContext(context.Context) KubernetesNodeGroupScalePolicyFixedScalePtrOutput
}

type kubernetesNodeGroupScalePolicyFixedScalePtrType KubernetesNodeGroupScalePolicyFixedScaleArgs

func KubernetesNodeGroupScalePolicyFixedScalePtr(v *KubernetesNodeGroupScalePolicyFixedScaleArgs) KubernetesNodeGroupScalePolicyFixedScalePtrInput {
	return (*kubernetesNodeGroupScalePolicyFixedScalePtrType)(v)
}

func (*kubernetesNodeGroupScalePolicyFixedScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodeGroupScalePolicyFixedScale)(nil)).Elem()
}

func (i *kubernetesNodeGroupScalePolicyFixedScalePtrType) ToKubernetesNodeGroupScalePolicyFixedScalePtrOutput() KubernetesNodeGroupScalePolicyFixedScalePtrOutput {
	return i.ToKubernetesNodeGroupScalePolicyFixedScalePtrOutputWithContext(context.Background())
}

func (i *kubernetesNodeGroupScalePolicyFixedScalePtrType) ToKubernetesNodeGroupScalePolicyFixedScalePtrOutputWithContext(ctx context.Context) KubernetesNodeGroupScalePolicyFixedScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupScalePolicyFixedScalePtrOutput)
}

type KubernetesNodeGroupScalePolicyFixedScaleOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupScalePolicyFixedScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupScalePolicyFixedScale)(nil)).Elem()
}

func (o KubernetesNodeGroupScalePolicyFixedScaleOutput) ToKubernetesNodeGroupScalePolicyFixedScaleOutput() KubernetesNodeGroupScalePolicyFixedScaleOutput {
	return o
}

func (o KubernetesNodeGroupScalePolicyFixedScaleOutput) ToKubernetesNodeGroupScalePolicyFixedScaleOutputWithContext(ctx context.Context) KubernetesNodeGroupScalePolicyFixedScaleOutput {
	return o
}

func (o KubernetesNodeGroupScalePolicyFixedScaleOutput) ToKubernetesNodeGroupScalePolicyFixedScalePtrOutput() KubernetesNodeGroupScalePolicyFixedScalePtrOutput {
	return o.ToKubernetesNodeGroupScalePolicyFixedScalePtrOutputWithContext(context.Background())
}

func (o KubernetesNodeGroupScalePolicyFixedScaleOutput) ToKubernetesNodeGroupScalePolicyFixedScalePtrOutputWithContext(ctx context.Context) KubernetesNodeGroupScalePolicyFixedScalePtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupScalePolicyFixedScale) *KubernetesNodeGroupScalePolicyFixedScale {
		return &v
	}).(KubernetesNodeGroupScalePolicyFixedScalePtrOutput)
}

// The number of instances in the node group.
func (o KubernetesNodeGroupScalePolicyFixedScaleOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupScalePolicyFixedScale) *int { return v.Size }).(pulumi.IntPtrOutput)
}

type KubernetesNodeGroupScalePolicyFixedScalePtrOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupScalePolicyFixedScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodeGroupScalePolicyFixedScale)(nil)).Elem()
}

func (o KubernetesNodeGroupScalePolicyFixedScalePtrOutput) ToKubernetesNodeGroupScalePolicyFixedScalePtrOutput() KubernetesNodeGroupScalePolicyFixedScalePtrOutput {
	return o
}

func (o KubernetesNodeGroupScalePolicyFixedScalePtrOutput) ToKubernetesNodeGroupScalePolicyFixedScalePtrOutputWithContext(ctx context.Context) KubernetesNodeGroupScalePolicyFixedScalePtrOutput {
	return o
}

func (o KubernetesNodeGroupScalePolicyFixedScalePtrOutput) Elem() KubernetesNodeGroupScalePolicyFixedScaleOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupScalePolicyFixedScale) KubernetesNodeGroupScalePolicyFixedScale { return *v }).(KubernetesNodeGroupScalePolicyFixedScaleOutput)
}

// The number of instances in the node group.
func (o KubernetesNodeGroupScalePolicyFixedScalePtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupScalePolicyFixedScale) *int {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.IntPtrOutput)
}

type KubernetesNodeGroupVersionInfo struct {
	// Current Kubernetes version, major.minor (e.g. 1.15).
	CurrentVersion *string `pulumi:"currentVersion"`
	// True/false flag.
	// Newer revisions may include Kubernetes patches (e.g 1.15.1 > 1.15.2) as well
	// as some internal component updates - new features or bug fixes in yandex-specific
	// components either on the master or nodes.
	NewRevisionAvailable *bool `pulumi:"newRevisionAvailable"`
	// Human readable description of the changes to be applied
	// when updating to the latest revision. Empty if newRevisionAvailable is false.
	NewRevisionSummary *string `pulumi:"newRevisionSummary"`
	// True/false flag. The current version is on the deprecation schedule,
	// component (master or node group) should be upgraded.
	VersionDeprecated *bool `pulumi:"versionDeprecated"`
}

// KubernetesNodeGroupVersionInfoInput is an input type that accepts KubernetesNodeGroupVersionInfoArgs and KubernetesNodeGroupVersionInfoOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupVersionInfoInput` via:
//
//          KubernetesNodeGroupVersionInfoArgs{...}
type KubernetesNodeGroupVersionInfoInput interface {
	pulumi.Input

	ToKubernetesNodeGroupVersionInfoOutput() KubernetesNodeGroupVersionInfoOutput
	ToKubernetesNodeGroupVersionInfoOutputWithContext(context.Context) KubernetesNodeGroupVersionInfoOutput
}

type KubernetesNodeGroupVersionInfoArgs struct {
	// Current Kubernetes version, major.minor (e.g. 1.15).
	CurrentVersion pulumi.StringPtrInput `pulumi:"currentVersion"`
	// True/false flag.
	// Newer revisions may include Kubernetes patches (e.g 1.15.1 > 1.15.2) as well
	// as some internal component updates - new features or bug fixes in yandex-specific
	// components either on the master or nodes.
	NewRevisionAvailable pulumi.BoolPtrInput `pulumi:"newRevisionAvailable"`
	// Human readable description of the changes to be applied
	// when updating to the latest revision. Empty if newRevisionAvailable is false.
	NewRevisionSummary pulumi.StringPtrInput `pulumi:"newRevisionSummary"`
	// True/false flag. The current version is on the deprecation schedule,
	// component (master or node group) should be upgraded.
	VersionDeprecated pulumi.BoolPtrInput `pulumi:"versionDeprecated"`
}

func (KubernetesNodeGroupVersionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupVersionInfo)(nil)).Elem()
}

func (i KubernetesNodeGroupVersionInfoArgs) ToKubernetesNodeGroupVersionInfoOutput() KubernetesNodeGroupVersionInfoOutput {
	return i.ToKubernetesNodeGroupVersionInfoOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupVersionInfoArgs) ToKubernetesNodeGroupVersionInfoOutputWithContext(ctx context.Context) KubernetesNodeGroupVersionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupVersionInfoOutput)
}

func (i KubernetesNodeGroupVersionInfoArgs) ToKubernetesNodeGroupVersionInfoPtrOutput() KubernetesNodeGroupVersionInfoPtrOutput {
	return i.ToKubernetesNodeGroupVersionInfoPtrOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupVersionInfoArgs) ToKubernetesNodeGroupVersionInfoPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupVersionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupVersionInfoOutput).ToKubernetesNodeGroupVersionInfoPtrOutputWithContext(ctx)
}

// KubernetesNodeGroupVersionInfoPtrInput is an input type that accepts KubernetesNodeGroupVersionInfoArgs, KubernetesNodeGroupVersionInfoPtr and KubernetesNodeGroupVersionInfoPtrOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupVersionInfoPtrInput` via:
//
//          KubernetesNodeGroupVersionInfoArgs{...}
//
//  or:
//
//          nil
type KubernetesNodeGroupVersionInfoPtrInput interface {
	pulumi.Input

	ToKubernetesNodeGroupVersionInfoPtrOutput() KubernetesNodeGroupVersionInfoPtrOutput
	ToKubernetesNodeGroupVersionInfoPtrOutputWithContext(context.Context) KubernetesNodeGroupVersionInfoPtrOutput
}

type kubernetesNodeGroupVersionInfoPtrType KubernetesNodeGroupVersionInfoArgs

func KubernetesNodeGroupVersionInfoPtr(v *KubernetesNodeGroupVersionInfoArgs) KubernetesNodeGroupVersionInfoPtrInput {
	return (*kubernetesNodeGroupVersionInfoPtrType)(v)
}

func (*kubernetesNodeGroupVersionInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodeGroupVersionInfo)(nil)).Elem()
}

func (i *kubernetesNodeGroupVersionInfoPtrType) ToKubernetesNodeGroupVersionInfoPtrOutput() KubernetesNodeGroupVersionInfoPtrOutput {
	return i.ToKubernetesNodeGroupVersionInfoPtrOutputWithContext(context.Background())
}

func (i *kubernetesNodeGroupVersionInfoPtrType) ToKubernetesNodeGroupVersionInfoPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupVersionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupVersionInfoPtrOutput)
}

type KubernetesNodeGroupVersionInfoOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupVersionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupVersionInfo)(nil)).Elem()
}

func (o KubernetesNodeGroupVersionInfoOutput) ToKubernetesNodeGroupVersionInfoOutput() KubernetesNodeGroupVersionInfoOutput {
	return o
}

func (o KubernetesNodeGroupVersionInfoOutput) ToKubernetesNodeGroupVersionInfoOutputWithContext(ctx context.Context) KubernetesNodeGroupVersionInfoOutput {
	return o
}

func (o KubernetesNodeGroupVersionInfoOutput) ToKubernetesNodeGroupVersionInfoPtrOutput() KubernetesNodeGroupVersionInfoPtrOutput {
	return o.ToKubernetesNodeGroupVersionInfoPtrOutputWithContext(context.Background())
}

func (o KubernetesNodeGroupVersionInfoOutput) ToKubernetesNodeGroupVersionInfoPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupVersionInfoPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupVersionInfo) *KubernetesNodeGroupVersionInfo {
		return &v
	}).(KubernetesNodeGroupVersionInfoPtrOutput)
}

// Current Kubernetes version, major.minor (e.g. 1.15).
func (o KubernetesNodeGroupVersionInfoOutput) CurrentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupVersionInfo) *string { return v.CurrentVersion }).(pulumi.StringPtrOutput)
}

// True/false flag.
// Newer revisions may include Kubernetes patches (e.g 1.15.1 > 1.15.2) as well
// as some internal component updates - new features or bug fixes in yandex-specific
// components either on the master or nodes.
func (o KubernetesNodeGroupVersionInfoOutput) NewRevisionAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupVersionInfo) *bool { return v.NewRevisionAvailable }).(pulumi.BoolPtrOutput)
}

// Human readable description of the changes to be applied
// when updating to the latest revision. Empty if newRevisionAvailable is false.
func (o KubernetesNodeGroupVersionInfoOutput) NewRevisionSummary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupVersionInfo) *string { return v.NewRevisionSummary }).(pulumi.StringPtrOutput)
}

// True/false flag. The current version is on the deprecation schedule,
// component (master or node group) should be upgraded.
func (o KubernetesNodeGroupVersionInfoOutput) VersionDeprecated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupVersionInfo) *bool { return v.VersionDeprecated }).(pulumi.BoolPtrOutput)
}

type KubernetesNodeGroupVersionInfoPtrOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupVersionInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodeGroupVersionInfo)(nil)).Elem()
}

func (o KubernetesNodeGroupVersionInfoPtrOutput) ToKubernetesNodeGroupVersionInfoPtrOutput() KubernetesNodeGroupVersionInfoPtrOutput {
	return o
}

func (o KubernetesNodeGroupVersionInfoPtrOutput) ToKubernetesNodeGroupVersionInfoPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupVersionInfoPtrOutput {
	return o
}

func (o KubernetesNodeGroupVersionInfoPtrOutput) Elem() KubernetesNodeGroupVersionInfoOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupVersionInfo) KubernetesNodeGroupVersionInfo { return *v }).(KubernetesNodeGroupVersionInfoOutput)
}

// Current Kubernetes version, major.minor (e.g. 1.15).
func (o KubernetesNodeGroupVersionInfoPtrOutput) CurrentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupVersionInfo) *string {
		if v == nil {
			return nil
		}
		return v.CurrentVersion
	}).(pulumi.StringPtrOutput)
}

// True/false flag.
// Newer revisions may include Kubernetes patches (e.g 1.15.1 > 1.15.2) as well
// as some internal component updates - new features or bug fixes in yandex-specific
// components either on the master or nodes.
func (o KubernetesNodeGroupVersionInfoPtrOutput) NewRevisionAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupVersionInfo) *bool {
		if v == nil {
			return nil
		}
		return v.NewRevisionAvailable
	}).(pulumi.BoolPtrOutput)
}

// Human readable description of the changes to be applied
// when updating to the latest revision. Empty if newRevisionAvailable is false.
func (o KubernetesNodeGroupVersionInfoPtrOutput) NewRevisionSummary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupVersionInfo) *string {
		if v == nil {
			return nil
		}
		return v.NewRevisionSummary
	}).(pulumi.StringPtrOutput)
}

// True/false flag. The current version is on the deprecation schedule,
// component (master or node group) should be upgraded.
func (o KubernetesNodeGroupVersionInfoPtrOutput) VersionDeprecated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupVersionInfo) *bool {
		if v == nil {
			return nil
		}
		return v.VersionDeprecated
	}).(pulumi.BoolPtrOutput)
}

type LbNetworkLoadBalancerAttachedTargetGroup struct {
	// A HealthCheck resource. The structure is documented below.
	Healthchecks []LbNetworkLoadBalancerAttachedTargetGroupHealthcheck `pulumi:"healthchecks"`
	// ID of the target group.
	TargetGroupId string `pulumi:"targetGroupId"`
}

// LbNetworkLoadBalancerAttachedTargetGroupInput is an input type that accepts LbNetworkLoadBalancerAttachedTargetGroupArgs and LbNetworkLoadBalancerAttachedTargetGroupOutput values.
// You can construct a concrete instance of `LbNetworkLoadBalancerAttachedTargetGroupInput` via:
//
//          LbNetworkLoadBalancerAttachedTargetGroupArgs{...}
type LbNetworkLoadBalancerAttachedTargetGroupInput interface {
	pulumi.Input

	ToLbNetworkLoadBalancerAttachedTargetGroupOutput() LbNetworkLoadBalancerAttachedTargetGroupOutput
	ToLbNetworkLoadBalancerAttachedTargetGroupOutputWithContext(context.Context) LbNetworkLoadBalancerAttachedTargetGroupOutput
}

type LbNetworkLoadBalancerAttachedTargetGroupArgs struct {
	// A HealthCheck resource. The structure is documented below.
	Healthchecks LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayInput `pulumi:"healthchecks"`
	// ID of the target group.
	TargetGroupId pulumi.StringInput `pulumi:"targetGroupId"`
}

func (LbNetworkLoadBalancerAttachedTargetGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LbNetworkLoadBalancerAttachedTargetGroup)(nil)).Elem()
}

func (i LbNetworkLoadBalancerAttachedTargetGroupArgs) ToLbNetworkLoadBalancerAttachedTargetGroupOutput() LbNetworkLoadBalancerAttachedTargetGroupOutput {
	return i.ToLbNetworkLoadBalancerAttachedTargetGroupOutputWithContext(context.Background())
}

func (i LbNetworkLoadBalancerAttachedTargetGroupArgs) ToLbNetworkLoadBalancerAttachedTargetGroupOutputWithContext(ctx context.Context) LbNetworkLoadBalancerAttachedTargetGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbNetworkLoadBalancerAttachedTargetGroupOutput)
}

// LbNetworkLoadBalancerAttachedTargetGroupArrayInput is an input type that accepts LbNetworkLoadBalancerAttachedTargetGroupArray and LbNetworkLoadBalancerAttachedTargetGroupArrayOutput values.
// You can construct a concrete instance of `LbNetworkLoadBalancerAttachedTargetGroupArrayInput` via:
//
//          LbNetworkLoadBalancerAttachedTargetGroupArray{ LbNetworkLoadBalancerAttachedTargetGroupArgs{...} }
type LbNetworkLoadBalancerAttachedTargetGroupArrayInput interface {
	pulumi.Input

	ToLbNetworkLoadBalancerAttachedTargetGroupArrayOutput() LbNetworkLoadBalancerAttachedTargetGroupArrayOutput
	ToLbNetworkLoadBalancerAttachedTargetGroupArrayOutputWithContext(context.Context) LbNetworkLoadBalancerAttachedTargetGroupArrayOutput
}

type LbNetworkLoadBalancerAttachedTargetGroupArray []LbNetworkLoadBalancerAttachedTargetGroupInput

func (LbNetworkLoadBalancerAttachedTargetGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LbNetworkLoadBalancerAttachedTargetGroup)(nil)).Elem()
}

func (i LbNetworkLoadBalancerAttachedTargetGroupArray) ToLbNetworkLoadBalancerAttachedTargetGroupArrayOutput() LbNetworkLoadBalancerAttachedTargetGroupArrayOutput {
	return i.ToLbNetworkLoadBalancerAttachedTargetGroupArrayOutputWithContext(context.Background())
}

func (i LbNetworkLoadBalancerAttachedTargetGroupArray) ToLbNetworkLoadBalancerAttachedTargetGroupArrayOutputWithContext(ctx context.Context) LbNetworkLoadBalancerAttachedTargetGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbNetworkLoadBalancerAttachedTargetGroupArrayOutput)
}

type LbNetworkLoadBalancerAttachedTargetGroupOutput struct{ *pulumi.OutputState }

func (LbNetworkLoadBalancerAttachedTargetGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LbNetworkLoadBalancerAttachedTargetGroup)(nil)).Elem()
}

func (o LbNetworkLoadBalancerAttachedTargetGroupOutput) ToLbNetworkLoadBalancerAttachedTargetGroupOutput() LbNetworkLoadBalancerAttachedTargetGroupOutput {
	return o
}

func (o LbNetworkLoadBalancerAttachedTargetGroupOutput) ToLbNetworkLoadBalancerAttachedTargetGroupOutputWithContext(ctx context.Context) LbNetworkLoadBalancerAttachedTargetGroupOutput {
	return o
}

// A HealthCheck resource. The structure is documented below.
func (o LbNetworkLoadBalancerAttachedTargetGroupOutput) Healthchecks() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerAttachedTargetGroup) []LbNetworkLoadBalancerAttachedTargetGroupHealthcheck {
		return v.Healthchecks
	}).(LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput)
}

// ID of the target group.
func (o LbNetworkLoadBalancerAttachedTargetGroupOutput) TargetGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerAttachedTargetGroup) string { return v.TargetGroupId }).(pulumi.StringOutput)
}

type LbNetworkLoadBalancerAttachedTargetGroupArrayOutput struct{ *pulumi.OutputState }

func (LbNetworkLoadBalancerAttachedTargetGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LbNetworkLoadBalancerAttachedTargetGroup)(nil)).Elem()
}

func (o LbNetworkLoadBalancerAttachedTargetGroupArrayOutput) ToLbNetworkLoadBalancerAttachedTargetGroupArrayOutput() LbNetworkLoadBalancerAttachedTargetGroupArrayOutput {
	return o
}

func (o LbNetworkLoadBalancerAttachedTargetGroupArrayOutput) ToLbNetworkLoadBalancerAttachedTargetGroupArrayOutputWithContext(ctx context.Context) LbNetworkLoadBalancerAttachedTargetGroupArrayOutput {
	return o
}

func (o LbNetworkLoadBalancerAttachedTargetGroupArrayOutput) Index(i pulumi.IntInput) LbNetworkLoadBalancerAttachedTargetGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LbNetworkLoadBalancerAttachedTargetGroup {
		return vs[0].([]LbNetworkLoadBalancerAttachedTargetGroup)[vs[1].(int)]
	}).(LbNetworkLoadBalancerAttachedTargetGroupOutput)
}

type LbNetworkLoadBalancerAttachedTargetGroupHealthcheck struct {
	// Number of successful health checks required in order to set the `HEALTHY` status for the target.
	HealthyThreshold *int `pulumi:"healthyThreshold"`
	// Options for HTTP health check. The structure is documented below.
	HttpOptions *LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions `pulumi:"httpOptions"`
	// The interval between health checks. The default is 2 seconds.
	Interval *int `pulumi:"interval"`
	// Name of the listener. The name must be unique for each listener on a single load balancer.
	Name string `pulumi:"name"`
	// Options for TCP health check. The structure is documented below.
	TcpOptions *LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptions `pulumi:"tcpOptions"`
	// Timeout for a target to return a response for the health check. The default is 1 second.
	Timeout *int `pulumi:"timeout"`
	// Number of failed health checks before changing the status to `UNHEALTHY`. The default is 2.
	UnhealthyThreshold *int `pulumi:"unhealthyThreshold"`
}

// LbNetworkLoadBalancerAttachedTargetGroupHealthcheckInput is an input type that accepts LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArgs and LbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput values.
// You can construct a concrete instance of `LbNetworkLoadBalancerAttachedTargetGroupHealthcheckInput` via:
//
//          LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArgs{...}
type LbNetworkLoadBalancerAttachedTargetGroupHealthcheckInput interface {
	pulumi.Input

	ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput
	ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutputWithContext(context.Context) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput
}

type LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArgs struct {
	// Number of successful health checks required in order to set the `HEALTHY` status for the target.
	HealthyThreshold pulumi.IntPtrInput `pulumi:"healthyThreshold"`
	// Options for HTTP health check. The structure is documented below.
	HttpOptions LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrInput `pulumi:"httpOptions"`
	// The interval between health checks. The default is 2 seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// Name of the listener. The name must be unique for each listener on a single load balancer.
	Name pulumi.StringInput `pulumi:"name"`
	// Options for TCP health check. The structure is documented below.
	TcpOptions LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrInput `pulumi:"tcpOptions"`
	// Timeout for a target to return a response for the health check. The default is 1 second.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// Number of failed health checks before changing the status to `UNHEALTHY`. The default is 2.
	UnhealthyThreshold pulumi.IntPtrInput `pulumi:"unhealthyThreshold"`
}

func (LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LbNetworkLoadBalancerAttachedTargetGroupHealthcheck)(nil)).Elem()
}

func (i LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArgs) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput {
	return i.ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutputWithContext(context.Background())
}

func (i LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArgs) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutputWithContext(ctx context.Context) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput)
}

// LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayInput is an input type that accepts LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArray and LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput values.
// You can construct a concrete instance of `LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayInput` via:
//
//          LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArray{ LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArgs{...} }
type LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayInput interface {
	pulumi.Input

	ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput
	ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutputWithContext(context.Context) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput
}

type LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArray []LbNetworkLoadBalancerAttachedTargetGroupHealthcheckInput

func (LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LbNetworkLoadBalancerAttachedTargetGroupHealthcheck)(nil)).Elem()
}

func (i LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArray) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput {
	return i.ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutputWithContext(context.Background())
}

func (i LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArray) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutputWithContext(ctx context.Context) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput)
}

type LbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput struct{ *pulumi.OutputState }

func (LbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LbNetworkLoadBalancerAttachedTargetGroupHealthcheck)(nil)).Elem()
}

func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput {
	return o
}

func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutputWithContext(ctx context.Context) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput {
	return o
}

// Number of successful health checks required in order to set the `HEALTHY` status for the target.
func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerAttachedTargetGroupHealthcheck) *int { return v.HealthyThreshold }).(pulumi.IntPtrOutput)
}

// Options for HTTP health check. The structure is documented below.
func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput) HttpOptions() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerAttachedTargetGroupHealthcheck) *LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions {
		return v.HttpOptions
	}).(LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput)
}

// The interval between health checks. The default is 2 seconds.
func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerAttachedTargetGroupHealthcheck) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Name of the listener. The name must be unique for each listener on a single load balancer.
func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerAttachedTargetGroupHealthcheck) string { return v.Name }).(pulumi.StringOutput)
}

// Options for TCP health check. The structure is documented below.
func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput) TcpOptions() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerAttachedTargetGroupHealthcheck) *LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptions {
		return v.TcpOptions
	}).(LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput)
}

// Timeout for a target to return a response for the health check. The default is 1 second.
func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerAttachedTargetGroupHealthcheck) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// Number of failed health checks before changing the status to `UNHEALTHY`. The default is 2.
func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerAttachedTargetGroupHealthcheck) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

type LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput struct{ *pulumi.OutputState }

func (LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LbNetworkLoadBalancerAttachedTargetGroupHealthcheck)(nil)).Elem()
}

func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput {
	return o
}

func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutputWithContext(ctx context.Context) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput {
	return o
}

func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput) Index(i pulumi.IntInput) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LbNetworkLoadBalancerAttachedTargetGroupHealthcheck {
		return vs[0].([]LbNetworkLoadBalancerAttachedTargetGroupHealthcheck)[vs[1].(int)]
	}).(LbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput)
}

type LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions struct {
	// URL path to set for health checking requests for every target in the target group. For example `/ping`. The default path is `/`.
	Path *string `pulumi:"path"`
	// Port for incoming traffic.
	Port int `pulumi:"port"`
}

// LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsInput is an input type that accepts LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsArgs and LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput values.
// You can construct a concrete instance of `LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsInput` via:
//
//          LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsArgs{...}
type LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsInput interface {
	pulumi.Input

	ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput
	ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutputWithContext(context.Context) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput
}

type LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsArgs struct {
	// URL path to set for health checking requests for every target in the target group. For example `/ping`. The default path is `/`.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Port for incoming traffic.
	Port pulumi.IntInput `pulumi:"port"`
}

func (LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions)(nil)).Elem()
}

func (i LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsArgs) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput {
	return i.ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutputWithContext(context.Background())
}

func (i LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsArgs) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutputWithContext(ctx context.Context) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput)
}

func (i LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsArgs) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput {
	return i.ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutputWithContext(context.Background())
}

func (i LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsArgs) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutputWithContext(ctx context.Context) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput).ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutputWithContext(ctx)
}

// LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrInput is an input type that accepts LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsArgs, LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtr and LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput values.
// You can construct a concrete instance of `LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrInput` via:
//
//          LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsArgs{...}
//
//  or:
//
//          nil
type LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrInput interface {
	pulumi.Input

	ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput
	ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutputWithContext(context.Context) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput
}

type lbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrType LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsArgs

func LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtr(v *LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsArgs) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrInput {
	return (*lbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrType)(v)
}

func (*lbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions)(nil)).Elem()
}

func (i *lbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrType) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput {
	return i.ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutputWithContext(context.Background())
}

func (i *lbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrType) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutputWithContext(ctx context.Context) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput)
}

type LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput struct{ *pulumi.OutputState }

func (LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions)(nil)).Elem()
}

func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput {
	return o
}

func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutputWithContext(ctx context.Context) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput {
	return o
}

func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput {
	return o.ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutputWithContext(context.Background())
}

func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutputWithContext(ctx context.Context) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions) *LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions {
		return &v
	}).(LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput)
}

// URL path to set for health checking requests for every target in the target group. For example `/ping`. The default path is `/`.
func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Port for incoming traffic.
func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions) int { return v.Port }).(pulumi.IntOutput)
}

type LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput struct{ *pulumi.OutputState }

func (LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions)(nil)).Elem()
}

func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput {
	return o
}

func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutputWithContext(ctx context.Context) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput {
	return o
}

func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput) Elem() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput {
	return o.ApplyT(func(v *LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions {
		return *v
	}).(LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput)
}

// URL path to set for health checking requests for every target in the target group. For example `/ping`. The default path is `/`.
func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Port for incoming traffic.
func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptions struct {
	// Port for incoming traffic.
	Port int `pulumi:"port"`
}

// LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsInput is an input type that accepts LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsArgs and LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput values.
// You can construct a concrete instance of `LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsInput` via:
//
//          LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsArgs{...}
type LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsInput interface {
	pulumi.Input

	ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput
	ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutputWithContext(context.Context) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput
}

type LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsArgs struct {
	// Port for incoming traffic.
	Port pulumi.IntInput `pulumi:"port"`
}

func (LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptions)(nil)).Elem()
}

func (i LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsArgs) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput {
	return i.ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutputWithContext(context.Background())
}

func (i LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsArgs) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutputWithContext(ctx context.Context) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput)
}

func (i LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsArgs) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput {
	return i.ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutputWithContext(context.Background())
}

func (i LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsArgs) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutputWithContext(ctx context.Context) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput).ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutputWithContext(ctx)
}

// LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrInput is an input type that accepts LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsArgs, LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtr and LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput values.
// You can construct a concrete instance of `LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrInput` via:
//
//          LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsArgs{...}
//
//  or:
//
//          nil
type LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrInput interface {
	pulumi.Input

	ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput
	ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutputWithContext(context.Context) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput
}

type lbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrType LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsArgs

func LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtr(v *LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsArgs) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrInput {
	return (*lbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrType)(v)
}

func (*lbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptions)(nil)).Elem()
}

func (i *lbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrType) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput {
	return i.ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutputWithContext(context.Background())
}

func (i *lbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrType) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutputWithContext(ctx context.Context) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput)
}

type LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput struct{ *pulumi.OutputState }

func (LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptions)(nil)).Elem()
}

func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput {
	return o
}

func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutputWithContext(ctx context.Context) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput {
	return o
}

func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput {
	return o.ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutputWithContext(context.Background())
}

func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutputWithContext(ctx context.Context) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptions) *LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptions {
		return &v
	}).(LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput)
}

// Port for incoming traffic.
func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptions) int { return v.Port }).(pulumi.IntOutput)
}

type LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput struct{ *pulumi.OutputState }

func (LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptions)(nil)).Elem()
}

func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput {
	return o
}

func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput) ToLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutputWithContext(ctx context.Context) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput {
	return o
}

func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput) Elem() LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput {
	return o.ApplyT(func(v *LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptions) LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptions {
		return *v
	}).(LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput)
}

// Port for incoming traffic.
func (o LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptions) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type LbNetworkLoadBalancerListener struct {
	// External IP address specification. The structure is documented below.
	ExternalAddressSpec *LbNetworkLoadBalancerListenerExternalAddressSpec `pulumi:"externalAddressSpec"`
	// Internal IP address specification. The structure is documented below.
	InternalAddressSpec *LbNetworkLoadBalancerListenerInternalAddressSpec `pulumi:"internalAddressSpec"`
	// Name of the listener. The name must be unique for each listener on a single load balancer.
	Name string `pulumi:"name"`
	// Port for incoming traffic.
	Port int `pulumi:"port"`
	// Protocol for incoming traffic. TCP or UDP and the default is TCP.
	Protocol *string `pulumi:"protocol"`
	// Port of a target. The default is the same as listener's port.
	TargetPort *int `pulumi:"targetPort"`
}

// LbNetworkLoadBalancerListenerInput is an input type that accepts LbNetworkLoadBalancerListenerArgs and LbNetworkLoadBalancerListenerOutput values.
// You can construct a concrete instance of `LbNetworkLoadBalancerListenerInput` via:
//
//          LbNetworkLoadBalancerListenerArgs{...}
type LbNetworkLoadBalancerListenerInput interface {
	pulumi.Input

	ToLbNetworkLoadBalancerListenerOutput() LbNetworkLoadBalancerListenerOutput
	ToLbNetworkLoadBalancerListenerOutputWithContext(context.Context) LbNetworkLoadBalancerListenerOutput
}

type LbNetworkLoadBalancerListenerArgs struct {
	// External IP address specification. The structure is documented below.
	ExternalAddressSpec LbNetworkLoadBalancerListenerExternalAddressSpecPtrInput `pulumi:"externalAddressSpec"`
	// Internal IP address specification. The structure is documented below.
	InternalAddressSpec LbNetworkLoadBalancerListenerInternalAddressSpecPtrInput `pulumi:"internalAddressSpec"`
	// Name of the listener. The name must be unique for each listener on a single load balancer.
	Name pulumi.StringInput `pulumi:"name"`
	// Port for incoming traffic.
	Port pulumi.IntInput `pulumi:"port"`
	// Protocol for incoming traffic. TCP or UDP and the default is TCP.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Port of a target. The default is the same as listener's port.
	TargetPort pulumi.IntPtrInput `pulumi:"targetPort"`
}

func (LbNetworkLoadBalancerListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LbNetworkLoadBalancerListener)(nil)).Elem()
}

func (i LbNetworkLoadBalancerListenerArgs) ToLbNetworkLoadBalancerListenerOutput() LbNetworkLoadBalancerListenerOutput {
	return i.ToLbNetworkLoadBalancerListenerOutputWithContext(context.Background())
}

func (i LbNetworkLoadBalancerListenerArgs) ToLbNetworkLoadBalancerListenerOutputWithContext(ctx context.Context) LbNetworkLoadBalancerListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbNetworkLoadBalancerListenerOutput)
}

// LbNetworkLoadBalancerListenerArrayInput is an input type that accepts LbNetworkLoadBalancerListenerArray and LbNetworkLoadBalancerListenerArrayOutput values.
// You can construct a concrete instance of `LbNetworkLoadBalancerListenerArrayInput` via:
//
//          LbNetworkLoadBalancerListenerArray{ LbNetworkLoadBalancerListenerArgs{...} }
type LbNetworkLoadBalancerListenerArrayInput interface {
	pulumi.Input

	ToLbNetworkLoadBalancerListenerArrayOutput() LbNetworkLoadBalancerListenerArrayOutput
	ToLbNetworkLoadBalancerListenerArrayOutputWithContext(context.Context) LbNetworkLoadBalancerListenerArrayOutput
}

type LbNetworkLoadBalancerListenerArray []LbNetworkLoadBalancerListenerInput

func (LbNetworkLoadBalancerListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LbNetworkLoadBalancerListener)(nil)).Elem()
}

func (i LbNetworkLoadBalancerListenerArray) ToLbNetworkLoadBalancerListenerArrayOutput() LbNetworkLoadBalancerListenerArrayOutput {
	return i.ToLbNetworkLoadBalancerListenerArrayOutputWithContext(context.Background())
}

func (i LbNetworkLoadBalancerListenerArray) ToLbNetworkLoadBalancerListenerArrayOutputWithContext(ctx context.Context) LbNetworkLoadBalancerListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbNetworkLoadBalancerListenerArrayOutput)
}

type LbNetworkLoadBalancerListenerOutput struct{ *pulumi.OutputState }

func (LbNetworkLoadBalancerListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LbNetworkLoadBalancerListener)(nil)).Elem()
}

func (o LbNetworkLoadBalancerListenerOutput) ToLbNetworkLoadBalancerListenerOutput() LbNetworkLoadBalancerListenerOutput {
	return o
}

func (o LbNetworkLoadBalancerListenerOutput) ToLbNetworkLoadBalancerListenerOutputWithContext(ctx context.Context) LbNetworkLoadBalancerListenerOutput {
	return o
}

// External IP address specification. The structure is documented below.
func (o LbNetworkLoadBalancerListenerOutput) ExternalAddressSpec() LbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerListener) *LbNetworkLoadBalancerListenerExternalAddressSpec {
		return v.ExternalAddressSpec
	}).(LbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput)
}

// Internal IP address specification. The structure is documented below.
func (o LbNetworkLoadBalancerListenerOutput) InternalAddressSpec() LbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerListener) *LbNetworkLoadBalancerListenerInternalAddressSpec {
		return v.InternalAddressSpec
	}).(LbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput)
}

// Name of the listener. The name must be unique for each listener on a single load balancer.
func (o LbNetworkLoadBalancerListenerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerListener) string { return v.Name }).(pulumi.StringOutput)
}

// Port for incoming traffic.
func (o LbNetworkLoadBalancerListenerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerListener) int { return v.Port }).(pulumi.IntOutput)
}

// Protocol for incoming traffic. TCP or UDP and the default is TCP.
func (o LbNetworkLoadBalancerListenerOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerListener) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Port of a target. The default is the same as listener's port.
func (o LbNetworkLoadBalancerListenerOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerListener) *int { return v.TargetPort }).(pulumi.IntPtrOutput)
}

type LbNetworkLoadBalancerListenerArrayOutput struct{ *pulumi.OutputState }

func (LbNetworkLoadBalancerListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LbNetworkLoadBalancerListener)(nil)).Elem()
}

func (o LbNetworkLoadBalancerListenerArrayOutput) ToLbNetworkLoadBalancerListenerArrayOutput() LbNetworkLoadBalancerListenerArrayOutput {
	return o
}

func (o LbNetworkLoadBalancerListenerArrayOutput) ToLbNetworkLoadBalancerListenerArrayOutputWithContext(ctx context.Context) LbNetworkLoadBalancerListenerArrayOutput {
	return o
}

func (o LbNetworkLoadBalancerListenerArrayOutput) Index(i pulumi.IntInput) LbNetworkLoadBalancerListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LbNetworkLoadBalancerListener {
		return vs[0].([]LbNetworkLoadBalancerListener)[vs[1].(int)]
	}).(LbNetworkLoadBalancerListenerOutput)
}

type LbNetworkLoadBalancerListenerExternalAddressSpec struct {
	// External IP address for a listener. IP address will be allocated if it wasn't been set.
	Address *string `pulumi:"address"`
	// IP version of the internal addresses that the load balancer works with. Must be one of ipv4 or ipv6. The default is ipv4.
	IpVersion *string `pulumi:"ipVersion"`
}

// LbNetworkLoadBalancerListenerExternalAddressSpecInput is an input type that accepts LbNetworkLoadBalancerListenerExternalAddressSpecArgs and LbNetworkLoadBalancerListenerExternalAddressSpecOutput values.
// You can construct a concrete instance of `LbNetworkLoadBalancerListenerExternalAddressSpecInput` via:
//
//          LbNetworkLoadBalancerListenerExternalAddressSpecArgs{...}
type LbNetworkLoadBalancerListenerExternalAddressSpecInput interface {
	pulumi.Input

	ToLbNetworkLoadBalancerListenerExternalAddressSpecOutput() LbNetworkLoadBalancerListenerExternalAddressSpecOutput
	ToLbNetworkLoadBalancerListenerExternalAddressSpecOutputWithContext(context.Context) LbNetworkLoadBalancerListenerExternalAddressSpecOutput
}

type LbNetworkLoadBalancerListenerExternalAddressSpecArgs struct {
	// External IP address for a listener. IP address will be allocated if it wasn't been set.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// IP version of the internal addresses that the load balancer works with. Must be one of ipv4 or ipv6. The default is ipv4.
	IpVersion pulumi.StringPtrInput `pulumi:"ipVersion"`
}

func (LbNetworkLoadBalancerListenerExternalAddressSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LbNetworkLoadBalancerListenerExternalAddressSpec)(nil)).Elem()
}

func (i LbNetworkLoadBalancerListenerExternalAddressSpecArgs) ToLbNetworkLoadBalancerListenerExternalAddressSpecOutput() LbNetworkLoadBalancerListenerExternalAddressSpecOutput {
	return i.ToLbNetworkLoadBalancerListenerExternalAddressSpecOutputWithContext(context.Background())
}

func (i LbNetworkLoadBalancerListenerExternalAddressSpecArgs) ToLbNetworkLoadBalancerListenerExternalAddressSpecOutputWithContext(ctx context.Context) LbNetworkLoadBalancerListenerExternalAddressSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbNetworkLoadBalancerListenerExternalAddressSpecOutput)
}

func (i LbNetworkLoadBalancerListenerExternalAddressSpecArgs) ToLbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput() LbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput {
	return i.ToLbNetworkLoadBalancerListenerExternalAddressSpecPtrOutputWithContext(context.Background())
}

func (i LbNetworkLoadBalancerListenerExternalAddressSpecArgs) ToLbNetworkLoadBalancerListenerExternalAddressSpecPtrOutputWithContext(ctx context.Context) LbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbNetworkLoadBalancerListenerExternalAddressSpecOutput).ToLbNetworkLoadBalancerListenerExternalAddressSpecPtrOutputWithContext(ctx)
}

// LbNetworkLoadBalancerListenerExternalAddressSpecPtrInput is an input type that accepts LbNetworkLoadBalancerListenerExternalAddressSpecArgs, LbNetworkLoadBalancerListenerExternalAddressSpecPtr and LbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput values.
// You can construct a concrete instance of `LbNetworkLoadBalancerListenerExternalAddressSpecPtrInput` via:
//
//          LbNetworkLoadBalancerListenerExternalAddressSpecArgs{...}
//
//  or:
//
//          nil
type LbNetworkLoadBalancerListenerExternalAddressSpecPtrInput interface {
	pulumi.Input

	ToLbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput() LbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput
	ToLbNetworkLoadBalancerListenerExternalAddressSpecPtrOutputWithContext(context.Context) LbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput
}

type lbNetworkLoadBalancerListenerExternalAddressSpecPtrType LbNetworkLoadBalancerListenerExternalAddressSpecArgs

func LbNetworkLoadBalancerListenerExternalAddressSpecPtr(v *LbNetworkLoadBalancerListenerExternalAddressSpecArgs) LbNetworkLoadBalancerListenerExternalAddressSpecPtrInput {
	return (*lbNetworkLoadBalancerListenerExternalAddressSpecPtrType)(v)
}

func (*lbNetworkLoadBalancerListenerExternalAddressSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LbNetworkLoadBalancerListenerExternalAddressSpec)(nil)).Elem()
}

func (i *lbNetworkLoadBalancerListenerExternalAddressSpecPtrType) ToLbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput() LbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput {
	return i.ToLbNetworkLoadBalancerListenerExternalAddressSpecPtrOutputWithContext(context.Background())
}

func (i *lbNetworkLoadBalancerListenerExternalAddressSpecPtrType) ToLbNetworkLoadBalancerListenerExternalAddressSpecPtrOutputWithContext(ctx context.Context) LbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput)
}

type LbNetworkLoadBalancerListenerExternalAddressSpecOutput struct{ *pulumi.OutputState }

func (LbNetworkLoadBalancerListenerExternalAddressSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LbNetworkLoadBalancerListenerExternalAddressSpec)(nil)).Elem()
}

func (o LbNetworkLoadBalancerListenerExternalAddressSpecOutput) ToLbNetworkLoadBalancerListenerExternalAddressSpecOutput() LbNetworkLoadBalancerListenerExternalAddressSpecOutput {
	return o
}

func (o LbNetworkLoadBalancerListenerExternalAddressSpecOutput) ToLbNetworkLoadBalancerListenerExternalAddressSpecOutputWithContext(ctx context.Context) LbNetworkLoadBalancerListenerExternalAddressSpecOutput {
	return o
}

func (o LbNetworkLoadBalancerListenerExternalAddressSpecOutput) ToLbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput() LbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput {
	return o.ToLbNetworkLoadBalancerListenerExternalAddressSpecPtrOutputWithContext(context.Background())
}

func (o LbNetworkLoadBalancerListenerExternalAddressSpecOutput) ToLbNetworkLoadBalancerListenerExternalAddressSpecPtrOutputWithContext(ctx context.Context) LbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerListenerExternalAddressSpec) *LbNetworkLoadBalancerListenerExternalAddressSpec {
		return &v
	}).(LbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput)
}

// External IP address for a listener. IP address will be allocated if it wasn't been set.
func (o LbNetworkLoadBalancerListenerExternalAddressSpecOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerListenerExternalAddressSpec) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// IP version of the internal addresses that the load balancer works with. Must be one of ipv4 or ipv6. The default is ipv4.
func (o LbNetworkLoadBalancerListenerExternalAddressSpecOutput) IpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerListenerExternalAddressSpec) *string { return v.IpVersion }).(pulumi.StringPtrOutput)
}

type LbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput struct{ *pulumi.OutputState }

func (LbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LbNetworkLoadBalancerListenerExternalAddressSpec)(nil)).Elem()
}

func (o LbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput) ToLbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput() LbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput {
	return o
}

func (o LbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput) ToLbNetworkLoadBalancerListenerExternalAddressSpecPtrOutputWithContext(ctx context.Context) LbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput {
	return o
}

func (o LbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput) Elem() LbNetworkLoadBalancerListenerExternalAddressSpecOutput {
	return o.ApplyT(func(v *LbNetworkLoadBalancerListenerExternalAddressSpec) LbNetworkLoadBalancerListenerExternalAddressSpec {
		return *v
	}).(LbNetworkLoadBalancerListenerExternalAddressSpecOutput)
}

// External IP address for a listener. IP address will be allocated if it wasn't been set.
func (o LbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LbNetworkLoadBalancerListenerExternalAddressSpec) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// IP version of the internal addresses that the load balancer works with. Must be one of ipv4 or ipv6. The default is ipv4.
func (o LbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput) IpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LbNetworkLoadBalancerListenerExternalAddressSpec) *string {
		if v == nil {
			return nil
		}
		return v.IpVersion
	}).(pulumi.StringPtrOutput)
}

type LbNetworkLoadBalancerListenerInternalAddressSpec struct {
	// External IP address for a listener. IP address will be allocated if it wasn't been set.
	Address *string `pulumi:"address"`
	// IP version of the internal addresses that the load balancer works with. Must be one of ipv4 or ipv6. The default is ipv4.
	IpVersion *string `pulumi:"ipVersion"`
	// ID of the subnet to which the internal IP address belongs.
	SubnetId string `pulumi:"subnetId"`
}

// LbNetworkLoadBalancerListenerInternalAddressSpecInput is an input type that accepts LbNetworkLoadBalancerListenerInternalAddressSpecArgs and LbNetworkLoadBalancerListenerInternalAddressSpecOutput values.
// You can construct a concrete instance of `LbNetworkLoadBalancerListenerInternalAddressSpecInput` via:
//
//          LbNetworkLoadBalancerListenerInternalAddressSpecArgs{...}
type LbNetworkLoadBalancerListenerInternalAddressSpecInput interface {
	pulumi.Input

	ToLbNetworkLoadBalancerListenerInternalAddressSpecOutput() LbNetworkLoadBalancerListenerInternalAddressSpecOutput
	ToLbNetworkLoadBalancerListenerInternalAddressSpecOutputWithContext(context.Context) LbNetworkLoadBalancerListenerInternalAddressSpecOutput
}

type LbNetworkLoadBalancerListenerInternalAddressSpecArgs struct {
	// External IP address for a listener. IP address will be allocated if it wasn't been set.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// IP version of the internal addresses that the load balancer works with. Must be one of ipv4 or ipv6. The default is ipv4.
	IpVersion pulumi.StringPtrInput `pulumi:"ipVersion"`
	// ID of the subnet to which the internal IP address belongs.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (LbNetworkLoadBalancerListenerInternalAddressSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LbNetworkLoadBalancerListenerInternalAddressSpec)(nil)).Elem()
}

func (i LbNetworkLoadBalancerListenerInternalAddressSpecArgs) ToLbNetworkLoadBalancerListenerInternalAddressSpecOutput() LbNetworkLoadBalancerListenerInternalAddressSpecOutput {
	return i.ToLbNetworkLoadBalancerListenerInternalAddressSpecOutputWithContext(context.Background())
}

func (i LbNetworkLoadBalancerListenerInternalAddressSpecArgs) ToLbNetworkLoadBalancerListenerInternalAddressSpecOutputWithContext(ctx context.Context) LbNetworkLoadBalancerListenerInternalAddressSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbNetworkLoadBalancerListenerInternalAddressSpecOutput)
}

func (i LbNetworkLoadBalancerListenerInternalAddressSpecArgs) ToLbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput() LbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput {
	return i.ToLbNetworkLoadBalancerListenerInternalAddressSpecPtrOutputWithContext(context.Background())
}

func (i LbNetworkLoadBalancerListenerInternalAddressSpecArgs) ToLbNetworkLoadBalancerListenerInternalAddressSpecPtrOutputWithContext(ctx context.Context) LbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbNetworkLoadBalancerListenerInternalAddressSpecOutput).ToLbNetworkLoadBalancerListenerInternalAddressSpecPtrOutputWithContext(ctx)
}

// LbNetworkLoadBalancerListenerInternalAddressSpecPtrInput is an input type that accepts LbNetworkLoadBalancerListenerInternalAddressSpecArgs, LbNetworkLoadBalancerListenerInternalAddressSpecPtr and LbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput values.
// You can construct a concrete instance of `LbNetworkLoadBalancerListenerInternalAddressSpecPtrInput` via:
//
//          LbNetworkLoadBalancerListenerInternalAddressSpecArgs{...}
//
//  or:
//
//          nil
type LbNetworkLoadBalancerListenerInternalAddressSpecPtrInput interface {
	pulumi.Input

	ToLbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput() LbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput
	ToLbNetworkLoadBalancerListenerInternalAddressSpecPtrOutputWithContext(context.Context) LbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput
}

type lbNetworkLoadBalancerListenerInternalAddressSpecPtrType LbNetworkLoadBalancerListenerInternalAddressSpecArgs

func LbNetworkLoadBalancerListenerInternalAddressSpecPtr(v *LbNetworkLoadBalancerListenerInternalAddressSpecArgs) LbNetworkLoadBalancerListenerInternalAddressSpecPtrInput {
	return (*lbNetworkLoadBalancerListenerInternalAddressSpecPtrType)(v)
}

func (*lbNetworkLoadBalancerListenerInternalAddressSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LbNetworkLoadBalancerListenerInternalAddressSpec)(nil)).Elem()
}

func (i *lbNetworkLoadBalancerListenerInternalAddressSpecPtrType) ToLbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput() LbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput {
	return i.ToLbNetworkLoadBalancerListenerInternalAddressSpecPtrOutputWithContext(context.Background())
}

func (i *lbNetworkLoadBalancerListenerInternalAddressSpecPtrType) ToLbNetworkLoadBalancerListenerInternalAddressSpecPtrOutputWithContext(ctx context.Context) LbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput)
}

type LbNetworkLoadBalancerListenerInternalAddressSpecOutput struct{ *pulumi.OutputState }

func (LbNetworkLoadBalancerListenerInternalAddressSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LbNetworkLoadBalancerListenerInternalAddressSpec)(nil)).Elem()
}

func (o LbNetworkLoadBalancerListenerInternalAddressSpecOutput) ToLbNetworkLoadBalancerListenerInternalAddressSpecOutput() LbNetworkLoadBalancerListenerInternalAddressSpecOutput {
	return o
}

func (o LbNetworkLoadBalancerListenerInternalAddressSpecOutput) ToLbNetworkLoadBalancerListenerInternalAddressSpecOutputWithContext(ctx context.Context) LbNetworkLoadBalancerListenerInternalAddressSpecOutput {
	return o
}

func (o LbNetworkLoadBalancerListenerInternalAddressSpecOutput) ToLbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput() LbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput {
	return o.ToLbNetworkLoadBalancerListenerInternalAddressSpecPtrOutputWithContext(context.Background())
}

func (o LbNetworkLoadBalancerListenerInternalAddressSpecOutput) ToLbNetworkLoadBalancerListenerInternalAddressSpecPtrOutputWithContext(ctx context.Context) LbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerListenerInternalAddressSpec) *LbNetworkLoadBalancerListenerInternalAddressSpec {
		return &v
	}).(LbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput)
}

// External IP address for a listener. IP address will be allocated if it wasn't been set.
func (o LbNetworkLoadBalancerListenerInternalAddressSpecOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerListenerInternalAddressSpec) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// IP version of the internal addresses that the load balancer works with. Must be one of ipv4 or ipv6. The default is ipv4.
func (o LbNetworkLoadBalancerListenerInternalAddressSpecOutput) IpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerListenerInternalAddressSpec) *string { return v.IpVersion }).(pulumi.StringPtrOutput)
}

// ID of the subnet to which the internal IP address belongs.
func (o LbNetworkLoadBalancerListenerInternalAddressSpecOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LbNetworkLoadBalancerListenerInternalAddressSpec) string { return v.SubnetId }).(pulumi.StringOutput)
}

type LbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput struct{ *pulumi.OutputState }

func (LbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LbNetworkLoadBalancerListenerInternalAddressSpec)(nil)).Elem()
}

func (o LbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput) ToLbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput() LbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput {
	return o
}

func (o LbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput) ToLbNetworkLoadBalancerListenerInternalAddressSpecPtrOutputWithContext(ctx context.Context) LbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput {
	return o
}

func (o LbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput) Elem() LbNetworkLoadBalancerListenerInternalAddressSpecOutput {
	return o.ApplyT(func(v *LbNetworkLoadBalancerListenerInternalAddressSpec) LbNetworkLoadBalancerListenerInternalAddressSpec {
		return *v
	}).(LbNetworkLoadBalancerListenerInternalAddressSpecOutput)
}

// External IP address for a listener. IP address will be allocated if it wasn't been set.
func (o LbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LbNetworkLoadBalancerListenerInternalAddressSpec) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// IP version of the internal addresses that the load balancer works with. Must be one of ipv4 or ipv6. The default is ipv4.
func (o LbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput) IpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LbNetworkLoadBalancerListenerInternalAddressSpec) *string {
		if v == nil {
			return nil
		}
		return v.IpVersion
	}).(pulumi.StringPtrOutput)
}

// ID of the subnet to which the internal IP address belongs.
func (o LbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LbNetworkLoadBalancerListenerInternalAddressSpec) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetId
	}).(pulumi.StringPtrOutput)
}

type LbTargetGroupTarget struct {
	// IP address of the target.
	Address string `pulumi:"address"`
	// ID of the subnet that targets are connected to.
	// All targets in the target group must be connected to the same subnet within a single availability zone.
	SubnetId string `pulumi:"subnetId"`
}

// LbTargetGroupTargetInput is an input type that accepts LbTargetGroupTargetArgs and LbTargetGroupTargetOutput values.
// You can construct a concrete instance of `LbTargetGroupTargetInput` via:
//
//          LbTargetGroupTargetArgs{...}
type LbTargetGroupTargetInput interface {
	pulumi.Input

	ToLbTargetGroupTargetOutput() LbTargetGroupTargetOutput
	ToLbTargetGroupTargetOutputWithContext(context.Context) LbTargetGroupTargetOutput
}

type LbTargetGroupTargetArgs struct {
	// IP address of the target.
	Address pulumi.StringInput `pulumi:"address"`
	// ID of the subnet that targets are connected to.
	// All targets in the target group must be connected to the same subnet within a single availability zone.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (LbTargetGroupTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LbTargetGroupTarget)(nil)).Elem()
}

func (i LbTargetGroupTargetArgs) ToLbTargetGroupTargetOutput() LbTargetGroupTargetOutput {
	return i.ToLbTargetGroupTargetOutputWithContext(context.Background())
}

func (i LbTargetGroupTargetArgs) ToLbTargetGroupTargetOutputWithContext(ctx context.Context) LbTargetGroupTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbTargetGroupTargetOutput)
}

// LbTargetGroupTargetArrayInput is an input type that accepts LbTargetGroupTargetArray and LbTargetGroupTargetArrayOutput values.
// You can construct a concrete instance of `LbTargetGroupTargetArrayInput` via:
//
//          LbTargetGroupTargetArray{ LbTargetGroupTargetArgs{...} }
type LbTargetGroupTargetArrayInput interface {
	pulumi.Input

	ToLbTargetGroupTargetArrayOutput() LbTargetGroupTargetArrayOutput
	ToLbTargetGroupTargetArrayOutputWithContext(context.Context) LbTargetGroupTargetArrayOutput
}

type LbTargetGroupTargetArray []LbTargetGroupTargetInput

func (LbTargetGroupTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LbTargetGroupTarget)(nil)).Elem()
}

func (i LbTargetGroupTargetArray) ToLbTargetGroupTargetArrayOutput() LbTargetGroupTargetArrayOutput {
	return i.ToLbTargetGroupTargetArrayOutputWithContext(context.Background())
}

func (i LbTargetGroupTargetArray) ToLbTargetGroupTargetArrayOutputWithContext(ctx context.Context) LbTargetGroupTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbTargetGroupTargetArrayOutput)
}

type LbTargetGroupTargetOutput struct{ *pulumi.OutputState }

func (LbTargetGroupTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LbTargetGroupTarget)(nil)).Elem()
}

func (o LbTargetGroupTargetOutput) ToLbTargetGroupTargetOutput() LbTargetGroupTargetOutput {
	return o
}

func (o LbTargetGroupTargetOutput) ToLbTargetGroupTargetOutputWithContext(ctx context.Context) LbTargetGroupTargetOutput {
	return o
}

// IP address of the target.
func (o LbTargetGroupTargetOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v LbTargetGroupTarget) string { return v.Address }).(pulumi.StringOutput)
}

// ID of the subnet that targets are connected to.
// All targets in the target group must be connected to the same subnet within a single availability zone.
func (o LbTargetGroupTargetOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LbTargetGroupTarget) string { return v.SubnetId }).(pulumi.StringOutput)
}

type LbTargetGroupTargetArrayOutput struct{ *pulumi.OutputState }

func (LbTargetGroupTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LbTargetGroupTarget)(nil)).Elem()
}

func (o LbTargetGroupTargetArrayOutput) ToLbTargetGroupTargetArrayOutput() LbTargetGroupTargetArrayOutput {
	return o
}

func (o LbTargetGroupTargetArrayOutput) ToLbTargetGroupTargetArrayOutputWithContext(ctx context.Context) LbTargetGroupTargetArrayOutput {
	return o
}

func (o LbTargetGroupTargetArrayOutput) Index(i pulumi.IntInput) LbTargetGroupTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LbTargetGroupTarget {
		return vs[0].([]LbTargetGroupTarget)[vs[1].(int)]
	}).(LbTargetGroupTargetOutput)
}

type MdbClickhouseClusterAccess struct {
	// Allow access for Web SQL. Can be either `true` or `false`.
	DataLens *bool `pulumi:"dataLens"`
	// Allow access for Yandex.Metrika. Can be either `true` or `false`.
	Metrika *bool `pulumi:"metrika"`
	// Allow access for Serverless. Can be either `true` or `false`.
	Serverless *bool `pulumi:"serverless"`
	// Allow access for DataLens. Can be either `true` or `false`.
	WebSql *bool `pulumi:"webSql"`
}

// MdbClickhouseClusterAccessInput is an input type that accepts MdbClickhouseClusterAccessArgs and MdbClickhouseClusterAccessOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterAccessInput` via:
//
//          MdbClickhouseClusterAccessArgs{...}
type MdbClickhouseClusterAccessInput interface {
	pulumi.Input

	ToMdbClickhouseClusterAccessOutput() MdbClickhouseClusterAccessOutput
	ToMdbClickhouseClusterAccessOutputWithContext(context.Context) MdbClickhouseClusterAccessOutput
}

type MdbClickhouseClusterAccessArgs struct {
	// Allow access for Web SQL. Can be either `true` or `false`.
	DataLens pulumi.BoolPtrInput `pulumi:"dataLens"`
	// Allow access for Yandex.Metrika. Can be either `true` or `false`.
	Metrika pulumi.BoolPtrInput `pulumi:"metrika"`
	// Allow access for Serverless. Can be either `true` or `false`.
	Serverless pulumi.BoolPtrInput `pulumi:"serverless"`
	// Allow access for DataLens. Can be either `true` or `false`.
	WebSql pulumi.BoolPtrInput `pulumi:"webSql"`
}

func (MdbClickhouseClusterAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterAccess)(nil)).Elem()
}

func (i MdbClickhouseClusterAccessArgs) ToMdbClickhouseClusterAccessOutput() MdbClickhouseClusterAccessOutput {
	return i.ToMdbClickhouseClusterAccessOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterAccessArgs) ToMdbClickhouseClusterAccessOutputWithContext(ctx context.Context) MdbClickhouseClusterAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterAccessOutput)
}

func (i MdbClickhouseClusterAccessArgs) ToMdbClickhouseClusterAccessPtrOutput() MdbClickhouseClusterAccessPtrOutput {
	return i.ToMdbClickhouseClusterAccessPtrOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterAccessArgs) ToMdbClickhouseClusterAccessPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterAccessOutput).ToMdbClickhouseClusterAccessPtrOutputWithContext(ctx)
}

// MdbClickhouseClusterAccessPtrInput is an input type that accepts MdbClickhouseClusterAccessArgs, MdbClickhouseClusterAccessPtr and MdbClickhouseClusterAccessPtrOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterAccessPtrInput` via:
//
//          MdbClickhouseClusterAccessArgs{...}
//
//  or:
//
//          nil
type MdbClickhouseClusterAccessPtrInput interface {
	pulumi.Input

	ToMdbClickhouseClusterAccessPtrOutput() MdbClickhouseClusterAccessPtrOutput
	ToMdbClickhouseClusterAccessPtrOutputWithContext(context.Context) MdbClickhouseClusterAccessPtrOutput
}

type mdbClickhouseClusterAccessPtrType MdbClickhouseClusterAccessArgs

func MdbClickhouseClusterAccessPtr(v *MdbClickhouseClusterAccessArgs) MdbClickhouseClusterAccessPtrInput {
	return (*mdbClickhouseClusterAccessPtrType)(v)
}

func (*mdbClickhouseClusterAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbClickhouseClusterAccess)(nil)).Elem()
}

func (i *mdbClickhouseClusterAccessPtrType) ToMdbClickhouseClusterAccessPtrOutput() MdbClickhouseClusterAccessPtrOutput {
	return i.ToMdbClickhouseClusterAccessPtrOutputWithContext(context.Background())
}

func (i *mdbClickhouseClusterAccessPtrType) ToMdbClickhouseClusterAccessPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterAccessPtrOutput)
}

type MdbClickhouseClusterAccessOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterAccess)(nil)).Elem()
}

func (o MdbClickhouseClusterAccessOutput) ToMdbClickhouseClusterAccessOutput() MdbClickhouseClusterAccessOutput {
	return o
}

func (o MdbClickhouseClusterAccessOutput) ToMdbClickhouseClusterAccessOutputWithContext(ctx context.Context) MdbClickhouseClusterAccessOutput {
	return o
}

func (o MdbClickhouseClusterAccessOutput) ToMdbClickhouseClusterAccessPtrOutput() MdbClickhouseClusterAccessPtrOutput {
	return o.ToMdbClickhouseClusterAccessPtrOutputWithContext(context.Background())
}

func (o MdbClickhouseClusterAccessOutput) ToMdbClickhouseClusterAccessPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterAccessPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterAccess) *MdbClickhouseClusterAccess {
		return &v
	}).(MdbClickhouseClusterAccessPtrOutput)
}

// Allow access for Web SQL. Can be either `true` or `false`.
func (o MdbClickhouseClusterAccessOutput) DataLens() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterAccess) *bool { return v.DataLens }).(pulumi.BoolPtrOutput)
}

// Allow access for Yandex.Metrika. Can be either `true` or `false`.
func (o MdbClickhouseClusterAccessOutput) Metrika() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterAccess) *bool { return v.Metrika }).(pulumi.BoolPtrOutput)
}

// Allow access for Serverless. Can be either `true` or `false`.
func (o MdbClickhouseClusterAccessOutput) Serverless() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterAccess) *bool { return v.Serverless }).(pulumi.BoolPtrOutput)
}

// Allow access for DataLens. Can be either `true` or `false`.
func (o MdbClickhouseClusterAccessOutput) WebSql() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterAccess) *bool { return v.WebSql }).(pulumi.BoolPtrOutput)
}

type MdbClickhouseClusterAccessPtrOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbClickhouseClusterAccess)(nil)).Elem()
}

func (o MdbClickhouseClusterAccessPtrOutput) ToMdbClickhouseClusterAccessPtrOutput() MdbClickhouseClusterAccessPtrOutput {
	return o
}

func (o MdbClickhouseClusterAccessPtrOutput) ToMdbClickhouseClusterAccessPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterAccessPtrOutput {
	return o
}

func (o MdbClickhouseClusterAccessPtrOutput) Elem() MdbClickhouseClusterAccessOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterAccess) MdbClickhouseClusterAccess { return *v }).(MdbClickhouseClusterAccessOutput)
}

// Allow access for Web SQL. Can be either `true` or `false`.
func (o MdbClickhouseClusterAccessPtrOutput) DataLens() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterAccess) *bool {
		if v == nil {
			return nil
		}
		return v.DataLens
	}).(pulumi.BoolPtrOutput)
}

// Allow access for Yandex.Metrika. Can be either `true` or `false`.
func (o MdbClickhouseClusterAccessPtrOutput) Metrika() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterAccess) *bool {
		if v == nil {
			return nil
		}
		return v.Metrika
	}).(pulumi.BoolPtrOutput)
}

// Allow access for Serverless. Can be either `true` or `false`.
func (o MdbClickhouseClusterAccessPtrOutput) Serverless() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterAccess) *bool {
		if v == nil {
			return nil
		}
		return v.Serverless
	}).(pulumi.BoolPtrOutput)
}

// Allow access for DataLens. Can be either `true` or `false`.
func (o MdbClickhouseClusterAccessPtrOutput) WebSql() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterAccess) *bool {
		if v == nil {
			return nil
		}
		return v.WebSql
	}).(pulumi.BoolPtrOutput)
}

type MdbClickhouseClusterBackupWindowStart struct {
	// The hour at which backup will be started.
	Hours *int `pulumi:"hours"`
	// The minute at which backup will be started.
	Minutes *int `pulumi:"minutes"`
}

// MdbClickhouseClusterBackupWindowStartInput is an input type that accepts MdbClickhouseClusterBackupWindowStartArgs and MdbClickhouseClusterBackupWindowStartOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterBackupWindowStartInput` via:
//
//          MdbClickhouseClusterBackupWindowStartArgs{...}
type MdbClickhouseClusterBackupWindowStartInput interface {
	pulumi.Input

	ToMdbClickhouseClusterBackupWindowStartOutput() MdbClickhouseClusterBackupWindowStartOutput
	ToMdbClickhouseClusterBackupWindowStartOutputWithContext(context.Context) MdbClickhouseClusterBackupWindowStartOutput
}

type MdbClickhouseClusterBackupWindowStartArgs struct {
	// The hour at which backup will be started.
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// The minute at which backup will be started.
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
}

func (MdbClickhouseClusterBackupWindowStartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterBackupWindowStart)(nil)).Elem()
}

func (i MdbClickhouseClusterBackupWindowStartArgs) ToMdbClickhouseClusterBackupWindowStartOutput() MdbClickhouseClusterBackupWindowStartOutput {
	return i.ToMdbClickhouseClusterBackupWindowStartOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterBackupWindowStartArgs) ToMdbClickhouseClusterBackupWindowStartOutputWithContext(ctx context.Context) MdbClickhouseClusterBackupWindowStartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterBackupWindowStartOutput)
}

func (i MdbClickhouseClusterBackupWindowStartArgs) ToMdbClickhouseClusterBackupWindowStartPtrOutput() MdbClickhouseClusterBackupWindowStartPtrOutput {
	return i.ToMdbClickhouseClusterBackupWindowStartPtrOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterBackupWindowStartArgs) ToMdbClickhouseClusterBackupWindowStartPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterBackupWindowStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterBackupWindowStartOutput).ToMdbClickhouseClusterBackupWindowStartPtrOutputWithContext(ctx)
}

// MdbClickhouseClusterBackupWindowStartPtrInput is an input type that accepts MdbClickhouseClusterBackupWindowStartArgs, MdbClickhouseClusterBackupWindowStartPtr and MdbClickhouseClusterBackupWindowStartPtrOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterBackupWindowStartPtrInput` via:
//
//          MdbClickhouseClusterBackupWindowStartArgs{...}
//
//  or:
//
//          nil
type MdbClickhouseClusterBackupWindowStartPtrInput interface {
	pulumi.Input

	ToMdbClickhouseClusterBackupWindowStartPtrOutput() MdbClickhouseClusterBackupWindowStartPtrOutput
	ToMdbClickhouseClusterBackupWindowStartPtrOutputWithContext(context.Context) MdbClickhouseClusterBackupWindowStartPtrOutput
}

type mdbClickhouseClusterBackupWindowStartPtrType MdbClickhouseClusterBackupWindowStartArgs

func MdbClickhouseClusterBackupWindowStartPtr(v *MdbClickhouseClusterBackupWindowStartArgs) MdbClickhouseClusterBackupWindowStartPtrInput {
	return (*mdbClickhouseClusterBackupWindowStartPtrType)(v)
}

func (*mdbClickhouseClusterBackupWindowStartPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbClickhouseClusterBackupWindowStart)(nil)).Elem()
}

func (i *mdbClickhouseClusterBackupWindowStartPtrType) ToMdbClickhouseClusterBackupWindowStartPtrOutput() MdbClickhouseClusterBackupWindowStartPtrOutput {
	return i.ToMdbClickhouseClusterBackupWindowStartPtrOutputWithContext(context.Background())
}

func (i *mdbClickhouseClusterBackupWindowStartPtrType) ToMdbClickhouseClusterBackupWindowStartPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterBackupWindowStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterBackupWindowStartPtrOutput)
}

type MdbClickhouseClusterBackupWindowStartOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterBackupWindowStartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterBackupWindowStart)(nil)).Elem()
}

func (o MdbClickhouseClusterBackupWindowStartOutput) ToMdbClickhouseClusterBackupWindowStartOutput() MdbClickhouseClusterBackupWindowStartOutput {
	return o
}

func (o MdbClickhouseClusterBackupWindowStartOutput) ToMdbClickhouseClusterBackupWindowStartOutputWithContext(ctx context.Context) MdbClickhouseClusterBackupWindowStartOutput {
	return o
}

func (o MdbClickhouseClusterBackupWindowStartOutput) ToMdbClickhouseClusterBackupWindowStartPtrOutput() MdbClickhouseClusterBackupWindowStartPtrOutput {
	return o.ToMdbClickhouseClusterBackupWindowStartPtrOutputWithContext(context.Background())
}

func (o MdbClickhouseClusterBackupWindowStartOutput) ToMdbClickhouseClusterBackupWindowStartPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterBackupWindowStartPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterBackupWindowStart) *MdbClickhouseClusterBackupWindowStart {
		return &v
	}).(MdbClickhouseClusterBackupWindowStartPtrOutput)
}

// The hour at which backup will be started.
func (o MdbClickhouseClusterBackupWindowStartOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterBackupWindowStart) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// The minute at which backup will be started.
func (o MdbClickhouseClusterBackupWindowStartOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterBackupWindowStart) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

type MdbClickhouseClusterBackupWindowStartPtrOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterBackupWindowStartPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbClickhouseClusterBackupWindowStart)(nil)).Elem()
}

func (o MdbClickhouseClusterBackupWindowStartPtrOutput) ToMdbClickhouseClusterBackupWindowStartPtrOutput() MdbClickhouseClusterBackupWindowStartPtrOutput {
	return o
}

func (o MdbClickhouseClusterBackupWindowStartPtrOutput) ToMdbClickhouseClusterBackupWindowStartPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterBackupWindowStartPtrOutput {
	return o
}

func (o MdbClickhouseClusterBackupWindowStartPtrOutput) Elem() MdbClickhouseClusterBackupWindowStartOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterBackupWindowStart) MdbClickhouseClusterBackupWindowStart { return *v }).(MdbClickhouseClusterBackupWindowStartOutput)
}

// The hour at which backup will be started.
func (o MdbClickhouseClusterBackupWindowStartPtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterBackupWindowStart) *int {
		if v == nil {
			return nil
		}
		return v.Hours
	}).(pulumi.IntPtrOutput)
}

// The minute at which backup will be started.
func (o MdbClickhouseClusterBackupWindowStartPtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterBackupWindowStart) *int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntPtrOutput)
}

type MdbClickhouseClusterClickhouse struct {
	// Main ClickHouse cluster configuration.
	Config *MdbClickhouseClusterClickhouseConfig `pulumi:"config"`
	// Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
	Resources MdbClickhouseClusterClickhouseResources `pulumi:"resources"`
}

// MdbClickhouseClusterClickhouseInput is an input type that accepts MdbClickhouseClusterClickhouseArgs and MdbClickhouseClusterClickhouseOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterClickhouseInput` via:
//
//          MdbClickhouseClusterClickhouseArgs{...}
type MdbClickhouseClusterClickhouseInput interface {
	pulumi.Input

	ToMdbClickhouseClusterClickhouseOutput() MdbClickhouseClusterClickhouseOutput
	ToMdbClickhouseClusterClickhouseOutputWithContext(context.Context) MdbClickhouseClusterClickhouseOutput
}

type MdbClickhouseClusterClickhouseArgs struct {
	// Main ClickHouse cluster configuration.
	Config MdbClickhouseClusterClickhouseConfigPtrInput `pulumi:"config"`
	// Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
	Resources MdbClickhouseClusterClickhouseResourcesInput `pulumi:"resources"`
}

func (MdbClickhouseClusterClickhouseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterClickhouse)(nil)).Elem()
}

func (i MdbClickhouseClusterClickhouseArgs) ToMdbClickhouseClusterClickhouseOutput() MdbClickhouseClusterClickhouseOutput {
	return i.ToMdbClickhouseClusterClickhouseOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterClickhouseArgs) ToMdbClickhouseClusterClickhouseOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseOutput)
}

func (i MdbClickhouseClusterClickhouseArgs) ToMdbClickhouseClusterClickhousePtrOutput() MdbClickhouseClusterClickhousePtrOutput {
	return i.ToMdbClickhouseClusterClickhousePtrOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterClickhouseArgs) ToMdbClickhouseClusterClickhousePtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhousePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseOutput).ToMdbClickhouseClusterClickhousePtrOutputWithContext(ctx)
}

// MdbClickhouseClusterClickhousePtrInput is an input type that accepts MdbClickhouseClusterClickhouseArgs, MdbClickhouseClusterClickhousePtr and MdbClickhouseClusterClickhousePtrOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterClickhousePtrInput` via:
//
//          MdbClickhouseClusterClickhouseArgs{...}
//
//  or:
//
//          nil
type MdbClickhouseClusterClickhousePtrInput interface {
	pulumi.Input

	ToMdbClickhouseClusterClickhousePtrOutput() MdbClickhouseClusterClickhousePtrOutput
	ToMdbClickhouseClusterClickhousePtrOutputWithContext(context.Context) MdbClickhouseClusterClickhousePtrOutput
}

type mdbClickhouseClusterClickhousePtrType MdbClickhouseClusterClickhouseArgs

func MdbClickhouseClusterClickhousePtr(v *MdbClickhouseClusterClickhouseArgs) MdbClickhouseClusterClickhousePtrInput {
	return (*mdbClickhouseClusterClickhousePtrType)(v)
}

func (*mdbClickhouseClusterClickhousePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbClickhouseClusterClickhouse)(nil)).Elem()
}

func (i *mdbClickhouseClusterClickhousePtrType) ToMdbClickhouseClusterClickhousePtrOutput() MdbClickhouseClusterClickhousePtrOutput {
	return i.ToMdbClickhouseClusterClickhousePtrOutputWithContext(context.Background())
}

func (i *mdbClickhouseClusterClickhousePtrType) ToMdbClickhouseClusterClickhousePtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhousePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhousePtrOutput)
}

type MdbClickhouseClusterClickhouseOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterClickhouseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterClickhouse)(nil)).Elem()
}

func (o MdbClickhouseClusterClickhouseOutput) ToMdbClickhouseClusterClickhouseOutput() MdbClickhouseClusterClickhouseOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseOutput) ToMdbClickhouseClusterClickhouseOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseOutput) ToMdbClickhouseClusterClickhousePtrOutput() MdbClickhouseClusterClickhousePtrOutput {
	return o.ToMdbClickhouseClusterClickhousePtrOutputWithContext(context.Background())
}

func (o MdbClickhouseClusterClickhouseOutput) ToMdbClickhouseClusterClickhousePtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhousePtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouse) *MdbClickhouseClusterClickhouse {
		return &v
	}).(MdbClickhouseClusterClickhousePtrOutput)
}

// Main ClickHouse cluster configuration.
func (o MdbClickhouseClusterClickhouseOutput) Config() MdbClickhouseClusterClickhouseConfigPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouse) *MdbClickhouseClusterClickhouseConfig { return v.Config }).(MdbClickhouseClusterClickhouseConfigPtrOutput)
}

// Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
func (o MdbClickhouseClusterClickhouseOutput) Resources() MdbClickhouseClusterClickhouseResourcesOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouse) MdbClickhouseClusterClickhouseResources { return v.Resources }).(MdbClickhouseClusterClickhouseResourcesOutput)
}

type MdbClickhouseClusterClickhousePtrOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterClickhousePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbClickhouseClusterClickhouse)(nil)).Elem()
}

func (o MdbClickhouseClusterClickhousePtrOutput) ToMdbClickhouseClusterClickhousePtrOutput() MdbClickhouseClusterClickhousePtrOutput {
	return o
}

func (o MdbClickhouseClusterClickhousePtrOutput) ToMdbClickhouseClusterClickhousePtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhousePtrOutput {
	return o
}

func (o MdbClickhouseClusterClickhousePtrOutput) Elem() MdbClickhouseClusterClickhouseOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouse) MdbClickhouseClusterClickhouse { return *v }).(MdbClickhouseClusterClickhouseOutput)
}

// Main ClickHouse cluster configuration.
func (o MdbClickhouseClusterClickhousePtrOutput) Config() MdbClickhouseClusterClickhouseConfigPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouse) *MdbClickhouseClusterClickhouseConfig {
		if v == nil {
			return nil
		}
		return v.Config
	}).(MdbClickhouseClusterClickhouseConfigPtrOutput)
}

// Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
func (o MdbClickhouseClusterClickhousePtrOutput) Resources() MdbClickhouseClusterClickhouseResourcesPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouse) *MdbClickhouseClusterClickhouseResources {
		if v == nil {
			return nil
		}
		return &v.Resources
	}).(MdbClickhouseClusterClickhouseResourcesPtrOutput)
}

type MdbClickhouseClusterClickhouseConfig struct {
	BackgroundPoolSize         *int `pulumi:"backgroundPoolSize"`
	BackgroundSchedulePoolSize *int `pulumi:"backgroundSchedulePoolSize"`
	// Data compression configuration. The structure is documented below.
	Compressions []MdbClickhouseClusterClickhouseConfigCompression `pulumi:"compressions"`
	GeobaseUri   *string                                           `pulumi:"geobaseUri"`
	// Graphite rollup configuration. The structure is documented below.
	GraphiteRollups []MdbClickhouseClusterClickhouseConfigGraphiteRollup `pulumi:"graphiteRollups"`
	// Kafka connection configuration. The structure is documented below.
	Kafka *MdbClickhouseClusterClickhouseConfigKafka `pulumi:"kafka"`
	// Kafka topic connection configuration. The structure is documented below.
	KafkaTopics            []MdbClickhouseClusterClickhouseConfigKafkaTopic `pulumi:"kafkaTopics"`
	KeepAliveTimeout       *int                                             `pulumi:"keepAliveTimeout"`
	LogLevel               *string                                          `pulumi:"logLevel"`
	MarkCacheSize          *int                                             `pulumi:"markCacheSize"`
	MaxConcurrentQueries   *int                                             `pulumi:"maxConcurrentQueries"`
	MaxConnections         *int                                             `pulumi:"maxConnections"`
	MaxPartitionSizeToDrop *int                                             `pulumi:"maxPartitionSizeToDrop"`
	MaxTableSizeToDrop     *int                                             `pulumi:"maxTableSizeToDrop"`
	// MergeTree engine configuration. The structure is documented below.
	MergeTree                   *MdbClickhouseClusterClickhouseConfigMergeTree `pulumi:"mergeTree"`
	MetricLogEnabled            *bool                                          `pulumi:"metricLogEnabled"`
	MetricLogRetentionSize      *int                                           `pulumi:"metricLogRetentionSize"`
	MetricLogRetentionTime      *int                                           `pulumi:"metricLogRetentionTime"`
	PartLogRetentionSize        *int                                           `pulumi:"partLogRetentionSize"`
	PartLogRetentionTime        *int                                           `pulumi:"partLogRetentionTime"`
	QueryLogRetentionSize       *int                                           `pulumi:"queryLogRetentionSize"`
	QueryLogRetentionTime       *int                                           `pulumi:"queryLogRetentionTime"`
	QueryThreadLogEnabled       *bool                                          `pulumi:"queryThreadLogEnabled"`
	QueryThreadLogRetentionSize *int                                           `pulumi:"queryThreadLogRetentionSize"`
	QueryThreadLogRetentionTime *int                                           `pulumi:"queryThreadLogRetentionTime"`
	// RabbitMQ connection configuration. The structure is documented below.
	Rabbitmq              *MdbClickhouseClusterClickhouseConfigRabbitmq `pulumi:"rabbitmq"`
	TextLogEnabled        *bool                                         `pulumi:"textLogEnabled"`
	TextLogLevel          *string                                       `pulumi:"textLogLevel"`
	TextLogRetentionSize  *int                                          `pulumi:"textLogRetentionSize"`
	TextLogRetentionTime  *int                                          `pulumi:"textLogRetentionTime"`
	Timezone              *string                                       `pulumi:"timezone"`
	TraceLogEnabled       *bool                                         `pulumi:"traceLogEnabled"`
	TraceLogRetentionSize *int                                          `pulumi:"traceLogRetentionSize"`
	TraceLogRetentionTime *int                                          `pulumi:"traceLogRetentionTime"`
	UncompressedCacheSize *int                                          `pulumi:"uncompressedCacheSize"`
}

// MdbClickhouseClusterClickhouseConfigInput is an input type that accepts MdbClickhouseClusterClickhouseConfigArgs and MdbClickhouseClusterClickhouseConfigOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterClickhouseConfigInput` via:
//
//          MdbClickhouseClusterClickhouseConfigArgs{...}
type MdbClickhouseClusterClickhouseConfigInput interface {
	pulumi.Input

	ToMdbClickhouseClusterClickhouseConfigOutput() MdbClickhouseClusterClickhouseConfigOutput
	ToMdbClickhouseClusterClickhouseConfigOutputWithContext(context.Context) MdbClickhouseClusterClickhouseConfigOutput
}

type MdbClickhouseClusterClickhouseConfigArgs struct {
	BackgroundPoolSize         pulumi.IntPtrInput `pulumi:"backgroundPoolSize"`
	BackgroundSchedulePoolSize pulumi.IntPtrInput `pulumi:"backgroundSchedulePoolSize"`
	// Data compression configuration. The structure is documented below.
	Compressions MdbClickhouseClusterClickhouseConfigCompressionArrayInput `pulumi:"compressions"`
	GeobaseUri   pulumi.StringPtrInput                                     `pulumi:"geobaseUri"`
	// Graphite rollup configuration. The structure is documented below.
	GraphiteRollups MdbClickhouseClusterClickhouseConfigGraphiteRollupArrayInput `pulumi:"graphiteRollups"`
	// Kafka connection configuration. The structure is documented below.
	Kafka MdbClickhouseClusterClickhouseConfigKafkaPtrInput `pulumi:"kafka"`
	// Kafka topic connection configuration. The structure is documented below.
	KafkaTopics            MdbClickhouseClusterClickhouseConfigKafkaTopicArrayInput `pulumi:"kafkaTopics"`
	KeepAliveTimeout       pulumi.IntPtrInput                                       `pulumi:"keepAliveTimeout"`
	LogLevel               pulumi.StringPtrInput                                    `pulumi:"logLevel"`
	MarkCacheSize          pulumi.IntPtrInput                                       `pulumi:"markCacheSize"`
	MaxConcurrentQueries   pulumi.IntPtrInput                                       `pulumi:"maxConcurrentQueries"`
	MaxConnections         pulumi.IntPtrInput                                       `pulumi:"maxConnections"`
	MaxPartitionSizeToDrop pulumi.IntPtrInput                                       `pulumi:"maxPartitionSizeToDrop"`
	MaxTableSizeToDrop     pulumi.IntPtrInput                                       `pulumi:"maxTableSizeToDrop"`
	// MergeTree engine configuration. The structure is documented below.
	MergeTree                   MdbClickhouseClusterClickhouseConfigMergeTreePtrInput `pulumi:"mergeTree"`
	MetricLogEnabled            pulumi.BoolPtrInput                                   `pulumi:"metricLogEnabled"`
	MetricLogRetentionSize      pulumi.IntPtrInput                                    `pulumi:"metricLogRetentionSize"`
	MetricLogRetentionTime      pulumi.IntPtrInput                                    `pulumi:"metricLogRetentionTime"`
	PartLogRetentionSize        pulumi.IntPtrInput                                    `pulumi:"partLogRetentionSize"`
	PartLogRetentionTime        pulumi.IntPtrInput                                    `pulumi:"partLogRetentionTime"`
	QueryLogRetentionSize       pulumi.IntPtrInput                                    `pulumi:"queryLogRetentionSize"`
	QueryLogRetentionTime       pulumi.IntPtrInput                                    `pulumi:"queryLogRetentionTime"`
	QueryThreadLogEnabled       pulumi.BoolPtrInput                                   `pulumi:"queryThreadLogEnabled"`
	QueryThreadLogRetentionSize pulumi.IntPtrInput                                    `pulumi:"queryThreadLogRetentionSize"`
	QueryThreadLogRetentionTime pulumi.IntPtrInput                                    `pulumi:"queryThreadLogRetentionTime"`
	// RabbitMQ connection configuration. The structure is documented below.
	Rabbitmq              MdbClickhouseClusterClickhouseConfigRabbitmqPtrInput `pulumi:"rabbitmq"`
	TextLogEnabled        pulumi.BoolPtrInput                                  `pulumi:"textLogEnabled"`
	TextLogLevel          pulumi.StringPtrInput                                `pulumi:"textLogLevel"`
	TextLogRetentionSize  pulumi.IntPtrInput                                   `pulumi:"textLogRetentionSize"`
	TextLogRetentionTime  pulumi.IntPtrInput                                   `pulumi:"textLogRetentionTime"`
	Timezone              pulumi.StringPtrInput                                `pulumi:"timezone"`
	TraceLogEnabled       pulumi.BoolPtrInput                                  `pulumi:"traceLogEnabled"`
	TraceLogRetentionSize pulumi.IntPtrInput                                   `pulumi:"traceLogRetentionSize"`
	TraceLogRetentionTime pulumi.IntPtrInput                                   `pulumi:"traceLogRetentionTime"`
	UncompressedCacheSize pulumi.IntPtrInput                                   `pulumi:"uncompressedCacheSize"`
}

func (MdbClickhouseClusterClickhouseConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterClickhouseConfig)(nil)).Elem()
}

func (i MdbClickhouseClusterClickhouseConfigArgs) ToMdbClickhouseClusterClickhouseConfigOutput() MdbClickhouseClusterClickhouseConfigOutput {
	return i.ToMdbClickhouseClusterClickhouseConfigOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterClickhouseConfigArgs) ToMdbClickhouseClusterClickhouseConfigOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseConfigOutput)
}

func (i MdbClickhouseClusterClickhouseConfigArgs) ToMdbClickhouseClusterClickhouseConfigPtrOutput() MdbClickhouseClusterClickhouseConfigPtrOutput {
	return i.ToMdbClickhouseClusterClickhouseConfigPtrOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterClickhouseConfigArgs) ToMdbClickhouseClusterClickhouseConfigPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseConfigOutput).ToMdbClickhouseClusterClickhouseConfigPtrOutputWithContext(ctx)
}

// MdbClickhouseClusterClickhouseConfigPtrInput is an input type that accepts MdbClickhouseClusterClickhouseConfigArgs, MdbClickhouseClusterClickhouseConfigPtr and MdbClickhouseClusterClickhouseConfigPtrOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterClickhouseConfigPtrInput` via:
//
//          MdbClickhouseClusterClickhouseConfigArgs{...}
//
//  or:
//
//          nil
type MdbClickhouseClusterClickhouseConfigPtrInput interface {
	pulumi.Input

	ToMdbClickhouseClusterClickhouseConfigPtrOutput() MdbClickhouseClusterClickhouseConfigPtrOutput
	ToMdbClickhouseClusterClickhouseConfigPtrOutputWithContext(context.Context) MdbClickhouseClusterClickhouseConfigPtrOutput
}

type mdbClickhouseClusterClickhouseConfigPtrType MdbClickhouseClusterClickhouseConfigArgs

func MdbClickhouseClusterClickhouseConfigPtr(v *MdbClickhouseClusterClickhouseConfigArgs) MdbClickhouseClusterClickhouseConfigPtrInput {
	return (*mdbClickhouseClusterClickhouseConfigPtrType)(v)
}

func (*mdbClickhouseClusterClickhouseConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbClickhouseClusterClickhouseConfig)(nil)).Elem()
}

func (i *mdbClickhouseClusterClickhouseConfigPtrType) ToMdbClickhouseClusterClickhouseConfigPtrOutput() MdbClickhouseClusterClickhouseConfigPtrOutput {
	return i.ToMdbClickhouseClusterClickhouseConfigPtrOutputWithContext(context.Background())
}

func (i *mdbClickhouseClusterClickhouseConfigPtrType) ToMdbClickhouseClusterClickhouseConfigPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseConfigPtrOutput)
}

type MdbClickhouseClusterClickhouseConfigOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterClickhouseConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterClickhouseConfig)(nil)).Elem()
}

func (o MdbClickhouseClusterClickhouseConfigOutput) ToMdbClickhouseClusterClickhouseConfigOutput() MdbClickhouseClusterClickhouseConfigOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigOutput) ToMdbClickhouseClusterClickhouseConfigOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigOutput) ToMdbClickhouseClusterClickhouseConfigPtrOutput() MdbClickhouseClusterClickhouseConfigPtrOutput {
	return o.ToMdbClickhouseClusterClickhouseConfigPtrOutputWithContext(context.Background())
}

func (o MdbClickhouseClusterClickhouseConfigOutput) ToMdbClickhouseClusterClickhouseConfigPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *MdbClickhouseClusterClickhouseConfig {
		return &v
	}).(MdbClickhouseClusterClickhouseConfigPtrOutput)
}
func (o MdbClickhouseClusterClickhouseConfigOutput) BackgroundPoolSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *int { return v.BackgroundPoolSize }).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) BackgroundSchedulePoolSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *int { return v.BackgroundSchedulePoolSize }).(pulumi.IntPtrOutput)
}

// Data compression configuration. The structure is documented below.
func (o MdbClickhouseClusterClickhouseConfigOutput) Compressions() MdbClickhouseClusterClickhouseConfigCompressionArrayOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) []MdbClickhouseClusterClickhouseConfigCompression {
		return v.Compressions
	}).(MdbClickhouseClusterClickhouseConfigCompressionArrayOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) GeobaseUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *string { return v.GeobaseUri }).(pulumi.StringPtrOutput)
}

// Graphite rollup configuration. The structure is documented below.
func (o MdbClickhouseClusterClickhouseConfigOutput) GraphiteRollups() MdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) []MdbClickhouseClusterClickhouseConfigGraphiteRollup {
		return v.GraphiteRollups
	}).(MdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput)
}

// Kafka connection configuration. The structure is documented below.
func (o MdbClickhouseClusterClickhouseConfigOutput) Kafka() MdbClickhouseClusterClickhouseConfigKafkaPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *MdbClickhouseClusterClickhouseConfigKafka {
		return v.Kafka
	}).(MdbClickhouseClusterClickhouseConfigKafkaPtrOutput)
}

// Kafka topic connection configuration. The structure is documented below.
func (o MdbClickhouseClusterClickhouseConfigOutput) KafkaTopics() MdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) []MdbClickhouseClusterClickhouseConfigKafkaTopic {
		return v.KafkaTopics
	}).(MdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) KeepAliveTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *int { return v.KeepAliveTimeout }).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) LogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *string { return v.LogLevel }).(pulumi.StringPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) MarkCacheSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *int { return v.MarkCacheSize }).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) MaxConcurrentQueries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *int { return v.MaxConcurrentQueries }).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *int { return v.MaxConnections }).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) MaxPartitionSizeToDrop() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *int { return v.MaxPartitionSizeToDrop }).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) MaxTableSizeToDrop() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *int { return v.MaxTableSizeToDrop }).(pulumi.IntPtrOutput)
}

// MergeTree engine configuration. The structure is documented below.
func (o MdbClickhouseClusterClickhouseConfigOutput) MergeTree() MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *MdbClickhouseClusterClickhouseConfigMergeTree {
		return v.MergeTree
	}).(MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) MetricLogEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *bool { return v.MetricLogEnabled }).(pulumi.BoolPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) MetricLogRetentionSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *int { return v.MetricLogRetentionSize }).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) MetricLogRetentionTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *int { return v.MetricLogRetentionTime }).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) PartLogRetentionSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *int { return v.PartLogRetentionSize }).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) PartLogRetentionTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *int { return v.PartLogRetentionTime }).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) QueryLogRetentionSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *int { return v.QueryLogRetentionSize }).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) QueryLogRetentionTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *int { return v.QueryLogRetentionTime }).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) QueryThreadLogEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *bool { return v.QueryThreadLogEnabled }).(pulumi.BoolPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) QueryThreadLogRetentionSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *int { return v.QueryThreadLogRetentionSize }).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) QueryThreadLogRetentionTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *int { return v.QueryThreadLogRetentionTime }).(pulumi.IntPtrOutput)
}

// RabbitMQ connection configuration. The structure is documented below.
func (o MdbClickhouseClusterClickhouseConfigOutput) Rabbitmq() MdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *MdbClickhouseClusterClickhouseConfigRabbitmq {
		return v.Rabbitmq
	}).(MdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) TextLogEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *bool { return v.TextLogEnabled }).(pulumi.BoolPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) TextLogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *string { return v.TextLogLevel }).(pulumi.StringPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) TextLogRetentionSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *int { return v.TextLogRetentionSize }).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) TextLogRetentionTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *int { return v.TextLogRetentionTime }).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) TraceLogEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *bool { return v.TraceLogEnabled }).(pulumi.BoolPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) TraceLogRetentionSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *int { return v.TraceLogRetentionSize }).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) TraceLogRetentionTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *int { return v.TraceLogRetentionTime }).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigOutput) UncompressedCacheSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfig) *int { return v.UncompressedCacheSize }).(pulumi.IntPtrOutput)
}

type MdbClickhouseClusterClickhouseConfigPtrOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterClickhouseConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbClickhouseClusterClickhouseConfig)(nil)).Elem()
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) ToMdbClickhouseClusterClickhouseConfigPtrOutput() MdbClickhouseClusterClickhouseConfigPtrOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) ToMdbClickhouseClusterClickhouseConfigPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigPtrOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) Elem() MdbClickhouseClusterClickhouseConfigOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) MdbClickhouseClusterClickhouseConfig { return *v }).(MdbClickhouseClusterClickhouseConfigOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) BackgroundPoolSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *int {
		if v == nil {
			return nil
		}
		return v.BackgroundPoolSize
	}).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) BackgroundSchedulePoolSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *int {
		if v == nil {
			return nil
		}
		return v.BackgroundSchedulePoolSize
	}).(pulumi.IntPtrOutput)
}

// Data compression configuration. The structure is documented below.
func (o MdbClickhouseClusterClickhouseConfigPtrOutput) Compressions() MdbClickhouseClusterClickhouseConfigCompressionArrayOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) []MdbClickhouseClusterClickhouseConfigCompression {
		if v == nil {
			return nil
		}
		return v.Compressions
	}).(MdbClickhouseClusterClickhouseConfigCompressionArrayOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) GeobaseUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *string {
		if v == nil {
			return nil
		}
		return v.GeobaseUri
	}).(pulumi.StringPtrOutput)
}

// Graphite rollup configuration. The structure is documented below.
func (o MdbClickhouseClusterClickhouseConfigPtrOutput) GraphiteRollups() MdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) []MdbClickhouseClusterClickhouseConfigGraphiteRollup {
		if v == nil {
			return nil
		}
		return v.GraphiteRollups
	}).(MdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput)
}

// Kafka connection configuration. The structure is documented below.
func (o MdbClickhouseClusterClickhouseConfigPtrOutput) Kafka() MdbClickhouseClusterClickhouseConfigKafkaPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *MdbClickhouseClusterClickhouseConfigKafka {
		if v == nil {
			return nil
		}
		return v.Kafka
	}).(MdbClickhouseClusterClickhouseConfigKafkaPtrOutput)
}

// Kafka topic connection configuration. The structure is documented below.
func (o MdbClickhouseClusterClickhouseConfigPtrOutput) KafkaTopics() MdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) []MdbClickhouseClusterClickhouseConfigKafkaTopic {
		if v == nil {
			return nil
		}
		return v.KafkaTopics
	}).(MdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) KeepAliveTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *int {
		if v == nil {
			return nil
		}
		return v.KeepAliveTimeout
	}).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) LogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *string {
		if v == nil {
			return nil
		}
		return v.LogLevel
	}).(pulumi.StringPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) MarkCacheSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *int {
		if v == nil {
			return nil
		}
		return v.MarkCacheSize
	}).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) MaxConcurrentQueries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentQueries
	}).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxConnections
	}).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) MaxPartitionSizeToDrop() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxPartitionSizeToDrop
	}).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) MaxTableSizeToDrop() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxTableSizeToDrop
	}).(pulumi.IntPtrOutput)
}

// MergeTree engine configuration. The structure is documented below.
func (o MdbClickhouseClusterClickhouseConfigPtrOutput) MergeTree() MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *MdbClickhouseClusterClickhouseConfigMergeTree {
		if v == nil {
			return nil
		}
		return v.MergeTree
	}).(MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) MetricLogEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *bool {
		if v == nil {
			return nil
		}
		return v.MetricLogEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) MetricLogRetentionSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *int {
		if v == nil {
			return nil
		}
		return v.MetricLogRetentionSize
	}).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) MetricLogRetentionTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *int {
		if v == nil {
			return nil
		}
		return v.MetricLogRetentionTime
	}).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) PartLogRetentionSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *int {
		if v == nil {
			return nil
		}
		return v.PartLogRetentionSize
	}).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) PartLogRetentionTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *int {
		if v == nil {
			return nil
		}
		return v.PartLogRetentionTime
	}).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) QueryLogRetentionSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *int {
		if v == nil {
			return nil
		}
		return v.QueryLogRetentionSize
	}).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) QueryLogRetentionTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *int {
		if v == nil {
			return nil
		}
		return v.QueryLogRetentionTime
	}).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) QueryThreadLogEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *bool {
		if v == nil {
			return nil
		}
		return v.QueryThreadLogEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) QueryThreadLogRetentionSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *int {
		if v == nil {
			return nil
		}
		return v.QueryThreadLogRetentionSize
	}).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) QueryThreadLogRetentionTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *int {
		if v == nil {
			return nil
		}
		return v.QueryThreadLogRetentionTime
	}).(pulumi.IntPtrOutput)
}

// RabbitMQ connection configuration. The structure is documented below.
func (o MdbClickhouseClusterClickhouseConfigPtrOutput) Rabbitmq() MdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *MdbClickhouseClusterClickhouseConfigRabbitmq {
		if v == nil {
			return nil
		}
		return v.Rabbitmq
	}).(MdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) TextLogEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *bool {
		if v == nil {
			return nil
		}
		return v.TextLogEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) TextLogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *string {
		if v == nil {
			return nil
		}
		return v.TextLogLevel
	}).(pulumi.StringPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) TextLogRetentionSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *int {
		if v == nil {
			return nil
		}
		return v.TextLogRetentionSize
	}).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) TextLogRetentionTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *int {
		if v == nil {
			return nil
		}
		return v.TextLogRetentionTime
	}).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *string {
		if v == nil {
			return nil
		}
		return v.Timezone
	}).(pulumi.StringPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) TraceLogEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *bool {
		if v == nil {
			return nil
		}
		return v.TraceLogEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) TraceLogRetentionSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *int {
		if v == nil {
			return nil
		}
		return v.TraceLogRetentionSize
	}).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) TraceLogRetentionTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *int {
		if v == nil {
			return nil
		}
		return v.TraceLogRetentionTime
	}).(pulumi.IntPtrOutput)
}

func (o MdbClickhouseClusterClickhouseConfigPtrOutput) UncompressedCacheSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfig) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedCacheSize
	}).(pulumi.IntPtrOutput)
}

type MdbClickhouseClusterClickhouseConfigCompression struct {
	// Method: Compression method. Two methods are available: LZ4 and zstd.
	Method string `pulumi:"method"`
	// Min part size: Minimum size (in bytes) of a data part in a table. ClickHouse only applies the rule to tables with data parts greater than or equal to the Min part size value.
	MinPartSize int `pulumi:"minPartSize"`
	// Min part size ratio: Minimum table part size to total table size ratio. ClickHouse only applies the rule to tables in which this ratio is greater than or equal to the Min part size ratio value.
	MinPartSizeRatio float64 `pulumi:"minPartSizeRatio"`
}

// MdbClickhouseClusterClickhouseConfigCompressionInput is an input type that accepts MdbClickhouseClusterClickhouseConfigCompressionArgs and MdbClickhouseClusterClickhouseConfigCompressionOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterClickhouseConfigCompressionInput` via:
//
//          MdbClickhouseClusterClickhouseConfigCompressionArgs{...}
type MdbClickhouseClusterClickhouseConfigCompressionInput interface {
	pulumi.Input

	ToMdbClickhouseClusterClickhouseConfigCompressionOutput() MdbClickhouseClusterClickhouseConfigCompressionOutput
	ToMdbClickhouseClusterClickhouseConfigCompressionOutputWithContext(context.Context) MdbClickhouseClusterClickhouseConfigCompressionOutput
}

type MdbClickhouseClusterClickhouseConfigCompressionArgs struct {
	// Method: Compression method. Two methods are available: LZ4 and zstd.
	Method pulumi.StringInput `pulumi:"method"`
	// Min part size: Minimum size (in bytes) of a data part in a table. ClickHouse only applies the rule to tables with data parts greater than or equal to the Min part size value.
	MinPartSize pulumi.IntInput `pulumi:"minPartSize"`
	// Min part size ratio: Minimum table part size to total table size ratio. ClickHouse only applies the rule to tables in which this ratio is greater than or equal to the Min part size ratio value.
	MinPartSizeRatio pulumi.Float64Input `pulumi:"minPartSizeRatio"`
}

func (MdbClickhouseClusterClickhouseConfigCompressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterClickhouseConfigCompression)(nil)).Elem()
}

func (i MdbClickhouseClusterClickhouseConfigCompressionArgs) ToMdbClickhouseClusterClickhouseConfigCompressionOutput() MdbClickhouseClusterClickhouseConfigCompressionOutput {
	return i.ToMdbClickhouseClusterClickhouseConfigCompressionOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterClickhouseConfigCompressionArgs) ToMdbClickhouseClusterClickhouseConfigCompressionOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigCompressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseConfigCompressionOutput)
}

// MdbClickhouseClusterClickhouseConfigCompressionArrayInput is an input type that accepts MdbClickhouseClusterClickhouseConfigCompressionArray and MdbClickhouseClusterClickhouseConfigCompressionArrayOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterClickhouseConfigCompressionArrayInput` via:
//
//          MdbClickhouseClusterClickhouseConfigCompressionArray{ MdbClickhouseClusterClickhouseConfigCompressionArgs{...} }
type MdbClickhouseClusterClickhouseConfigCompressionArrayInput interface {
	pulumi.Input

	ToMdbClickhouseClusterClickhouseConfigCompressionArrayOutput() MdbClickhouseClusterClickhouseConfigCompressionArrayOutput
	ToMdbClickhouseClusterClickhouseConfigCompressionArrayOutputWithContext(context.Context) MdbClickhouseClusterClickhouseConfigCompressionArrayOutput
}

type MdbClickhouseClusterClickhouseConfigCompressionArray []MdbClickhouseClusterClickhouseConfigCompressionInput

func (MdbClickhouseClusterClickhouseConfigCompressionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbClickhouseClusterClickhouseConfigCompression)(nil)).Elem()
}

func (i MdbClickhouseClusterClickhouseConfigCompressionArray) ToMdbClickhouseClusterClickhouseConfigCompressionArrayOutput() MdbClickhouseClusterClickhouseConfigCompressionArrayOutput {
	return i.ToMdbClickhouseClusterClickhouseConfigCompressionArrayOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterClickhouseConfigCompressionArray) ToMdbClickhouseClusterClickhouseConfigCompressionArrayOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigCompressionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseConfigCompressionArrayOutput)
}

type MdbClickhouseClusterClickhouseConfigCompressionOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterClickhouseConfigCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterClickhouseConfigCompression)(nil)).Elem()
}

func (o MdbClickhouseClusterClickhouseConfigCompressionOutput) ToMdbClickhouseClusterClickhouseConfigCompressionOutput() MdbClickhouseClusterClickhouseConfigCompressionOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigCompressionOutput) ToMdbClickhouseClusterClickhouseConfigCompressionOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigCompressionOutput {
	return o
}

// Method: Compression method. Two methods are available: LZ4 and zstd.
func (o MdbClickhouseClusterClickhouseConfigCompressionOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigCompression) string { return v.Method }).(pulumi.StringOutput)
}

// Min part size: Minimum size (in bytes) of a data part in a table. ClickHouse only applies the rule to tables with data parts greater than or equal to the Min part size value.
func (o MdbClickhouseClusterClickhouseConfigCompressionOutput) MinPartSize() pulumi.IntOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigCompression) int { return v.MinPartSize }).(pulumi.IntOutput)
}

// Min part size ratio: Minimum table part size to total table size ratio. ClickHouse only applies the rule to tables in which this ratio is greater than or equal to the Min part size ratio value.
func (o MdbClickhouseClusterClickhouseConfigCompressionOutput) MinPartSizeRatio() pulumi.Float64Output {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigCompression) float64 { return v.MinPartSizeRatio }).(pulumi.Float64Output)
}

type MdbClickhouseClusterClickhouseConfigCompressionArrayOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterClickhouseConfigCompressionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbClickhouseClusterClickhouseConfigCompression)(nil)).Elem()
}

func (o MdbClickhouseClusterClickhouseConfigCompressionArrayOutput) ToMdbClickhouseClusterClickhouseConfigCompressionArrayOutput() MdbClickhouseClusterClickhouseConfigCompressionArrayOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigCompressionArrayOutput) ToMdbClickhouseClusterClickhouseConfigCompressionArrayOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigCompressionArrayOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigCompressionArrayOutput) Index(i pulumi.IntInput) MdbClickhouseClusterClickhouseConfigCompressionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbClickhouseClusterClickhouseConfigCompression {
		return vs[0].([]MdbClickhouseClusterClickhouseConfigCompression)[vs[1].(int)]
	}).(MdbClickhouseClusterClickhouseConfigCompressionOutput)
}

type MdbClickhouseClusterClickhouseConfigGraphiteRollup struct {
	// Graphite rollup configuration name.
	Name string `pulumi:"name"`
	// Set of thinning rules.
	Patterns []MdbClickhouseClusterClickhouseConfigGraphiteRollupPattern `pulumi:"patterns"`
}

// MdbClickhouseClusterClickhouseConfigGraphiteRollupInput is an input type that accepts MdbClickhouseClusterClickhouseConfigGraphiteRollupArgs and MdbClickhouseClusterClickhouseConfigGraphiteRollupOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterClickhouseConfigGraphiteRollupInput` via:
//
//          MdbClickhouseClusterClickhouseConfigGraphiteRollupArgs{...}
type MdbClickhouseClusterClickhouseConfigGraphiteRollupInput interface {
	pulumi.Input

	ToMdbClickhouseClusterClickhouseConfigGraphiteRollupOutput() MdbClickhouseClusterClickhouseConfigGraphiteRollupOutput
	ToMdbClickhouseClusterClickhouseConfigGraphiteRollupOutputWithContext(context.Context) MdbClickhouseClusterClickhouseConfigGraphiteRollupOutput
}

type MdbClickhouseClusterClickhouseConfigGraphiteRollupArgs struct {
	// Graphite rollup configuration name.
	Name pulumi.StringInput `pulumi:"name"`
	// Set of thinning rules.
	Patterns MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayInput `pulumi:"patterns"`
}

func (MdbClickhouseClusterClickhouseConfigGraphiteRollupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterClickhouseConfigGraphiteRollup)(nil)).Elem()
}

func (i MdbClickhouseClusterClickhouseConfigGraphiteRollupArgs) ToMdbClickhouseClusterClickhouseConfigGraphiteRollupOutput() MdbClickhouseClusterClickhouseConfigGraphiteRollupOutput {
	return i.ToMdbClickhouseClusterClickhouseConfigGraphiteRollupOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterClickhouseConfigGraphiteRollupArgs) ToMdbClickhouseClusterClickhouseConfigGraphiteRollupOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigGraphiteRollupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseConfigGraphiteRollupOutput)
}

// MdbClickhouseClusterClickhouseConfigGraphiteRollupArrayInput is an input type that accepts MdbClickhouseClusterClickhouseConfigGraphiteRollupArray and MdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterClickhouseConfigGraphiteRollupArrayInput` via:
//
//          MdbClickhouseClusterClickhouseConfigGraphiteRollupArray{ MdbClickhouseClusterClickhouseConfigGraphiteRollupArgs{...} }
type MdbClickhouseClusterClickhouseConfigGraphiteRollupArrayInput interface {
	pulumi.Input

	ToMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput() MdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput
	ToMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutputWithContext(context.Context) MdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput
}

type MdbClickhouseClusterClickhouseConfigGraphiteRollupArray []MdbClickhouseClusterClickhouseConfigGraphiteRollupInput

func (MdbClickhouseClusterClickhouseConfigGraphiteRollupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbClickhouseClusterClickhouseConfigGraphiteRollup)(nil)).Elem()
}

func (i MdbClickhouseClusterClickhouseConfigGraphiteRollupArray) ToMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput() MdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput {
	return i.ToMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterClickhouseConfigGraphiteRollupArray) ToMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput)
}

type MdbClickhouseClusterClickhouseConfigGraphiteRollupOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterClickhouseConfigGraphiteRollupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterClickhouseConfigGraphiteRollup)(nil)).Elem()
}

func (o MdbClickhouseClusterClickhouseConfigGraphiteRollupOutput) ToMdbClickhouseClusterClickhouseConfigGraphiteRollupOutput() MdbClickhouseClusterClickhouseConfigGraphiteRollupOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigGraphiteRollupOutput) ToMdbClickhouseClusterClickhouseConfigGraphiteRollupOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigGraphiteRollupOutput {
	return o
}

// Graphite rollup configuration name.
func (o MdbClickhouseClusterClickhouseConfigGraphiteRollupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigGraphiteRollup) string { return v.Name }).(pulumi.StringOutput)
}

// Set of thinning rules.
func (o MdbClickhouseClusterClickhouseConfigGraphiteRollupOutput) Patterns() MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigGraphiteRollup) []MdbClickhouseClusterClickhouseConfigGraphiteRollupPattern {
		return v.Patterns
	}).(MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput)
}

type MdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbClickhouseClusterClickhouseConfigGraphiteRollup)(nil)).Elem()
}

func (o MdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput) ToMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput() MdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput) ToMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput) Index(i pulumi.IntInput) MdbClickhouseClusterClickhouseConfigGraphiteRollupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbClickhouseClusterClickhouseConfigGraphiteRollup {
		return vs[0].([]MdbClickhouseClusterClickhouseConfigGraphiteRollup)[vs[1].(int)]
	}).(MdbClickhouseClusterClickhouseConfigGraphiteRollupOutput)
}

type MdbClickhouseClusterClickhouseConfigGraphiteRollupPattern struct {
	// Aggregation function name.
	Function string `pulumi:"function"`
	// Regular expression that the metric name must match.
	Regexp *string `pulumi:"regexp"`
	// Retain parameters.
	Retentions []MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention `pulumi:"retentions"`
}

// MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternInput is an input type that accepts MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArgs and MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternInput` via:
//
//          MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArgs{...}
type MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternInput interface {
	pulumi.Input

	ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput() MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput
	ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutputWithContext(context.Context) MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput
}

type MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArgs struct {
	// Aggregation function name.
	Function pulumi.StringInput `pulumi:"function"`
	// Regular expression that the metric name must match.
	Regexp pulumi.StringPtrInput `pulumi:"regexp"`
	// Retain parameters.
	Retentions MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayInput `pulumi:"retentions"`
}

func (MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterClickhouseConfigGraphiteRollupPattern)(nil)).Elem()
}

func (i MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArgs) ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput() MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput {
	return i.ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArgs) ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput)
}

// MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayInput is an input type that accepts MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArray and MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayInput` via:
//
//          MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArray{ MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArgs{...} }
type MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayInput interface {
	pulumi.Input

	ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput() MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput
	ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutputWithContext(context.Context) MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput
}

type MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArray []MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternInput

func (MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbClickhouseClusterClickhouseConfigGraphiteRollupPattern)(nil)).Elem()
}

func (i MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArray) ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput() MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput {
	return i.ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArray) ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput)
}

type MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterClickhouseConfigGraphiteRollupPattern)(nil)).Elem()
}

func (o MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput) ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput() MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput) ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput {
	return o
}

// Aggregation function name.
func (o MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput) Function() pulumi.StringOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigGraphiteRollupPattern) string { return v.Function }).(pulumi.StringOutput)
}

// Regular expression that the metric name must match.
func (o MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput) Regexp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigGraphiteRollupPattern) *string { return v.Regexp }).(pulumi.StringPtrOutput)
}

// Retain parameters.
func (o MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput) Retentions() MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigGraphiteRollupPattern) []MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention {
		return v.Retentions
	}).(MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput)
}

type MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbClickhouseClusterClickhouseConfigGraphiteRollupPattern)(nil)).Elem()
}

func (o MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput) ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput() MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput) ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput) Index(i pulumi.IntInput) MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbClickhouseClusterClickhouseConfigGraphiteRollupPattern {
		return vs[0].([]MdbClickhouseClusterClickhouseConfigGraphiteRollupPattern)[vs[1].(int)]
	}).(MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput)
}

type MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention struct {
	// Minimum data age in seconds.
	Age int `pulumi:"age"`
	// Accuracy of determining the age of the data in seconds.
	Precision int `pulumi:"precision"`
}

// MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionInput is an input type that accepts MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArgs and MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionInput` via:
//
//          MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArgs{...}
type MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionInput interface {
	pulumi.Input

	ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput() MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput
	ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutputWithContext(context.Context) MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput
}

type MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArgs struct {
	// Minimum data age in seconds.
	Age pulumi.IntInput `pulumi:"age"`
	// Accuracy of determining the age of the data in seconds.
	Precision pulumi.IntInput `pulumi:"precision"`
}

func (MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention)(nil)).Elem()
}

func (i MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArgs) ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput() MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput {
	return i.ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArgs) ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput)
}

// MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayInput is an input type that accepts MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArray and MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayInput` via:
//
//          MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArray{ MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArgs{...} }
type MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayInput interface {
	pulumi.Input

	ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput() MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput
	ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutputWithContext(context.Context) MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput
}

type MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArray []MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionInput

func (MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention)(nil)).Elem()
}

func (i MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArray) ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput() MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput {
	return i.ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArray) ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput)
}

type MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention)(nil)).Elem()
}

func (o MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput) ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput() MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput) ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput {
	return o
}

// Minimum data age in seconds.
func (o MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput) Age() pulumi.IntOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention) int { return v.Age }).(pulumi.IntOutput)
}

// Accuracy of determining the age of the data in seconds.
func (o MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput) Precision() pulumi.IntOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention) int { return v.Precision }).(pulumi.IntOutput)
}

type MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention)(nil)).Elem()
}

func (o MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput) ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput() MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput) ToMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput) Index(i pulumi.IntInput) MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention {
		return vs[0].([]MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention)[vs[1].(int)]
	}).(MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput)
}

type MdbClickhouseClusterClickhouseConfigKafka struct {
	// SASL mechanism used in kafka authentication.
	SaslMechanism *string `pulumi:"saslMechanism"`
	// User password on kafka server.
	SaslPassword *string `pulumi:"saslPassword"`
	// Username on kafka server.
	SaslUsername *string `pulumi:"saslUsername"`
	// Security protocol used to connect to kafka server.
	SecurityProtocol *string `pulumi:"securityProtocol"`
}

// MdbClickhouseClusterClickhouseConfigKafkaInput is an input type that accepts MdbClickhouseClusterClickhouseConfigKafkaArgs and MdbClickhouseClusterClickhouseConfigKafkaOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterClickhouseConfigKafkaInput` via:
//
//          MdbClickhouseClusterClickhouseConfigKafkaArgs{...}
type MdbClickhouseClusterClickhouseConfigKafkaInput interface {
	pulumi.Input

	ToMdbClickhouseClusterClickhouseConfigKafkaOutput() MdbClickhouseClusterClickhouseConfigKafkaOutput
	ToMdbClickhouseClusterClickhouseConfigKafkaOutputWithContext(context.Context) MdbClickhouseClusterClickhouseConfigKafkaOutput
}

type MdbClickhouseClusterClickhouseConfigKafkaArgs struct {
	// SASL mechanism used in kafka authentication.
	SaslMechanism pulumi.StringPtrInput `pulumi:"saslMechanism"`
	// User password on kafka server.
	SaslPassword pulumi.StringPtrInput `pulumi:"saslPassword"`
	// Username on kafka server.
	SaslUsername pulumi.StringPtrInput `pulumi:"saslUsername"`
	// Security protocol used to connect to kafka server.
	SecurityProtocol pulumi.StringPtrInput `pulumi:"securityProtocol"`
}

func (MdbClickhouseClusterClickhouseConfigKafkaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterClickhouseConfigKafka)(nil)).Elem()
}

func (i MdbClickhouseClusterClickhouseConfigKafkaArgs) ToMdbClickhouseClusterClickhouseConfigKafkaOutput() MdbClickhouseClusterClickhouseConfigKafkaOutput {
	return i.ToMdbClickhouseClusterClickhouseConfigKafkaOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterClickhouseConfigKafkaArgs) ToMdbClickhouseClusterClickhouseConfigKafkaOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigKafkaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseConfigKafkaOutput)
}

func (i MdbClickhouseClusterClickhouseConfigKafkaArgs) ToMdbClickhouseClusterClickhouseConfigKafkaPtrOutput() MdbClickhouseClusterClickhouseConfigKafkaPtrOutput {
	return i.ToMdbClickhouseClusterClickhouseConfigKafkaPtrOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterClickhouseConfigKafkaArgs) ToMdbClickhouseClusterClickhouseConfigKafkaPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigKafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseConfigKafkaOutput).ToMdbClickhouseClusterClickhouseConfigKafkaPtrOutputWithContext(ctx)
}

// MdbClickhouseClusterClickhouseConfigKafkaPtrInput is an input type that accepts MdbClickhouseClusterClickhouseConfigKafkaArgs, MdbClickhouseClusterClickhouseConfigKafkaPtr and MdbClickhouseClusterClickhouseConfigKafkaPtrOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterClickhouseConfigKafkaPtrInput` via:
//
//          MdbClickhouseClusterClickhouseConfigKafkaArgs{...}
//
//  or:
//
//          nil
type MdbClickhouseClusterClickhouseConfigKafkaPtrInput interface {
	pulumi.Input

	ToMdbClickhouseClusterClickhouseConfigKafkaPtrOutput() MdbClickhouseClusterClickhouseConfigKafkaPtrOutput
	ToMdbClickhouseClusterClickhouseConfigKafkaPtrOutputWithContext(context.Context) MdbClickhouseClusterClickhouseConfigKafkaPtrOutput
}

type mdbClickhouseClusterClickhouseConfigKafkaPtrType MdbClickhouseClusterClickhouseConfigKafkaArgs

func MdbClickhouseClusterClickhouseConfigKafkaPtr(v *MdbClickhouseClusterClickhouseConfigKafkaArgs) MdbClickhouseClusterClickhouseConfigKafkaPtrInput {
	return (*mdbClickhouseClusterClickhouseConfigKafkaPtrType)(v)
}

func (*mdbClickhouseClusterClickhouseConfigKafkaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbClickhouseClusterClickhouseConfigKafka)(nil)).Elem()
}

func (i *mdbClickhouseClusterClickhouseConfigKafkaPtrType) ToMdbClickhouseClusterClickhouseConfigKafkaPtrOutput() MdbClickhouseClusterClickhouseConfigKafkaPtrOutput {
	return i.ToMdbClickhouseClusterClickhouseConfigKafkaPtrOutputWithContext(context.Background())
}

func (i *mdbClickhouseClusterClickhouseConfigKafkaPtrType) ToMdbClickhouseClusterClickhouseConfigKafkaPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigKafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseConfigKafkaPtrOutput)
}

type MdbClickhouseClusterClickhouseConfigKafkaOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterClickhouseConfigKafkaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterClickhouseConfigKafka)(nil)).Elem()
}

func (o MdbClickhouseClusterClickhouseConfigKafkaOutput) ToMdbClickhouseClusterClickhouseConfigKafkaOutput() MdbClickhouseClusterClickhouseConfigKafkaOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigKafkaOutput) ToMdbClickhouseClusterClickhouseConfigKafkaOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigKafkaOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigKafkaOutput) ToMdbClickhouseClusterClickhouseConfigKafkaPtrOutput() MdbClickhouseClusterClickhouseConfigKafkaPtrOutput {
	return o.ToMdbClickhouseClusterClickhouseConfigKafkaPtrOutputWithContext(context.Background())
}

func (o MdbClickhouseClusterClickhouseConfigKafkaOutput) ToMdbClickhouseClusterClickhouseConfigKafkaPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigKafkaPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigKafka) *MdbClickhouseClusterClickhouseConfigKafka {
		return &v
	}).(MdbClickhouseClusterClickhouseConfigKafkaPtrOutput)
}

// SASL mechanism used in kafka authentication.
func (o MdbClickhouseClusterClickhouseConfigKafkaOutput) SaslMechanism() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigKafka) *string { return v.SaslMechanism }).(pulumi.StringPtrOutput)
}

// User password on kafka server.
func (o MdbClickhouseClusterClickhouseConfigKafkaOutput) SaslPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigKafka) *string { return v.SaslPassword }).(pulumi.StringPtrOutput)
}

// Username on kafka server.
func (o MdbClickhouseClusterClickhouseConfigKafkaOutput) SaslUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigKafka) *string { return v.SaslUsername }).(pulumi.StringPtrOutput)
}

// Security protocol used to connect to kafka server.
func (o MdbClickhouseClusterClickhouseConfigKafkaOutput) SecurityProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigKafka) *string { return v.SecurityProtocol }).(pulumi.StringPtrOutput)
}

type MdbClickhouseClusterClickhouseConfigKafkaPtrOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterClickhouseConfigKafkaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbClickhouseClusterClickhouseConfigKafka)(nil)).Elem()
}

func (o MdbClickhouseClusterClickhouseConfigKafkaPtrOutput) ToMdbClickhouseClusterClickhouseConfigKafkaPtrOutput() MdbClickhouseClusterClickhouseConfigKafkaPtrOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigKafkaPtrOutput) ToMdbClickhouseClusterClickhouseConfigKafkaPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigKafkaPtrOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigKafkaPtrOutput) Elem() MdbClickhouseClusterClickhouseConfigKafkaOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfigKafka) MdbClickhouseClusterClickhouseConfigKafka {
		return *v
	}).(MdbClickhouseClusterClickhouseConfigKafkaOutput)
}

// SASL mechanism used in kafka authentication.
func (o MdbClickhouseClusterClickhouseConfigKafkaPtrOutput) SaslMechanism() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.SaslMechanism
	}).(pulumi.StringPtrOutput)
}

// User password on kafka server.
func (o MdbClickhouseClusterClickhouseConfigKafkaPtrOutput) SaslPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.SaslPassword
	}).(pulumi.StringPtrOutput)
}

// Username on kafka server.
func (o MdbClickhouseClusterClickhouseConfigKafkaPtrOutput) SaslUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.SaslUsername
	}).(pulumi.StringPtrOutput)
}

// Security protocol used to connect to kafka server.
func (o MdbClickhouseClusterClickhouseConfigKafkaPtrOutput) SecurityProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.SecurityProtocol
	}).(pulumi.StringPtrOutput)
}

type MdbClickhouseClusterClickhouseConfigKafkaTopic struct {
	// Graphite rollup configuration name.
	Name string `pulumi:"name"`
	// Kafka connection settngs sanem as `kafka` block.
	Settings *MdbClickhouseClusterClickhouseConfigKafkaTopicSettings `pulumi:"settings"`
}

// MdbClickhouseClusterClickhouseConfigKafkaTopicInput is an input type that accepts MdbClickhouseClusterClickhouseConfigKafkaTopicArgs and MdbClickhouseClusterClickhouseConfigKafkaTopicOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterClickhouseConfigKafkaTopicInput` via:
//
//          MdbClickhouseClusterClickhouseConfigKafkaTopicArgs{...}
type MdbClickhouseClusterClickhouseConfigKafkaTopicInput interface {
	pulumi.Input

	ToMdbClickhouseClusterClickhouseConfigKafkaTopicOutput() MdbClickhouseClusterClickhouseConfigKafkaTopicOutput
	ToMdbClickhouseClusterClickhouseConfigKafkaTopicOutputWithContext(context.Context) MdbClickhouseClusterClickhouseConfigKafkaTopicOutput
}

type MdbClickhouseClusterClickhouseConfigKafkaTopicArgs struct {
	// Graphite rollup configuration name.
	Name pulumi.StringInput `pulumi:"name"`
	// Kafka connection settngs sanem as `kafka` block.
	Settings MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrInput `pulumi:"settings"`
}

func (MdbClickhouseClusterClickhouseConfigKafkaTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterClickhouseConfigKafkaTopic)(nil)).Elem()
}

func (i MdbClickhouseClusterClickhouseConfigKafkaTopicArgs) ToMdbClickhouseClusterClickhouseConfigKafkaTopicOutput() MdbClickhouseClusterClickhouseConfigKafkaTopicOutput {
	return i.ToMdbClickhouseClusterClickhouseConfigKafkaTopicOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterClickhouseConfigKafkaTopicArgs) ToMdbClickhouseClusterClickhouseConfigKafkaTopicOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigKafkaTopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseConfigKafkaTopicOutput)
}

// MdbClickhouseClusterClickhouseConfigKafkaTopicArrayInput is an input type that accepts MdbClickhouseClusterClickhouseConfigKafkaTopicArray and MdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterClickhouseConfigKafkaTopicArrayInput` via:
//
//          MdbClickhouseClusterClickhouseConfigKafkaTopicArray{ MdbClickhouseClusterClickhouseConfigKafkaTopicArgs{...} }
type MdbClickhouseClusterClickhouseConfigKafkaTopicArrayInput interface {
	pulumi.Input

	ToMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput() MdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput
	ToMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutputWithContext(context.Context) MdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput
}

type MdbClickhouseClusterClickhouseConfigKafkaTopicArray []MdbClickhouseClusterClickhouseConfigKafkaTopicInput

func (MdbClickhouseClusterClickhouseConfigKafkaTopicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbClickhouseClusterClickhouseConfigKafkaTopic)(nil)).Elem()
}

func (i MdbClickhouseClusterClickhouseConfigKafkaTopicArray) ToMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput() MdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput {
	return i.ToMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterClickhouseConfigKafkaTopicArray) ToMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput)
}

type MdbClickhouseClusterClickhouseConfigKafkaTopicOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterClickhouseConfigKafkaTopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterClickhouseConfigKafkaTopic)(nil)).Elem()
}

func (o MdbClickhouseClusterClickhouseConfigKafkaTopicOutput) ToMdbClickhouseClusterClickhouseConfigKafkaTopicOutput() MdbClickhouseClusterClickhouseConfigKafkaTopicOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigKafkaTopicOutput) ToMdbClickhouseClusterClickhouseConfigKafkaTopicOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigKafkaTopicOutput {
	return o
}

// Graphite rollup configuration name.
func (o MdbClickhouseClusterClickhouseConfigKafkaTopicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigKafkaTopic) string { return v.Name }).(pulumi.StringOutput)
}

// Kafka connection settngs sanem as `kafka` block.
func (o MdbClickhouseClusterClickhouseConfigKafkaTopicOutput) Settings() MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigKafkaTopic) *MdbClickhouseClusterClickhouseConfigKafkaTopicSettings {
		return v.Settings
	}).(MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput)
}

type MdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbClickhouseClusterClickhouseConfigKafkaTopic)(nil)).Elem()
}

func (o MdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput) ToMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput() MdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput) ToMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput) Index(i pulumi.IntInput) MdbClickhouseClusterClickhouseConfigKafkaTopicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbClickhouseClusterClickhouseConfigKafkaTopic {
		return vs[0].([]MdbClickhouseClusterClickhouseConfigKafkaTopic)[vs[1].(int)]
	}).(MdbClickhouseClusterClickhouseConfigKafkaTopicOutput)
}

type MdbClickhouseClusterClickhouseConfigKafkaTopicSettings struct {
	// SASL mechanism used in kafka authentication.
	SaslMechanism *string `pulumi:"saslMechanism"`
	// User password on kafka server.
	SaslPassword *string `pulumi:"saslPassword"`
	// Username on kafka server.
	SaslUsername *string `pulumi:"saslUsername"`
	// Security protocol used to connect to kafka server.
	SecurityProtocol *string `pulumi:"securityProtocol"`
}

// MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsInput is an input type that accepts MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsArgs and MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsInput` via:
//
//          MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsArgs{...}
type MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsInput interface {
	pulumi.Input

	ToMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput() MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput
	ToMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutputWithContext(context.Context) MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput
}

type MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsArgs struct {
	// SASL mechanism used in kafka authentication.
	SaslMechanism pulumi.StringPtrInput `pulumi:"saslMechanism"`
	// User password on kafka server.
	SaslPassword pulumi.StringPtrInput `pulumi:"saslPassword"`
	// Username on kafka server.
	SaslUsername pulumi.StringPtrInput `pulumi:"saslUsername"`
	// Security protocol used to connect to kafka server.
	SecurityProtocol pulumi.StringPtrInput `pulumi:"securityProtocol"`
}

func (MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterClickhouseConfigKafkaTopicSettings)(nil)).Elem()
}

func (i MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsArgs) ToMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput() MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput {
	return i.ToMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsArgs) ToMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput)
}

func (i MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsArgs) ToMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput() MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput {
	return i.ToMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsArgs) ToMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput).ToMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutputWithContext(ctx)
}

// MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrInput is an input type that accepts MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsArgs, MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtr and MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrInput` via:
//
//          MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsArgs{...}
//
//  or:
//
//          nil
type MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrInput interface {
	pulumi.Input

	ToMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput() MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput
	ToMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutputWithContext(context.Context) MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput
}

type mdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrType MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsArgs

func MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtr(v *MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsArgs) MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrInput {
	return (*mdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrType)(v)
}

func (*mdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbClickhouseClusterClickhouseConfigKafkaTopicSettings)(nil)).Elem()
}

func (i *mdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrType) ToMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput() MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput {
	return i.ToMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutputWithContext(context.Background())
}

func (i *mdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrType) ToMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput)
}

type MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterClickhouseConfigKafkaTopicSettings)(nil)).Elem()
}

func (o MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput) ToMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput() MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput) ToMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput) ToMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput() MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput {
	return o.ToMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutputWithContext(context.Background())
}

func (o MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput) ToMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigKafkaTopicSettings) *MdbClickhouseClusterClickhouseConfigKafkaTopicSettings {
		return &v
	}).(MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput)
}

// SASL mechanism used in kafka authentication.
func (o MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput) SaslMechanism() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigKafkaTopicSettings) *string { return v.SaslMechanism }).(pulumi.StringPtrOutput)
}

// User password on kafka server.
func (o MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput) SaslPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigKafkaTopicSettings) *string { return v.SaslPassword }).(pulumi.StringPtrOutput)
}

// Username on kafka server.
func (o MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput) SaslUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigKafkaTopicSettings) *string { return v.SaslUsername }).(pulumi.StringPtrOutput)
}

// Security protocol used to connect to kafka server.
func (o MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput) SecurityProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigKafkaTopicSettings) *string { return v.SecurityProtocol }).(pulumi.StringPtrOutput)
}

type MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbClickhouseClusterClickhouseConfigKafkaTopicSettings)(nil)).Elem()
}

func (o MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput) ToMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput() MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput) ToMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput) Elem() MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfigKafkaTopicSettings) MdbClickhouseClusterClickhouseConfigKafkaTopicSettings {
		return *v
	}).(MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput)
}

// SASL mechanism used in kafka authentication.
func (o MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput) SaslMechanism() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfigKafkaTopicSettings) *string {
		if v == nil {
			return nil
		}
		return v.SaslMechanism
	}).(pulumi.StringPtrOutput)
}

// User password on kafka server.
func (o MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput) SaslPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfigKafkaTopicSettings) *string {
		if v == nil {
			return nil
		}
		return v.SaslPassword
	}).(pulumi.StringPtrOutput)
}

// Username on kafka server.
func (o MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput) SaslUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfigKafkaTopicSettings) *string {
		if v == nil {
			return nil
		}
		return v.SaslUsername
	}).(pulumi.StringPtrOutput)
}

// Security protocol used to connect to kafka server.
func (o MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput) SecurityProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfigKafkaTopicSettings) *string {
		if v == nil {
			return nil
		}
		return v.SecurityProtocol
	}).(pulumi.StringPtrOutput)
}

type MdbClickhouseClusterClickhouseConfigMergeTree struct {
	// Max bytes to merge at min space in pool: Maximum total size of a data part to merge when the number of free threads in the background pool is minimum.
	MaxBytesToMergeAtMinSpaceInPool *int `pulumi:"maxBytesToMergeAtMinSpaceInPool"`
	// Max replicated merges in queue: Maximum number of merge tasks that can be in the ReplicatedMergeTree queue at the same time.
	MaxReplicatedMergesInQueue *int `pulumi:"maxReplicatedMergesInQueue"`
	// Number of free entries in pool to lower max size of merge: Threshold value of free entries in the pool. If the number of entries in the pool falls below this value, ClickHouse reduces the maximum size of a data part to merge. This helps handle small merges faster, rather than filling the pool with lengthy merges.
	NumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge *int `pulumi:"numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge"`
	// Parts to delay insert: Number of active data parts in a table, on exceeding which ClickHouse starts artificially reduce the rate of inserting data into the table.
	PartsToDelayInsert *int `pulumi:"partsToDelayInsert"`
	// Parts to throw insert: Threshold value of active data parts in a table, on exceeding which ClickHouse throws the 'Too many parts ...' exception.
	PartsToThrowInsert *int `pulumi:"partsToThrowInsert"`
	// Replicated deduplication window: Number of recent hash blocks that ZooKeeper will store (the old ones will be deleted).
	ReplicatedDeduplicationWindow *int `pulumi:"replicatedDeduplicationWindow"`
	// Replicated deduplication window seconds: Time during which ZooKeeper stores the hash blocks (the old ones wil be deleted).
	ReplicatedDeduplicationWindowSeconds *int `pulumi:"replicatedDeduplicationWindowSeconds"`
}

// MdbClickhouseClusterClickhouseConfigMergeTreeInput is an input type that accepts MdbClickhouseClusterClickhouseConfigMergeTreeArgs and MdbClickhouseClusterClickhouseConfigMergeTreeOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterClickhouseConfigMergeTreeInput` via:
//
//          MdbClickhouseClusterClickhouseConfigMergeTreeArgs{...}
type MdbClickhouseClusterClickhouseConfigMergeTreeInput interface {
	pulumi.Input

	ToMdbClickhouseClusterClickhouseConfigMergeTreeOutput() MdbClickhouseClusterClickhouseConfigMergeTreeOutput
	ToMdbClickhouseClusterClickhouseConfigMergeTreeOutputWithContext(context.Context) MdbClickhouseClusterClickhouseConfigMergeTreeOutput
}

type MdbClickhouseClusterClickhouseConfigMergeTreeArgs struct {
	// Max bytes to merge at min space in pool: Maximum total size of a data part to merge when the number of free threads in the background pool is minimum.
	MaxBytesToMergeAtMinSpaceInPool pulumi.IntPtrInput `pulumi:"maxBytesToMergeAtMinSpaceInPool"`
	// Max replicated merges in queue: Maximum number of merge tasks that can be in the ReplicatedMergeTree queue at the same time.
	MaxReplicatedMergesInQueue pulumi.IntPtrInput `pulumi:"maxReplicatedMergesInQueue"`
	// Number of free entries in pool to lower max size of merge: Threshold value of free entries in the pool. If the number of entries in the pool falls below this value, ClickHouse reduces the maximum size of a data part to merge. This helps handle small merges faster, rather than filling the pool with lengthy merges.
	NumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge pulumi.IntPtrInput `pulumi:"numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge"`
	// Parts to delay insert: Number of active data parts in a table, on exceeding which ClickHouse starts artificially reduce the rate of inserting data into the table.
	PartsToDelayInsert pulumi.IntPtrInput `pulumi:"partsToDelayInsert"`
	// Parts to throw insert: Threshold value of active data parts in a table, on exceeding which ClickHouse throws the 'Too many parts ...' exception.
	PartsToThrowInsert pulumi.IntPtrInput `pulumi:"partsToThrowInsert"`
	// Replicated deduplication window: Number of recent hash blocks that ZooKeeper will store (the old ones will be deleted).
	ReplicatedDeduplicationWindow pulumi.IntPtrInput `pulumi:"replicatedDeduplicationWindow"`
	// Replicated deduplication window seconds: Time during which ZooKeeper stores the hash blocks (the old ones wil be deleted).
	ReplicatedDeduplicationWindowSeconds pulumi.IntPtrInput `pulumi:"replicatedDeduplicationWindowSeconds"`
}

func (MdbClickhouseClusterClickhouseConfigMergeTreeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterClickhouseConfigMergeTree)(nil)).Elem()
}

func (i MdbClickhouseClusterClickhouseConfigMergeTreeArgs) ToMdbClickhouseClusterClickhouseConfigMergeTreeOutput() MdbClickhouseClusterClickhouseConfigMergeTreeOutput {
	return i.ToMdbClickhouseClusterClickhouseConfigMergeTreeOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterClickhouseConfigMergeTreeArgs) ToMdbClickhouseClusterClickhouseConfigMergeTreeOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigMergeTreeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseConfigMergeTreeOutput)
}

func (i MdbClickhouseClusterClickhouseConfigMergeTreeArgs) ToMdbClickhouseClusterClickhouseConfigMergeTreePtrOutput() MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput {
	return i.ToMdbClickhouseClusterClickhouseConfigMergeTreePtrOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterClickhouseConfigMergeTreeArgs) ToMdbClickhouseClusterClickhouseConfigMergeTreePtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseConfigMergeTreeOutput).ToMdbClickhouseClusterClickhouseConfigMergeTreePtrOutputWithContext(ctx)
}

// MdbClickhouseClusterClickhouseConfigMergeTreePtrInput is an input type that accepts MdbClickhouseClusterClickhouseConfigMergeTreeArgs, MdbClickhouseClusterClickhouseConfigMergeTreePtr and MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterClickhouseConfigMergeTreePtrInput` via:
//
//          MdbClickhouseClusterClickhouseConfigMergeTreeArgs{...}
//
//  or:
//
//          nil
type MdbClickhouseClusterClickhouseConfigMergeTreePtrInput interface {
	pulumi.Input

	ToMdbClickhouseClusterClickhouseConfigMergeTreePtrOutput() MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput
	ToMdbClickhouseClusterClickhouseConfigMergeTreePtrOutputWithContext(context.Context) MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput
}

type mdbClickhouseClusterClickhouseConfigMergeTreePtrType MdbClickhouseClusterClickhouseConfigMergeTreeArgs

func MdbClickhouseClusterClickhouseConfigMergeTreePtr(v *MdbClickhouseClusterClickhouseConfigMergeTreeArgs) MdbClickhouseClusterClickhouseConfigMergeTreePtrInput {
	return (*mdbClickhouseClusterClickhouseConfigMergeTreePtrType)(v)
}

func (*mdbClickhouseClusterClickhouseConfigMergeTreePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbClickhouseClusterClickhouseConfigMergeTree)(nil)).Elem()
}

func (i *mdbClickhouseClusterClickhouseConfigMergeTreePtrType) ToMdbClickhouseClusterClickhouseConfigMergeTreePtrOutput() MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput {
	return i.ToMdbClickhouseClusterClickhouseConfigMergeTreePtrOutputWithContext(context.Background())
}

func (i *mdbClickhouseClusterClickhouseConfigMergeTreePtrType) ToMdbClickhouseClusterClickhouseConfigMergeTreePtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput)
}

type MdbClickhouseClusterClickhouseConfigMergeTreeOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterClickhouseConfigMergeTreeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterClickhouseConfigMergeTree)(nil)).Elem()
}

func (o MdbClickhouseClusterClickhouseConfigMergeTreeOutput) ToMdbClickhouseClusterClickhouseConfigMergeTreeOutput() MdbClickhouseClusterClickhouseConfigMergeTreeOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigMergeTreeOutput) ToMdbClickhouseClusterClickhouseConfigMergeTreeOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigMergeTreeOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigMergeTreeOutput) ToMdbClickhouseClusterClickhouseConfigMergeTreePtrOutput() MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput {
	return o.ToMdbClickhouseClusterClickhouseConfigMergeTreePtrOutputWithContext(context.Background())
}

func (o MdbClickhouseClusterClickhouseConfigMergeTreeOutput) ToMdbClickhouseClusterClickhouseConfigMergeTreePtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigMergeTree) *MdbClickhouseClusterClickhouseConfigMergeTree {
		return &v
	}).(MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput)
}

// Max bytes to merge at min space in pool: Maximum total size of a data part to merge when the number of free threads in the background pool is minimum.
func (o MdbClickhouseClusterClickhouseConfigMergeTreeOutput) MaxBytesToMergeAtMinSpaceInPool() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigMergeTree) *int { return v.MaxBytesToMergeAtMinSpaceInPool }).(pulumi.IntPtrOutput)
}

// Max replicated merges in queue: Maximum number of merge tasks that can be in the ReplicatedMergeTree queue at the same time.
func (o MdbClickhouseClusterClickhouseConfigMergeTreeOutput) MaxReplicatedMergesInQueue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigMergeTree) *int { return v.MaxReplicatedMergesInQueue }).(pulumi.IntPtrOutput)
}

// Number of free entries in pool to lower max size of merge: Threshold value of free entries in the pool. If the number of entries in the pool falls below this value, ClickHouse reduces the maximum size of a data part to merge. This helps handle small merges faster, rather than filling the pool with lengthy merges.
func (o MdbClickhouseClusterClickhouseConfigMergeTreeOutput) NumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigMergeTree) *int {
		return v.NumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge
	}).(pulumi.IntPtrOutput)
}

// Parts to delay insert: Number of active data parts in a table, on exceeding which ClickHouse starts artificially reduce the rate of inserting data into the table.
func (o MdbClickhouseClusterClickhouseConfigMergeTreeOutput) PartsToDelayInsert() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigMergeTree) *int { return v.PartsToDelayInsert }).(pulumi.IntPtrOutput)
}

// Parts to throw insert: Threshold value of active data parts in a table, on exceeding which ClickHouse throws the 'Too many parts ...' exception.
func (o MdbClickhouseClusterClickhouseConfigMergeTreeOutput) PartsToThrowInsert() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigMergeTree) *int { return v.PartsToThrowInsert }).(pulumi.IntPtrOutput)
}

// Replicated deduplication window: Number of recent hash blocks that ZooKeeper will store (the old ones will be deleted).
func (o MdbClickhouseClusterClickhouseConfigMergeTreeOutput) ReplicatedDeduplicationWindow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigMergeTree) *int { return v.ReplicatedDeduplicationWindow }).(pulumi.IntPtrOutput)
}

// Replicated deduplication window seconds: Time during which ZooKeeper stores the hash blocks (the old ones wil be deleted).
func (o MdbClickhouseClusterClickhouseConfigMergeTreeOutput) ReplicatedDeduplicationWindowSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigMergeTree) *int {
		return v.ReplicatedDeduplicationWindowSeconds
	}).(pulumi.IntPtrOutput)
}

type MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbClickhouseClusterClickhouseConfigMergeTree)(nil)).Elem()
}

func (o MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput) ToMdbClickhouseClusterClickhouseConfigMergeTreePtrOutput() MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput) ToMdbClickhouseClusterClickhouseConfigMergeTreePtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput) Elem() MdbClickhouseClusterClickhouseConfigMergeTreeOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfigMergeTree) MdbClickhouseClusterClickhouseConfigMergeTree {
		return *v
	}).(MdbClickhouseClusterClickhouseConfigMergeTreeOutput)
}

// Max bytes to merge at min space in pool: Maximum total size of a data part to merge when the number of free threads in the background pool is minimum.
func (o MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput) MaxBytesToMergeAtMinSpaceInPool() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfigMergeTree) *int {
		if v == nil {
			return nil
		}
		return v.MaxBytesToMergeAtMinSpaceInPool
	}).(pulumi.IntPtrOutput)
}

// Max replicated merges in queue: Maximum number of merge tasks that can be in the ReplicatedMergeTree queue at the same time.
func (o MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput) MaxReplicatedMergesInQueue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfigMergeTree) *int {
		if v == nil {
			return nil
		}
		return v.MaxReplicatedMergesInQueue
	}).(pulumi.IntPtrOutput)
}

// Number of free entries in pool to lower max size of merge: Threshold value of free entries in the pool. If the number of entries in the pool falls below this value, ClickHouse reduces the maximum size of a data part to merge. This helps handle small merges faster, rather than filling the pool with lengthy merges.
func (o MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput) NumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfigMergeTree) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge
	}).(pulumi.IntPtrOutput)
}

// Parts to delay insert: Number of active data parts in a table, on exceeding which ClickHouse starts artificially reduce the rate of inserting data into the table.
func (o MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput) PartsToDelayInsert() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfigMergeTree) *int {
		if v == nil {
			return nil
		}
		return v.PartsToDelayInsert
	}).(pulumi.IntPtrOutput)
}

// Parts to throw insert: Threshold value of active data parts in a table, on exceeding which ClickHouse throws the 'Too many parts ...' exception.
func (o MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput) PartsToThrowInsert() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfigMergeTree) *int {
		if v == nil {
			return nil
		}
		return v.PartsToThrowInsert
	}).(pulumi.IntPtrOutput)
}

// Replicated deduplication window: Number of recent hash blocks that ZooKeeper will store (the old ones will be deleted).
func (o MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput) ReplicatedDeduplicationWindow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfigMergeTree) *int {
		if v == nil {
			return nil
		}
		return v.ReplicatedDeduplicationWindow
	}).(pulumi.IntPtrOutput)
}

// Replicated deduplication window seconds: Time during which ZooKeeper stores the hash blocks (the old ones wil be deleted).
func (o MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput) ReplicatedDeduplicationWindowSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfigMergeTree) *int {
		if v == nil {
			return nil
		}
		return v.ReplicatedDeduplicationWindowSeconds
	}).(pulumi.IntPtrOutput)
}

type MdbClickhouseClusterClickhouseConfigRabbitmq struct {
	// RabbitMQ user password.
	Password *string `pulumi:"password"`
	// RabbitMQ username.
	Username *string `pulumi:"username"`
}

// MdbClickhouseClusterClickhouseConfigRabbitmqInput is an input type that accepts MdbClickhouseClusterClickhouseConfigRabbitmqArgs and MdbClickhouseClusterClickhouseConfigRabbitmqOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterClickhouseConfigRabbitmqInput` via:
//
//          MdbClickhouseClusterClickhouseConfigRabbitmqArgs{...}
type MdbClickhouseClusterClickhouseConfigRabbitmqInput interface {
	pulumi.Input

	ToMdbClickhouseClusterClickhouseConfigRabbitmqOutput() MdbClickhouseClusterClickhouseConfigRabbitmqOutput
	ToMdbClickhouseClusterClickhouseConfigRabbitmqOutputWithContext(context.Context) MdbClickhouseClusterClickhouseConfigRabbitmqOutput
}

type MdbClickhouseClusterClickhouseConfigRabbitmqArgs struct {
	// RabbitMQ user password.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// RabbitMQ username.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (MdbClickhouseClusterClickhouseConfigRabbitmqArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterClickhouseConfigRabbitmq)(nil)).Elem()
}

func (i MdbClickhouseClusterClickhouseConfigRabbitmqArgs) ToMdbClickhouseClusterClickhouseConfigRabbitmqOutput() MdbClickhouseClusterClickhouseConfigRabbitmqOutput {
	return i.ToMdbClickhouseClusterClickhouseConfigRabbitmqOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterClickhouseConfigRabbitmqArgs) ToMdbClickhouseClusterClickhouseConfigRabbitmqOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigRabbitmqOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseConfigRabbitmqOutput)
}

func (i MdbClickhouseClusterClickhouseConfigRabbitmqArgs) ToMdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput() MdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput {
	return i.ToMdbClickhouseClusterClickhouseConfigRabbitmqPtrOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterClickhouseConfigRabbitmqArgs) ToMdbClickhouseClusterClickhouseConfigRabbitmqPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseConfigRabbitmqOutput).ToMdbClickhouseClusterClickhouseConfigRabbitmqPtrOutputWithContext(ctx)
}

// MdbClickhouseClusterClickhouseConfigRabbitmqPtrInput is an input type that accepts MdbClickhouseClusterClickhouseConfigRabbitmqArgs, MdbClickhouseClusterClickhouseConfigRabbitmqPtr and MdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterClickhouseConfigRabbitmqPtrInput` via:
//
//          MdbClickhouseClusterClickhouseConfigRabbitmqArgs{...}
//
//  or:
//
//          nil
type MdbClickhouseClusterClickhouseConfigRabbitmqPtrInput interface {
	pulumi.Input

	ToMdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput() MdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput
	ToMdbClickhouseClusterClickhouseConfigRabbitmqPtrOutputWithContext(context.Context) MdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput
}

type mdbClickhouseClusterClickhouseConfigRabbitmqPtrType MdbClickhouseClusterClickhouseConfigRabbitmqArgs

func MdbClickhouseClusterClickhouseConfigRabbitmqPtr(v *MdbClickhouseClusterClickhouseConfigRabbitmqArgs) MdbClickhouseClusterClickhouseConfigRabbitmqPtrInput {
	return (*mdbClickhouseClusterClickhouseConfigRabbitmqPtrType)(v)
}

func (*mdbClickhouseClusterClickhouseConfigRabbitmqPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbClickhouseClusterClickhouseConfigRabbitmq)(nil)).Elem()
}

func (i *mdbClickhouseClusterClickhouseConfigRabbitmqPtrType) ToMdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput() MdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput {
	return i.ToMdbClickhouseClusterClickhouseConfigRabbitmqPtrOutputWithContext(context.Background())
}

func (i *mdbClickhouseClusterClickhouseConfigRabbitmqPtrType) ToMdbClickhouseClusterClickhouseConfigRabbitmqPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput)
}

type MdbClickhouseClusterClickhouseConfigRabbitmqOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterClickhouseConfigRabbitmqOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterClickhouseConfigRabbitmq)(nil)).Elem()
}

func (o MdbClickhouseClusterClickhouseConfigRabbitmqOutput) ToMdbClickhouseClusterClickhouseConfigRabbitmqOutput() MdbClickhouseClusterClickhouseConfigRabbitmqOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigRabbitmqOutput) ToMdbClickhouseClusterClickhouseConfigRabbitmqOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigRabbitmqOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigRabbitmqOutput) ToMdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput() MdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput {
	return o.ToMdbClickhouseClusterClickhouseConfigRabbitmqPtrOutputWithContext(context.Background())
}

func (o MdbClickhouseClusterClickhouseConfigRabbitmqOutput) ToMdbClickhouseClusterClickhouseConfigRabbitmqPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigRabbitmq) *MdbClickhouseClusterClickhouseConfigRabbitmq {
		return &v
	}).(MdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput)
}

// RabbitMQ user password.
func (o MdbClickhouseClusterClickhouseConfigRabbitmqOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigRabbitmq) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// RabbitMQ username.
func (o MdbClickhouseClusterClickhouseConfigRabbitmqOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseConfigRabbitmq) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type MdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbClickhouseClusterClickhouseConfigRabbitmq)(nil)).Elem()
}

func (o MdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput) ToMdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput() MdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput) ToMdbClickhouseClusterClickhouseConfigRabbitmqPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput) Elem() MdbClickhouseClusterClickhouseConfigRabbitmqOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfigRabbitmq) MdbClickhouseClusterClickhouseConfigRabbitmq {
		return *v
	}).(MdbClickhouseClusterClickhouseConfigRabbitmqOutput)
}

// RabbitMQ user password.
func (o MdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfigRabbitmq) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// RabbitMQ username.
func (o MdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseConfigRabbitmq) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type MdbClickhouseClusterClickhouseResources struct {
	// Volume of the storage available to a ZooKeeper host, in gigabytes.
	DiskSize int `pulumi:"diskSize"`
	// Type of the storage of ZooKeeper hosts.
	// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-clickhouse/concepts/storage).
	DiskTypeId       string `pulumi:"diskTypeId"`
	ResourcePresetId string `pulumi:"resourcePresetId"`
}

// MdbClickhouseClusterClickhouseResourcesInput is an input type that accepts MdbClickhouseClusterClickhouseResourcesArgs and MdbClickhouseClusterClickhouseResourcesOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterClickhouseResourcesInput` via:
//
//          MdbClickhouseClusterClickhouseResourcesArgs{...}
type MdbClickhouseClusterClickhouseResourcesInput interface {
	pulumi.Input

	ToMdbClickhouseClusterClickhouseResourcesOutput() MdbClickhouseClusterClickhouseResourcesOutput
	ToMdbClickhouseClusterClickhouseResourcesOutputWithContext(context.Context) MdbClickhouseClusterClickhouseResourcesOutput
}

type MdbClickhouseClusterClickhouseResourcesArgs struct {
	// Volume of the storage available to a ZooKeeper host, in gigabytes.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// Type of the storage of ZooKeeper hosts.
	// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-clickhouse/concepts/storage).
	DiskTypeId       pulumi.StringInput `pulumi:"diskTypeId"`
	ResourcePresetId pulumi.StringInput `pulumi:"resourcePresetId"`
}

func (MdbClickhouseClusterClickhouseResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterClickhouseResources)(nil)).Elem()
}

func (i MdbClickhouseClusterClickhouseResourcesArgs) ToMdbClickhouseClusterClickhouseResourcesOutput() MdbClickhouseClusterClickhouseResourcesOutput {
	return i.ToMdbClickhouseClusterClickhouseResourcesOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterClickhouseResourcesArgs) ToMdbClickhouseClusterClickhouseResourcesOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseResourcesOutput)
}

func (i MdbClickhouseClusterClickhouseResourcesArgs) ToMdbClickhouseClusterClickhouseResourcesPtrOutput() MdbClickhouseClusterClickhouseResourcesPtrOutput {
	return i.ToMdbClickhouseClusterClickhouseResourcesPtrOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterClickhouseResourcesArgs) ToMdbClickhouseClusterClickhouseResourcesPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseResourcesOutput).ToMdbClickhouseClusterClickhouseResourcesPtrOutputWithContext(ctx)
}

// MdbClickhouseClusterClickhouseResourcesPtrInput is an input type that accepts MdbClickhouseClusterClickhouseResourcesArgs, MdbClickhouseClusterClickhouseResourcesPtr and MdbClickhouseClusterClickhouseResourcesPtrOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterClickhouseResourcesPtrInput` via:
//
//          MdbClickhouseClusterClickhouseResourcesArgs{...}
//
//  or:
//
//          nil
type MdbClickhouseClusterClickhouseResourcesPtrInput interface {
	pulumi.Input

	ToMdbClickhouseClusterClickhouseResourcesPtrOutput() MdbClickhouseClusterClickhouseResourcesPtrOutput
	ToMdbClickhouseClusterClickhouseResourcesPtrOutputWithContext(context.Context) MdbClickhouseClusterClickhouseResourcesPtrOutput
}

type mdbClickhouseClusterClickhouseResourcesPtrType MdbClickhouseClusterClickhouseResourcesArgs

func MdbClickhouseClusterClickhouseResourcesPtr(v *MdbClickhouseClusterClickhouseResourcesArgs) MdbClickhouseClusterClickhouseResourcesPtrInput {
	return (*mdbClickhouseClusterClickhouseResourcesPtrType)(v)
}

func (*mdbClickhouseClusterClickhouseResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbClickhouseClusterClickhouseResources)(nil)).Elem()
}

func (i *mdbClickhouseClusterClickhouseResourcesPtrType) ToMdbClickhouseClusterClickhouseResourcesPtrOutput() MdbClickhouseClusterClickhouseResourcesPtrOutput {
	return i.ToMdbClickhouseClusterClickhouseResourcesPtrOutputWithContext(context.Background())
}

func (i *mdbClickhouseClusterClickhouseResourcesPtrType) ToMdbClickhouseClusterClickhouseResourcesPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterClickhouseResourcesPtrOutput)
}

type MdbClickhouseClusterClickhouseResourcesOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterClickhouseResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterClickhouseResources)(nil)).Elem()
}

func (o MdbClickhouseClusterClickhouseResourcesOutput) ToMdbClickhouseClusterClickhouseResourcesOutput() MdbClickhouseClusterClickhouseResourcesOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseResourcesOutput) ToMdbClickhouseClusterClickhouseResourcesOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseResourcesOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseResourcesOutput) ToMdbClickhouseClusterClickhouseResourcesPtrOutput() MdbClickhouseClusterClickhouseResourcesPtrOutput {
	return o.ToMdbClickhouseClusterClickhouseResourcesPtrOutputWithContext(context.Background())
}

func (o MdbClickhouseClusterClickhouseResourcesOutput) ToMdbClickhouseClusterClickhouseResourcesPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseResourcesPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseResources) *MdbClickhouseClusterClickhouseResources {
		return &v
	}).(MdbClickhouseClusterClickhouseResourcesPtrOutput)
}

// Volume of the storage available to a ZooKeeper host, in gigabytes.
func (o MdbClickhouseClusterClickhouseResourcesOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseResources) int { return v.DiskSize }).(pulumi.IntOutput)
}

// Type of the storage of ZooKeeper hosts.
// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-clickhouse/concepts/storage).
func (o MdbClickhouseClusterClickhouseResourcesOutput) DiskTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseResources) string { return v.DiskTypeId }).(pulumi.StringOutput)
}

func (o MdbClickhouseClusterClickhouseResourcesOutput) ResourcePresetId() pulumi.StringOutput {
	return o.ApplyT(func(v MdbClickhouseClusterClickhouseResources) string { return v.ResourcePresetId }).(pulumi.StringOutput)
}

type MdbClickhouseClusterClickhouseResourcesPtrOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterClickhouseResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbClickhouseClusterClickhouseResources)(nil)).Elem()
}

func (o MdbClickhouseClusterClickhouseResourcesPtrOutput) ToMdbClickhouseClusterClickhouseResourcesPtrOutput() MdbClickhouseClusterClickhouseResourcesPtrOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseResourcesPtrOutput) ToMdbClickhouseClusterClickhouseResourcesPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterClickhouseResourcesPtrOutput {
	return o
}

func (o MdbClickhouseClusterClickhouseResourcesPtrOutput) Elem() MdbClickhouseClusterClickhouseResourcesOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseResources) MdbClickhouseClusterClickhouseResources { return *v }).(MdbClickhouseClusterClickhouseResourcesOutput)
}

// Volume of the storage available to a ZooKeeper host, in gigabytes.
func (o MdbClickhouseClusterClickhouseResourcesPtrOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseResources) *int {
		if v == nil {
			return nil
		}
		return &v.DiskSize
	}).(pulumi.IntPtrOutput)
}

// Type of the storage of ZooKeeper hosts.
// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-clickhouse/concepts/storage).
func (o MdbClickhouseClusterClickhouseResourcesPtrOutput) DiskTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseResources) *string {
		if v == nil {
			return nil
		}
		return &v.DiskTypeId
	}).(pulumi.StringPtrOutput)
}

func (o MdbClickhouseClusterClickhouseResourcesPtrOutput) ResourcePresetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterClickhouseResources) *string {
		if v == nil {
			return nil
		}
		return &v.ResourcePresetId
	}).(pulumi.StringPtrOutput)
}

type MdbClickhouseClusterCloudStorage struct {
	// Whether to use Yandex Object Storage for storing ClickHouse data. Can be either `true` or `false`.
	Enabled bool `pulumi:"enabled"`
}

// MdbClickhouseClusterCloudStorageInput is an input type that accepts MdbClickhouseClusterCloudStorageArgs and MdbClickhouseClusterCloudStorageOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterCloudStorageInput` via:
//
//          MdbClickhouseClusterCloudStorageArgs{...}
type MdbClickhouseClusterCloudStorageInput interface {
	pulumi.Input

	ToMdbClickhouseClusterCloudStorageOutput() MdbClickhouseClusterCloudStorageOutput
	ToMdbClickhouseClusterCloudStorageOutputWithContext(context.Context) MdbClickhouseClusterCloudStorageOutput
}

type MdbClickhouseClusterCloudStorageArgs struct {
	// Whether to use Yandex Object Storage for storing ClickHouse data. Can be either `true` or `false`.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (MdbClickhouseClusterCloudStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterCloudStorage)(nil)).Elem()
}

func (i MdbClickhouseClusterCloudStorageArgs) ToMdbClickhouseClusterCloudStorageOutput() MdbClickhouseClusterCloudStorageOutput {
	return i.ToMdbClickhouseClusterCloudStorageOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterCloudStorageArgs) ToMdbClickhouseClusterCloudStorageOutputWithContext(ctx context.Context) MdbClickhouseClusterCloudStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterCloudStorageOutput)
}

func (i MdbClickhouseClusterCloudStorageArgs) ToMdbClickhouseClusterCloudStoragePtrOutput() MdbClickhouseClusterCloudStoragePtrOutput {
	return i.ToMdbClickhouseClusterCloudStoragePtrOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterCloudStorageArgs) ToMdbClickhouseClusterCloudStoragePtrOutputWithContext(ctx context.Context) MdbClickhouseClusterCloudStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterCloudStorageOutput).ToMdbClickhouseClusterCloudStoragePtrOutputWithContext(ctx)
}

// MdbClickhouseClusterCloudStoragePtrInput is an input type that accepts MdbClickhouseClusterCloudStorageArgs, MdbClickhouseClusterCloudStoragePtr and MdbClickhouseClusterCloudStoragePtrOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterCloudStoragePtrInput` via:
//
//          MdbClickhouseClusterCloudStorageArgs{...}
//
//  or:
//
//          nil
type MdbClickhouseClusterCloudStoragePtrInput interface {
	pulumi.Input

	ToMdbClickhouseClusterCloudStoragePtrOutput() MdbClickhouseClusterCloudStoragePtrOutput
	ToMdbClickhouseClusterCloudStoragePtrOutputWithContext(context.Context) MdbClickhouseClusterCloudStoragePtrOutput
}

type mdbClickhouseClusterCloudStoragePtrType MdbClickhouseClusterCloudStorageArgs

func MdbClickhouseClusterCloudStoragePtr(v *MdbClickhouseClusterCloudStorageArgs) MdbClickhouseClusterCloudStoragePtrInput {
	return (*mdbClickhouseClusterCloudStoragePtrType)(v)
}

func (*mdbClickhouseClusterCloudStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbClickhouseClusterCloudStorage)(nil)).Elem()
}

func (i *mdbClickhouseClusterCloudStoragePtrType) ToMdbClickhouseClusterCloudStoragePtrOutput() MdbClickhouseClusterCloudStoragePtrOutput {
	return i.ToMdbClickhouseClusterCloudStoragePtrOutputWithContext(context.Background())
}

func (i *mdbClickhouseClusterCloudStoragePtrType) ToMdbClickhouseClusterCloudStoragePtrOutputWithContext(ctx context.Context) MdbClickhouseClusterCloudStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterCloudStoragePtrOutput)
}

type MdbClickhouseClusterCloudStorageOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterCloudStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterCloudStorage)(nil)).Elem()
}

func (o MdbClickhouseClusterCloudStorageOutput) ToMdbClickhouseClusterCloudStorageOutput() MdbClickhouseClusterCloudStorageOutput {
	return o
}

func (o MdbClickhouseClusterCloudStorageOutput) ToMdbClickhouseClusterCloudStorageOutputWithContext(ctx context.Context) MdbClickhouseClusterCloudStorageOutput {
	return o
}

func (o MdbClickhouseClusterCloudStorageOutput) ToMdbClickhouseClusterCloudStoragePtrOutput() MdbClickhouseClusterCloudStoragePtrOutput {
	return o.ToMdbClickhouseClusterCloudStoragePtrOutputWithContext(context.Background())
}

func (o MdbClickhouseClusterCloudStorageOutput) ToMdbClickhouseClusterCloudStoragePtrOutputWithContext(ctx context.Context) MdbClickhouseClusterCloudStoragePtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterCloudStorage) *MdbClickhouseClusterCloudStorage {
		return &v
	}).(MdbClickhouseClusterCloudStoragePtrOutput)
}

// Whether to use Yandex Object Storage for storing ClickHouse data. Can be either `true` or `false`.
func (o MdbClickhouseClusterCloudStorageOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v MdbClickhouseClusterCloudStorage) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type MdbClickhouseClusterCloudStoragePtrOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterCloudStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbClickhouseClusterCloudStorage)(nil)).Elem()
}

func (o MdbClickhouseClusterCloudStoragePtrOutput) ToMdbClickhouseClusterCloudStoragePtrOutput() MdbClickhouseClusterCloudStoragePtrOutput {
	return o
}

func (o MdbClickhouseClusterCloudStoragePtrOutput) ToMdbClickhouseClusterCloudStoragePtrOutputWithContext(ctx context.Context) MdbClickhouseClusterCloudStoragePtrOutput {
	return o
}

func (o MdbClickhouseClusterCloudStoragePtrOutput) Elem() MdbClickhouseClusterCloudStorageOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterCloudStorage) MdbClickhouseClusterCloudStorage { return *v }).(MdbClickhouseClusterCloudStorageOutput)
}

// Whether to use Yandex Object Storage for storing ClickHouse data. Can be either `true` or `false`.
func (o MdbClickhouseClusterCloudStoragePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterCloudStorage) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type MdbClickhouseClusterDatabase struct {
	// Graphite rollup configuration name.
	Name string `pulumi:"name"`
}

// MdbClickhouseClusterDatabaseInput is an input type that accepts MdbClickhouseClusterDatabaseArgs and MdbClickhouseClusterDatabaseOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterDatabaseInput` via:
//
//          MdbClickhouseClusterDatabaseArgs{...}
type MdbClickhouseClusterDatabaseInput interface {
	pulumi.Input

	ToMdbClickhouseClusterDatabaseOutput() MdbClickhouseClusterDatabaseOutput
	ToMdbClickhouseClusterDatabaseOutputWithContext(context.Context) MdbClickhouseClusterDatabaseOutput
}

type MdbClickhouseClusterDatabaseArgs struct {
	// Graphite rollup configuration name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (MdbClickhouseClusterDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterDatabase)(nil)).Elem()
}

func (i MdbClickhouseClusterDatabaseArgs) ToMdbClickhouseClusterDatabaseOutput() MdbClickhouseClusterDatabaseOutput {
	return i.ToMdbClickhouseClusterDatabaseOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterDatabaseArgs) ToMdbClickhouseClusterDatabaseOutputWithContext(ctx context.Context) MdbClickhouseClusterDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterDatabaseOutput)
}

// MdbClickhouseClusterDatabaseArrayInput is an input type that accepts MdbClickhouseClusterDatabaseArray and MdbClickhouseClusterDatabaseArrayOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterDatabaseArrayInput` via:
//
//          MdbClickhouseClusterDatabaseArray{ MdbClickhouseClusterDatabaseArgs{...} }
type MdbClickhouseClusterDatabaseArrayInput interface {
	pulumi.Input

	ToMdbClickhouseClusterDatabaseArrayOutput() MdbClickhouseClusterDatabaseArrayOutput
	ToMdbClickhouseClusterDatabaseArrayOutputWithContext(context.Context) MdbClickhouseClusterDatabaseArrayOutput
}

type MdbClickhouseClusterDatabaseArray []MdbClickhouseClusterDatabaseInput

func (MdbClickhouseClusterDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbClickhouseClusterDatabase)(nil)).Elem()
}

func (i MdbClickhouseClusterDatabaseArray) ToMdbClickhouseClusterDatabaseArrayOutput() MdbClickhouseClusterDatabaseArrayOutput {
	return i.ToMdbClickhouseClusterDatabaseArrayOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterDatabaseArray) ToMdbClickhouseClusterDatabaseArrayOutputWithContext(ctx context.Context) MdbClickhouseClusterDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterDatabaseArrayOutput)
}

type MdbClickhouseClusterDatabaseOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterDatabase)(nil)).Elem()
}

func (o MdbClickhouseClusterDatabaseOutput) ToMdbClickhouseClusterDatabaseOutput() MdbClickhouseClusterDatabaseOutput {
	return o
}

func (o MdbClickhouseClusterDatabaseOutput) ToMdbClickhouseClusterDatabaseOutputWithContext(ctx context.Context) MdbClickhouseClusterDatabaseOutput {
	return o
}

// Graphite rollup configuration name.
func (o MdbClickhouseClusterDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MdbClickhouseClusterDatabase) string { return v.Name }).(pulumi.StringOutput)
}

type MdbClickhouseClusterDatabaseArrayOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbClickhouseClusterDatabase)(nil)).Elem()
}

func (o MdbClickhouseClusterDatabaseArrayOutput) ToMdbClickhouseClusterDatabaseArrayOutput() MdbClickhouseClusterDatabaseArrayOutput {
	return o
}

func (o MdbClickhouseClusterDatabaseArrayOutput) ToMdbClickhouseClusterDatabaseArrayOutputWithContext(ctx context.Context) MdbClickhouseClusterDatabaseArrayOutput {
	return o
}

func (o MdbClickhouseClusterDatabaseArrayOutput) Index(i pulumi.IntInput) MdbClickhouseClusterDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbClickhouseClusterDatabase {
		return vs[0].([]MdbClickhouseClusterDatabase)[vs[1].(int)]
	}).(MdbClickhouseClusterDatabaseOutput)
}

type MdbClickhouseClusterFormatSchema struct {
	// Graphite rollup configuration name.
	Name string `pulumi:"name"`
	// Type of the model.
	Type string `pulumi:"type"`
	// Model file URL. You can only use models stored in Yandex Object Storage.
	Uri string `pulumi:"uri"`
}

// MdbClickhouseClusterFormatSchemaInput is an input type that accepts MdbClickhouseClusterFormatSchemaArgs and MdbClickhouseClusterFormatSchemaOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterFormatSchemaInput` via:
//
//          MdbClickhouseClusterFormatSchemaArgs{...}
type MdbClickhouseClusterFormatSchemaInput interface {
	pulumi.Input

	ToMdbClickhouseClusterFormatSchemaOutput() MdbClickhouseClusterFormatSchemaOutput
	ToMdbClickhouseClusterFormatSchemaOutputWithContext(context.Context) MdbClickhouseClusterFormatSchemaOutput
}

type MdbClickhouseClusterFormatSchemaArgs struct {
	// Graphite rollup configuration name.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the model.
	Type pulumi.StringInput `pulumi:"type"`
	// Model file URL. You can only use models stored in Yandex Object Storage.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (MdbClickhouseClusterFormatSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterFormatSchema)(nil)).Elem()
}

func (i MdbClickhouseClusterFormatSchemaArgs) ToMdbClickhouseClusterFormatSchemaOutput() MdbClickhouseClusterFormatSchemaOutput {
	return i.ToMdbClickhouseClusterFormatSchemaOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterFormatSchemaArgs) ToMdbClickhouseClusterFormatSchemaOutputWithContext(ctx context.Context) MdbClickhouseClusterFormatSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterFormatSchemaOutput)
}

// MdbClickhouseClusterFormatSchemaArrayInput is an input type that accepts MdbClickhouseClusterFormatSchemaArray and MdbClickhouseClusterFormatSchemaArrayOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterFormatSchemaArrayInput` via:
//
//          MdbClickhouseClusterFormatSchemaArray{ MdbClickhouseClusterFormatSchemaArgs{...} }
type MdbClickhouseClusterFormatSchemaArrayInput interface {
	pulumi.Input

	ToMdbClickhouseClusterFormatSchemaArrayOutput() MdbClickhouseClusterFormatSchemaArrayOutput
	ToMdbClickhouseClusterFormatSchemaArrayOutputWithContext(context.Context) MdbClickhouseClusterFormatSchemaArrayOutput
}

type MdbClickhouseClusterFormatSchemaArray []MdbClickhouseClusterFormatSchemaInput

func (MdbClickhouseClusterFormatSchemaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbClickhouseClusterFormatSchema)(nil)).Elem()
}

func (i MdbClickhouseClusterFormatSchemaArray) ToMdbClickhouseClusterFormatSchemaArrayOutput() MdbClickhouseClusterFormatSchemaArrayOutput {
	return i.ToMdbClickhouseClusterFormatSchemaArrayOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterFormatSchemaArray) ToMdbClickhouseClusterFormatSchemaArrayOutputWithContext(ctx context.Context) MdbClickhouseClusterFormatSchemaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterFormatSchemaArrayOutput)
}

type MdbClickhouseClusterFormatSchemaOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterFormatSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterFormatSchema)(nil)).Elem()
}

func (o MdbClickhouseClusterFormatSchemaOutput) ToMdbClickhouseClusterFormatSchemaOutput() MdbClickhouseClusterFormatSchemaOutput {
	return o
}

func (o MdbClickhouseClusterFormatSchemaOutput) ToMdbClickhouseClusterFormatSchemaOutputWithContext(ctx context.Context) MdbClickhouseClusterFormatSchemaOutput {
	return o
}

// Graphite rollup configuration name.
func (o MdbClickhouseClusterFormatSchemaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MdbClickhouseClusterFormatSchema) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the model.
func (o MdbClickhouseClusterFormatSchemaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MdbClickhouseClusterFormatSchema) string { return v.Type }).(pulumi.StringOutput)
}

// Model file URL. You can only use models stored in Yandex Object Storage.
func (o MdbClickhouseClusterFormatSchemaOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v MdbClickhouseClusterFormatSchema) string { return v.Uri }).(pulumi.StringOutput)
}

type MdbClickhouseClusterFormatSchemaArrayOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterFormatSchemaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbClickhouseClusterFormatSchema)(nil)).Elem()
}

func (o MdbClickhouseClusterFormatSchemaArrayOutput) ToMdbClickhouseClusterFormatSchemaArrayOutput() MdbClickhouseClusterFormatSchemaArrayOutput {
	return o
}

func (o MdbClickhouseClusterFormatSchemaArrayOutput) ToMdbClickhouseClusterFormatSchemaArrayOutputWithContext(ctx context.Context) MdbClickhouseClusterFormatSchemaArrayOutput {
	return o
}

func (o MdbClickhouseClusterFormatSchemaArrayOutput) Index(i pulumi.IntInput) MdbClickhouseClusterFormatSchemaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbClickhouseClusterFormatSchema {
		return vs[0].([]MdbClickhouseClusterFormatSchema)[vs[1].(int)]
	}).(MdbClickhouseClusterFormatSchemaOutput)
}

type MdbClickhouseClusterHost struct {
	// Sets whether the host should get a public IP address on creation. Can be either `true` or `false`.
	AssignPublicIp *bool `pulumi:"assignPublicIp"`
	// The fully qualified domain name of the host.
	Fqdn *string `pulumi:"fqdn"`
	// The name of the shard to which the host belongs.
	ShardName *string `pulumi:"shardName"`
	// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
	SubnetId *string `pulumi:"subnetId"`
	// Type of the model.
	Type string `pulumi:"type"`
	// The availability zone where the ClickHouse host will be created.
	// For more information see [the official documentation](https://cloud.yandex.com/docs/overview/concepts/geo-scope).
	Zone string `pulumi:"zone"`
}

// MdbClickhouseClusterHostInput is an input type that accepts MdbClickhouseClusterHostArgs and MdbClickhouseClusterHostOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterHostInput` via:
//
//          MdbClickhouseClusterHostArgs{...}
type MdbClickhouseClusterHostInput interface {
	pulumi.Input

	ToMdbClickhouseClusterHostOutput() MdbClickhouseClusterHostOutput
	ToMdbClickhouseClusterHostOutputWithContext(context.Context) MdbClickhouseClusterHostOutput
}

type MdbClickhouseClusterHostArgs struct {
	// Sets whether the host should get a public IP address on creation. Can be either `true` or `false`.
	AssignPublicIp pulumi.BoolPtrInput `pulumi:"assignPublicIp"`
	// The fully qualified domain name of the host.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// The name of the shard to which the host belongs.
	ShardName pulumi.StringPtrInput `pulumi:"shardName"`
	// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// Type of the model.
	Type pulumi.StringInput `pulumi:"type"`
	// The availability zone where the ClickHouse host will be created.
	// For more information see [the official documentation](https://cloud.yandex.com/docs/overview/concepts/geo-scope).
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (MdbClickhouseClusterHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterHost)(nil)).Elem()
}

func (i MdbClickhouseClusterHostArgs) ToMdbClickhouseClusterHostOutput() MdbClickhouseClusterHostOutput {
	return i.ToMdbClickhouseClusterHostOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterHostArgs) ToMdbClickhouseClusterHostOutputWithContext(ctx context.Context) MdbClickhouseClusterHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterHostOutput)
}

// MdbClickhouseClusterHostArrayInput is an input type that accepts MdbClickhouseClusterHostArray and MdbClickhouseClusterHostArrayOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterHostArrayInput` via:
//
//          MdbClickhouseClusterHostArray{ MdbClickhouseClusterHostArgs{...} }
type MdbClickhouseClusterHostArrayInput interface {
	pulumi.Input

	ToMdbClickhouseClusterHostArrayOutput() MdbClickhouseClusterHostArrayOutput
	ToMdbClickhouseClusterHostArrayOutputWithContext(context.Context) MdbClickhouseClusterHostArrayOutput
}

type MdbClickhouseClusterHostArray []MdbClickhouseClusterHostInput

func (MdbClickhouseClusterHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbClickhouseClusterHost)(nil)).Elem()
}

func (i MdbClickhouseClusterHostArray) ToMdbClickhouseClusterHostArrayOutput() MdbClickhouseClusterHostArrayOutput {
	return i.ToMdbClickhouseClusterHostArrayOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterHostArray) ToMdbClickhouseClusterHostArrayOutputWithContext(ctx context.Context) MdbClickhouseClusterHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterHostArrayOutput)
}

type MdbClickhouseClusterHostOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterHost)(nil)).Elem()
}

func (o MdbClickhouseClusterHostOutput) ToMdbClickhouseClusterHostOutput() MdbClickhouseClusterHostOutput {
	return o
}

func (o MdbClickhouseClusterHostOutput) ToMdbClickhouseClusterHostOutputWithContext(ctx context.Context) MdbClickhouseClusterHostOutput {
	return o
}

// Sets whether the host should get a public IP address on creation. Can be either `true` or `false`.
func (o MdbClickhouseClusterHostOutput) AssignPublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterHost) *bool { return v.AssignPublicIp }).(pulumi.BoolPtrOutput)
}

// The fully qualified domain name of the host.
func (o MdbClickhouseClusterHostOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterHost) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The name of the shard to which the host belongs.
func (o MdbClickhouseClusterHostOutput) ShardName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterHost) *string { return v.ShardName }).(pulumi.StringPtrOutput)
}

// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
func (o MdbClickhouseClusterHostOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterHost) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// Type of the model.
func (o MdbClickhouseClusterHostOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MdbClickhouseClusterHost) string { return v.Type }).(pulumi.StringOutput)
}

// The availability zone where the ClickHouse host will be created.
// For more information see [the official documentation](https://cloud.yandex.com/docs/overview/concepts/geo-scope).
func (o MdbClickhouseClusterHostOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v MdbClickhouseClusterHost) string { return v.Zone }).(pulumi.StringOutput)
}

type MdbClickhouseClusterHostArrayOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbClickhouseClusterHost)(nil)).Elem()
}

func (o MdbClickhouseClusterHostArrayOutput) ToMdbClickhouseClusterHostArrayOutput() MdbClickhouseClusterHostArrayOutput {
	return o
}

func (o MdbClickhouseClusterHostArrayOutput) ToMdbClickhouseClusterHostArrayOutputWithContext(ctx context.Context) MdbClickhouseClusterHostArrayOutput {
	return o
}

func (o MdbClickhouseClusterHostArrayOutput) Index(i pulumi.IntInput) MdbClickhouseClusterHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbClickhouseClusterHost {
		return vs[0].([]MdbClickhouseClusterHost)[vs[1].(int)]
	}).(MdbClickhouseClusterHostOutput)
}

type MdbClickhouseClusterMlModel struct {
	// Graphite rollup configuration name.
	Name string `pulumi:"name"`
	// Type of the model.
	Type string `pulumi:"type"`
	// Model file URL. You can only use models stored in Yandex Object Storage.
	Uri string `pulumi:"uri"`
}

// MdbClickhouseClusterMlModelInput is an input type that accepts MdbClickhouseClusterMlModelArgs and MdbClickhouseClusterMlModelOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterMlModelInput` via:
//
//          MdbClickhouseClusterMlModelArgs{...}
type MdbClickhouseClusterMlModelInput interface {
	pulumi.Input

	ToMdbClickhouseClusterMlModelOutput() MdbClickhouseClusterMlModelOutput
	ToMdbClickhouseClusterMlModelOutputWithContext(context.Context) MdbClickhouseClusterMlModelOutput
}

type MdbClickhouseClusterMlModelArgs struct {
	// Graphite rollup configuration name.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the model.
	Type pulumi.StringInput `pulumi:"type"`
	// Model file URL. You can only use models stored in Yandex Object Storage.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (MdbClickhouseClusterMlModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterMlModel)(nil)).Elem()
}

func (i MdbClickhouseClusterMlModelArgs) ToMdbClickhouseClusterMlModelOutput() MdbClickhouseClusterMlModelOutput {
	return i.ToMdbClickhouseClusterMlModelOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterMlModelArgs) ToMdbClickhouseClusterMlModelOutputWithContext(ctx context.Context) MdbClickhouseClusterMlModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterMlModelOutput)
}

// MdbClickhouseClusterMlModelArrayInput is an input type that accepts MdbClickhouseClusterMlModelArray and MdbClickhouseClusterMlModelArrayOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterMlModelArrayInput` via:
//
//          MdbClickhouseClusterMlModelArray{ MdbClickhouseClusterMlModelArgs{...} }
type MdbClickhouseClusterMlModelArrayInput interface {
	pulumi.Input

	ToMdbClickhouseClusterMlModelArrayOutput() MdbClickhouseClusterMlModelArrayOutput
	ToMdbClickhouseClusterMlModelArrayOutputWithContext(context.Context) MdbClickhouseClusterMlModelArrayOutput
}

type MdbClickhouseClusterMlModelArray []MdbClickhouseClusterMlModelInput

func (MdbClickhouseClusterMlModelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbClickhouseClusterMlModel)(nil)).Elem()
}

func (i MdbClickhouseClusterMlModelArray) ToMdbClickhouseClusterMlModelArrayOutput() MdbClickhouseClusterMlModelArrayOutput {
	return i.ToMdbClickhouseClusterMlModelArrayOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterMlModelArray) ToMdbClickhouseClusterMlModelArrayOutputWithContext(ctx context.Context) MdbClickhouseClusterMlModelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterMlModelArrayOutput)
}

type MdbClickhouseClusterMlModelOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterMlModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterMlModel)(nil)).Elem()
}

func (o MdbClickhouseClusterMlModelOutput) ToMdbClickhouseClusterMlModelOutput() MdbClickhouseClusterMlModelOutput {
	return o
}

func (o MdbClickhouseClusterMlModelOutput) ToMdbClickhouseClusterMlModelOutputWithContext(ctx context.Context) MdbClickhouseClusterMlModelOutput {
	return o
}

// Graphite rollup configuration name.
func (o MdbClickhouseClusterMlModelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MdbClickhouseClusterMlModel) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the model.
func (o MdbClickhouseClusterMlModelOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MdbClickhouseClusterMlModel) string { return v.Type }).(pulumi.StringOutput)
}

// Model file URL. You can only use models stored in Yandex Object Storage.
func (o MdbClickhouseClusterMlModelOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v MdbClickhouseClusterMlModel) string { return v.Uri }).(pulumi.StringOutput)
}

type MdbClickhouseClusterMlModelArrayOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterMlModelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbClickhouseClusterMlModel)(nil)).Elem()
}

func (o MdbClickhouseClusterMlModelArrayOutput) ToMdbClickhouseClusterMlModelArrayOutput() MdbClickhouseClusterMlModelArrayOutput {
	return o
}

func (o MdbClickhouseClusterMlModelArrayOutput) ToMdbClickhouseClusterMlModelArrayOutputWithContext(ctx context.Context) MdbClickhouseClusterMlModelArrayOutput {
	return o
}

func (o MdbClickhouseClusterMlModelArrayOutput) Index(i pulumi.IntInput) MdbClickhouseClusterMlModelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbClickhouseClusterMlModel {
		return vs[0].([]MdbClickhouseClusterMlModel)[vs[1].(int)]
	}).(MdbClickhouseClusterMlModelOutput)
}

type MdbClickhouseClusterShardGroup struct {
	// Description of the shard group.
	Description *string `pulumi:"description"`
	// Graphite rollup configuration name.
	Name string `pulumi:"name"`
	// List of shards names that belong to the shard group.
	ShardNames []string `pulumi:"shardNames"`
}

// MdbClickhouseClusterShardGroupInput is an input type that accepts MdbClickhouseClusterShardGroupArgs and MdbClickhouseClusterShardGroupOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterShardGroupInput` via:
//
//          MdbClickhouseClusterShardGroupArgs{...}
type MdbClickhouseClusterShardGroupInput interface {
	pulumi.Input

	ToMdbClickhouseClusterShardGroupOutput() MdbClickhouseClusterShardGroupOutput
	ToMdbClickhouseClusterShardGroupOutputWithContext(context.Context) MdbClickhouseClusterShardGroupOutput
}

type MdbClickhouseClusterShardGroupArgs struct {
	// Description of the shard group.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Graphite rollup configuration name.
	Name pulumi.StringInput `pulumi:"name"`
	// List of shards names that belong to the shard group.
	ShardNames pulumi.StringArrayInput `pulumi:"shardNames"`
}

func (MdbClickhouseClusterShardGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterShardGroup)(nil)).Elem()
}

func (i MdbClickhouseClusterShardGroupArgs) ToMdbClickhouseClusterShardGroupOutput() MdbClickhouseClusterShardGroupOutput {
	return i.ToMdbClickhouseClusterShardGroupOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterShardGroupArgs) ToMdbClickhouseClusterShardGroupOutputWithContext(ctx context.Context) MdbClickhouseClusterShardGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterShardGroupOutput)
}

// MdbClickhouseClusterShardGroupArrayInput is an input type that accepts MdbClickhouseClusterShardGroupArray and MdbClickhouseClusterShardGroupArrayOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterShardGroupArrayInput` via:
//
//          MdbClickhouseClusterShardGroupArray{ MdbClickhouseClusterShardGroupArgs{...} }
type MdbClickhouseClusterShardGroupArrayInput interface {
	pulumi.Input

	ToMdbClickhouseClusterShardGroupArrayOutput() MdbClickhouseClusterShardGroupArrayOutput
	ToMdbClickhouseClusterShardGroupArrayOutputWithContext(context.Context) MdbClickhouseClusterShardGroupArrayOutput
}

type MdbClickhouseClusterShardGroupArray []MdbClickhouseClusterShardGroupInput

func (MdbClickhouseClusterShardGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbClickhouseClusterShardGroup)(nil)).Elem()
}

func (i MdbClickhouseClusterShardGroupArray) ToMdbClickhouseClusterShardGroupArrayOutput() MdbClickhouseClusterShardGroupArrayOutput {
	return i.ToMdbClickhouseClusterShardGroupArrayOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterShardGroupArray) ToMdbClickhouseClusterShardGroupArrayOutputWithContext(ctx context.Context) MdbClickhouseClusterShardGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterShardGroupArrayOutput)
}

type MdbClickhouseClusterShardGroupOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterShardGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterShardGroup)(nil)).Elem()
}

func (o MdbClickhouseClusterShardGroupOutput) ToMdbClickhouseClusterShardGroupOutput() MdbClickhouseClusterShardGroupOutput {
	return o
}

func (o MdbClickhouseClusterShardGroupOutput) ToMdbClickhouseClusterShardGroupOutputWithContext(ctx context.Context) MdbClickhouseClusterShardGroupOutput {
	return o
}

// Description of the shard group.
func (o MdbClickhouseClusterShardGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterShardGroup) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Graphite rollup configuration name.
func (o MdbClickhouseClusterShardGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MdbClickhouseClusterShardGroup) string { return v.Name }).(pulumi.StringOutput)
}

// List of shards names that belong to the shard group.
func (o MdbClickhouseClusterShardGroupOutput) ShardNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MdbClickhouseClusterShardGroup) []string { return v.ShardNames }).(pulumi.StringArrayOutput)
}

type MdbClickhouseClusterShardGroupArrayOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterShardGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbClickhouseClusterShardGroup)(nil)).Elem()
}

func (o MdbClickhouseClusterShardGroupArrayOutput) ToMdbClickhouseClusterShardGroupArrayOutput() MdbClickhouseClusterShardGroupArrayOutput {
	return o
}

func (o MdbClickhouseClusterShardGroupArrayOutput) ToMdbClickhouseClusterShardGroupArrayOutputWithContext(ctx context.Context) MdbClickhouseClusterShardGroupArrayOutput {
	return o
}

func (o MdbClickhouseClusterShardGroupArrayOutput) Index(i pulumi.IntInput) MdbClickhouseClusterShardGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbClickhouseClusterShardGroup {
		return vs[0].([]MdbClickhouseClusterShardGroup)[vs[1].(int)]
	}).(MdbClickhouseClusterShardGroupOutput)
}

type MdbClickhouseClusterUser struct {
	// Graphite rollup configuration name.
	Name string `pulumi:"name"`
	// RabbitMQ user password.
	Password string `pulumi:"password"`
	// Set of permissions granted to the user. The structure is documented below.
	Permissions []MdbClickhouseClusterUserPermission `pulumi:"permissions"`
	// Set of user quotas. The structure is documented below.
	Quotas []MdbClickhouseClusterUserQuota `pulumi:"quotas"`
	// Kafka connection settngs sanem as `kafka` block.
	Settings *MdbClickhouseClusterUserSettings `pulumi:"settings"`
}

// MdbClickhouseClusterUserInput is an input type that accepts MdbClickhouseClusterUserArgs and MdbClickhouseClusterUserOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterUserInput` via:
//
//          MdbClickhouseClusterUserArgs{...}
type MdbClickhouseClusterUserInput interface {
	pulumi.Input

	ToMdbClickhouseClusterUserOutput() MdbClickhouseClusterUserOutput
	ToMdbClickhouseClusterUserOutputWithContext(context.Context) MdbClickhouseClusterUserOutput
}

type MdbClickhouseClusterUserArgs struct {
	// Graphite rollup configuration name.
	Name pulumi.StringInput `pulumi:"name"`
	// RabbitMQ user password.
	Password pulumi.StringInput `pulumi:"password"`
	// Set of permissions granted to the user. The structure is documented below.
	Permissions MdbClickhouseClusterUserPermissionArrayInput `pulumi:"permissions"`
	// Set of user quotas. The structure is documented below.
	Quotas MdbClickhouseClusterUserQuotaArrayInput `pulumi:"quotas"`
	// Kafka connection settngs sanem as `kafka` block.
	Settings MdbClickhouseClusterUserSettingsPtrInput `pulumi:"settings"`
}

func (MdbClickhouseClusterUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterUser)(nil)).Elem()
}

func (i MdbClickhouseClusterUserArgs) ToMdbClickhouseClusterUserOutput() MdbClickhouseClusterUserOutput {
	return i.ToMdbClickhouseClusterUserOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterUserArgs) ToMdbClickhouseClusterUserOutputWithContext(ctx context.Context) MdbClickhouseClusterUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterUserOutput)
}

// MdbClickhouseClusterUserArrayInput is an input type that accepts MdbClickhouseClusterUserArray and MdbClickhouseClusterUserArrayOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterUserArrayInput` via:
//
//          MdbClickhouseClusterUserArray{ MdbClickhouseClusterUserArgs{...} }
type MdbClickhouseClusterUserArrayInput interface {
	pulumi.Input

	ToMdbClickhouseClusterUserArrayOutput() MdbClickhouseClusterUserArrayOutput
	ToMdbClickhouseClusterUserArrayOutputWithContext(context.Context) MdbClickhouseClusterUserArrayOutput
}

type MdbClickhouseClusterUserArray []MdbClickhouseClusterUserInput

func (MdbClickhouseClusterUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbClickhouseClusterUser)(nil)).Elem()
}

func (i MdbClickhouseClusterUserArray) ToMdbClickhouseClusterUserArrayOutput() MdbClickhouseClusterUserArrayOutput {
	return i.ToMdbClickhouseClusterUserArrayOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterUserArray) ToMdbClickhouseClusterUserArrayOutputWithContext(ctx context.Context) MdbClickhouseClusterUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterUserArrayOutput)
}

type MdbClickhouseClusterUserOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterUser)(nil)).Elem()
}

func (o MdbClickhouseClusterUserOutput) ToMdbClickhouseClusterUserOutput() MdbClickhouseClusterUserOutput {
	return o
}

func (o MdbClickhouseClusterUserOutput) ToMdbClickhouseClusterUserOutputWithContext(ctx context.Context) MdbClickhouseClusterUserOutput {
	return o
}

// Graphite rollup configuration name.
func (o MdbClickhouseClusterUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUser) string { return v.Name }).(pulumi.StringOutput)
}

// RabbitMQ user password.
func (o MdbClickhouseClusterUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUser) string { return v.Password }).(pulumi.StringOutput)
}

// Set of permissions granted to the user. The structure is documented below.
func (o MdbClickhouseClusterUserOutput) Permissions() MdbClickhouseClusterUserPermissionArrayOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUser) []MdbClickhouseClusterUserPermission { return v.Permissions }).(MdbClickhouseClusterUserPermissionArrayOutput)
}

// Set of user quotas. The structure is documented below.
func (o MdbClickhouseClusterUserOutput) Quotas() MdbClickhouseClusterUserQuotaArrayOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUser) []MdbClickhouseClusterUserQuota { return v.Quotas }).(MdbClickhouseClusterUserQuotaArrayOutput)
}

// Kafka connection settngs sanem as `kafka` block.
func (o MdbClickhouseClusterUserOutput) Settings() MdbClickhouseClusterUserSettingsPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUser) *MdbClickhouseClusterUserSettings { return v.Settings }).(MdbClickhouseClusterUserSettingsPtrOutput)
}

type MdbClickhouseClusterUserArrayOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbClickhouseClusterUser)(nil)).Elem()
}

func (o MdbClickhouseClusterUserArrayOutput) ToMdbClickhouseClusterUserArrayOutput() MdbClickhouseClusterUserArrayOutput {
	return o
}

func (o MdbClickhouseClusterUserArrayOutput) ToMdbClickhouseClusterUserArrayOutputWithContext(ctx context.Context) MdbClickhouseClusterUserArrayOutput {
	return o
}

func (o MdbClickhouseClusterUserArrayOutput) Index(i pulumi.IntInput) MdbClickhouseClusterUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbClickhouseClusterUser {
		return vs[0].([]MdbClickhouseClusterUser)[vs[1].(int)]
	}).(MdbClickhouseClusterUserOutput)
}

type MdbClickhouseClusterUserPermission struct {
	// The name of the database that the permission grants access to.
	DatabaseName string `pulumi:"databaseName"`
}

// MdbClickhouseClusterUserPermissionInput is an input type that accepts MdbClickhouseClusterUserPermissionArgs and MdbClickhouseClusterUserPermissionOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterUserPermissionInput` via:
//
//          MdbClickhouseClusterUserPermissionArgs{...}
type MdbClickhouseClusterUserPermissionInput interface {
	pulumi.Input

	ToMdbClickhouseClusterUserPermissionOutput() MdbClickhouseClusterUserPermissionOutput
	ToMdbClickhouseClusterUserPermissionOutputWithContext(context.Context) MdbClickhouseClusterUserPermissionOutput
}

type MdbClickhouseClusterUserPermissionArgs struct {
	// The name of the database that the permission grants access to.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
}

func (MdbClickhouseClusterUserPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterUserPermission)(nil)).Elem()
}

func (i MdbClickhouseClusterUserPermissionArgs) ToMdbClickhouseClusterUserPermissionOutput() MdbClickhouseClusterUserPermissionOutput {
	return i.ToMdbClickhouseClusterUserPermissionOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterUserPermissionArgs) ToMdbClickhouseClusterUserPermissionOutputWithContext(ctx context.Context) MdbClickhouseClusterUserPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterUserPermissionOutput)
}

// MdbClickhouseClusterUserPermissionArrayInput is an input type that accepts MdbClickhouseClusterUserPermissionArray and MdbClickhouseClusterUserPermissionArrayOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterUserPermissionArrayInput` via:
//
//          MdbClickhouseClusterUserPermissionArray{ MdbClickhouseClusterUserPermissionArgs{...} }
type MdbClickhouseClusterUserPermissionArrayInput interface {
	pulumi.Input

	ToMdbClickhouseClusterUserPermissionArrayOutput() MdbClickhouseClusterUserPermissionArrayOutput
	ToMdbClickhouseClusterUserPermissionArrayOutputWithContext(context.Context) MdbClickhouseClusterUserPermissionArrayOutput
}

type MdbClickhouseClusterUserPermissionArray []MdbClickhouseClusterUserPermissionInput

func (MdbClickhouseClusterUserPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbClickhouseClusterUserPermission)(nil)).Elem()
}

func (i MdbClickhouseClusterUserPermissionArray) ToMdbClickhouseClusterUserPermissionArrayOutput() MdbClickhouseClusterUserPermissionArrayOutput {
	return i.ToMdbClickhouseClusterUserPermissionArrayOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterUserPermissionArray) ToMdbClickhouseClusterUserPermissionArrayOutputWithContext(ctx context.Context) MdbClickhouseClusterUserPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterUserPermissionArrayOutput)
}

type MdbClickhouseClusterUserPermissionOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterUserPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterUserPermission)(nil)).Elem()
}

func (o MdbClickhouseClusterUserPermissionOutput) ToMdbClickhouseClusterUserPermissionOutput() MdbClickhouseClusterUserPermissionOutput {
	return o
}

func (o MdbClickhouseClusterUserPermissionOutput) ToMdbClickhouseClusterUserPermissionOutputWithContext(ctx context.Context) MdbClickhouseClusterUserPermissionOutput {
	return o
}

// The name of the database that the permission grants access to.
func (o MdbClickhouseClusterUserPermissionOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserPermission) string { return v.DatabaseName }).(pulumi.StringOutput)
}

type MdbClickhouseClusterUserPermissionArrayOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterUserPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbClickhouseClusterUserPermission)(nil)).Elem()
}

func (o MdbClickhouseClusterUserPermissionArrayOutput) ToMdbClickhouseClusterUserPermissionArrayOutput() MdbClickhouseClusterUserPermissionArrayOutput {
	return o
}

func (o MdbClickhouseClusterUserPermissionArrayOutput) ToMdbClickhouseClusterUserPermissionArrayOutputWithContext(ctx context.Context) MdbClickhouseClusterUserPermissionArrayOutput {
	return o
}

func (o MdbClickhouseClusterUserPermissionArrayOutput) Index(i pulumi.IntInput) MdbClickhouseClusterUserPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbClickhouseClusterUserPermission {
		return vs[0].([]MdbClickhouseClusterUserPermission)[vs[1].(int)]
	}).(MdbClickhouseClusterUserPermissionOutput)
}

type MdbClickhouseClusterUserQuota struct {
	// The number of queries that threw exception.
	Errors *int `pulumi:"errors"`
	// The total query execution time, in milliseconds (wall time).
	ExecutionTime *int `pulumi:"executionTime"`
	// Duration of interval for quota in milliseconds.
	IntervalDuration int `pulumi:"intervalDuration"`
	// The total number of queries.
	Queries *int `pulumi:"queries"`
	// The total number of source rows read from tables for running the query, on all remote servers.
	ReadRows *int `pulumi:"readRows"`
	// The total number of rows given as the result.
	ResultRows *int `pulumi:"resultRows"`
}

// MdbClickhouseClusterUserQuotaInput is an input type that accepts MdbClickhouseClusterUserQuotaArgs and MdbClickhouseClusterUserQuotaOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterUserQuotaInput` via:
//
//          MdbClickhouseClusterUserQuotaArgs{...}
type MdbClickhouseClusterUserQuotaInput interface {
	pulumi.Input

	ToMdbClickhouseClusterUserQuotaOutput() MdbClickhouseClusterUserQuotaOutput
	ToMdbClickhouseClusterUserQuotaOutputWithContext(context.Context) MdbClickhouseClusterUserQuotaOutput
}

type MdbClickhouseClusterUserQuotaArgs struct {
	// The number of queries that threw exception.
	Errors pulumi.IntPtrInput `pulumi:"errors"`
	// The total query execution time, in milliseconds (wall time).
	ExecutionTime pulumi.IntPtrInput `pulumi:"executionTime"`
	// Duration of interval for quota in milliseconds.
	IntervalDuration pulumi.IntInput `pulumi:"intervalDuration"`
	// The total number of queries.
	Queries pulumi.IntPtrInput `pulumi:"queries"`
	// The total number of source rows read from tables for running the query, on all remote servers.
	ReadRows pulumi.IntPtrInput `pulumi:"readRows"`
	// The total number of rows given as the result.
	ResultRows pulumi.IntPtrInput `pulumi:"resultRows"`
}

func (MdbClickhouseClusterUserQuotaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterUserQuota)(nil)).Elem()
}

func (i MdbClickhouseClusterUserQuotaArgs) ToMdbClickhouseClusterUserQuotaOutput() MdbClickhouseClusterUserQuotaOutput {
	return i.ToMdbClickhouseClusterUserQuotaOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterUserQuotaArgs) ToMdbClickhouseClusterUserQuotaOutputWithContext(ctx context.Context) MdbClickhouseClusterUserQuotaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterUserQuotaOutput)
}

// MdbClickhouseClusterUserQuotaArrayInput is an input type that accepts MdbClickhouseClusterUserQuotaArray and MdbClickhouseClusterUserQuotaArrayOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterUserQuotaArrayInput` via:
//
//          MdbClickhouseClusterUserQuotaArray{ MdbClickhouseClusterUserQuotaArgs{...} }
type MdbClickhouseClusterUserQuotaArrayInput interface {
	pulumi.Input

	ToMdbClickhouseClusterUserQuotaArrayOutput() MdbClickhouseClusterUserQuotaArrayOutput
	ToMdbClickhouseClusterUserQuotaArrayOutputWithContext(context.Context) MdbClickhouseClusterUserQuotaArrayOutput
}

type MdbClickhouseClusterUserQuotaArray []MdbClickhouseClusterUserQuotaInput

func (MdbClickhouseClusterUserQuotaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbClickhouseClusterUserQuota)(nil)).Elem()
}

func (i MdbClickhouseClusterUserQuotaArray) ToMdbClickhouseClusterUserQuotaArrayOutput() MdbClickhouseClusterUserQuotaArrayOutput {
	return i.ToMdbClickhouseClusterUserQuotaArrayOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterUserQuotaArray) ToMdbClickhouseClusterUserQuotaArrayOutputWithContext(ctx context.Context) MdbClickhouseClusterUserQuotaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterUserQuotaArrayOutput)
}

type MdbClickhouseClusterUserQuotaOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterUserQuotaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterUserQuota)(nil)).Elem()
}

func (o MdbClickhouseClusterUserQuotaOutput) ToMdbClickhouseClusterUserQuotaOutput() MdbClickhouseClusterUserQuotaOutput {
	return o
}

func (o MdbClickhouseClusterUserQuotaOutput) ToMdbClickhouseClusterUserQuotaOutputWithContext(ctx context.Context) MdbClickhouseClusterUserQuotaOutput {
	return o
}

// The number of queries that threw exception.
func (o MdbClickhouseClusterUserQuotaOutput) Errors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserQuota) *int { return v.Errors }).(pulumi.IntPtrOutput)
}

// The total query execution time, in milliseconds (wall time).
func (o MdbClickhouseClusterUserQuotaOutput) ExecutionTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserQuota) *int { return v.ExecutionTime }).(pulumi.IntPtrOutput)
}

// Duration of interval for quota in milliseconds.
func (o MdbClickhouseClusterUserQuotaOutput) IntervalDuration() pulumi.IntOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserQuota) int { return v.IntervalDuration }).(pulumi.IntOutput)
}

// The total number of queries.
func (o MdbClickhouseClusterUserQuotaOutput) Queries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserQuota) *int { return v.Queries }).(pulumi.IntPtrOutput)
}

// The total number of source rows read from tables for running the query, on all remote servers.
func (o MdbClickhouseClusterUserQuotaOutput) ReadRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserQuota) *int { return v.ReadRows }).(pulumi.IntPtrOutput)
}

// The total number of rows given as the result.
func (o MdbClickhouseClusterUserQuotaOutput) ResultRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserQuota) *int { return v.ResultRows }).(pulumi.IntPtrOutput)
}

type MdbClickhouseClusterUserQuotaArrayOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterUserQuotaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbClickhouseClusterUserQuota)(nil)).Elem()
}

func (o MdbClickhouseClusterUserQuotaArrayOutput) ToMdbClickhouseClusterUserQuotaArrayOutput() MdbClickhouseClusterUserQuotaArrayOutput {
	return o
}

func (o MdbClickhouseClusterUserQuotaArrayOutput) ToMdbClickhouseClusterUserQuotaArrayOutputWithContext(ctx context.Context) MdbClickhouseClusterUserQuotaArrayOutput {
	return o
}

func (o MdbClickhouseClusterUserQuotaArrayOutput) Index(i pulumi.IntInput) MdbClickhouseClusterUserQuotaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbClickhouseClusterUserQuota {
		return vs[0].([]MdbClickhouseClusterUserQuota)[vs[1].(int)]
	}).(MdbClickhouseClusterUserQuotaOutput)
}

type MdbClickhouseClusterUserSettings struct {
	// Include CORS headers in HTTP responces.
	AddHttpCorsHeader *bool `pulumi:"addHttpCorsHeader"`
	// Allows or denies DDL queries.
	AllowDdl *bool `pulumi:"allowDdl"`
	// Enable compilation of queries.
	Compile *bool `pulumi:"compile"`
	// Turn on expression compilation.
	CompileExpressions *bool `pulumi:"compileExpressions"`
	// Connect timeout in milliseconds on the socket used for communicating with the client.
	ConnectTimeout *int `pulumi:"connectTimeout"`
	// Specifies which of the uniq* functions should be used to perform the COUNT(DISTINCT …) construction.
	CountDistinctImplementation *string `pulumi:"countDistinctImplementation"`
	// Sets behaviour on overflow when using DISTINCT. Possible values:
	DistinctOverflowMode *string `pulumi:"distinctOverflowMode"`
	// Determine the behavior of distributed subqueries.
	DistributedAggregationMemoryEfficient *bool `pulumi:"distributedAggregationMemoryEfficient"`
	// Timeout for DDL queries, in milliseconds.
	DistributedDdlTaskTimeout *int `pulumi:"distributedDdlTaskTimeout"`
	// Changes the behaviour of distributed subqueries.
	DistributedProductMode *string `pulumi:"distributedProductMode"`
	// Allows to retunr empty result.
	EmptyResultForAggregationByEmptySet *bool `pulumi:"emptyResultForAggregationByEmptySet"`
	// Enables or disables data compression in the response to an HTTP request.
	EnableHttpCompression *bool `pulumi:"enableHttpCompression"`
	// Forces a query to an out-of-date replica if updated data is not available.
	FallbackToStaleReplicasForDistributedQueries *bool `pulumi:"fallbackToStaleReplicasForDistributedQueries"`
	// Disables query execution if the index can’t be used by date.
	ForceIndexByDate *bool `pulumi:"forceIndexByDate"`
	// Disables query execution if indexing by the primary key is not possible.
	ForcePrimaryKey *bool `pulumi:"forcePrimaryKey"`
	// Sets behaviour on overflow while GROUP BY operation. Possible values:
	GroupByOverflowMode *string `pulumi:"groupByOverflowMode"`
	// Sets the threshold of the number of keys, after that the two-level aggregation should be used.
	GroupByTwoLevelThreshold *int `pulumi:"groupByTwoLevelThreshold"`
	// Sets the threshold of the number of bytes, after that the two-level aggregation should be used.
	GroupByTwoLevelThresholdBytes *int `pulumi:"groupByTwoLevelThresholdBytes"`
	// Timeout for HTTP connection in milliseconds.
	HttpConnectionTimeout *int `pulumi:"httpConnectionTimeout"`
	// Sets minimal interval between notifications about request process in HTTP header X-ClickHouse-Progress.
	HttpHeadersProgressInterval *int `pulumi:"httpHeadersProgressInterval"`
	// Timeout for HTTP connection in milliseconds.
	HttpReceiveTimeout *int `pulumi:"httpReceiveTimeout"`
	// Timeout for HTTP connection in milliseconds.
	HttpSendTimeout *int `pulumi:"httpSendTimeout"`
	// When performing INSERT queries, replace omitted input column values with default values of the respective columns.
	InputFormatDefaultsForOmittedFields *bool `pulumi:"inputFormatDefaultsForOmittedFields"`
	// Enables or disables the full SQL parser if the fast stream parser can’t parse the data.
	InputFormatValuesInterpretExpressions *bool `pulumi:"inputFormatValuesInterpretExpressions"`
	// Enables the quorum writes.
	InsertQuorum *int `pulumi:"insertQuorum"`
	// Write to a quorum timeout in milliseconds.
	InsertQuorumTimeout *int `pulumi:"insertQuorumTimeout"`
	// Sets behaviour on overflow in JOIN. Possible values:
	JoinOverflowMode *string `pulumi:"joinOverflowMode"`
	// Sets the type of JOIN behaviour. When merging tables, empty cells may appear. ClickHouse fills them differently based on this setting.
	JoinUseNulls *bool `pulumi:"joinUseNulls"`
	// Require aliases for subselects and table functions in FROM that more than one table is present.
	JoinedSubqueryRequiresAlias *bool `pulumi:"joinedSubqueryRequiresAlias"`
	// Allows or restricts using the LowCardinality data type with the Native format.
	LowCardinalityAllowInNativeFormat *bool `pulumi:"lowCardinalityAllowInNativeFormat"`
	// Maximum abstract syntax tree depth.
	MaxAstDepth *int `pulumi:"maxAstDepth"`
	// Maximum abstract syntax tree elements.
	MaxAstElements *int `pulumi:"maxAstElements"`
	// A recommendation for what size of the block (in a count of rows) to load from tables.
	MaxBlockSize *int `pulumi:"maxBlockSize"`
	// Limit in bytes for using memoru for GROUP BY before using swap on disk.
	MaxBytesBeforeExternalGroupBy *int `pulumi:"maxBytesBeforeExternalGroupBy"`
	// This setting is equivalent of the maxBytesBeforeExternalGroupBy setting, except for it is for sort operation (ORDER BY), not aggregation.
	MaxBytesBeforeExternalSort *int `pulumi:"maxBytesBeforeExternalSort"`
	// Limits the maximum size of a hash table in bytes (uncompressed data) when using DISTINCT.
	MaxBytesInDistinct *int `pulumi:"maxBytesInDistinct"`
	// Limit on maximum size of the hash table for JOIN, in bytes.
	MaxBytesInJoin *int `pulumi:"maxBytesInJoin"`
	// Limit on the number of bytes in the set resulting from the execution of the IN section.
	MaxBytesInSet *int `pulumi:"maxBytesInSet"`
	// Limits the maximum number of bytes (uncompressed data) that can be read from a table when running a query.
	MaxBytesToRead *int `pulumi:"maxBytesToRead"`
	// Limits the maximum number of bytes (uncompressed data) that can be read from a table for sorting.
	MaxBytesToSort *int `pulumi:"maxBytesToSort"`
	// Limits the maximum number of bytes (uncompressed data) that can be passed to a remote server or saved in a temporary table when using GLOBAL IN.
	MaxBytesToTransfer *int `pulumi:"maxBytesToTransfer"`
	// Limits the maximum number of columns that can be read from a table in a single query.
	MaxColumnsToRead *int `pulumi:"maxColumnsToRead"`
	// Limits the maximum query execution time in milliseconds.
	MaxExecutionTime *int `pulumi:"maxExecutionTime"`
	// Maximum abstract syntax tree depth after after expansion of aliases.
	MaxExpandedAstElements *int `pulumi:"maxExpandedAstElements"`
	// The size of blocks (in a count of rows) to form for insertion into a table.
	MaxInsertBlockSize *int `pulumi:"maxInsertBlockSize"`
	// Limits the maximum memory usage (in bytes) for processing queries on a single server.
	MaxMemoryUsage *int `pulumi:"maxMemoryUsage"`
	// Limits the maximum memory usage (in bytes) for processing of user's queries on a single server.
	MaxMemoryUsageForUser *int `pulumi:"maxMemoryUsageForUser"`
	// Limits the speed of the data exchange over the network in bytes per second.
	MaxNetworkBandwidth *int `pulumi:"maxNetworkBandwidth"`
	// Limits the speed of the data exchange over the network in bytes per second.
	MaxNetworkBandwidthForUser *int `pulumi:"maxNetworkBandwidthForUser"`
	// The maximum part of a query that can be taken to RAM for parsing with the SQL parser.
	MaxQuerySize *int `pulumi:"maxQuerySize"`
	// Disables lagging replicas for distributed queries.
	MaxReplicaDelayForDistributedQueries *int `pulumi:"maxReplicaDelayForDistributedQueries"`
	// Limits the number of bytes in the result.
	MaxResultBytes *int `pulumi:"maxResultBytes"`
	// Limits the number of rows in the result.
	MaxResultRows *int `pulumi:"maxResultRows"`
	// Limits the maximum number of different rows when using DISTINCT.
	MaxRowsInDistinct *int `pulumi:"maxRowsInDistinct"`
	// Limit on maximum size of the hash table for JOIN, in rows.
	MaxRowsInJoin *int `pulumi:"maxRowsInJoin"`
	// Limit on the number of rows in the set resulting from the execution of the IN section.
	MaxRowsInSet *int `pulumi:"maxRowsInSet"`
	// Limits the maximum number of unique keys received from aggregation function.
	MaxRowsToGroupBy *int `pulumi:"maxRowsToGroupBy"`
	// Limits the maximum number of rows that can be read from a table when running a query.
	MaxRowsToRead *int `pulumi:"maxRowsToRead"`
	// Limits the maximum number of rows that can be read from a table for sorting.
	MaxRowsToSort *int `pulumi:"maxRowsToSort"`
	// Limits the maximum number of rows that can be passed to a remote server or saved in a temporary table when using GLOBAL IN.
	MaxRowsToTransfer *int `pulumi:"maxRowsToTransfer"`
	// Limits the maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
	MaxTemporaryColumns *int `pulumi:"maxTemporaryColumns"`
	// Limits the maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
	MaxTemporaryNonConstColumns *int `pulumi:"maxTemporaryNonConstColumns"`
	// The maximum number of query processing threads, excluding threads for retrieving data from remote servers.
	MaxThreads *int `pulumi:"maxThreads"`
	// If ClickHouse should read more than mergeTreeMaxBytesToUseCache bytes in one query, it doesn’t use the cache of uncompressed blocks.
	MergeTreeMaxBytesToUseCache *int `pulumi:"mergeTreeMaxBytesToUseCache"`
	// If ClickHouse should read more than mergeTreeMaxRowsToUseCache rows in one query, it doesn’t use the cache of uncompressed blocks.
	MergeTreeMaxRowsToUseCache *int `pulumi:"mergeTreeMaxRowsToUseCache"`
	// If the number of bytes to read from one file of a MergeTree-engine table exceeds merge_tree_min_bytes_for_concurrent_read, then ClickHouse tries to concurrently read from this file in several threads.
	MergeTreeMinBytesForConcurrentRead *int `pulumi:"mergeTreeMinBytesForConcurrentRead"`
	// If the number of rows to be read from a file of a MergeTree table exceeds mergeTreeMinRowsForConcurrentRead then ClickHouse tries to perform a concurrent reading from this file on several threads.
	MergeTreeMinRowsForConcurrentRead *int `pulumi:"mergeTreeMinRowsForConcurrentRead"`
	// The minimum data volume required for using direct I/O access to the storage disk.
	MinBytesToUseDirectIo *int `pulumi:"minBytesToUseDirectIo"`
	// How many times to potentially use a compiled chunk of code before running compilation.
	MinCountToCompile *int `pulumi:"minCountToCompile"`
	// A query waits for expression compilation process to complete prior to continuing execution.
	MinCountToCompileExpression *int `pulumi:"minCountToCompileExpression"`
	// Minimal execution speed in rows per second.
	MinExecutionSpeed *int `pulumi:"minExecutionSpeed"`
	// Minimal execution speed in bytes per second.
	MinExecutionSpeedBytes *int `pulumi:"minExecutionSpeedBytes"`
	// Sets the minimum number of bytes in the block which can be inserted into a table by an INSERT query.
	MinInsertBlockSizeBytes *int `pulumi:"minInsertBlockSizeBytes"`
	// Sets the minimum number of rows in the block which can be inserted into a table by an INSERT query.
	MinInsertBlockSizeRows *int `pulumi:"minInsertBlockSizeRows"`
	// If the value is true, integers appear in quotes when using JSON* Int64 and UInt64 formats (for compatibility with most JavaScript implementations); otherwise, integers are output without the quotes.
	OutputFormatJsonQuote64bitIntegers *bool `pulumi:"outputFormatJsonQuote64bitIntegers"`
	// Enables +nan, -nan, +inf, -inf outputs in JSON output format.
	OutputFormatJsonQuoteDenormals *bool `pulumi:"outputFormatJsonQuoteDenormals"`
	// Query priority.
	Priority *int `pulumi:"priority"`
	// Quota accounting mode.
	QuotaMode *string `pulumi:"quotaMode"`
	// Sets behaviour on overflow while read. Possible values:
	ReadOverflowMode *string `pulumi:"readOverflowMode"`
	// Restricts permissions for reading data, write data and change settings queries.
	Readonly *int `pulumi:"readonly"`
	// Receive timeout in milliseconds on the socket used for communicating with the client.
	ReceiveTimeout *int `pulumi:"receiveTimeout"`
	// For ALTER ... ATTACH|DETACH|DROP queries, you can use the replicationAlterPartitionsSync setting to set up waiting.
	ReplicationAlterPartitionsSync *int `pulumi:"replicationAlterPartitionsSync"`
	// Sets behaviour on overflow in result. Possible values:
	ResultOverflowMode *string `pulumi:"resultOverflowMode"`
	// Enables or disables sequential consistency for SELECT queries.
	SelectSequentialConsistency *bool `pulumi:"selectSequentialConsistency"`
	// Enables or disables X-ClickHouse-Progress HTTP response headers in clickhouse-server responses.
	SendProgressInHttpHeaders *bool `pulumi:"sendProgressInHttpHeaders"`
	// Send timeout in milliseconds on the socket used for communicating with the client.
	SendTimeout *int `pulumi:"sendTimeout"`
	// Sets behaviour on overflow in the set resulting. Possible values:
	SetOverflowMode *string `pulumi:"setOverflowMode"`
	// Enables or disables silently skipping of unavailable shards.
	SkipUnavailableShards *bool `pulumi:"skipUnavailableShards"`
	// Sets behaviour on overflow while sort. Possible values:
	SortOverflowMode *string `pulumi:"sortOverflowMode"`
	// Sets behaviour on overflow. Possible values:
	TimeoutOverflowMode *string `pulumi:"timeoutOverflowMode"`
	// Sets behaviour on overflow. Possible values:
	TransferOverflowMode *string `pulumi:"transferOverflowMode"`
	// Enables equality of NULL values for IN operator.
	TransformNullIn *bool `pulumi:"transformNullIn"`
	// Whether to use a cache of uncompressed blocks.
	UseUncompressedCache *bool `pulumi:"useUncompressedCache"`
}

// MdbClickhouseClusterUserSettingsInput is an input type that accepts MdbClickhouseClusterUserSettingsArgs and MdbClickhouseClusterUserSettingsOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterUserSettingsInput` via:
//
//          MdbClickhouseClusterUserSettingsArgs{...}
type MdbClickhouseClusterUserSettingsInput interface {
	pulumi.Input

	ToMdbClickhouseClusterUserSettingsOutput() MdbClickhouseClusterUserSettingsOutput
	ToMdbClickhouseClusterUserSettingsOutputWithContext(context.Context) MdbClickhouseClusterUserSettingsOutput
}

type MdbClickhouseClusterUserSettingsArgs struct {
	// Include CORS headers in HTTP responces.
	AddHttpCorsHeader pulumi.BoolPtrInput `pulumi:"addHttpCorsHeader"`
	// Allows or denies DDL queries.
	AllowDdl pulumi.BoolPtrInput `pulumi:"allowDdl"`
	// Enable compilation of queries.
	Compile pulumi.BoolPtrInput `pulumi:"compile"`
	// Turn on expression compilation.
	CompileExpressions pulumi.BoolPtrInput `pulumi:"compileExpressions"`
	// Connect timeout in milliseconds on the socket used for communicating with the client.
	ConnectTimeout pulumi.IntPtrInput `pulumi:"connectTimeout"`
	// Specifies which of the uniq* functions should be used to perform the COUNT(DISTINCT …) construction.
	CountDistinctImplementation pulumi.StringPtrInput `pulumi:"countDistinctImplementation"`
	// Sets behaviour on overflow when using DISTINCT. Possible values:
	DistinctOverflowMode pulumi.StringPtrInput `pulumi:"distinctOverflowMode"`
	// Determine the behavior of distributed subqueries.
	DistributedAggregationMemoryEfficient pulumi.BoolPtrInput `pulumi:"distributedAggregationMemoryEfficient"`
	// Timeout for DDL queries, in milliseconds.
	DistributedDdlTaskTimeout pulumi.IntPtrInput `pulumi:"distributedDdlTaskTimeout"`
	// Changes the behaviour of distributed subqueries.
	DistributedProductMode pulumi.StringPtrInput `pulumi:"distributedProductMode"`
	// Allows to retunr empty result.
	EmptyResultForAggregationByEmptySet pulumi.BoolPtrInput `pulumi:"emptyResultForAggregationByEmptySet"`
	// Enables or disables data compression in the response to an HTTP request.
	EnableHttpCompression pulumi.BoolPtrInput `pulumi:"enableHttpCompression"`
	// Forces a query to an out-of-date replica if updated data is not available.
	FallbackToStaleReplicasForDistributedQueries pulumi.BoolPtrInput `pulumi:"fallbackToStaleReplicasForDistributedQueries"`
	// Disables query execution if the index can’t be used by date.
	ForceIndexByDate pulumi.BoolPtrInput `pulumi:"forceIndexByDate"`
	// Disables query execution if indexing by the primary key is not possible.
	ForcePrimaryKey pulumi.BoolPtrInput `pulumi:"forcePrimaryKey"`
	// Sets behaviour on overflow while GROUP BY operation. Possible values:
	GroupByOverflowMode pulumi.StringPtrInput `pulumi:"groupByOverflowMode"`
	// Sets the threshold of the number of keys, after that the two-level aggregation should be used.
	GroupByTwoLevelThreshold pulumi.IntPtrInput `pulumi:"groupByTwoLevelThreshold"`
	// Sets the threshold of the number of bytes, after that the two-level aggregation should be used.
	GroupByTwoLevelThresholdBytes pulumi.IntPtrInput `pulumi:"groupByTwoLevelThresholdBytes"`
	// Timeout for HTTP connection in milliseconds.
	HttpConnectionTimeout pulumi.IntPtrInput `pulumi:"httpConnectionTimeout"`
	// Sets minimal interval between notifications about request process in HTTP header X-ClickHouse-Progress.
	HttpHeadersProgressInterval pulumi.IntPtrInput `pulumi:"httpHeadersProgressInterval"`
	// Timeout for HTTP connection in milliseconds.
	HttpReceiveTimeout pulumi.IntPtrInput `pulumi:"httpReceiveTimeout"`
	// Timeout for HTTP connection in milliseconds.
	HttpSendTimeout pulumi.IntPtrInput `pulumi:"httpSendTimeout"`
	// When performing INSERT queries, replace omitted input column values with default values of the respective columns.
	InputFormatDefaultsForOmittedFields pulumi.BoolPtrInput `pulumi:"inputFormatDefaultsForOmittedFields"`
	// Enables or disables the full SQL parser if the fast stream parser can’t parse the data.
	InputFormatValuesInterpretExpressions pulumi.BoolPtrInput `pulumi:"inputFormatValuesInterpretExpressions"`
	// Enables the quorum writes.
	InsertQuorum pulumi.IntPtrInput `pulumi:"insertQuorum"`
	// Write to a quorum timeout in milliseconds.
	InsertQuorumTimeout pulumi.IntPtrInput `pulumi:"insertQuorumTimeout"`
	// Sets behaviour on overflow in JOIN. Possible values:
	JoinOverflowMode pulumi.StringPtrInput `pulumi:"joinOverflowMode"`
	// Sets the type of JOIN behaviour. When merging tables, empty cells may appear. ClickHouse fills them differently based on this setting.
	JoinUseNulls pulumi.BoolPtrInput `pulumi:"joinUseNulls"`
	// Require aliases for subselects and table functions in FROM that more than one table is present.
	JoinedSubqueryRequiresAlias pulumi.BoolPtrInput `pulumi:"joinedSubqueryRequiresAlias"`
	// Allows or restricts using the LowCardinality data type with the Native format.
	LowCardinalityAllowInNativeFormat pulumi.BoolPtrInput `pulumi:"lowCardinalityAllowInNativeFormat"`
	// Maximum abstract syntax tree depth.
	MaxAstDepth pulumi.IntPtrInput `pulumi:"maxAstDepth"`
	// Maximum abstract syntax tree elements.
	MaxAstElements pulumi.IntPtrInput `pulumi:"maxAstElements"`
	// A recommendation for what size of the block (in a count of rows) to load from tables.
	MaxBlockSize pulumi.IntPtrInput `pulumi:"maxBlockSize"`
	// Limit in bytes for using memoru for GROUP BY before using swap on disk.
	MaxBytesBeforeExternalGroupBy pulumi.IntPtrInput `pulumi:"maxBytesBeforeExternalGroupBy"`
	// This setting is equivalent of the maxBytesBeforeExternalGroupBy setting, except for it is for sort operation (ORDER BY), not aggregation.
	MaxBytesBeforeExternalSort pulumi.IntPtrInput `pulumi:"maxBytesBeforeExternalSort"`
	// Limits the maximum size of a hash table in bytes (uncompressed data) when using DISTINCT.
	MaxBytesInDistinct pulumi.IntPtrInput `pulumi:"maxBytesInDistinct"`
	// Limit on maximum size of the hash table for JOIN, in bytes.
	MaxBytesInJoin pulumi.IntPtrInput `pulumi:"maxBytesInJoin"`
	// Limit on the number of bytes in the set resulting from the execution of the IN section.
	MaxBytesInSet pulumi.IntPtrInput `pulumi:"maxBytesInSet"`
	// Limits the maximum number of bytes (uncompressed data) that can be read from a table when running a query.
	MaxBytesToRead pulumi.IntPtrInput `pulumi:"maxBytesToRead"`
	// Limits the maximum number of bytes (uncompressed data) that can be read from a table for sorting.
	MaxBytesToSort pulumi.IntPtrInput `pulumi:"maxBytesToSort"`
	// Limits the maximum number of bytes (uncompressed data) that can be passed to a remote server or saved in a temporary table when using GLOBAL IN.
	MaxBytesToTransfer pulumi.IntPtrInput `pulumi:"maxBytesToTransfer"`
	// Limits the maximum number of columns that can be read from a table in a single query.
	MaxColumnsToRead pulumi.IntPtrInput `pulumi:"maxColumnsToRead"`
	// Limits the maximum query execution time in milliseconds.
	MaxExecutionTime pulumi.IntPtrInput `pulumi:"maxExecutionTime"`
	// Maximum abstract syntax tree depth after after expansion of aliases.
	MaxExpandedAstElements pulumi.IntPtrInput `pulumi:"maxExpandedAstElements"`
	// The size of blocks (in a count of rows) to form for insertion into a table.
	MaxInsertBlockSize pulumi.IntPtrInput `pulumi:"maxInsertBlockSize"`
	// Limits the maximum memory usage (in bytes) for processing queries on a single server.
	MaxMemoryUsage pulumi.IntPtrInput `pulumi:"maxMemoryUsage"`
	// Limits the maximum memory usage (in bytes) for processing of user's queries on a single server.
	MaxMemoryUsageForUser pulumi.IntPtrInput `pulumi:"maxMemoryUsageForUser"`
	// Limits the speed of the data exchange over the network in bytes per second.
	MaxNetworkBandwidth pulumi.IntPtrInput `pulumi:"maxNetworkBandwidth"`
	// Limits the speed of the data exchange over the network in bytes per second.
	MaxNetworkBandwidthForUser pulumi.IntPtrInput `pulumi:"maxNetworkBandwidthForUser"`
	// The maximum part of a query that can be taken to RAM for parsing with the SQL parser.
	MaxQuerySize pulumi.IntPtrInput `pulumi:"maxQuerySize"`
	// Disables lagging replicas for distributed queries.
	MaxReplicaDelayForDistributedQueries pulumi.IntPtrInput `pulumi:"maxReplicaDelayForDistributedQueries"`
	// Limits the number of bytes in the result.
	MaxResultBytes pulumi.IntPtrInput `pulumi:"maxResultBytes"`
	// Limits the number of rows in the result.
	MaxResultRows pulumi.IntPtrInput `pulumi:"maxResultRows"`
	// Limits the maximum number of different rows when using DISTINCT.
	MaxRowsInDistinct pulumi.IntPtrInput `pulumi:"maxRowsInDistinct"`
	// Limit on maximum size of the hash table for JOIN, in rows.
	MaxRowsInJoin pulumi.IntPtrInput `pulumi:"maxRowsInJoin"`
	// Limit on the number of rows in the set resulting from the execution of the IN section.
	MaxRowsInSet pulumi.IntPtrInput `pulumi:"maxRowsInSet"`
	// Limits the maximum number of unique keys received from aggregation function.
	MaxRowsToGroupBy pulumi.IntPtrInput `pulumi:"maxRowsToGroupBy"`
	// Limits the maximum number of rows that can be read from a table when running a query.
	MaxRowsToRead pulumi.IntPtrInput `pulumi:"maxRowsToRead"`
	// Limits the maximum number of rows that can be read from a table for sorting.
	MaxRowsToSort pulumi.IntPtrInput `pulumi:"maxRowsToSort"`
	// Limits the maximum number of rows that can be passed to a remote server or saved in a temporary table when using GLOBAL IN.
	MaxRowsToTransfer pulumi.IntPtrInput `pulumi:"maxRowsToTransfer"`
	// Limits the maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
	MaxTemporaryColumns pulumi.IntPtrInput `pulumi:"maxTemporaryColumns"`
	// Limits the maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
	MaxTemporaryNonConstColumns pulumi.IntPtrInput `pulumi:"maxTemporaryNonConstColumns"`
	// The maximum number of query processing threads, excluding threads for retrieving data from remote servers.
	MaxThreads pulumi.IntPtrInput `pulumi:"maxThreads"`
	// If ClickHouse should read more than mergeTreeMaxBytesToUseCache bytes in one query, it doesn’t use the cache of uncompressed blocks.
	MergeTreeMaxBytesToUseCache pulumi.IntPtrInput `pulumi:"mergeTreeMaxBytesToUseCache"`
	// If ClickHouse should read more than mergeTreeMaxRowsToUseCache rows in one query, it doesn’t use the cache of uncompressed blocks.
	MergeTreeMaxRowsToUseCache pulumi.IntPtrInput `pulumi:"mergeTreeMaxRowsToUseCache"`
	// If the number of bytes to read from one file of a MergeTree-engine table exceeds merge_tree_min_bytes_for_concurrent_read, then ClickHouse tries to concurrently read from this file in several threads.
	MergeTreeMinBytesForConcurrentRead pulumi.IntPtrInput `pulumi:"mergeTreeMinBytesForConcurrentRead"`
	// If the number of rows to be read from a file of a MergeTree table exceeds mergeTreeMinRowsForConcurrentRead then ClickHouse tries to perform a concurrent reading from this file on several threads.
	MergeTreeMinRowsForConcurrentRead pulumi.IntPtrInput `pulumi:"mergeTreeMinRowsForConcurrentRead"`
	// The minimum data volume required for using direct I/O access to the storage disk.
	MinBytesToUseDirectIo pulumi.IntPtrInput `pulumi:"minBytesToUseDirectIo"`
	// How many times to potentially use a compiled chunk of code before running compilation.
	MinCountToCompile pulumi.IntPtrInput `pulumi:"minCountToCompile"`
	// A query waits for expression compilation process to complete prior to continuing execution.
	MinCountToCompileExpression pulumi.IntPtrInput `pulumi:"minCountToCompileExpression"`
	// Minimal execution speed in rows per second.
	MinExecutionSpeed pulumi.IntPtrInput `pulumi:"minExecutionSpeed"`
	// Minimal execution speed in bytes per second.
	MinExecutionSpeedBytes pulumi.IntPtrInput `pulumi:"minExecutionSpeedBytes"`
	// Sets the minimum number of bytes in the block which can be inserted into a table by an INSERT query.
	MinInsertBlockSizeBytes pulumi.IntPtrInput `pulumi:"minInsertBlockSizeBytes"`
	// Sets the minimum number of rows in the block which can be inserted into a table by an INSERT query.
	MinInsertBlockSizeRows pulumi.IntPtrInput `pulumi:"minInsertBlockSizeRows"`
	// If the value is true, integers appear in quotes when using JSON* Int64 and UInt64 formats (for compatibility with most JavaScript implementations); otherwise, integers are output without the quotes.
	OutputFormatJsonQuote64bitIntegers pulumi.BoolPtrInput `pulumi:"outputFormatJsonQuote64bitIntegers"`
	// Enables +nan, -nan, +inf, -inf outputs in JSON output format.
	OutputFormatJsonQuoteDenormals pulumi.BoolPtrInput `pulumi:"outputFormatJsonQuoteDenormals"`
	// Query priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Quota accounting mode.
	QuotaMode pulumi.StringPtrInput `pulumi:"quotaMode"`
	// Sets behaviour on overflow while read. Possible values:
	ReadOverflowMode pulumi.StringPtrInput `pulumi:"readOverflowMode"`
	// Restricts permissions for reading data, write data and change settings queries.
	Readonly pulumi.IntPtrInput `pulumi:"readonly"`
	// Receive timeout in milliseconds on the socket used for communicating with the client.
	ReceiveTimeout pulumi.IntPtrInput `pulumi:"receiveTimeout"`
	// For ALTER ... ATTACH|DETACH|DROP queries, you can use the replicationAlterPartitionsSync setting to set up waiting.
	ReplicationAlterPartitionsSync pulumi.IntPtrInput `pulumi:"replicationAlterPartitionsSync"`
	// Sets behaviour on overflow in result. Possible values:
	ResultOverflowMode pulumi.StringPtrInput `pulumi:"resultOverflowMode"`
	// Enables or disables sequential consistency for SELECT queries.
	SelectSequentialConsistency pulumi.BoolPtrInput `pulumi:"selectSequentialConsistency"`
	// Enables or disables X-ClickHouse-Progress HTTP response headers in clickhouse-server responses.
	SendProgressInHttpHeaders pulumi.BoolPtrInput `pulumi:"sendProgressInHttpHeaders"`
	// Send timeout in milliseconds on the socket used for communicating with the client.
	SendTimeout pulumi.IntPtrInput `pulumi:"sendTimeout"`
	// Sets behaviour on overflow in the set resulting. Possible values:
	SetOverflowMode pulumi.StringPtrInput `pulumi:"setOverflowMode"`
	// Enables or disables silently skipping of unavailable shards.
	SkipUnavailableShards pulumi.BoolPtrInput `pulumi:"skipUnavailableShards"`
	// Sets behaviour on overflow while sort. Possible values:
	SortOverflowMode pulumi.StringPtrInput `pulumi:"sortOverflowMode"`
	// Sets behaviour on overflow. Possible values:
	TimeoutOverflowMode pulumi.StringPtrInput `pulumi:"timeoutOverflowMode"`
	// Sets behaviour on overflow. Possible values:
	TransferOverflowMode pulumi.StringPtrInput `pulumi:"transferOverflowMode"`
	// Enables equality of NULL values for IN operator.
	TransformNullIn pulumi.BoolPtrInput `pulumi:"transformNullIn"`
	// Whether to use a cache of uncompressed blocks.
	UseUncompressedCache pulumi.BoolPtrInput `pulumi:"useUncompressedCache"`
}

func (MdbClickhouseClusterUserSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterUserSettings)(nil)).Elem()
}

func (i MdbClickhouseClusterUserSettingsArgs) ToMdbClickhouseClusterUserSettingsOutput() MdbClickhouseClusterUserSettingsOutput {
	return i.ToMdbClickhouseClusterUserSettingsOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterUserSettingsArgs) ToMdbClickhouseClusterUserSettingsOutputWithContext(ctx context.Context) MdbClickhouseClusterUserSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterUserSettingsOutput)
}

func (i MdbClickhouseClusterUserSettingsArgs) ToMdbClickhouseClusterUserSettingsPtrOutput() MdbClickhouseClusterUserSettingsPtrOutput {
	return i.ToMdbClickhouseClusterUserSettingsPtrOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterUserSettingsArgs) ToMdbClickhouseClusterUserSettingsPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterUserSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterUserSettingsOutput).ToMdbClickhouseClusterUserSettingsPtrOutputWithContext(ctx)
}

// MdbClickhouseClusterUserSettingsPtrInput is an input type that accepts MdbClickhouseClusterUserSettingsArgs, MdbClickhouseClusterUserSettingsPtr and MdbClickhouseClusterUserSettingsPtrOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterUserSettingsPtrInput` via:
//
//          MdbClickhouseClusterUserSettingsArgs{...}
//
//  or:
//
//          nil
type MdbClickhouseClusterUserSettingsPtrInput interface {
	pulumi.Input

	ToMdbClickhouseClusterUserSettingsPtrOutput() MdbClickhouseClusterUserSettingsPtrOutput
	ToMdbClickhouseClusterUserSettingsPtrOutputWithContext(context.Context) MdbClickhouseClusterUserSettingsPtrOutput
}

type mdbClickhouseClusterUserSettingsPtrType MdbClickhouseClusterUserSettingsArgs

func MdbClickhouseClusterUserSettingsPtr(v *MdbClickhouseClusterUserSettingsArgs) MdbClickhouseClusterUserSettingsPtrInput {
	return (*mdbClickhouseClusterUserSettingsPtrType)(v)
}

func (*mdbClickhouseClusterUserSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbClickhouseClusterUserSettings)(nil)).Elem()
}

func (i *mdbClickhouseClusterUserSettingsPtrType) ToMdbClickhouseClusterUserSettingsPtrOutput() MdbClickhouseClusterUserSettingsPtrOutput {
	return i.ToMdbClickhouseClusterUserSettingsPtrOutputWithContext(context.Background())
}

func (i *mdbClickhouseClusterUserSettingsPtrType) ToMdbClickhouseClusterUserSettingsPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterUserSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterUserSettingsPtrOutput)
}

type MdbClickhouseClusterUserSettingsOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterUserSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterUserSettings)(nil)).Elem()
}

func (o MdbClickhouseClusterUserSettingsOutput) ToMdbClickhouseClusterUserSettingsOutput() MdbClickhouseClusterUserSettingsOutput {
	return o
}

func (o MdbClickhouseClusterUserSettingsOutput) ToMdbClickhouseClusterUserSettingsOutputWithContext(ctx context.Context) MdbClickhouseClusterUserSettingsOutput {
	return o
}

func (o MdbClickhouseClusterUserSettingsOutput) ToMdbClickhouseClusterUserSettingsPtrOutput() MdbClickhouseClusterUserSettingsPtrOutput {
	return o.ToMdbClickhouseClusterUserSettingsPtrOutputWithContext(context.Background())
}

func (o MdbClickhouseClusterUserSettingsOutput) ToMdbClickhouseClusterUserSettingsPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterUserSettingsPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *MdbClickhouseClusterUserSettings {
		return &v
	}).(MdbClickhouseClusterUserSettingsPtrOutput)
}

// Include CORS headers in HTTP responces.
func (o MdbClickhouseClusterUserSettingsOutput) AddHttpCorsHeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *bool { return v.AddHttpCorsHeader }).(pulumi.BoolPtrOutput)
}

// Allows or denies DDL queries.
func (o MdbClickhouseClusterUserSettingsOutput) AllowDdl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *bool { return v.AllowDdl }).(pulumi.BoolPtrOutput)
}

// Enable compilation of queries.
func (o MdbClickhouseClusterUserSettingsOutput) Compile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *bool { return v.Compile }).(pulumi.BoolPtrOutput)
}

// Turn on expression compilation.
func (o MdbClickhouseClusterUserSettingsOutput) CompileExpressions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *bool { return v.CompileExpressions }).(pulumi.BoolPtrOutput)
}

// Connect timeout in milliseconds on the socket used for communicating with the client.
func (o MdbClickhouseClusterUserSettingsOutput) ConnectTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.ConnectTimeout }).(pulumi.IntPtrOutput)
}

// Specifies which of the uniq* functions should be used to perform the COUNT(DISTINCT …) construction.
func (o MdbClickhouseClusterUserSettingsOutput) CountDistinctImplementation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *string { return v.CountDistinctImplementation }).(pulumi.StringPtrOutput)
}

// Sets behaviour on overflow when using DISTINCT. Possible values:
func (o MdbClickhouseClusterUserSettingsOutput) DistinctOverflowMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *string { return v.DistinctOverflowMode }).(pulumi.StringPtrOutput)
}

// Determine the behavior of distributed subqueries.
func (o MdbClickhouseClusterUserSettingsOutput) DistributedAggregationMemoryEfficient() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *bool { return v.DistributedAggregationMemoryEfficient }).(pulumi.BoolPtrOutput)
}

// Timeout for DDL queries, in milliseconds.
func (o MdbClickhouseClusterUserSettingsOutput) DistributedDdlTaskTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.DistributedDdlTaskTimeout }).(pulumi.IntPtrOutput)
}

// Changes the behaviour of distributed subqueries.
func (o MdbClickhouseClusterUserSettingsOutput) DistributedProductMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *string { return v.DistributedProductMode }).(pulumi.StringPtrOutput)
}

// Allows to retunr empty result.
func (o MdbClickhouseClusterUserSettingsOutput) EmptyResultForAggregationByEmptySet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *bool { return v.EmptyResultForAggregationByEmptySet }).(pulumi.BoolPtrOutput)
}

// Enables or disables data compression in the response to an HTTP request.
func (o MdbClickhouseClusterUserSettingsOutput) EnableHttpCompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *bool { return v.EnableHttpCompression }).(pulumi.BoolPtrOutput)
}

// Forces a query to an out-of-date replica if updated data is not available.
func (o MdbClickhouseClusterUserSettingsOutput) FallbackToStaleReplicasForDistributedQueries() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *bool { return v.FallbackToStaleReplicasForDistributedQueries }).(pulumi.BoolPtrOutput)
}

// Disables query execution if the index can’t be used by date.
func (o MdbClickhouseClusterUserSettingsOutput) ForceIndexByDate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *bool { return v.ForceIndexByDate }).(pulumi.BoolPtrOutput)
}

// Disables query execution if indexing by the primary key is not possible.
func (o MdbClickhouseClusterUserSettingsOutput) ForcePrimaryKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *bool { return v.ForcePrimaryKey }).(pulumi.BoolPtrOutput)
}

// Sets behaviour on overflow while GROUP BY operation. Possible values:
func (o MdbClickhouseClusterUserSettingsOutput) GroupByOverflowMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *string { return v.GroupByOverflowMode }).(pulumi.StringPtrOutput)
}

// Sets the threshold of the number of keys, after that the two-level aggregation should be used.
func (o MdbClickhouseClusterUserSettingsOutput) GroupByTwoLevelThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.GroupByTwoLevelThreshold }).(pulumi.IntPtrOutput)
}

// Sets the threshold of the number of bytes, after that the two-level aggregation should be used.
func (o MdbClickhouseClusterUserSettingsOutput) GroupByTwoLevelThresholdBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.GroupByTwoLevelThresholdBytes }).(pulumi.IntPtrOutput)
}

// Timeout for HTTP connection in milliseconds.
func (o MdbClickhouseClusterUserSettingsOutput) HttpConnectionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.HttpConnectionTimeout }).(pulumi.IntPtrOutput)
}

// Sets minimal interval between notifications about request process in HTTP header X-ClickHouse-Progress.
func (o MdbClickhouseClusterUserSettingsOutput) HttpHeadersProgressInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.HttpHeadersProgressInterval }).(pulumi.IntPtrOutput)
}

// Timeout for HTTP connection in milliseconds.
func (o MdbClickhouseClusterUserSettingsOutput) HttpReceiveTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.HttpReceiveTimeout }).(pulumi.IntPtrOutput)
}

// Timeout for HTTP connection in milliseconds.
func (o MdbClickhouseClusterUserSettingsOutput) HttpSendTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.HttpSendTimeout }).(pulumi.IntPtrOutput)
}

// When performing INSERT queries, replace omitted input column values with default values of the respective columns.
func (o MdbClickhouseClusterUserSettingsOutput) InputFormatDefaultsForOmittedFields() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *bool { return v.InputFormatDefaultsForOmittedFields }).(pulumi.BoolPtrOutput)
}

// Enables or disables the full SQL parser if the fast stream parser can’t parse the data.
func (o MdbClickhouseClusterUserSettingsOutput) InputFormatValuesInterpretExpressions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *bool { return v.InputFormatValuesInterpretExpressions }).(pulumi.BoolPtrOutput)
}

// Enables the quorum writes.
func (o MdbClickhouseClusterUserSettingsOutput) InsertQuorum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.InsertQuorum }).(pulumi.IntPtrOutput)
}

// Write to a quorum timeout in milliseconds.
func (o MdbClickhouseClusterUserSettingsOutput) InsertQuorumTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.InsertQuorumTimeout }).(pulumi.IntPtrOutput)
}

// Sets behaviour on overflow in JOIN. Possible values:
func (o MdbClickhouseClusterUserSettingsOutput) JoinOverflowMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *string { return v.JoinOverflowMode }).(pulumi.StringPtrOutput)
}

// Sets the type of JOIN behaviour. When merging tables, empty cells may appear. ClickHouse fills them differently based on this setting.
func (o MdbClickhouseClusterUserSettingsOutput) JoinUseNulls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *bool { return v.JoinUseNulls }).(pulumi.BoolPtrOutput)
}

// Require aliases for subselects and table functions in FROM that more than one table is present.
func (o MdbClickhouseClusterUserSettingsOutput) JoinedSubqueryRequiresAlias() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *bool { return v.JoinedSubqueryRequiresAlias }).(pulumi.BoolPtrOutput)
}

// Allows or restricts using the LowCardinality data type with the Native format.
func (o MdbClickhouseClusterUserSettingsOutput) LowCardinalityAllowInNativeFormat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *bool { return v.LowCardinalityAllowInNativeFormat }).(pulumi.BoolPtrOutput)
}

// Maximum abstract syntax tree depth.
func (o MdbClickhouseClusterUserSettingsOutput) MaxAstDepth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxAstDepth }).(pulumi.IntPtrOutput)
}

// Maximum abstract syntax tree elements.
func (o MdbClickhouseClusterUserSettingsOutput) MaxAstElements() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxAstElements }).(pulumi.IntPtrOutput)
}

// A recommendation for what size of the block (in a count of rows) to load from tables.
func (o MdbClickhouseClusterUserSettingsOutput) MaxBlockSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxBlockSize }).(pulumi.IntPtrOutput)
}

// Limit in bytes for using memoru for GROUP BY before using swap on disk.
func (o MdbClickhouseClusterUserSettingsOutput) MaxBytesBeforeExternalGroupBy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxBytesBeforeExternalGroupBy }).(pulumi.IntPtrOutput)
}

// This setting is equivalent of the maxBytesBeforeExternalGroupBy setting, except for it is for sort operation (ORDER BY), not aggregation.
func (o MdbClickhouseClusterUserSettingsOutput) MaxBytesBeforeExternalSort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxBytesBeforeExternalSort }).(pulumi.IntPtrOutput)
}

// Limits the maximum size of a hash table in bytes (uncompressed data) when using DISTINCT.
func (o MdbClickhouseClusterUserSettingsOutput) MaxBytesInDistinct() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxBytesInDistinct }).(pulumi.IntPtrOutput)
}

// Limit on maximum size of the hash table for JOIN, in bytes.
func (o MdbClickhouseClusterUserSettingsOutput) MaxBytesInJoin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxBytesInJoin }).(pulumi.IntPtrOutput)
}

// Limit on the number of bytes in the set resulting from the execution of the IN section.
func (o MdbClickhouseClusterUserSettingsOutput) MaxBytesInSet() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxBytesInSet }).(pulumi.IntPtrOutput)
}

// Limits the maximum number of bytes (uncompressed data) that can be read from a table when running a query.
func (o MdbClickhouseClusterUserSettingsOutput) MaxBytesToRead() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxBytesToRead }).(pulumi.IntPtrOutput)
}

// Limits the maximum number of bytes (uncompressed data) that can be read from a table for sorting.
func (o MdbClickhouseClusterUserSettingsOutput) MaxBytesToSort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxBytesToSort }).(pulumi.IntPtrOutput)
}

// Limits the maximum number of bytes (uncompressed data) that can be passed to a remote server or saved in a temporary table when using GLOBAL IN.
func (o MdbClickhouseClusterUserSettingsOutput) MaxBytesToTransfer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxBytesToTransfer }).(pulumi.IntPtrOutput)
}

// Limits the maximum number of columns that can be read from a table in a single query.
func (o MdbClickhouseClusterUserSettingsOutput) MaxColumnsToRead() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxColumnsToRead }).(pulumi.IntPtrOutput)
}

// Limits the maximum query execution time in milliseconds.
func (o MdbClickhouseClusterUserSettingsOutput) MaxExecutionTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxExecutionTime }).(pulumi.IntPtrOutput)
}

// Maximum abstract syntax tree depth after after expansion of aliases.
func (o MdbClickhouseClusterUserSettingsOutput) MaxExpandedAstElements() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxExpandedAstElements }).(pulumi.IntPtrOutput)
}

// The size of blocks (in a count of rows) to form for insertion into a table.
func (o MdbClickhouseClusterUserSettingsOutput) MaxInsertBlockSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxInsertBlockSize }).(pulumi.IntPtrOutput)
}

// Limits the maximum memory usage (in bytes) for processing queries on a single server.
func (o MdbClickhouseClusterUserSettingsOutput) MaxMemoryUsage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxMemoryUsage }).(pulumi.IntPtrOutput)
}

// Limits the maximum memory usage (in bytes) for processing of user's queries on a single server.
func (o MdbClickhouseClusterUserSettingsOutput) MaxMemoryUsageForUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxMemoryUsageForUser }).(pulumi.IntPtrOutput)
}

// Limits the speed of the data exchange over the network in bytes per second.
func (o MdbClickhouseClusterUserSettingsOutput) MaxNetworkBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxNetworkBandwidth }).(pulumi.IntPtrOutput)
}

// Limits the speed of the data exchange over the network in bytes per second.
func (o MdbClickhouseClusterUserSettingsOutput) MaxNetworkBandwidthForUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxNetworkBandwidthForUser }).(pulumi.IntPtrOutput)
}

// The maximum part of a query that can be taken to RAM for parsing with the SQL parser.
func (o MdbClickhouseClusterUserSettingsOutput) MaxQuerySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxQuerySize }).(pulumi.IntPtrOutput)
}

// Disables lagging replicas for distributed queries.
func (o MdbClickhouseClusterUserSettingsOutput) MaxReplicaDelayForDistributedQueries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxReplicaDelayForDistributedQueries }).(pulumi.IntPtrOutput)
}

// Limits the number of bytes in the result.
func (o MdbClickhouseClusterUserSettingsOutput) MaxResultBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxResultBytes }).(pulumi.IntPtrOutput)
}

// Limits the number of rows in the result.
func (o MdbClickhouseClusterUserSettingsOutput) MaxResultRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxResultRows }).(pulumi.IntPtrOutput)
}

// Limits the maximum number of different rows when using DISTINCT.
func (o MdbClickhouseClusterUserSettingsOutput) MaxRowsInDistinct() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxRowsInDistinct }).(pulumi.IntPtrOutput)
}

// Limit on maximum size of the hash table for JOIN, in rows.
func (o MdbClickhouseClusterUserSettingsOutput) MaxRowsInJoin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxRowsInJoin }).(pulumi.IntPtrOutput)
}

// Limit on the number of rows in the set resulting from the execution of the IN section.
func (o MdbClickhouseClusterUserSettingsOutput) MaxRowsInSet() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxRowsInSet }).(pulumi.IntPtrOutput)
}

// Limits the maximum number of unique keys received from aggregation function.
func (o MdbClickhouseClusterUserSettingsOutput) MaxRowsToGroupBy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxRowsToGroupBy }).(pulumi.IntPtrOutput)
}

// Limits the maximum number of rows that can be read from a table when running a query.
func (o MdbClickhouseClusterUserSettingsOutput) MaxRowsToRead() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxRowsToRead }).(pulumi.IntPtrOutput)
}

// Limits the maximum number of rows that can be read from a table for sorting.
func (o MdbClickhouseClusterUserSettingsOutput) MaxRowsToSort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxRowsToSort }).(pulumi.IntPtrOutput)
}

// Limits the maximum number of rows that can be passed to a remote server or saved in a temporary table when using GLOBAL IN.
func (o MdbClickhouseClusterUserSettingsOutput) MaxRowsToTransfer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxRowsToTransfer }).(pulumi.IntPtrOutput)
}

// Limits the maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
func (o MdbClickhouseClusterUserSettingsOutput) MaxTemporaryColumns() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxTemporaryColumns }).(pulumi.IntPtrOutput)
}

// Limits the maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
func (o MdbClickhouseClusterUserSettingsOutput) MaxTemporaryNonConstColumns() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxTemporaryNonConstColumns }).(pulumi.IntPtrOutput)
}

// The maximum number of query processing threads, excluding threads for retrieving data from remote servers.
func (o MdbClickhouseClusterUserSettingsOutput) MaxThreads() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MaxThreads }).(pulumi.IntPtrOutput)
}

// If ClickHouse should read more than mergeTreeMaxBytesToUseCache bytes in one query, it doesn’t use the cache of uncompressed blocks.
func (o MdbClickhouseClusterUserSettingsOutput) MergeTreeMaxBytesToUseCache() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MergeTreeMaxBytesToUseCache }).(pulumi.IntPtrOutput)
}

// If ClickHouse should read more than mergeTreeMaxRowsToUseCache rows in one query, it doesn’t use the cache of uncompressed blocks.
func (o MdbClickhouseClusterUserSettingsOutput) MergeTreeMaxRowsToUseCache() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MergeTreeMaxRowsToUseCache }).(pulumi.IntPtrOutput)
}

// If the number of bytes to read from one file of a MergeTree-engine table exceeds merge_tree_min_bytes_for_concurrent_read, then ClickHouse tries to concurrently read from this file in several threads.
func (o MdbClickhouseClusterUserSettingsOutput) MergeTreeMinBytesForConcurrentRead() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MergeTreeMinBytesForConcurrentRead }).(pulumi.IntPtrOutput)
}

// If the number of rows to be read from a file of a MergeTree table exceeds mergeTreeMinRowsForConcurrentRead then ClickHouse tries to perform a concurrent reading from this file on several threads.
func (o MdbClickhouseClusterUserSettingsOutput) MergeTreeMinRowsForConcurrentRead() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MergeTreeMinRowsForConcurrentRead }).(pulumi.IntPtrOutput)
}

// The minimum data volume required for using direct I/O access to the storage disk.
func (o MdbClickhouseClusterUserSettingsOutput) MinBytesToUseDirectIo() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MinBytesToUseDirectIo }).(pulumi.IntPtrOutput)
}

// How many times to potentially use a compiled chunk of code before running compilation.
func (o MdbClickhouseClusterUserSettingsOutput) MinCountToCompile() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MinCountToCompile }).(pulumi.IntPtrOutput)
}

// A query waits for expression compilation process to complete prior to continuing execution.
func (o MdbClickhouseClusterUserSettingsOutput) MinCountToCompileExpression() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MinCountToCompileExpression }).(pulumi.IntPtrOutput)
}

// Minimal execution speed in rows per second.
func (o MdbClickhouseClusterUserSettingsOutput) MinExecutionSpeed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MinExecutionSpeed }).(pulumi.IntPtrOutput)
}

// Minimal execution speed in bytes per second.
func (o MdbClickhouseClusterUserSettingsOutput) MinExecutionSpeedBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MinExecutionSpeedBytes }).(pulumi.IntPtrOutput)
}

// Sets the minimum number of bytes in the block which can be inserted into a table by an INSERT query.
func (o MdbClickhouseClusterUserSettingsOutput) MinInsertBlockSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MinInsertBlockSizeBytes }).(pulumi.IntPtrOutput)
}

// Sets the minimum number of rows in the block which can be inserted into a table by an INSERT query.
func (o MdbClickhouseClusterUserSettingsOutput) MinInsertBlockSizeRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.MinInsertBlockSizeRows }).(pulumi.IntPtrOutput)
}

// If the value is true, integers appear in quotes when using JSON* Int64 and UInt64 formats (for compatibility with most JavaScript implementations); otherwise, integers are output without the quotes.
func (o MdbClickhouseClusterUserSettingsOutput) OutputFormatJsonQuote64bitIntegers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *bool { return v.OutputFormatJsonQuote64bitIntegers }).(pulumi.BoolPtrOutput)
}

// Enables +nan, -nan, +inf, -inf outputs in JSON output format.
func (o MdbClickhouseClusterUserSettingsOutput) OutputFormatJsonQuoteDenormals() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *bool { return v.OutputFormatJsonQuoteDenormals }).(pulumi.BoolPtrOutput)
}

// Query priority.
func (o MdbClickhouseClusterUserSettingsOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Quota accounting mode.
func (o MdbClickhouseClusterUserSettingsOutput) QuotaMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *string { return v.QuotaMode }).(pulumi.StringPtrOutput)
}

// Sets behaviour on overflow while read. Possible values:
func (o MdbClickhouseClusterUserSettingsOutput) ReadOverflowMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *string { return v.ReadOverflowMode }).(pulumi.StringPtrOutput)
}

// Restricts permissions for reading data, write data and change settings queries.
func (o MdbClickhouseClusterUserSettingsOutput) Readonly() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.Readonly }).(pulumi.IntPtrOutput)
}

// Receive timeout in milliseconds on the socket used for communicating with the client.
func (o MdbClickhouseClusterUserSettingsOutput) ReceiveTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.ReceiveTimeout }).(pulumi.IntPtrOutput)
}

// For ALTER ... ATTACH|DETACH|DROP queries, you can use the replicationAlterPartitionsSync setting to set up waiting.
func (o MdbClickhouseClusterUserSettingsOutput) ReplicationAlterPartitionsSync() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.ReplicationAlterPartitionsSync }).(pulumi.IntPtrOutput)
}

// Sets behaviour on overflow in result. Possible values:
func (o MdbClickhouseClusterUserSettingsOutput) ResultOverflowMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *string { return v.ResultOverflowMode }).(pulumi.StringPtrOutput)
}

// Enables or disables sequential consistency for SELECT queries.
func (o MdbClickhouseClusterUserSettingsOutput) SelectSequentialConsistency() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *bool { return v.SelectSequentialConsistency }).(pulumi.BoolPtrOutput)
}

// Enables or disables X-ClickHouse-Progress HTTP response headers in clickhouse-server responses.
func (o MdbClickhouseClusterUserSettingsOutput) SendProgressInHttpHeaders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *bool { return v.SendProgressInHttpHeaders }).(pulumi.BoolPtrOutput)
}

// Send timeout in milliseconds on the socket used for communicating with the client.
func (o MdbClickhouseClusterUserSettingsOutput) SendTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *int { return v.SendTimeout }).(pulumi.IntPtrOutput)
}

// Sets behaviour on overflow in the set resulting. Possible values:
func (o MdbClickhouseClusterUserSettingsOutput) SetOverflowMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *string { return v.SetOverflowMode }).(pulumi.StringPtrOutput)
}

// Enables or disables silently skipping of unavailable shards.
func (o MdbClickhouseClusterUserSettingsOutput) SkipUnavailableShards() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *bool { return v.SkipUnavailableShards }).(pulumi.BoolPtrOutput)
}

// Sets behaviour on overflow while sort. Possible values:
func (o MdbClickhouseClusterUserSettingsOutput) SortOverflowMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *string { return v.SortOverflowMode }).(pulumi.StringPtrOutput)
}

// Sets behaviour on overflow. Possible values:
func (o MdbClickhouseClusterUserSettingsOutput) TimeoutOverflowMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *string { return v.TimeoutOverflowMode }).(pulumi.StringPtrOutput)
}

// Sets behaviour on overflow. Possible values:
func (o MdbClickhouseClusterUserSettingsOutput) TransferOverflowMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *string { return v.TransferOverflowMode }).(pulumi.StringPtrOutput)
}

// Enables equality of NULL values for IN operator.
func (o MdbClickhouseClusterUserSettingsOutput) TransformNullIn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *bool { return v.TransformNullIn }).(pulumi.BoolPtrOutput)
}

// Whether to use a cache of uncompressed blocks.
func (o MdbClickhouseClusterUserSettingsOutput) UseUncompressedCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterUserSettings) *bool { return v.UseUncompressedCache }).(pulumi.BoolPtrOutput)
}

type MdbClickhouseClusterUserSettingsPtrOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterUserSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbClickhouseClusterUserSettings)(nil)).Elem()
}

func (o MdbClickhouseClusterUserSettingsPtrOutput) ToMdbClickhouseClusterUserSettingsPtrOutput() MdbClickhouseClusterUserSettingsPtrOutput {
	return o
}

func (o MdbClickhouseClusterUserSettingsPtrOutput) ToMdbClickhouseClusterUserSettingsPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterUserSettingsPtrOutput {
	return o
}

func (o MdbClickhouseClusterUserSettingsPtrOutput) Elem() MdbClickhouseClusterUserSettingsOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) MdbClickhouseClusterUserSettings { return *v }).(MdbClickhouseClusterUserSettingsOutput)
}

// Include CORS headers in HTTP responces.
func (o MdbClickhouseClusterUserSettingsPtrOutput) AddHttpCorsHeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *bool {
		if v == nil {
			return nil
		}
		return v.AddHttpCorsHeader
	}).(pulumi.BoolPtrOutput)
}

// Allows or denies DDL queries.
func (o MdbClickhouseClusterUserSettingsPtrOutput) AllowDdl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *bool {
		if v == nil {
			return nil
		}
		return v.AllowDdl
	}).(pulumi.BoolPtrOutput)
}

// Enable compilation of queries.
func (o MdbClickhouseClusterUserSettingsPtrOutput) Compile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Compile
	}).(pulumi.BoolPtrOutput)
}

// Turn on expression compilation.
func (o MdbClickhouseClusterUserSettingsPtrOutput) CompileExpressions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *bool {
		if v == nil {
			return nil
		}
		return v.CompileExpressions
	}).(pulumi.BoolPtrOutput)
}

// Connect timeout in milliseconds on the socket used for communicating with the client.
func (o MdbClickhouseClusterUserSettingsPtrOutput) ConnectTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.ConnectTimeout
	}).(pulumi.IntPtrOutput)
}

// Specifies which of the uniq* functions should be used to perform the COUNT(DISTINCT …) construction.
func (o MdbClickhouseClusterUserSettingsPtrOutput) CountDistinctImplementation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *string {
		if v == nil {
			return nil
		}
		return v.CountDistinctImplementation
	}).(pulumi.StringPtrOutput)
}

// Sets behaviour on overflow when using DISTINCT. Possible values:
func (o MdbClickhouseClusterUserSettingsPtrOutput) DistinctOverflowMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *string {
		if v == nil {
			return nil
		}
		return v.DistinctOverflowMode
	}).(pulumi.StringPtrOutput)
}

// Determine the behavior of distributed subqueries.
func (o MdbClickhouseClusterUserSettingsPtrOutput) DistributedAggregationMemoryEfficient() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *bool {
		if v == nil {
			return nil
		}
		return v.DistributedAggregationMemoryEfficient
	}).(pulumi.BoolPtrOutput)
}

// Timeout for DDL queries, in milliseconds.
func (o MdbClickhouseClusterUserSettingsPtrOutput) DistributedDdlTaskTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.DistributedDdlTaskTimeout
	}).(pulumi.IntPtrOutput)
}

// Changes the behaviour of distributed subqueries.
func (o MdbClickhouseClusterUserSettingsPtrOutput) DistributedProductMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *string {
		if v == nil {
			return nil
		}
		return v.DistributedProductMode
	}).(pulumi.StringPtrOutput)
}

// Allows to retunr empty result.
func (o MdbClickhouseClusterUserSettingsPtrOutput) EmptyResultForAggregationByEmptySet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *bool {
		if v == nil {
			return nil
		}
		return v.EmptyResultForAggregationByEmptySet
	}).(pulumi.BoolPtrOutput)
}

// Enables or disables data compression in the response to an HTTP request.
func (o MdbClickhouseClusterUserSettingsPtrOutput) EnableHttpCompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *bool {
		if v == nil {
			return nil
		}
		return v.EnableHttpCompression
	}).(pulumi.BoolPtrOutput)
}

// Forces a query to an out-of-date replica if updated data is not available.
func (o MdbClickhouseClusterUserSettingsPtrOutput) FallbackToStaleReplicasForDistributedQueries() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *bool {
		if v == nil {
			return nil
		}
		return v.FallbackToStaleReplicasForDistributedQueries
	}).(pulumi.BoolPtrOutput)
}

// Disables query execution if the index can’t be used by date.
func (o MdbClickhouseClusterUserSettingsPtrOutput) ForceIndexByDate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *bool {
		if v == nil {
			return nil
		}
		return v.ForceIndexByDate
	}).(pulumi.BoolPtrOutput)
}

// Disables query execution if indexing by the primary key is not possible.
func (o MdbClickhouseClusterUserSettingsPtrOutput) ForcePrimaryKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *bool {
		if v == nil {
			return nil
		}
		return v.ForcePrimaryKey
	}).(pulumi.BoolPtrOutput)
}

// Sets behaviour on overflow while GROUP BY operation. Possible values:
func (o MdbClickhouseClusterUserSettingsPtrOutput) GroupByOverflowMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *string {
		if v == nil {
			return nil
		}
		return v.GroupByOverflowMode
	}).(pulumi.StringPtrOutput)
}

// Sets the threshold of the number of keys, after that the two-level aggregation should be used.
func (o MdbClickhouseClusterUserSettingsPtrOutput) GroupByTwoLevelThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.GroupByTwoLevelThreshold
	}).(pulumi.IntPtrOutput)
}

// Sets the threshold of the number of bytes, after that the two-level aggregation should be used.
func (o MdbClickhouseClusterUserSettingsPtrOutput) GroupByTwoLevelThresholdBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.GroupByTwoLevelThresholdBytes
	}).(pulumi.IntPtrOutput)
}

// Timeout for HTTP connection in milliseconds.
func (o MdbClickhouseClusterUserSettingsPtrOutput) HttpConnectionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.HttpConnectionTimeout
	}).(pulumi.IntPtrOutput)
}

// Sets minimal interval between notifications about request process in HTTP header X-ClickHouse-Progress.
func (o MdbClickhouseClusterUserSettingsPtrOutput) HttpHeadersProgressInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.HttpHeadersProgressInterval
	}).(pulumi.IntPtrOutput)
}

// Timeout for HTTP connection in milliseconds.
func (o MdbClickhouseClusterUserSettingsPtrOutput) HttpReceiveTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.HttpReceiveTimeout
	}).(pulumi.IntPtrOutput)
}

// Timeout for HTTP connection in milliseconds.
func (o MdbClickhouseClusterUserSettingsPtrOutput) HttpSendTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.HttpSendTimeout
	}).(pulumi.IntPtrOutput)
}

// When performing INSERT queries, replace omitted input column values with default values of the respective columns.
func (o MdbClickhouseClusterUserSettingsPtrOutput) InputFormatDefaultsForOmittedFields() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *bool {
		if v == nil {
			return nil
		}
		return v.InputFormatDefaultsForOmittedFields
	}).(pulumi.BoolPtrOutput)
}

// Enables or disables the full SQL parser if the fast stream parser can’t parse the data.
func (o MdbClickhouseClusterUserSettingsPtrOutput) InputFormatValuesInterpretExpressions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *bool {
		if v == nil {
			return nil
		}
		return v.InputFormatValuesInterpretExpressions
	}).(pulumi.BoolPtrOutput)
}

// Enables the quorum writes.
func (o MdbClickhouseClusterUserSettingsPtrOutput) InsertQuorum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.InsertQuorum
	}).(pulumi.IntPtrOutput)
}

// Write to a quorum timeout in milliseconds.
func (o MdbClickhouseClusterUserSettingsPtrOutput) InsertQuorumTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.InsertQuorumTimeout
	}).(pulumi.IntPtrOutput)
}

// Sets behaviour on overflow in JOIN. Possible values:
func (o MdbClickhouseClusterUserSettingsPtrOutput) JoinOverflowMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *string {
		if v == nil {
			return nil
		}
		return v.JoinOverflowMode
	}).(pulumi.StringPtrOutput)
}

// Sets the type of JOIN behaviour. When merging tables, empty cells may appear. ClickHouse fills them differently based on this setting.
func (o MdbClickhouseClusterUserSettingsPtrOutput) JoinUseNulls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *bool {
		if v == nil {
			return nil
		}
		return v.JoinUseNulls
	}).(pulumi.BoolPtrOutput)
}

// Require aliases for subselects and table functions in FROM that more than one table is present.
func (o MdbClickhouseClusterUserSettingsPtrOutput) JoinedSubqueryRequiresAlias() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *bool {
		if v == nil {
			return nil
		}
		return v.JoinedSubqueryRequiresAlias
	}).(pulumi.BoolPtrOutput)
}

// Allows or restricts using the LowCardinality data type with the Native format.
func (o MdbClickhouseClusterUserSettingsPtrOutput) LowCardinalityAllowInNativeFormat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *bool {
		if v == nil {
			return nil
		}
		return v.LowCardinalityAllowInNativeFormat
	}).(pulumi.BoolPtrOutput)
}

// Maximum abstract syntax tree depth.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxAstDepth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxAstDepth
	}).(pulumi.IntPtrOutput)
}

// Maximum abstract syntax tree elements.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxAstElements() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxAstElements
	}).(pulumi.IntPtrOutput)
}

// A recommendation for what size of the block (in a count of rows) to load from tables.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxBlockSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxBlockSize
	}).(pulumi.IntPtrOutput)
}

// Limit in bytes for using memoru for GROUP BY before using swap on disk.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxBytesBeforeExternalGroupBy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxBytesBeforeExternalGroupBy
	}).(pulumi.IntPtrOutput)
}

// This setting is equivalent of the maxBytesBeforeExternalGroupBy setting, except for it is for sort operation (ORDER BY), not aggregation.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxBytesBeforeExternalSort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxBytesBeforeExternalSort
	}).(pulumi.IntPtrOutput)
}

// Limits the maximum size of a hash table in bytes (uncompressed data) when using DISTINCT.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxBytesInDistinct() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxBytesInDistinct
	}).(pulumi.IntPtrOutput)
}

// Limit on maximum size of the hash table for JOIN, in bytes.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxBytesInJoin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxBytesInJoin
	}).(pulumi.IntPtrOutput)
}

// Limit on the number of bytes in the set resulting from the execution of the IN section.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxBytesInSet() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxBytesInSet
	}).(pulumi.IntPtrOutput)
}

// Limits the maximum number of bytes (uncompressed data) that can be read from a table when running a query.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxBytesToRead() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxBytesToRead
	}).(pulumi.IntPtrOutput)
}

// Limits the maximum number of bytes (uncompressed data) that can be read from a table for sorting.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxBytesToSort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxBytesToSort
	}).(pulumi.IntPtrOutput)
}

// Limits the maximum number of bytes (uncompressed data) that can be passed to a remote server or saved in a temporary table when using GLOBAL IN.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxBytesToTransfer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxBytesToTransfer
	}).(pulumi.IntPtrOutput)
}

// Limits the maximum number of columns that can be read from a table in a single query.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxColumnsToRead() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxColumnsToRead
	}).(pulumi.IntPtrOutput)
}

// Limits the maximum query execution time in milliseconds.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxExecutionTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxExecutionTime
	}).(pulumi.IntPtrOutput)
}

// Maximum abstract syntax tree depth after after expansion of aliases.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxExpandedAstElements() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxExpandedAstElements
	}).(pulumi.IntPtrOutput)
}

// The size of blocks (in a count of rows) to form for insertion into a table.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxInsertBlockSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxInsertBlockSize
	}).(pulumi.IntPtrOutput)
}

// Limits the maximum memory usage (in bytes) for processing queries on a single server.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxMemoryUsage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxMemoryUsage
	}).(pulumi.IntPtrOutput)
}

// Limits the maximum memory usage (in bytes) for processing of user's queries on a single server.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxMemoryUsageForUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxMemoryUsageForUser
	}).(pulumi.IntPtrOutput)
}

// Limits the speed of the data exchange over the network in bytes per second.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxNetworkBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxNetworkBandwidth
	}).(pulumi.IntPtrOutput)
}

// Limits the speed of the data exchange over the network in bytes per second.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxNetworkBandwidthForUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxNetworkBandwidthForUser
	}).(pulumi.IntPtrOutput)
}

// The maximum part of a query that can be taken to RAM for parsing with the SQL parser.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxQuerySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxQuerySize
	}).(pulumi.IntPtrOutput)
}

// Disables lagging replicas for distributed queries.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxReplicaDelayForDistributedQueries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxReplicaDelayForDistributedQueries
	}).(pulumi.IntPtrOutput)
}

// Limits the number of bytes in the result.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxResultBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxResultBytes
	}).(pulumi.IntPtrOutput)
}

// Limits the number of rows in the result.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxResultRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxResultRows
	}).(pulumi.IntPtrOutput)
}

// Limits the maximum number of different rows when using DISTINCT.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxRowsInDistinct() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxRowsInDistinct
	}).(pulumi.IntPtrOutput)
}

// Limit on maximum size of the hash table for JOIN, in rows.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxRowsInJoin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxRowsInJoin
	}).(pulumi.IntPtrOutput)
}

// Limit on the number of rows in the set resulting from the execution of the IN section.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxRowsInSet() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxRowsInSet
	}).(pulumi.IntPtrOutput)
}

// Limits the maximum number of unique keys received from aggregation function.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxRowsToGroupBy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxRowsToGroupBy
	}).(pulumi.IntPtrOutput)
}

// Limits the maximum number of rows that can be read from a table when running a query.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxRowsToRead() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxRowsToRead
	}).(pulumi.IntPtrOutput)
}

// Limits the maximum number of rows that can be read from a table for sorting.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxRowsToSort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxRowsToSort
	}).(pulumi.IntPtrOutput)
}

// Limits the maximum number of rows that can be passed to a remote server or saved in a temporary table when using GLOBAL IN.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxRowsToTransfer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxRowsToTransfer
	}).(pulumi.IntPtrOutput)
}

// Limits the maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxTemporaryColumns() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxTemporaryColumns
	}).(pulumi.IntPtrOutput)
}

// Limits the maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxTemporaryNonConstColumns() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxTemporaryNonConstColumns
	}).(pulumi.IntPtrOutput)
}

// The maximum number of query processing threads, excluding threads for retrieving data from remote servers.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MaxThreads() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxThreads
	}).(pulumi.IntPtrOutput)
}

// If ClickHouse should read more than mergeTreeMaxBytesToUseCache bytes in one query, it doesn’t use the cache of uncompressed blocks.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MergeTreeMaxBytesToUseCache() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MergeTreeMaxBytesToUseCache
	}).(pulumi.IntPtrOutput)
}

// If ClickHouse should read more than mergeTreeMaxRowsToUseCache rows in one query, it doesn’t use the cache of uncompressed blocks.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MergeTreeMaxRowsToUseCache() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MergeTreeMaxRowsToUseCache
	}).(pulumi.IntPtrOutput)
}

// If the number of bytes to read from one file of a MergeTree-engine table exceeds merge_tree_min_bytes_for_concurrent_read, then ClickHouse tries to concurrently read from this file in several threads.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MergeTreeMinBytesForConcurrentRead() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MergeTreeMinBytesForConcurrentRead
	}).(pulumi.IntPtrOutput)
}

// If the number of rows to be read from a file of a MergeTree table exceeds mergeTreeMinRowsForConcurrentRead then ClickHouse tries to perform a concurrent reading from this file on several threads.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MergeTreeMinRowsForConcurrentRead() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MergeTreeMinRowsForConcurrentRead
	}).(pulumi.IntPtrOutput)
}

// The minimum data volume required for using direct I/O access to the storage disk.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MinBytesToUseDirectIo() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MinBytesToUseDirectIo
	}).(pulumi.IntPtrOutput)
}

// How many times to potentially use a compiled chunk of code before running compilation.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MinCountToCompile() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MinCountToCompile
	}).(pulumi.IntPtrOutput)
}

// A query waits for expression compilation process to complete prior to continuing execution.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MinCountToCompileExpression() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MinCountToCompileExpression
	}).(pulumi.IntPtrOutput)
}

// Minimal execution speed in rows per second.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MinExecutionSpeed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MinExecutionSpeed
	}).(pulumi.IntPtrOutput)
}

// Minimal execution speed in bytes per second.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MinExecutionSpeedBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MinExecutionSpeedBytes
	}).(pulumi.IntPtrOutput)
}

// Sets the minimum number of bytes in the block which can be inserted into a table by an INSERT query.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MinInsertBlockSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MinInsertBlockSizeBytes
	}).(pulumi.IntPtrOutput)
}

// Sets the minimum number of rows in the block which can be inserted into a table by an INSERT query.
func (o MdbClickhouseClusterUserSettingsPtrOutput) MinInsertBlockSizeRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.MinInsertBlockSizeRows
	}).(pulumi.IntPtrOutput)
}

// If the value is true, integers appear in quotes when using JSON* Int64 and UInt64 formats (for compatibility with most JavaScript implementations); otherwise, integers are output without the quotes.
func (o MdbClickhouseClusterUserSettingsPtrOutput) OutputFormatJsonQuote64bitIntegers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *bool {
		if v == nil {
			return nil
		}
		return v.OutputFormatJsonQuote64bitIntegers
	}).(pulumi.BoolPtrOutput)
}

// Enables +nan, -nan, +inf, -inf outputs in JSON output format.
func (o MdbClickhouseClusterUserSettingsPtrOutput) OutputFormatJsonQuoteDenormals() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *bool {
		if v == nil {
			return nil
		}
		return v.OutputFormatJsonQuoteDenormals
	}).(pulumi.BoolPtrOutput)
}

// Query priority.
func (o MdbClickhouseClusterUserSettingsPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// Quota accounting mode.
func (o MdbClickhouseClusterUserSettingsPtrOutput) QuotaMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *string {
		if v == nil {
			return nil
		}
		return v.QuotaMode
	}).(pulumi.StringPtrOutput)
}

// Sets behaviour on overflow while read. Possible values:
func (o MdbClickhouseClusterUserSettingsPtrOutput) ReadOverflowMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *string {
		if v == nil {
			return nil
		}
		return v.ReadOverflowMode
	}).(pulumi.StringPtrOutput)
}

// Restricts permissions for reading data, write data and change settings queries.
func (o MdbClickhouseClusterUserSettingsPtrOutput) Readonly() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.Readonly
	}).(pulumi.IntPtrOutput)
}

// Receive timeout in milliseconds on the socket used for communicating with the client.
func (o MdbClickhouseClusterUserSettingsPtrOutput) ReceiveTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.ReceiveTimeout
	}).(pulumi.IntPtrOutput)
}

// For ALTER ... ATTACH|DETACH|DROP queries, you can use the replicationAlterPartitionsSync setting to set up waiting.
func (o MdbClickhouseClusterUserSettingsPtrOutput) ReplicationAlterPartitionsSync() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.ReplicationAlterPartitionsSync
	}).(pulumi.IntPtrOutput)
}

// Sets behaviour on overflow in result. Possible values:
func (o MdbClickhouseClusterUserSettingsPtrOutput) ResultOverflowMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *string {
		if v == nil {
			return nil
		}
		return v.ResultOverflowMode
	}).(pulumi.StringPtrOutput)
}

// Enables or disables sequential consistency for SELECT queries.
func (o MdbClickhouseClusterUserSettingsPtrOutput) SelectSequentialConsistency() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *bool {
		if v == nil {
			return nil
		}
		return v.SelectSequentialConsistency
	}).(pulumi.BoolPtrOutput)
}

// Enables or disables X-ClickHouse-Progress HTTP response headers in clickhouse-server responses.
func (o MdbClickhouseClusterUserSettingsPtrOutput) SendProgressInHttpHeaders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *bool {
		if v == nil {
			return nil
		}
		return v.SendProgressInHttpHeaders
	}).(pulumi.BoolPtrOutput)
}

// Send timeout in milliseconds on the socket used for communicating with the client.
func (o MdbClickhouseClusterUserSettingsPtrOutput) SendTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *int {
		if v == nil {
			return nil
		}
		return v.SendTimeout
	}).(pulumi.IntPtrOutput)
}

// Sets behaviour on overflow in the set resulting. Possible values:
func (o MdbClickhouseClusterUserSettingsPtrOutput) SetOverflowMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *string {
		if v == nil {
			return nil
		}
		return v.SetOverflowMode
	}).(pulumi.StringPtrOutput)
}

// Enables or disables silently skipping of unavailable shards.
func (o MdbClickhouseClusterUserSettingsPtrOutput) SkipUnavailableShards() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *bool {
		if v == nil {
			return nil
		}
		return v.SkipUnavailableShards
	}).(pulumi.BoolPtrOutput)
}

// Sets behaviour on overflow while sort. Possible values:
func (o MdbClickhouseClusterUserSettingsPtrOutput) SortOverflowMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *string {
		if v == nil {
			return nil
		}
		return v.SortOverflowMode
	}).(pulumi.StringPtrOutput)
}

// Sets behaviour on overflow. Possible values:
func (o MdbClickhouseClusterUserSettingsPtrOutput) TimeoutOverflowMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *string {
		if v == nil {
			return nil
		}
		return v.TimeoutOverflowMode
	}).(pulumi.StringPtrOutput)
}

// Sets behaviour on overflow. Possible values:
func (o MdbClickhouseClusterUserSettingsPtrOutput) TransferOverflowMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *string {
		if v == nil {
			return nil
		}
		return v.TransferOverflowMode
	}).(pulumi.StringPtrOutput)
}

// Enables equality of NULL values for IN operator.
func (o MdbClickhouseClusterUserSettingsPtrOutput) TransformNullIn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *bool {
		if v == nil {
			return nil
		}
		return v.TransformNullIn
	}).(pulumi.BoolPtrOutput)
}

// Whether to use a cache of uncompressed blocks.
func (o MdbClickhouseClusterUserSettingsPtrOutput) UseUncompressedCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterUserSettings) *bool {
		if v == nil {
			return nil
		}
		return v.UseUncompressedCache
	}).(pulumi.BoolPtrOutput)
}

type MdbClickhouseClusterZookeeper struct {
	// Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
	Resources *MdbClickhouseClusterZookeeperResources `pulumi:"resources"`
}

// MdbClickhouseClusterZookeeperInput is an input type that accepts MdbClickhouseClusterZookeeperArgs and MdbClickhouseClusterZookeeperOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterZookeeperInput` via:
//
//          MdbClickhouseClusterZookeeperArgs{...}
type MdbClickhouseClusterZookeeperInput interface {
	pulumi.Input

	ToMdbClickhouseClusterZookeeperOutput() MdbClickhouseClusterZookeeperOutput
	ToMdbClickhouseClusterZookeeperOutputWithContext(context.Context) MdbClickhouseClusterZookeeperOutput
}

type MdbClickhouseClusterZookeeperArgs struct {
	// Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
	Resources MdbClickhouseClusterZookeeperResourcesPtrInput `pulumi:"resources"`
}

func (MdbClickhouseClusterZookeeperArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterZookeeper)(nil)).Elem()
}

func (i MdbClickhouseClusterZookeeperArgs) ToMdbClickhouseClusterZookeeperOutput() MdbClickhouseClusterZookeeperOutput {
	return i.ToMdbClickhouseClusterZookeeperOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterZookeeperArgs) ToMdbClickhouseClusterZookeeperOutputWithContext(ctx context.Context) MdbClickhouseClusterZookeeperOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterZookeeperOutput)
}

func (i MdbClickhouseClusterZookeeperArgs) ToMdbClickhouseClusterZookeeperPtrOutput() MdbClickhouseClusterZookeeperPtrOutput {
	return i.ToMdbClickhouseClusterZookeeperPtrOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterZookeeperArgs) ToMdbClickhouseClusterZookeeperPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterZookeeperPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterZookeeperOutput).ToMdbClickhouseClusterZookeeperPtrOutputWithContext(ctx)
}

// MdbClickhouseClusterZookeeperPtrInput is an input type that accepts MdbClickhouseClusterZookeeperArgs, MdbClickhouseClusterZookeeperPtr and MdbClickhouseClusterZookeeperPtrOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterZookeeperPtrInput` via:
//
//          MdbClickhouseClusterZookeeperArgs{...}
//
//  or:
//
//          nil
type MdbClickhouseClusterZookeeperPtrInput interface {
	pulumi.Input

	ToMdbClickhouseClusterZookeeperPtrOutput() MdbClickhouseClusterZookeeperPtrOutput
	ToMdbClickhouseClusterZookeeperPtrOutputWithContext(context.Context) MdbClickhouseClusterZookeeperPtrOutput
}

type mdbClickhouseClusterZookeeperPtrType MdbClickhouseClusterZookeeperArgs

func MdbClickhouseClusterZookeeperPtr(v *MdbClickhouseClusterZookeeperArgs) MdbClickhouseClusterZookeeperPtrInput {
	return (*mdbClickhouseClusterZookeeperPtrType)(v)
}

func (*mdbClickhouseClusterZookeeperPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbClickhouseClusterZookeeper)(nil)).Elem()
}

func (i *mdbClickhouseClusterZookeeperPtrType) ToMdbClickhouseClusterZookeeperPtrOutput() MdbClickhouseClusterZookeeperPtrOutput {
	return i.ToMdbClickhouseClusterZookeeperPtrOutputWithContext(context.Background())
}

func (i *mdbClickhouseClusterZookeeperPtrType) ToMdbClickhouseClusterZookeeperPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterZookeeperPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterZookeeperPtrOutput)
}

type MdbClickhouseClusterZookeeperOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterZookeeperOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterZookeeper)(nil)).Elem()
}

func (o MdbClickhouseClusterZookeeperOutput) ToMdbClickhouseClusterZookeeperOutput() MdbClickhouseClusterZookeeperOutput {
	return o
}

func (o MdbClickhouseClusterZookeeperOutput) ToMdbClickhouseClusterZookeeperOutputWithContext(ctx context.Context) MdbClickhouseClusterZookeeperOutput {
	return o
}

func (o MdbClickhouseClusterZookeeperOutput) ToMdbClickhouseClusterZookeeperPtrOutput() MdbClickhouseClusterZookeeperPtrOutput {
	return o.ToMdbClickhouseClusterZookeeperPtrOutputWithContext(context.Background())
}

func (o MdbClickhouseClusterZookeeperOutput) ToMdbClickhouseClusterZookeeperPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterZookeeperPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterZookeeper) *MdbClickhouseClusterZookeeper {
		return &v
	}).(MdbClickhouseClusterZookeeperPtrOutput)
}

// Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
func (o MdbClickhouseClusterZookeeperOutput) Resources() MdbClickhouseClusterZookeeperResourcesPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterZookeeper) *MdbClickhouseClusterZookeeperResources { return v.Resources }).(MdbClickhouseClusterZookeeperResourcesPtrOutput)
}

type MdbClickhouseClusterZookeeperPtrOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterZookeeperPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbClickhouseClusterZookeeper)(nil)).Elem()
}

func (o MdbClickhouseClusterZookeeperPtrOutput) ToMdbClickhouseClusterZookeeperPtrOutput() MdbClickhouseClusterZookeeperPtrOutput {
	return o
}

func (o MdbClickhouseClusterZookeeperPtrOutput) ToMdbClickhouseClusterZookeeperPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterZookeeperPtrOutput {
	return o
}

func (o MdbClickhouseClusterZookeeperPtrOutput) Elem() MdbClickhouseClusterZookeeperOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterZookeeper) MdbClickhouseClusterZookeeper { return *v }).(MdbClickhouseClusterZookeeperOutput)
}

// Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
func (o MdbClickhouseClusterZookeeperPtrOutput) Resources() MdbClickhouseClusterZookeeperResourcesPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterZookeeper) *MdbClickhouseClusterZookeeperResources {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(MdbClickhouseClusterZookeeperResourcesPtrOutput)
}

type MdbClickhouseClusterZookeeperResources struct {
	// Volume of the storage available to a ZooKeeper host, in gigabytes.
	DiskSize *int `pulumi:"diskSize"`
	// Type of the storage of ZooKeeper hosts.
	// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-clickhouse/concepts/storage).
	DiskTypeId       *string `pulumi:"diskTypeId"`
	ResourcePresetId *string `pulumi:"resourcePresetId"`
}

// MdbClickhouseClusterZookeeperResourcesInput is an input type that accepts MdbClickhouseClusterZookeeperResourcesArgs and MdbClickhouseClusterZookeeperResourcesOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterZookeeperResourcesInput` via:
//
//          MdbClickhouseClusterZookeeperResourcesArgs{...}
type MdbClickhouseClusterZookeeperResourcesInput interface {
	pulumi.Input

	ToMdbClickhouseClusterZookeeperResourcesOutput() MdbClickhouseClusterZookeeperResourcesOutput
	ToMdbClickhouseClusterZookeeperResourcesOutputWithContext(context.Context) MdbClickhouseClusterZookeeperResourcesOutput
}

type MdbClickhouseClusterZookeeperResourcesArgs struct {
	// Volume of the storage available to a ZooKeeper host, in gigabytes.
	DiskSize pulumi.IntPtrInput `pulumi:"diskSize"`
	// Type of the storage of ZooKeeper hosts.
	// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-clickhouse/concepts/storage).
	DiskTypeId       pulumi.StringPtrInput `pulumi:"diskTypeId"`
	ResourcePresetId pulumi.StringPtrInput `pulumi:"resourcePresetId"`
}

func (MdbClickhouseClusterZookeeperResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterZookeeperResources)(nil)).Elem()
}

func (i MdbClickhouseClusterZookeeperResourcesArgs) ToMdbClickhouseClusterZookeeperResourcesOutput() MdbClickhouseClusterZookeeperResourcesOutput {
	return i.ToMdbClickhouseClusterZookeeperResourcesOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterZookeeperResourcesArgs) ToMdbClickhouseClusterZookeeperResourcesOutputWithContext(ctx context.Context) MdbClickhouseClusterZookeeperResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterZookeeperResourcesOutput)
}

func (i MdbClickhouseClusterZookeeperResourcesArgs) ToMdbClickhouseClusterZookeeperResourcesPtrOutput() MdbClickhouseClusterZookeeperResourcesPtrOutput {
	return i.ToMdbClickhouseClusterZookeeperResourcesPtrOutputWithContext(context.Background())
}

func (i MdbClickhouseClusterZookeeperResourcesArgs) ToMdbClickhouseClusterZookeeperResourcesPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterZookeeperResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterZookeeperResourcesOutput).ToMdbClickhouseClusterZookeeperResourcesPtrOutputWithContext(ctx)
}

// MdbClickhouseClusterZookeeperResourcesPtrInput is an input type that accepts MdbClickhouseClusterZookeeperResourcesArgs, MdbClickhouseClusterZookeeperResourcesPtr and MdbClickhouseClusterZookeeperResourcesPtrOutput values.
// You can construct a concrete instance of `MdbClickhouseClusterZookeeperResourcesPtrInput` via:
//
//          MdbClickhouseClusterZookeeperResourcesArgs{...}
//
//  or:
//
//          nil
type MdbClickhouseClusterZookeeperResourcesPtrInput interface {
	pulumi.Input

	ToMdbClickhouseClusterZookeeperResourcesPtrOutput() MdbClickhouseClusterZookeeperResourcesPtrOutput
	ToMdbClickhouseClusterZookeeperResourcesPtrOutputWithContext(context.Context) MdbClickhouseClusterZookeeperResourcesPtrOutput
}

type mdbClickhouseClusterZookeeperResourcesPtrType MdbClickhouseClusterZookeeperResourcesArgs

func MdbClickhouseClusterZookeeperResourcesPtr(v *MdbClickhouseClusterZookeeperResourcesArgs) MdbClickhouseClusterZookeeperResourcesPtrInput {
	return (*mdbClickhouseClusterZookeeperResourcesPtrType)(v)
}

func (*mdbClickhouseClusterZookeeperResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbClickhouseClusterZookeeperResources)(nil)).Elem()
}

func (i *mdbClickhouseClusterZookeeperResourcesPtrType) ToMdbClickhouseClusterZookeeperResourcesPtrOutput() MdbClickhouseClusterZookeeperResourcesPtrOutput {
	return i.ToMdbClickhouseClusterZookeeperResourcesPtrOutputWithContext(context.Background())
}

func (i *mdbClickhouseClusterZookeeperResourcesPtrType) ToMdbClickhouseClusterZookeeperResourcesPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterZookeeperResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterZookeeperResourcesPtrOutput)
}

type MdbClickhouseClusterZookeeperResourcesOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterZookeeperResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseClusterZookeeperResources)(nil)).Elem()
}

func (o MdbClickhouseClusterZookeeperResourcesOutput) ToMdbClickhouseClusterZookeeperResourcesOutput() MdbClickhouseClusterZookeeperResourcesOutput {
	return o
}

func (o MdbClickhouseClusterZookeeperResourcesOutput) ToMdbClickhouseClusterZookeeperResourcesOutputWithContext(ctx context.Context) MdbClickhouseClusterZookeeperResourcesOutput {
	return o
}

func (o MdbClickhouseClusterZookeeperResourcesOutput) ToMdbClickhouseClusterZookeeperResourcesPtrOutput() MdbClickhouseClusterZookeeperResourcesPtrOutput {
	return o.ToMdbClickhouseClusterZookeeperResourcesPtrOutputWithContext(context.Background())
}

func (o MdbClickhouseClusterZookeeperResourcesOutput) ToMdbClickhouseClusterZookeeperResourcesPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterZookeeperResourcesPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterZookeeperResources) *MdbClickhouseClusterZookeeperResources {
		return &v
	}).(MdbClickhouseClusterZookeeperResourcesPtrOutput)
}

// Volume of the storage available to a ZooKeeper host, in gigabytes.
func (o MdbClickhouseClusterZookeeperResourcesOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterZookeeperResources) *int { return v.DiskSize }).(pulumi.IntPtrOutput)
}

// Type of the storage of ZooKeeper hosts.
// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-clickhouse/concepts/storage).
func (o MdbClickhouseClusterZookeeperResourcesOutput) DiskTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterZookeeperResources) *string { return v.DiskTypeId }).(pulumi.StringPtrOutput)
}

func (o MdbClickhouseClusterZookeeperResourcesOutput) ResourcePresetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbClickhouseClusterZookeeperResources) *string { return v.ResourcePresetId }).(pulumi.StringPtrOutput)
}

type MdbClickhouseClusterZookeeperResourcesPtrOutput struct{ *pulumi.OutputState }

func (MdbClickhouseClusterZookeeperResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbClickhouseClusterZookeeperResources)(nil)).Elem()
}

func (o MdbClickhouseClusterZookeeperResourcesPtrOutput) ToMdbClickhouseClusterZookeeperResourcesPtrOutput() MdbClickhouseClusterZookeeperResourcesPtrOutput {
	return o
}

func (o MdbClickhouseClusterZookeeperResourcesPtrOutput) ToMdbClickhouseClusterZookeeperResourcesPtrOutputWithContext(ctx context.Context) MdbClickhouseClusterZookeeperResourcesPtrOutput {
	return o
}

func (o MdbClickhouseClusterZookeeperResourcesPtrOutput) Elem() MdbClickhouseClusterZookeeperResourcesOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterZookeeperResources) MdbClickhouseClusterZookeeperResources { return *v }).(MdbClickhouseClusterZookeeperResourcesOutput)
}

// Volume of the storage available to a ZooKeeper host, in gigabytes.
func (o MdbClickhouseClusterZookeeperResourcesPtrOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterZookeeperResources) *int {
		if v == nil {
			return nil
		}
		return v.DiskSize
	}).(pulumi.IntPtrOutput)
}

// Type of the storage of ZooKeeper hosts.
// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-clickhouse/concepts/storage).
func (o MdbClickhouseClusterZookeeperResourcesPtrOutput) DiskTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterZookeeperResources) *string {
		if v == nil {
			return nil
		}
		return v.DiskTypeId
	}).(pulumi.StringPtrOutput)
}

func (o MdbClickhouseClusterZookeeperResourcesPtrOutput) ResourcePresetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbClickhouseClusterZookeeperResources) *string {
		if v == nil {
			return nil
		}
		return v.ResourcePresetId
	}).(pulumi.StringPtrOutput)
}

type MdbKafkaClusterConfig struct {
	// Sets whether the host should get a public IP address on creation. Can be either `true` or `false`.
	AssignPublicIp *bool `pulumi:"assignPublicIp"`
	// Count of brokers per availability zone.
	BrokersCount *int `pulumi:"brokersCount"`
	// Configuration of the Kafka subcluster. The structure is documented below.
	Kafka MdbKafkaClusterConfigKafka `pulumi:"kafka"`
	// Allows to use Kafka AdminAPI to manage topics. Can be either `true` or `false`.
	UnmanagedTopics *bool `pulumi:"unmanagedTopics"`
	// Version of the Kafka server software.
	Version string `pulumi:"version"`
	// List of availability zones.
	Zones []string `pulumi:"zones"`
	// Configuration of the ZooKeeper subcluster. The structure is documented below.
	Zookeeper *MdbKafkaClusterConfigZookeeper `pulumi:"zookeeper"`
}

// MdbKafkaClusterConfigInput is an input type that accepts MdbKafkaClusterConfigArgs and MdbKafkaClusterConfigOutput values.
// You can construct a concrete instance of `MdbKafkaClusterConfigInput` via:
//
//          MdbKafkaClusterConfigArgs{...}
type MdbKafkaClusterConfigInput interface {
	pulumi.Input

	ToMdbKafkaClusterConfigOutput() MdbKafkaClusterConfigOutput
	ToMdbKafkaClusterConfigOutputWithContext(context.Context) MdbKafkaClusterConfigOutput
}

type MdbKafkaClusterConfigArgs struct {
	// Sets whether the host should get a public IP address on creation. Can be either `true` or `false`.
	AssignPublicIp pulumi.BoolPtrInput `pulumi:"assignPublicIp"`
	// Count of brokers per availability zone.
	BrokersCount pulumi.IntPtrInput `pulumi:"brokersCount"`
	// Configuration of the Kafka subcluster. The structure is documented below.
	Kafka MdbKafkaClusterConfigKafkaInput `pulumi:"kafka"`
	// Allows to use Kafka AdminAPI to manage topics. Can be either `true` or `false`.
	UnmanagedTopics pulumi.BoolPtrInput `pulumi:"unmanagedTopics"`
	// Version of the Kafka server software.
	Version pulumi.StringInput `pulumi:"version"`
	// List of availability zones.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
	// Configuration of the ZooKeeper subcluster. The structure is documented below.
	Zookeeper MdbKafkaClusterConfigZookeeperPtrInput `pulumi:"zookeeper"`
}

func (MdbKafkaClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbKafkaClusterConfig)(nil)).Elem()
}

func (i MdbKafkaClusterConfigArgs) ToMdbKafkaClusterConfigOutput() MdbKafkaClusterConfigOutput {
	return i.ToMdbKafkaClusterConfigOutputWithContext(context.Background())
}

func (i MdbKafkaClusterConfigArgs) ToMdbKafkaClusterConfigOutputWithContext(ctx context.Context) MdbKafkaClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterConfigOutput)
}

func (i MdbKafkaClusterConfigArgs) ToMdbKafkaClusterConfigPtrOutput() MdbKafkaClusterConfigPtrOutput {
	return i.ToMdbKafkaClusterConfigPtrOutputWithContext(context.Background())
}

func (i MdbKafkaClusterConfigArgs) ToMdbKafkaClusterConfigPtrOutputWithContext(ctx context.Context) MdbKafkaClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterConfigOutput).ToMdbKafkaClusterConfigPtrOutputWithContext(ctx)
}

// MdbKafkaClusterConfigPtrInput is an input type that accepts MdbKafkaClusterConfigArgs, MdbKafkaClusterConfigPtr and MdbKafkaClusterConfigPtrOutput values.
// You can construct a concrete instance of `MdbKafkaClusterConfigPtrInput` via:
//
//          MdbKafkaClusterConfigArgs{...}
//
//  or:
//
//          nil
type MdbKafkaClusterConfigPtrInput interface {
	pulumi.Input

	ToMdbKafkaClusterConfigPtrOutput() MdbKafkaClusterConfigPtrOutput
	ToMdbKafkaClusterConfigPtrOutputWithContext(context.Context) MdbKafkaClusterConfigPtrOutput
}

type mdbKafkaClusterConfigPtrType MdbKafkaClusterConfigArgs

func MdbKafkaClusterConfigPtr(v *MdbKafkaClusterConfigArgs) MdbKafkaClusterConfigPtrInput {
	return (*mdbKafkaClusterConfigPtrType)(v)
}

func (*mdbKafkaClusterConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbKafkaClusterConfig)(nil)).Elem()
}

func (i *mdbKafkaClusterConfigPtrType) ToMdbKafkaClusterConfigPtrOutput() MdbKafkaClusterConfigPtrOutput {
	return i.ToMdbKafkaClusterConfigPtrOutputWithContext(context.Background())
}

func (i *mdbKafkaClusterConfigPtrType) ToMdbKafkaClusterConfigPtrOutputWithContext(ctx context.Context) MdbKafkaClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterConfigPtrOutput)
}

type MdbKafkaClusterConfigOutput struct{ *pulumi.OutputState }

func (MdbKafkaClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbKafkaClusterConfig)(nil)).Elem()
}

func (o MdbKafkaClusterConfigOutput) ToMdbKafkaClusterConfigOutput() MdbKafkaClusterConfigOutput {
	return o
}

func (o MdbKafkaClusterConfigOutput) ToMdbKafkaClusterConfigOutputWithContext(ctx context.Context) MdbKafkaClusterConfigOutput {
	return o
}

func (o MdbKafkaClusterConfigOutput) ToMdbKafkaClusterConfigPtrOutput() MdbKafkaClusterConfigPtrOutput {
	return o.ToMdbKafkaClusterConfigPtrOutputWithContext(context.Background())
}

func (o MdbKafkaClusterConfigOutput) ToMdbKafkaClusterConfigPtrOutputWithContext(ctx context.Context) MdbKafkaClusterConfigPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfig) *MdbKafkaClusterConfig {
		return &v
	}).(MdbKafkaClusterConfigPtrOutput)
}

// Sets whether the host should get a public IP address on creation. Can be either `true` or `false`.
func (o MdbKafkaClusterConfigOutput) AssignPublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfig) *bool { return v.AssignPublicIp }).(pulumi.BoolPtrOutput)
}

// Count of brokers per availability zone.
func (o MdbKafkaClusterConfigOutput) BrokersCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfig) *int { return v.BrokersCount }).(pulumi.IntPtrOutput)
}

// Configuration of the Kafka subcluster. The structure is documented below.
func (o MdbKafkaClusterConfigOutput) Kafka() MdbKafkaClusterConfigKafkaOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfig) MdbKafkaClusterConfigKafka { return v.Kafka }).(MdbKafkaClusterConfigKafkaOutput)
}

// Allows to use Kafka AdminAPI to manage topics. Can be either `true` or `false`.
func (o MdbKafkaClusterConfigOutput) UnmanagedTopics() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfig) *bool { return v.UnmanagedTopics }).(pulumi.BoolPtrOutput)
}

// Version of the Kafka server software.
func (o MdbKafkaClusterConfigOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfig) string { return v.Version }).(pulumi.StringOutput)
}

// List of availability zones.
func (o MdbKafkaClusterConfigOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfig) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

// Configuration of the ZooKeeper subcluster. The structure is documented below.
func (o MdbKafkaClusterConfigOutput) Zookeeper() MdbKafkaClusterConfigZookeeperPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfig) *MdbKafkaClusterConfigZookeeper { return v.Zookeeper }).(MdbKafkaClusterConfigZookeeperPtrOutput)
}

type MdbKafkaClusterConfigPtrOutput struct{ *pulumi.OutputState }

func (MdbKafkaClusterConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbKafkaClusterConfig)(nil)).Elem()
}

func (o MdbKafkaClusterConfigPtrOutput) ToMdbKafkaClusterConfigPtrOutput() MdbKafkaClusterConfigPtrOutput {
	return o
}

func (o MdbKafkaClusterConfigPtrOutput) ToMdbKafkaClusterConfigPtrOutputWithContext(ctx context.Context) MdbKafkaClusterConfigPtrOutput {
	return o
}

func (o MdbKafkaClusterConfigPtrOutput) Elem() MdbKafkaClusterConfigOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfig) MdbKafkaClusterConfig { return *v }).(MdbKafkaClusterConfigOutput)
}

// Sets whether the host should get a public IP address on creation. Can be either `true` or `false`.
func (o MdbKafkaClusterConfigPtrOutput) AssignPublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AssignPublicIp
	}).(pulumi.BoolPtrOutput)
}

// Count of brokers per availability zone.
func (o MdbKafkaClusterConfigPtrOutput) BrokersCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfig) *int {
		if v == nil {
			return nil
		}
		return v.BrokersCount
	}).(pulumi.IntPtrOutput)
}

// Configuration of the Kafka subcluster. The structure is documented below.
func (o MdbKafkaClusterConfigPtrOutput) Kafka() MdbKafkaClusterConfigKafkaPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfig) *MdbKafkaClusterConfigKafka {
		if v == nil {
			return nil
		}
		return &v.Kafka
	}).(MdbKafkaClusterConfigKafkaPtrOutput)
}

// Allows to use Kafka AdminAPI to manage topics. Can be either `true` or `false`.
func (o MdbKafkaClusterConfigPtrOutput) UnmanagedTopics() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfig) *bool {
		if v == nil {
			return nil
		}
		return v.UnmanagedTopics
	}).(pulumi.BoolPtrOutput)
}

// Version of the Kafka server software.
func (o MdbKafkaClusterConfigPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

// List of availability zones.
func (o MdbKafkaClusterConfigPtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfig) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

// Configuration of the ZooKeeper subcluster. The structure is documented below.
func (o MdbKafkaClusterConfigPtrOutput) Zookeeper() MdbKafkaClusterConfigZookeeperPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfig) *MdbKafkaClusterConfigZookeeper {
		if v == nil {
			return nil
		}
		return v.Zookeeper
	}).(MdbKafkaClusterConfigZookeeperPtrOutput)
}

type MdbKafkaClusterConfigKafka struct {
	// User-defined settings for the Kafka cluster. The structure is documented below.
	KafkaConfig *MdbKafkaClusterConfigKafkaKafkaConfig `pulumi:"kafkaConfig"`
	// Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
	Resources MdbKafkaClusterConfigKafkaResources `pulumi:"resources"`
}

// MdbKafkaClusterConfigKafkaInput is an input type that accepts MdbKafkaClusterConfigKafkaArgs and MdbKafkaClusterConfigKafkaOutput values.
// You can construct a concrete instance of `MdbKafkaClusterConfigKafkaInput` via:
//
//          MdbKafkaClusterConfigKafkaArgs{...}
type MdbKafkaClusterConfigKafkaInput interface {
	pulumi.Input

	ToMdbKafkaClusterConfigKafkaOutput() MdbKafkaClusterConfigKafkaOutput
	ToMdbKafkaClusterConfigKafkaOutputWithContext(context.Context) MdbKafkaClusterConfigKafkaOutput
}

type MdbKafkaClusterConfigKafkaArgs struct {
	// User-defined settings for the Kafka cluster. The structure is documented below.
	KafkaConfig MdbKafkaClusterConfigKafkaKafkaConfigPtrInput `pulumi:"kafkaConfig"`
	// Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
	Resources MdbKafkaClusterConfigKafkaResourcesInput `pulumi:"resources"`
}

func (MdbKafkaClusterConfigKafkaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbKafkaClusterConfigKafka)(nil)).Elem()
}

func (i MdbKafkaClusterConfigKafkaArgs) ToMdbKafkaClusterConfigKafkaOutput() MdbKafkaClusterConfigKafkaOutput {
	return i.ToMdbKafkaClusterConfigKafkaOutputWithContext(context.Background())
}

func (i MdbKafkaClusterConfigKafkaArgs) ToMdbKafkaClusterConfigKafkaOutputWithContext(ctx context.Context) MdbKafkaClusterConfigKafkaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterConfigKafkaOutput)
}

func (i MdbKafkaClusterConfigKafkaArgs) ToMdbKafkaClusterConfigKafkaPtrOutput() MdbKafkaClusterConfigKafkaPtrOutput {
	return i.ToMdbKafkaClusterConfigKafkaPtrOutputWithContext(context.Background())
}

func (i MdbKafkaClusterConfigKafkaArgs) ToMdbKafkaClusterConfigKafkaPtrOutputWithContext(ctx context.Context) MdbKafkaClusterConfigKafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterConfigKafkaOutput).ToMdbKafkaClusterConfigKafkaPtrOutputWithContext(ctx)
}

// MdbKafkaClusterConfigKafkaPtrInput is an input type that accepts MdbKafkaClusterConfigKafkaArgs, MdbKafkaClusterConfigKafkaPtr and MdbKafkaClusterConfigKafkaPtrOutput values.
// You can construct a concrete instance of `MdbKafkaClusterConfigKafkaPtrInput` via:
//
//          MdbKafkaClusterConfigKafkaArgs{...}
//
//  or:
//
//          nil
type MdbKafkaClusterConfigKafkaPtrInput interface {
	pulumi.Input

	ToMdbKafkaClusterConfigKafkaPtrOutput() MdbKafkaClusterConfigKafkaPtrOutput
	ToMdbKafkaClusterConfigKafkaPtrOutputWithContext(context.Context) MdbKafkaClusterConfigKafkaPtrOutput
}

type mdbKafkaClusterConfigKafkaPtrType MdbKafkaClusterConfigKafkaArgs

func MdbKafkaClusterConfigKafkaPtr(v *MdbKafkaClusterConfigKafkaArgs) MdbKafkaClusterConfigKafkaPtrInput {
	return (*mdbKafkaClusterConfigKafkaPtrType)(v)
}

func (*mdbKafkaClusterConfigKafkaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbKafkaClusterConfigKafka)(nil)).Elem()
}

func (i *mdbKafkaClusterConfigKafkaPtrType) ToMdbKafkaClusterConfigKafkaPtrOutput() MdbKafkaClusterConfigKafkaPtrOutput {
	return i.ToMdbKafkaClusterConfigKafkaPtrOutputWithContext(context.Background())
}

func (i *mdbKafkaClusterConfigKafkaPtrType) ToMdbKafkaClusterConfigKafkaPtrOutputWithContext(ctx context.Context) MdbKafkaClusterConfigKafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterConfigKafkaPtrOutput)
}

type MdbKafkaClusterConfigKafkaOutput struct{ *pulumi.OutputState }

func (MdbKafkaClusterConfigKafkaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbKafkaClusterConfigKafka)(nil)).Elem()
}

func (o MdbKafkaClusterConfigKafkaOutput) ToMdbKafkaClusterConfigKafkaOutput() MdbKafkaClusterConfigKafkaOutput {
	return o
}

func (o MdbKafkaClusterConfigKafkaOutput) ToMdbKafkaClusterConfigKafkaOutputWithContext(ctx context.Context) MdbKafkaClusterConfigKafkaOutput {
	return o
}

func (o MdbKafkaClusterConfigKafkaOutput) ToMdbKafkaClusterConfigKafkaPtrOutput() MdbKafkaClusterConfigKafkaPtrOutput {
	return o.ToMdbKafkaClusterConfigKafkaPtrOutputWithContext(context.Background())
}

func (o MdbKafkaClusterConfigKafkaOutput) ToMdbKafkaClusterConfigKafkaPtrOutputWithContext(ctx context.Context) MdbKafkaClusterConfigKafkaPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigKafka) *MdbKafkaClusterConfigKafka {
		return &v
	}).(MdbKafkaClusterConfigKafkaPtrOutput)
}

// User-defined settings for the Kafka cluster. The structure is documented below.
func (o MdbKafkaClusterConfigKafkaOutput) KafkaConfig() MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigKafka) *MdbKafkaClusterConfigKafkaKafkaConfig { return v.KafkaConfig }).(MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput)
}

// Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
func (o MdbKafkaClusterConfigKafkaOutput) Resources() MdbKafkaClusterConfigKafkaResourcesOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigKafka) MdbKafkaClusterConfigKafkaResources { return v.Resources }).(MdbKafkaClusterConfigKafkaResourcesOutput)
}

type MdbKafkaClusterConfigKafkaPtrOutput struct{ *pulumi.OutputState }

func (MdbKafkaClusterConfigKafkaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbKafkaClusterConfigKafka)(nil)).Elem()
}

func (o MdbKafkaClusterConfigKafkaPtrOutput) ToMdbKafkaClusterConfigKafkaPtrOutput() MdbKafkaClusterConfigKafkaPtrOutput {
	return o
}

func (o MdbKafkaClusterConfigKafkaPtrOutput) ToMdbKafkaClusterConfigKafkaPtrOutputWithContext(ctx context.Context) MdbKafkaClusterConfigKafkaPtrOutput {
	return o
}

func (o MdbKafkaClusterConfigKafkaPtrOutput) Elem() MdbKafkaClusterConfigKafkaOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigKafka) MdbKafkaClusterConfigKafka { return *v }).(MdbKafkaClusterConfigKafkaOutput)
}

// User-defined settings for the Kafka cluster. The structure is documented below.
func (o MdbKafkaClusterConfigKafkaPtrOutput) KafkaConfig() MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigKafka) *MdbKafkaClusterConfigKafkaKafkaConfig {
		if v == nil {
			return nil
		}
		return v.KafkaConfig
	}).(MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput)
}

// Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
func (o MdbKafkaClusterConfigKafkaPtrOutput) Resources() MdbKafkaClusterConfigKafkaResourcesPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigKafka) *MdbKafkaClusterConfigKafkaResources {
		if v == nil {
			return nil
		}
		return &v.Resources
	}).(MdbKafkaClusterConfigKafkaResourcesPtrOutput)
}

type MdbKafkaClusterConfigKafkaKafkaConfig struct {
	AutoCreateTopicsEnable      *bool   `pulumi:"autoCreateTopicsEnable"`
	CompressionType             *string `pulumi:"compressionType"`
	LogFlushIntervalMessages    *int    `pulumi:"logFlushIntervalMessages"`
	LogFlushIntervalMs          *int    `pulumi:"logFlushIntervalMs"`
	LogFlushSchedulerIntervalMs *int    `pulumi:"logFlushSchedulerIntervalMs"`
	LogPreallocate              *bool   `pulumi:"logPreallocate"`
	LogRetentionBytes           *int    `pulumi:"logRetentionBytes"`
	LogRetentionHours           *int    `pulumi:"logRetentionHours"`
	LogRetentionMinutes         *int    `pulumi:"logRetentionMinutes"`
	LogRetentionMs              *int    `pulumi:"logRetentionMs"`
	LogSegmentBytes             *int    `pulumi:"logSegmentBytes"`
	SocketReceiveBufferBytes    *int    `pulumi:"socketReceiveBufferBytes"`
	SocketSendBufferBytes       *int    `pulumi:"socketSendBufferBytes"`
}

// MdbKafkaClusterConfigKafkaKafkaConfigInput is an input type that accepts MdbKafkaClusterConfigKafkaKafkaConfigArgs and MdbKafkaClusterConfigKafkaKafkaConfigOutput values.
// You can construct a concrete instance of `MdbKafkaClusterConfigKafkaKafkaConfigInput` via:
//
//          MdbKafkaClusterConfigKafkaKafkaConfigArgs{...}
type MdbKafkaClusterConfigKafkaKafkaConfigInput interface {
	pulumi.Input

	ToMdbKafkaClusterConfigKafkaKafkaConfigOutput() MdbKafkaClusterConfigKafkaKafkaConfigOutput
	ToMdbKafkaClusterConfigKafkaKafkaConfigOutputWithContext(context.Context) MdbKafkaClusterConfigKafkaKafkaConfigOutput
}

type MdbKafkaClusterConfigKafkaKafkaConfigArgs struct {
	AutoCreateTopicsEnable      pulumi.BoolPtrInput   `pulumi:"autoCreateTopicsEnable"`
	CompressionType             pulumi.StringPtrInput `pulumi:"compressionType"`
	LogFlushIntervalMessages    pulumi.IntPtrInput    `pulumi:"logFlushIntervalMessages"`
	LogFlushIntervalMs          pulumi.IntPtrInput    `pulumi:"logFlushIntervalMs"`
	LogFlushSchedulerIntervalMs pulumi.IntPtrInput    `pulumi:"logFlushSchedulerIntervalMs"`
	LogPreallocate              pulumi.BoolPtrInput   `pulumi:"logPreallocate"`
	LogRetentionBytes           pulumi.IntPtrInput    `pulumi:"logRetentionBytes"`
	LogRetentionHours           pulumi.IntPtrInput    `pulumi:"logRetentionHours"`
	LogRetentionMinutes         pulumi.IntPtrInput    `pulumi:"logRetentionMinutes"`
	LogRetentionMs              pulumi.IntPtrInput    `pulumi:"logRetentionMs"`
	LogSegmentBytes             pulumi.IntPtrInput    `pulumi:"logSegmentBytes"`
	SocketReceiveBufferBytes    pulumi.IntPtrInput    `pulumi:"socketReceiveBufferBytes"`
	SocketSendBufferBytes       pulumi.IntPtrInput    `pulumi:"socketSendBufferBytes"`
}

func (MdbKafkaClusterConfigKafkaKafkaConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbKafkaClusterConfigKafkaKafkaConfig)(nil)).Elem()
}

func (i MdbKafkaClusterConfigKafkaKafkaConfigArgs) ToMdbKafkaClusterConfigKafkaKafkaConfigOutput() MdbKafkaClusterConfigKafkaKafkaConfigOutput {
	return i.ToMdbKafkaClusterConfigKafkaKafkaConfigOutputWithContext(context.Background())
}

func (i MdbKafkaClusterConfigKafkaKafkaConfigArgs) ToMdbKafkaClusterConfigKafkaKafkaConfigOutputWithContext(ctx context.Context) MdbKafkaClusterConfigKafkaKafkaConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterConfigKafkaKafkaConfigOutput)
}

func (i MdbKafkaClusterConfigKafkaKafkaConfigArgs) ToMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput() MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput {
	return i.ToMdbKafkaClusterConfigKafkaKafkaConfigPtrOutputWithContext(context.Background())
}

func (i MdbKafkaClusterConfigKafkaKafkaConfigArgs) ToMdbKafkaClusterConfigKafkaKafkaConfigPtrOutputWithContext(ctx context.Context) MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterConfigKafkaKafkaConfigOutput).ToMdbKafkaClusterConfigKafkaKafkaConfigPtrOutputWithContext(ctx)
}

// MdbKafkaClusterConfigKafkaKafkaConfigPtrInput is an input type that accepts MdbKafkaClusterConfigKafkaKafkaConfigArgs, MdbKafkaClusterConfigKafkaKafkaConfigPtr and MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput values.
// You can construct a concrete instance of `MdbKafkaClusterConfigKafkaKafkaConfigPtrInput` via:
//
//          MdbKafkaClusterConfigKafkaKafkaConfigArgs{...}
//
//  or:
//
//          nil
type MdbKafkaClusterConfigKafkaKafkaConfigPtrInput interface {
	pulumi.Input

	ToMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput() MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput
	ToMdbKafkaClusterConfigKafkaKafkaConfigPtrOutputWithContext(context.Context) MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput
}

type mdbKafkaClusterConfigKafkaKafkaConfigPtrType MdbKafkaClusterConfigKafkaKafkaConfigArgs

func MdbKafkaClusterConfigKafkaKafkaConfigPtr(v *MdbKafkaClusterConfigKafkaKafkaConfigArgs) MdbKafkaClusterConfigKafkaKafkaConfigPtrInput {
	return (*mdbKafkaClusterConfigKafkaKafkaConfigPtrType)(v)
}

func (*mdbKafkaClusterConfigKafkaKafkaConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbKafkaClusterConfigKafkaKafkaConfig)(nil)).Elem()
}

func (i *mdbKafkaClusterConfigKafkaKafkaConfigPtrType) ToMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput() MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput {
	return i.ToMdbKafkaClusterConfigKafkaKafkaConfigPtrOutputWithContext(context.Background())
}

func (i *mdbKafkaClusterConfigKafkaKafkaConfigPtrType) ToMdbKafkaClusterConfigKafkaKafkaConfigPtrOutputWithContext(ctx context.Context) MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput)
}

type MdbKafkaClusterConfigKafkaKafkaConfigOutput struct{ *pulumi.OutputState }

func (MdbKafkaClusterConfigKafkaKafkaConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbKafkaClusterConfigKafkaKafkaConfig)(nil)).Elem()
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigOutput) ToMdbKafkaClusterConfigKafkaKafkaConfigOutput() MdbKafkaClusterConfigKafkaKafkaConfigOutput {
	return o
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigOutput) ToMdbKafkaClusterConfigKafkaKafkaConfigOutputWithContext(ctx context.Context) MdbKafkaClusterConfigKafkaKafkaConfigOutput {
	return o
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigOutput) ToMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput() MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput {
	return o.ToMdbKafkaClusterConfigKafkaKafkaConfigPtrOutputWithContext(context.Background())
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigOutput) ToMdbKafkaClusterConfigKafkaKafkaConfigPtrOutputWithContext(ctx context.Context) MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigKafkaKafkaConfig) *MdbKafkaClusterConfigKafkaKafkaConfig {
		return &v
	}).(MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput)
}
func (o MdbKafkaClusterConfigKafkaKafkaConfigOutput) AutoCreateTopicsEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigKafkaKafkaConfig) *bool { return v.AutoCreateTopicsEnable }).(pulumi.BoolPtrOutput)
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigKafkaKafkaConfig) *string { return v.CompressionType }).(pulumi.StringPtrOutput)
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigOutput) LogFlushIntervalMessages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigKafkaKafkaConfig) *int { return v.LogFlushIntervalMessages }).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigOutput) LogFlushIntervalMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigKafkaKafkaConfig) *int { return v.LogFlushIntervalMs }).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigOutput) LogFlushSchedulerIntervalMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigKafkaKafkaConfig) *int { return v.LogFlushSchedulerIntervalMs }).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigOutput) LogPreallocate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigKafkaKafkaConfig) *bool { return v.LogPreallocate }).(pulumi.BoolPtrOutput)
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigOutput) LogRetentionBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigKafkaKafkaConfig) *int { return v.LogRetentionBytes }).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigOutput) LogRetentionHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigKafkaKafkaConfig) *int { return v.LogRetentionHours }).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigOutput) LogRetentionMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigKafkaKafkaConfig) *int { return v.LogRetentionMinutes }).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigOutput) LogRetentionMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigKafkaKafkaConfig) *int { return v.LogRetentionMs }).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigOutput) LogSegmentBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigKafkaKafkaConfig) *int { return v.LogSegmentBytes }).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigOutput) SocketReceiveBufferBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigKafkaKafkaConfig) *int { return v.SocketReceiveBufferBytes }).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigOutput) SocketSendBufferBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigKafkaKafkaConfig) *int { return v.SocketSendBufferBytes }).(pulumi.IntPtrOutput)
}

type MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput struct{ *pulumi.OutputState }

func (MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbKafkaClusterConfigKafkaKafkaConfig)(nil)).Elem()
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) ToMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput() MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput {
	return o
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) ToMdbKafkaClusterConfigKafkaKafkaConfigPtrOutputWithContext(ctx context.Context) MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput {
	return o
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) Elem() MdbKafkaClusterConfigKafkaKafkaConfigOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigKafkaKafkaConfig) MdbKafkaClusterConfigKafkaKafkaConfig { return *v }).(MdbKafkaClusterConfigKafkaKafkaConfigOutput)
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) AutoCreateTopicsEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigKafkaKafkaConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AutoCreateTopicsEnable
	}).(pulumi.BoolPtrOutput)
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigKafkaKafkaConfig) *string {
		if v == nil {
			return nil
		}
		return v.CompressionType
	}).(pulumi.StringPtrOutput)
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) LogFlushIntervalMessages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigKafkaKafkaConfig) *int {
		if v == nil {
			return nil
		}
		return v.LogFlushIntervalMessages
	}).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) LogFlushIntervalMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigKafkaKafkaConfig) *int {
		if v == nil {
			return nil
		}
		return v.LogFlushIntervalMs
	}).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) LogFlushSchedulerIntervalMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigKafkaKafkaConfig) *int {
		if v == nil {
			return nil
		}
		return v.LogFlushSchedulerIntervalMs
	}).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) LogPreallocate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigKafkaKafkaConfig) *bool {
		if v == nil {
			return nil
		}
		return v.LogPreallocate
	}).(pulumi.BoolPtrOutput)
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) LogRetentionBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigKafkaKafkaConfig) *int {
		if v == nil {
			return nil
		}
		return v.LogRetentionBytes
	}).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) LogRetentionHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigKafkaKafkaConfig) *int {
		if v == nil {
			return nil
		}
		return v.LogRetentionHours
	}).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) LogRetentionMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigKafkaKafkaConfig) *int {
		if v == nil {
			return nil
		}
		return v.LogRetentionMinutes
	}).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) LogRetentionMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigKafkaKafkaConfig) *int {
		if v == nil {
			return nil
		}
		return v.LogRetentionMs
	}).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) LogSegmentBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigKafkaKafkaConfig) *int {
		if v == nil {
			return nil
		}
		return v.LogSegmentBytes
	}).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) SocketReceiveBufferBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigKafkaKafkaConfig) *int {
		if v == nil {
			return nil
		}
		return v.SocketReceiveBufferBytes
	}).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) SocketSendBufferBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigKafkaKafkaConfig) *int {
		if v == nil {
			return nil
		}
		return v.SocketSendBufferBytes
	}).(pulumi.IntPtrOutput)
}

type MdbKafkaClusterConfigKafkaResources struct {
	// Volume of the storage available to a ZooKeeper host, in gigabytes.
	DiskSize int `pulumi:"diskSize"`
	// Type of the storage of ZooKeeper hosts.
	// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-kafka/concepts/storage).
	DiskTypeId       string `pulumi:"diskTypeId"`
	ResourcePresetId string `pulumi:"resourcePresetId"`
}

// MdbKafkaClusterConfigKafkaResourcesInput is an input type that accepts MdbKafkaClusterConfigKafkaResourcesArgs and MdbKafkaClusterConfigKafkaResourcesOutput values.
// You can construct a concrete instance of `MdbKafkaClusterConfigKafkaResourcesInput` via:
//
//          MdbKafkaClusterConfigKafkaResourcesArgs{...}
type MdbKafkaClusterConfigKafkaResourcesInput interface {
	pulumi.Input

	ToMdbKafkaClusterConfigKafkaResourcesOutput() MdbKafkaClusterConfigKafkaResourcesOutput
	ToMdbKafkaClusterConfigKafkaResourcesOutputWithContext(context.Context) MdbKafkaClusterConfigKafkaResourcesOutput
}

type MdbKafkaClusterConfigKafkaResourcesArgs struct {
	// Volume of the storage available to a ZooKeeper host, in gigabytes.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// Type of the storage of ZooKeeper hosts.
	// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-kafka/concepts/storage).
	DiskTypeId       pulumi.StringInput `pulumi:"diskTypeId"`
	ResourcePresetId pulumi.StringInput `pulumi:"resourcePresetId"`
}

func (MdbKafkaClusterConfigKafkaResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbKafkaClusterConfigKafkaResources)(nil)).Elem()
}

func (i MdbKafkaClusterConfigKafkaResourcesArgs) ToMdbKafkaClusterConfigKafkaResourcesOutput() MdbKafkaClusterConfigKafkaResourcesOutput {
	return i.ToMdbKafkaClusterConfigKafkaResourcesOutputWithContext(context.Background())
}

func (i MdbKafkaClusterConfigKafkaResourcesArgs) ToMdbKafkaClusterConfigKafkaResourcesOutputWithContext(ctx context.Context) MdbKafkaClusterConfigKafkaResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterConfigKafkaResourcesOutput)
}

func (i MdbKafkaClusterConfigKafkaResourcesArgs) ToMdbKafkaClusterConfigKafkaResourcesPtrOutput() MdbKafkaClusterConfigKafkaResourcesPtrOutput {
	return i.ToMdbKafkaClusterConfigKafkaResourcesPtrOutputWithContext(context.Background())
}

func (i MdbKafkaClusterConfigKafkaResourcesArgs) ToMdbKafkaClusterConfigKafkaResourcesPtrOutputWithContext(ctx context.Context) MdbKafkaClusterConfigKafkaResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterConfigKafkaResourcesOutput).ToMdbKafkaClusterConfigKafkaResourcesPtrOutputWithContext(ctx)
}

// MdbKafkaClusterConfigKafkaResourcesPtrInput is an input type that accepts MdbKafkaClusterConfigKafkaResourcesArgs, MdbKafkaClusterConfigKafkaResourcesPtr and MdbKafkaClusterConfigKafkaResourcesPtrOutput values.
// You can construct a concrete instance of `MdbKafkaClusterConfigKafkaResourcesPtrInput` via:
//
//          MdbKafkaClusterConfigKafkaResourcesArgs{...}
//
//  or:
//
//          nil
type MdbKafkaClusterConfigKafkaResourcesPtrInput interface {
	pulumi.Input

	ToMdbKafkaClusterConfigKafkaResourcesPtrOutput() MdbKafkaClusterConfigKafkaResourcesPtrOutput
	ToMdbKafkaClusterConfigKafkaResourcesPtrOutputWithContext(context.Context) MdbKafkaClusterConfigKafkaResourcesPtrOutput
}

type mdbKafkaClusterConfigKafkaResourcesPtrType MdbKafkaClusterConfigKafkaResourcesArgs

func MdbKafkaClusterConfigKafkaResourcesPtr(v *MdbKafkaClusterConfigKafkaResourcesArgs) MdbKafkaClusterConfigKafkaResourcesPtrInput {
	return (*mdbKafkaClusterConfigKafkaResourcesPtrType)(v)
}

func (*mdbKafkaClusterConfigKafkaResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbKafkaClusterConfigKafkaResources)(nil)).Elem()
}

func (i *mdbKafkaClusterConfigKafkaResourcesPtrType) ToMdbKafkaClusterConfigKafkaResourcesPtrOutput() MdbKafkaClusterConfigKafkaResourcesPtrOutput {
	return i.ToMdbKafkaClusterConfigKafkaResourcesPtrOutputWithContext(context.Background())
}

func (i *mdbKafkaClusterConfigKafkaResourcesPtrType) ToMdbKafkaClusterConfigKafkaResourcesPtrOutputWithContext(ctx context.Context) MdbKafkaClusterConfigKafkaResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterConfigKafkaResourcesPtrOutput)
}

type MdbKafkaClusterConfigKafkaResourcesOutput struct{ *pulumi.OutputState }

func (MdbKafkaClusterConfigKafkaResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbKafkaClusterConfigKafkaResources)(nil)).Elem()
}

func (o MdbKafkaClusterConfigKafkaResourcesOutput) ToMdbKafkaClusterConfigKafkaResourcesOutput() MdbKafkaClusterConfigKafkaResourcesOutput {
	return o
}

func (o MdbKafkaClusterConfigKafkaResourcesOutput) ToMdbKafkaClusterConfigKafkaResourcesOutputWithContext(ctx context.Context) MdbKafkaClusterConfigKafkaResourcesOutput {
	return o
}

func (o MdbKafkaClusterConfigKafkaResourcesOutput) ToMdbKafkaClusterConfigKafkaResourcesPtrOutput() MdbKafkaClusterConfigKafkaResourcesPtrOutput {
	return o.ToMdbKafkaClusterConfigKafkaResourcesPtrOutputWithContext(context.Background())
}

func (o MdbKafkaClusterConfigKafkaResourcesOutput) ToMdbKafkaClusterConfigKafkaResourcesPtrOutputWithContext(ctx context.Context) MdbKafkaClusterConfigKafkaResourcesPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigKafkaResources) *MdbKafkaClusterConfigKafkaResources {
		return &v
	}).(MdbKafkaClusterConfigKafkaResourcesPtrOutput)
}

// Volume of the storage available to a ZooKeeper host, in gigabytes.
func (o MdbKafkaClusterConfigKafkaResourcesOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigKafkaResources) int { return v.DiskSize }).(pulumi.IntOutput)
}

// Type of the storage of ZooKeeper hosts.
// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-kafka/concepts/storage).
func (o MdbKafkaClusterConfigKafkaResourcesOutput) DiskTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigKafkaResources) string { return v.DiskTypeId }).(pulumi.StringOutput)
}

func (o MdbKafkaClusterConfigKafkaResourcesOutput) ResourcePresetId() pulumi.StringOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigKafkaResources) string { return v.ResourcePresetId }).(pulumi.StringOutput)
}

type MdbKafkaClusterConfigKafkaResourcesPtrOutput struct{ *pulumi.OutputState }

func (MdbKafkaClusterConfigKafkaResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbKafkaClusterConfigKafkaResources)(nil)).Elem()
}

func (o MdbKafkaClusterConfigKafkaResourcesPtrOutput) ToMdbKafkaClusterConfigKafkaResourcesPtrOutput() MdbKafkaClusterConfigKafkaResourcesPtrOutput {
	return o
}

func (o MdbKafkaClusterConfigKafkaResourcesPtrOutput) ToMdbKafkaClusterConfigKafkaResourcesPtrOutputWithContext(ctx context.Context) MdbKafkaClusterConfigKafkaResourcesPtrOutput {
	return o
}

func (o MdbKafkaClusterConfigKafkaResourcesPtrOutput) Elem() MdbKafkaClusterConfigKafkaResourcesOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigKafkaResources) MdbKafkaClusterConfigKafkaResources { return *v }).(MdbKafkaClusterConfigKafkaResourcesOutput)
}

// Volume of the storage available to a ZooKeeper host, in gigabytes.
func (o MdbKafkaClusterConfigKafkaResourcesPtrOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigKafkaResources) *int {
		if v == nil {
			return nil
		}
		return &v.DiskSize
	}).(pulumi.IntPtrOutput)
}

// Type of the storage of ZooKeeper hosts.
// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-kafka/concepts/storage).
func (o MdbKafkaClusterConfigKafkaResourcesPtrOutput) DiskTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigKafkaResources) *string {
		if v == nil {
			return nil
		}
		return &v.DiskTypeId
	}).(pulumi.StringPtrOutput)
}

func (o MdbKafkaClusterConfigKafkaResourcesPtrOutput) ResourcePresetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigKafkaResources) *string {
		if v == nil {
			return nil
		}
		return &v.ResourcePresetId
	}).(pulumi.StringPtrOutput)
}

type MdbKafkaClusterConfigZookeeper struct {
	// Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
	Resources MdbKafkaClusterConfigZookeeperResources `pulumi:"resources"`
}

// MdbKafkaClusterConfigZookeeperInput is an input type that accepts MdbKafkaClusterConfigZookeeperArgs and MdbKafkaClusterConfigZookeeperOutput values.
// You can construct a concrete instance of `MdbKafkaClusterConfigZookeeperInput` via:
//
//          MdbKafkaClusterConfigZookeeperArgs{...}
type MdbKafkaClusterConfigZookeeperInput interface {
	pulumi.Input

	ToMdbKafkaClusterConfigZookeeperOutput() MdbKafkaClusterConfigZookeeperOutput
	ToMdbKafkaClusterConfigZookeeperOutputWithContext(context.Context) MdbKafkaClusterConfigZookeeperOutput
}

type MdbKafkaClusterConfigZookeeperArgs struct {
	// Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
	Resources MdbKafkaClusterConfigZookeeperResourcesInput `pulumi:"resources"`
}

func (MdbKafkaClusterConfigZookeeperArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbKafkaClusterConfigZookeeper)(nil)).Elem()
}

func (i MdbKafkaClusterConfigZookeeperArgs) ToMdbKafkaClusterConfigZookeeperOutput() MdbKafkaClusterConfigZookeeperOutput {
	return i.ToMdbKafkaClusterConfigZookeeperOutputWithContext(context.Background())
}

func (i MdbKafkaClusterConfigZookeeperArgs) ToMdbKafkaClusterConfigZookeeperOutputWithContext(ctx context.Context) MdbKafkaClusterConfigZookeeperOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterConfigZookeeperOutput)
}

func (i MdbKafkaClusterConfigZookeeperArgs) ToMdbKafkaClusterConfigZookeeperPtrOutput() MdbKafkaClusterConfigZookeeperPtrOutput {
	return i.ToMdbKafkaClusterConfigZookeeperPtrOutputWithContext(context.Background())
}

func (i MdbKafkaClusterConfigZookeeperArgs) ToMdbKafkaClusterConfigZookeeperPtrOutputWithContext(ctx context.Context) MdbKafkaClusterConfigZookeeperPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterConfigZookeeperOutput).ToMdbKafkaClusterConfigZookeeperPtrOutputWithContext(ctx)
}

// MdbKafkaClusterConfigZookeeperPtrInput is an input type that accepts MdbKafkaClusterConfigZookeeperArgs, MdbKafkaClusterConfigZookeeperPtr and MdbKafkaClusterConfigZookeeperPtrOutput values.
// You can construct a concrete instance of `MdbKafkaClusterConfigZookeeperPtrInput` via:
//
//          MdbKafkaClusterConfigZookeeperArgs{...}
//
//  or:
//
//          nil
type MdbKafkaClusterConfigZookeeperPtrInput interface {
	pulumi.Input

	ToMdbKafkaClusterConfigZookeeperPtrOutput() MdbKafkaClusterConfigZookeeperPtrOutput
	ToMdbKafkaClusterConfigZookeeperPtrOutputWithContext(context.Context) MdbKafkaClusterConfigZookeeperPtrOutput
}

type mdbKafkaClusterConfigZookeeperPtrType MdbKafkaClusterConfigZookeeperArgs

func MdbKafkaClusterConfigZookeeperPtr(v *MdbKafkaClusterConfigZookeeperArgs) MdbKafkaClusterConfigZookeeperPtrInput {
	return (*mdbKafkaClusterConfigZookeeperPtrType)(v)
}

func (*mdbKafkaClusterConfigZookeeperPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbKafkaClusterConfigZookeeper)(nil)).Elem()
}

func (i *mdbKafkaClusterConfigZookeeperPtrType) ToMdbKafkaClusterConfigZookeeperPtrOutput() MdbKafkaClusterConfigZookeeperPtrOutput {
	return i.ToMdbKafkaClusterConfigZookeeperPtrOutputWithContext(context.Background())
}

func (i *mdbKafkaClusterConfigZookeeperPtrType) ToMdbKafkaClusterConfigZookeeperPtrOutputWithContext(ctx context.Context) MdbKafkaClusterConfigZookeeperPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterConfigZookeeperPtrOutput)
}

type MdbKafkaClusterConfigZookeeperOutput struct{ *pulumi.OutputState }

func (MdbKafkaClusterConfigZookeeperOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbKafkaClusterConfigZookeeper)(nil)).Elem()
}

func (o MdbKafkaClusterConfigZookeeperOutput) ToMdbKafkaClusterConfigZookeeperOutput() MdbKafkaClusterConfigZookeeperOutput {
	return o
}

func (o MdbKafkaClusterConfigZookeeperOutput) ToMdbKafkaClusterConfigZookeeperOutputWithContext(ctx context.Context) MdbKafkaClusterConfigZookeeperOutput {
	return o
}

func (o MdbKafkaClusterConfigZookeeperOutput) ToMdbKafkaClusterConfigZookeeperPtrOutput() MdbKafkaClusterConfigZookeeperPtrOutput {
	return o.ToMdbKafkaClusterConfigZookeeperPtrOutputWithContext(context.Background())
}

func (o MdbKafkaClusterConfigZookeeperOutput) ToMdbKafkaClusterConfigZookeeperPtrOutputWithContext(ctx context.Context) MdbKafkaClusterConfigZookeeperPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigZookeeper) *MdbKafkaClusterConfigZookeeper {
		return &v
	}).(MdbKafkaClusterConfigZookeeperPtrOutput)
}

// Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
func (o MdbKafkaClusterConfigZookeeperOutput) Resources() MdbKafkaClusterConfigZookeeperResourcesOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigZookeeper) MdbKafkaClusterConfigZookeeperResources { return v.Resources }).(MdbKafkaClusterConfigZookeeperResourcesOutput)
}

type MdbKafkaClusterConfigZookeeperPtrOutput struct{ *pulumi.OutputState }

func (MdbKafkaClusterConfigZookeeperPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbKafkaClusterConfigZookeeper)(nil)).Elem()
}

func (o MdbKafkaClusterConfigZookeeperPtrOutput) ToMdbKafkaClusterConfigZookeeperPtrOutput() MdbKafkaClusterConfigZookeeperPtrOutput {
	return o
}

func (o MdbKafkaClusterConfigZookeeperPtrOutput) ToMdbKafkaClusterConfigZookeeperPtrOutputWithContext(ctx context.Context) MdbKafkaClusterConfigZookeeperPtrOutput {
	return o
}

func (o MdbKafkaClusterConfigZookeeperPtrOutput) Elem() MdbKafkaClusterConfigZookeeperOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigZookeeper) MdbKafkaClusterConfigZookeeper { return *v }).(MdbKafkaClusterConfigZookeeperOutput)
}

// Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
func (o MdbKafkaClusterConfigZookeeperPtrOutput) Resources() MdbKafkaClusterConfigZookeeperResourcesPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigZookeeper) *MdbKafkaClusterConfigZookeeperResources {
		if v == nil {
			return nil
		}
		return &v.Resources
	}).(MdbKafkaClusterConfigZookeeperResourcesPtrOutput)
}

type MdbKafkaClusterConfigZookeeperResources struct {
	// Volume of the storage available to a ZooKeeper host, in gigabytes.
	DiskSize int `pulumi:"diskSize"`
	// Type of the storage of ZooKeeper hosts.
	// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-kafka/concepts/storage).
	DiskTypeId       string `pulumi:"diskTypeId"`
	ResourcePresetId string `pulumi:"resourcePresetId"`
}

// MdbKafkaClusterConfigZookeeperResourcesInput is an input type that accepts MdbKafkaClusterConfigZookeeperResourcesArgs and MdbKafkaClusterConfigZookeeperResourcesOutput values.
// You can construct a concrete instance of `MdbKafkaClusterConfigZookeeperResourcesInput` via:
//
//          MdbKafkaClusterConfigZookeeperResourcesArgs{...}
type MdbKafkaClusterConfigZookeeperResourcesInput interface {
	pulumi.Input

	ToMdbKafkaClusterConfigZookeeperResourcesOutput() MdbKafkaClusterConfigZookeeperResourcesOutput
	ToMdbKafkaClusterConfigZookeeperResourcesOutputWithContext(context.Context) MdbKafkaClusterConfigZookeeperResourcesOutput
}

type MdbKafkaClusterConfigZookeeperResourcesArgs struct {
	// Volume of the storage available to a ZooKeeper host, in gigabytes.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// Type of the storage of ZooKeeper hosts.
	// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-kafka/concepts/storage).
	DiskTypeId       pulumi.StringInput `pulumi:"diskTypeId"`
	ResourcePresetId pulumi.StringInput `pulumi:"resourcePresetId"`
}

func (MdbKafkaClusterConfigZookeeperResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbKafkaClusterConfigZookeeperResources)(nil)).Elem()
}

func (i MdbKafkaClusterConfigZookeeperResourcesArgs) ToMdbKafkaClusterConfigZookeeperResourcesOutput() MdbKafkaClusterConfigZookeeperResourcesOutput {
	return i.ToMdbKafkaClusterConfigZookeeperResourcesOutputWithContext(context.Background())
}

func (i MdbKafkaClusterConfigZookeeperResourcesArgs) ToMdbKafkaClusterConfigZookeeperResourcesOutputWithContext(ctx context.Context) MdbKafkaClusterConfigZookeeperResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterConfigZookeeperResourcesOutput)
}

func (i MdbKafkaClusterConfigZookeeperResourcesArgs) ToMdbKafkaClusterConfigZookeeperResourcesPtrOutput() MdbKafkaClusterConfigZookeeperResourcesPtrOutput {
	return i.ToMdbKafkaClusterConfigZookeeperResourcesPtrOutputWithContext(context.Background())
}

func (i MdbKafkaClusterConfigZookeeperResourcesArgs) ToMdbKafkaClusterConfigZookeeperResourcesPtrOutputWithContext(ctx context.Context) MdbKafkaClusterConfigZookeeperResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterConfigZookeeperResourcesOutput).ToMdbKafkaClusterConfigZookeeperResourcesPtrOutputWithContext(ctx)
}

// MdbKafkaClusterConfigZookeeperResourcesPtrInput is an input type that accepts MdbKafkaClusterConfigZookeeperResourcesArgs, MdbKafkaClusterConfigZookeeperResourcesPtr and MdbKafkaClusterConfigZookeeperResourcesPtrOutput values.
// You can construct a concrete instance of `MdbKafkaClusterConfigZookeeperResourcesPtrInput` via:
//
//          MdbKafkaClusterConfigZookeeperResourcesArgs{...}
//
//  or:
//
//          nil
type MdbKafkaClusterConfigZookeeperResourcesPtrInput interface {
	pulumi.Input

	ToMdbKafkaClusterConfigZookeeperResourcesPtrOutput() MdbKafkaClusterConfigZookeeperResourcesPtrOutput
	ToMdbKafkaClusterConfigZookeeperResourcesPtrOutputWithContext(context.Context) MdbKafkaClusterConfigZookeeperResourcesPtrOutput
}

type mdbKafkaClusterConfigZookeeperResourcesPtrType MdbKafkaClusterConfigZookeeperResourcesArgs

func MdbKafkaClusterConfigZookeeperResourcesPtr(v *MdbKafkaClusterConfigZookeeperResourcesArgs) MdbKafkaClusterConfigZookeeperResourcesPtrInput {
	return (*mdbKafkaClusterConfigZookeeperResourcesPtrType)(v)
}

func (*mdbKafkaClusterConfigZookeeperResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbKafkaClusterConfigZookeeperResources)(nil)).Elem()
}

func (i *mdbKafkaClusterConfigZookeeperResourcesPtrType) ToMdbKafkaClusterConfigZookeeperResourcesPtrOutput() MdbKafkaClusterConfigZookeeperResourcesPtrOutput {
	return i.ToMdbKafkaClusterConfigZookeeperResourcesPtrOutputWithContext(context.Background())
}

func (i *mdbKafkaClusterConfigZookeeperResourcesPtrType) ToMdbKafkaClusterConfigZookeeperResourcesPtrOutputWithContext(ctx context.Context) MdbKafkaClusterConfigZookeeperResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterConfigZookeeperResourcesPtrOutput)
}

type MdbKafkaClusterConfigZookeeperResourcesOutput struct{ *pulumi.OutputState }

func (MdbKafkaClusterConfigZookeeperResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbKafkaClusterConfigZookeeperResources)(nil)).Elem()
}

func (o MdbKafkaClusterConfigZookeeperResourcesOutput) ToMdbKafkaClusterConfigZookeeperResourcesOutput() MdbKafkaClusterConfigZookeeperResourcesOutput {
	return o
}

func (o MdbKafkaClusterConfigZookeeperResourcesOutput) ToMdbKafkaClusterConfigZookeeperResourcesOutputWithContext(ctx context.Context) MdbKafkaClusterConfigZookeeperResourcesOutput {
	return o
}

func (o MdbKafkaClusterConfigZookeeperResourcesOutput) ToMdbKafkaClusterConfigZookeeperResourcesPtrOutput() MdbKafkaClusterConfigZookeeperResourcesPtrOutput {
	return o.ToMdbKafkaClusterConfigZookeeperResourcesPtrOutputWithContext(context.Background())
}

func (o MdbKafkaClusterConfigZookeeperResourcesOutput) ToMdbKafkaClusterConfigZookeeperResourcesPtrOutputWithContext(ctx context.Context) MdbKafkaClusterConfigZookeeperResourcesPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigZookeeperResources) *MdbKafkaClusterConfigZookeeperResources {
		return &v
	}).(MdbKafkaClusterConfigZookeeperResourcesPtrOutput)
}

// Volume of the storage available to a ZooKeeper host, in gigabytes.
func (o MdbKafkaClusterConfigZookeeperResourcesOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigZookeeperResources) int { return v.DiskSize }).(pulumi.IntOutput)
}

// Type of the storage of ZooKeeper hosts.
// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-kafka/concepts/storage).
func (o MdbKafkaClusterConfigZookeeperResourcesOutput) DiskTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigZookeeperResources) string { return v.DiskTypeId }).(pulumi.StringOutput)
}

func (o MdbKafkaClusterConfigZookeeperResourcesOutput) ResourcePresetId() pulumi.StringOutput {
	return o.ApplyT(func(v MdbKafkaClusterConfigZookeeperResources) string { return v.ResourcePresetId }).(pulumi.StringOutput)
}

type MdbKafkaClusterConfigZookeeperResourcesPtrOutput struct{ *pulumi.OutputState }

func (MdbKafkaClusterConfigZookeeperResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbKafkaClusterConfigZookeeperResources)(nil)).Elem()
}

func (o MdbKafkaClusterConfigZookeeperResourcesPtrOutput) ToMdbKafkaClusterConfigZookeeperResourcesPtrOutput() MdbKafkaClusterConfigZookeeperResourcesPtrOutput {
	return o
}

func (o MdbKafkaClusterConfigZookeeperResourcesPtrOutput) ToMdbKafkaClusterConfigZookeeperResourcesPtrOutputWithContext(ctx context.Context) MdbKafkaClusterConfigZookeeperResourcesPtrOutput {
	return o
}

func (o MdbKafkaClusterConfigZookeeperResourcesPtrOutput) Elem() MdbKafkaClusterConfigZookeeperResourcesOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigZookeeperResources) MdbKafkaClusterConfigZookeeperResources { return *v }).(MdbKafkaClusterConfigZookeeperResourcesOutput)
}

// Volume of the storage available to a ZooKeeper host, in gigabytes.
func (o MdbKafkaClusterConfigZookeeperResourcesPtrOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigZookeeperResources) *int {
		if v == nil {
			return nil
		}
		return &v.DiskSize
	}).(pulumi.IntPtrOutput)
}

// Type of the storage of ZooKeeper hosts.
// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-kafka/concepts/storage).
func (o MdbKafkaClusterConfigZookeeperResourcesPtrOutput) DiskTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigZookeeperResources) *string {
		if v == nil {
			return nil
		}
		return &v.DiskTypeId
	}).(pulumi.StringPtrOutput)
}

func (o MdbKafkaClusterConfigZookeeperResourcesPtrOutput) ResourcePresetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterConfigZookeeperResources) *string {
		if v == nil {
			return nil
		}
		return &v.ResourcePresetId
	}).(pulumi.StringPtrOutput)
}

type MdbKafkaClusterHost struct {
	// Sets whether the host should get a public IP address on creation. Can be either `true` or `false`.
	AssignPublicIp *bool `pulumi:"assignPublicIp"`
	// Health of the host.
	Health *string `pulumi:"health"`
	// The name of the topic.
	Name *string `pulumi:"name"`
	// The role type to grant to the topic.
	Role *string `pulumi:"role"`
	// IDs of the subnets, to which the Kafka cluster belongs.
	SubnetId *string `pulumi:"subnetId"`
	// The availability zone where the Kafka host was created.
	ZoneId *string `pulumi:"zoneId"`
}

// MdbKafkaClusterHostInput is an input type that accepts MdbKafkaClusterHostArgs and MdbKafkaClusterHostOutput values.
// You can construct a concrete instance of `MdbKafkaClusterHostInput` via:
//
//          MdbKafkaClusterHostArgs{...}
type MdbKafkaClusterHostInput interface {
	pulumi.Input

	ToMdbKafkaClusterHostOutput() MdbKafkaClusterHostOutput
	ToMdbKafkaClusterHostOutputWithContext(context.Context) MdbKafkaClusterHostOutput
}

type MdbKafkaClusterHostArgs struct {
	// Sets whether the host should get a public IP address on creation. Can be either `true` or `false`.
	AssignPublicIp pulumi.BoolPtrInput `pulumi:"assignPublicIp"`
	// Health of the host.
	Health pulumi.StringPtrInput `pulumi:"health"`
	// The name of the topic.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The role type to grant to the topic.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// IDs of the subnets, to which the Kafka cluster belongs.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The availability zone where the Kafka host was created.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (MdbKafkaClusterHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbKafkaClusterHost)(nil)).Elem()
}

func (i MdbKafkaClusterHostArgs) ToMdbKafkaClusterHostOutput() MdbKafkaClusterHostOutput {
	return i.ToMdbKafkaClusterHostOutputWithContext(context.Background())
}

func (i MdbKafkaClusterHostArgs) ToMdbKafkaClusterHostOutputWithContext(ctx context.Context) MdbKafkaClusterHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterHostOutput)
}

// MdbKafkaClusterHostArrayInput is an input type that accepts MdbKafkaClusterHostArray and MdbKafkaClusterHostArrayOutput values.
// You can construct a concrete instance of `MdbKafkaClusterHostArrayInput` via:
//
//          MdbKafkaClusterHostArray{ MdbKafkaClusterHostArgs{...} }
type MdbKafkaClusterHostArrayInput interface {
	pulumi.Input

	ToMdbKafkaClusterHostArrayOutput() MdbKafkaClusterHostArrayOutput
	ToMdbKafkaClusterHostArrayOutputWithContext(context.Context) MdbKafkaClusterHostArrayOutput
}

type MdbKafkaClusterHostArray []MdbKafkaClusterHostInput

func (MdbKafkaClusterHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbKafkaClusterHost)(nil)).Elem()
}

func (i MdbKafkaClusterHostArray) ToMdbKafkaClusterHostArrayOutput() MdbKafkaClusterHostArrayOutput {
	return i.ToMdbKafkaClusterHostArrayOutputWithContext(context.Background())
}

func (i MdbKafkaClusterHostArray) ToMdbKafkaClusterHostArrayOutputWithContext(ctx context.Context) MdbKafkaClusterHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterHostArrayOutput)
}

type MdbKafkaClusterHostOutput struct{ *pulumi.OutputState }

func (MdbKafkaClusterHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbKafkaClusterHost)(nil)).Elem()
}

func (o MdbKafkaClusterHostOutput) ToMdbKafkaClusterHostOutput() MdbKafkaClusterHostOutput {
	return o
}

func (o MdbKafkaClusterHostOutput) ToMdbKafkaClusterHostOutputWithContext(ctx context.Context) MdbKafkaClusterHostOutput {
	return o
}

// Sets whether the host should get a public IP address on creation. Can be either `true` or `false`.
func (o MdbKafkaClusterHostOutput) AssignPublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterHost) *bool { return v.AssignPublicIp }).(pulumi.BoolPtrOutput)
}

// Health of the host.
func (o MdbKafkaClusterHostOutput) Health() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterHost) *string { return v.Health }).(pulumi.StringPtrOutput)
}

// The name of the topic.
func (o MdbKafkaClusterHostOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterHost) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The role type to grant to the topic.
func (o MdbKafkaClusterHostOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterHost) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// IDs of the subnets, to which the Kafka cluster belongs.
func (o MdbKafkaClusterHostOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterHost) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The availability zone where the Kafka host was created.
func (o MdbKafkaClusterHostOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterHost) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

type MdbKafkaClusterHostArrayOutput struct{ *pulumi.OutputState }

func (MdbKafkaClusterHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbKafkaClusterHost)(nil)).Elem()
}

func (o MdbKafkaClusterHostArrayOutput) ToMdbKafkaClusterHostArrayOutput() MdbKafkaClusterHostArrayOutput {
	return o
}

func (o MdbKafkaClusterHostArrayOutput) ToMdbKafkaClusterHostArrayOutputWithContext(ctx context.Context) MdbKafkaClusterHostArrayOutput {
	return o
}

func (o MdbKafkaClusterHostArrayOutput) Index(i pulumi.IntInput) MdbKafkaClusterHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbKafkaClusterHost {
		return vs[0].([]MdbKafkaClusterHost)[vs[1].(int)]
	}).(MdbKafkaClusterHostOutput)
}

type MdbKafkaClusterTopic struct {
	// The name of the topic.
	Name string `pulumi:"name"`
	// The number of the topic's partitions.
	Partitions int `pulumi:"partitions"`
	// Amount of data copies (replicas) for the topic in the cluster.
	ReplicationFactor int `pulumi:"replicationFactor"`
	// User-defined settings for the topic. The structure is documented below.
	TopicConfig *MdbKafkaClusterTopicTopicConfig `pulumi:"topicConfig"`
}

// MdbKafkaClusterTopicInput is an input type that accepts MdbKafkaClusterTopicArgs and MdbKafkaClusterTopicOutput values.
// You can construct a concrete instance of `MdbKafkaClusterTopicInput` via:
//
//          MdbKafkaClusterTopicArgs{...}
type MdbKafkaClusterTopicInput interface {
	pulumi.Input

	ToMdbKafkaClusterTopicOutput() MdbKafkaClusterTopicOutput
	ToMdbKafkaClusterTopicOutputWithContext(context.Context) MdbKafkaClusterTopicOutput
}

type MdbKafkaClusterTopicArgs struct {
	// The name of the topic.
	Name pulumi.StringInput `pulumi:"name"`
	// The number of the topic's partitions.
	Partitions pulumi.IntInput `pulumi:"partitions"`
	// Amount of data copies (replicas) for the topic in the cluster.
	ReplicationFactor pulumi.IntInput `pulumi:"replicationFactor"`
	// User-defined settings for the topic. The structure is documented below.
	TopicConfig MdbKafkaClusterTopicTopicConfigPtrInput `pulumi:"topicConfig"`
}

func (MdbKafkaClusterTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbKafkaClusterTopic)(nil)).Elem()
}

func (i MdbKafkaClusterTopicArgs) ToMdbKafkaClusterTopicOutput() MdbKafkaClusterTopicOutput {
	return i.ToMdbKafkaClusterTopicOutputWithContext(context.Background())
}

func (i MdbKafkaClusterTopicArgs) ToMdbKafkaClusterTopicOutputWithContext(ctx context.Context) MdbKafkaClusterTopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterTopicOutput)
}

// MdbKafkaClusterTopicArrayInput is an input type that accepts MdbKafkaClusterTopicArray and MdbKafkaClusterTopicArrayOutput values.
// You can construct a concrete instance of `MdbKafkaClusterTopicArrayInput` via:
//
//          MdbKafkaClusterTopicArray{ MdbKafkaClusterTopicArgs{...} }
type MdbKafkaClusterTopicArrayInput interface {
	pulumi.Input

	ToMdbKafkaClusterTopicArrayOutput() MdbKafkaClusterTopicArrayOutput
	ToMdbKafkaClusterTopicArrayOutputWithContext(context.Context) MdbKafkaClusterTopicArrayOutput
}

type MdbKafkaClusterTopicArray []MdbKafkaClusterTopicInput

func (MdbKafkaClusterTopicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbKafkaClusterTopic)(nil)).Elem()
}

func (i MdbKafkaClusterTopicArray) ToMdbKafkaClusterTopicArrayOutput() MdbKafkaClusterTopicArrayOutput {
	return i.ToMdbKafkaClusterTopicArrayOutputWithContext(context.Background())
}

func (i MdbKafkaClusterTopicArray) ToMdbKafkaClusterTopicArrayOutputWithContext(ctx context.Context) MdbKafkaClusterTopicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterTopicArrayOutput)
}

type MdbKafkaClusterTopicOutput struct{ *pulumi.OutputState }

func (MdbKafkaClusterTopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbKafkaClusterTopic)(nil)).Elem()
}

func (o MdbKafkaClusterTopicOutput) ToMdbKafkaClusterTopicOutput() MdbKafkaClusterTopicOutput {
	return o
}

func (o MdbKafkaClusterTopicOutput) ToMdbKafkaClusterTopicOutputWithContext(ctx context.Context) MdbKafkaClusterTopicOutput {
	return o
}

// The name of the topic.
func (o MdbKafkaClusterTopicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MdbKafkaClusterTopic) string { return v.Name }).(pulumi.StringOutput)
}

// The number of the topic's partitions.
func (o MdbKafkaClusterTopicOutput) Partitions() pulumi.IntOutput {
	return o.ApplyT(func(v MdbKafkaClusterTopic) int { return v.Partitions }).(pulumi.IntOutput)
}

// Amount of data copies (replicas) for the topic in the cluster.
func (o MdbKafkaClusterTopicOutput) ReplicationFactor() pulumi.IntOutput {
	return o.ApplyT(func(v MdbKafkaClusterTopic) int { return v.ReplicationFactor }).(pulumi.IntOutput)
}

// User-defined settings for the topic. The structure is documented below.
func (o MdbKafkaClusterTopicOutput) TopicConfig() MdbKafkaClusterTopicTopicConfigPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterTopic) *MdbKafkaClusterTopicTopicConfig { return v.TopicConfig }).(MdbKafkaClusterTopicTopicConfigPtrOutput)
}

type MdbKafkaClusterTopicArrayOutput struct{ *pulumi.OutputState }

func (MdbKafkaClusterTopicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbKafkaClusterTopic)(nil)).Elem()
}

func (o MdbKafkaClusterTopicArrayOutput) ToMdbKafkaClusterTopicArrayOutput() MdbKafkaClusterTopicArrayOutput {
	return o
}

func (o MdbKafkaClusterTopicArrayOutput) ToMdbKafkaClusterTopicArrayOutputWithContext(ctx context.Context) MdbKafkaClusterTopicArrayOutput {
	return o
}

func (o MdbKafkaClusterTopicArrayOutput) Index(i pulumi.IntInput) MdbKafkaClusterTopicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbKafkaClusterTopic {
		return vs[0].([]MdbKafkaClusterTopic)[vs[1].(int)]
	}).(MdbKafkaClusterTopicOutput)
}

type MdbKafkaClusterTopicTopicConfig struct {
	CleanupPolicy      *string `pulumi:"cleanupPolicy"`
	CompressionType    *string `pulumi:"compressionType"`
	DeleteRetentionMs  *int    `pulumi:"deleteRetentionMs"`
	FileDeleteDelayMs  *int    `pulumi:"fileDeleteDelayMs"`
	FlushMessages      *int    `pulumi:"flushMessages"`
	FlushMs            *int    `pulumi:"flushMs"`
	MaxMessageBytes    *int    `pulumi:"maxMessageBytes"`
	MinCompactionLagMs *int    `pulumi:"minCompactionLagMs"`
	MinInsyncReplicas  *int    `pulumi:"minInsyncReplicas"`
	Preallocate        *bool   `pulumi:"preallocate"`
	RetentionBytes     *int    `pulumi:"retentionBytes"`
	RetentionMs        *int    `pulumi:"retentionMs"`
	SegmentBytes       *int    `pulumi:"segmentBytes"`
}

// MdbKafkaClusterTopicTopicConfigInput is an input type that accepts MdbKafkaClusterTopicTopicConfigArgs and MdbKafkaClusterTopicTopicConfigOutput values.
// You can construct a concrete instance of `MdbKafkaClusterTopicTopicConfigInput` via:
//
//          MdbKafkaClusterTopicTopicConfigArgs{...}
type MdbKafkaClusterTopicTopicConfigInput interface {
	pulumi.Input

	ToMdbKafkaClusterTopicTopicConfigOutput() MdbKafkaClusterTopicTopicConfigOutput
	ToMdbKafkaClusterTopicTopicConfigOutputWithContext(context.Context) MdbKafkaClusterTopicTopicConfigOutput
}

type MdbKafkaClusterTopicTopicConfigArgs struct {
	CleanupPolicy      pulumi.StringPtrInput `pulumi:"cleanupPolicy"`
	CompressionType    pulumi.StringPtrInput `pulumi:"compressionType"`
	DeleteRetentionMs  pulumi.IntPtrInput    `pulumi:"deleteRetentionMs"`
	FileDeleteDelayMs  pulumi.IntPtrInput    `pulumi:"fileDeleteDelayMs"`
	FlushMessages      pulumi.IntPtrInput    `pulumi:"flushMessages"`
	FlushMs            pulumi.IntPtrInput    `pulumi:"flushMs"`
	MaxMessageBytes    pulumi.IntPtrInput    `pulumi:"maxMessageBytes"`
	MinCompactionLagMs pulumi.IntPtrInput    `pulumi:"minCompactionLagMs"`
	MinInsyncReplicas  pulumi.IntPtrInput    `pulumi:"minInsyncReplicas"`
	Preallocate        pulumi.BoolPtrInput   `pulumi:"preallocate"`
	RetentionBytes     pulumi.IntPtrInput    `pulumi:"retentionBytes"`
	RetentionMs        pulumi.IntPtrInput    `pulumi:"retentionMs"`
	SegmentBytes       pulumi.IntPtrInput    `pulumi:"segmentBytes"`
}

func (MdbKafkaClusterTopicTopicConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbKafkaClusterTopicTopicConfig)(nil)).Elem()
}

func (i MdbKafkaClusterTopicTopicConfigArgs) ToMdbKafkaClusterTopicTopicConfigOutput() MdbKafkaClusterTopicTopicConfigOutput {
	return i.ToMdbKafkaClusterTopicTopicConfigOutputWithContext(context.Background())
}

func (i MdbKafkaClusterTopicTopicConfigArgs) ToMdbKafkaClusterTopicTopicConfigOutputWithContext(ctx context.Context) MdbKafkaClusterTopicTopicConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterTopicTopicConfigOutput)
}

func (i MdbKafkaClusterTopicTopicConfigArgs) ToMdbKafkaClusterTopicTopicConfigPtrOutput() MdbKafkaClusterTopicTopicConfigPtrOutput {
	return i.ToMdbKafkaClusterTopicTopicConfigPtrOutputWithContext(context.Background())
}

func (i MdbKafkaClusterTopicTopicConfigArgs) ToMdbKafkaClusterTopicTopicConfigPtrOutputWithContext(ctx context.Context) MdbKafkaClusterTopicTopicConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterTopicTopicConfigOutput).ToMdbKafkaClusterTopicTopicConfigPtrOutputWithContext(ctx)
}

// MdbKafkaClusterTopicTopicConfigPtrInput is an input type that accepts MdbKafkaClusterTopicTopicConfigArgs, MdbKafkaClusterTopicTopicConfigPtr and MdbKafkaClusterTopicTopicConfigPtrOutput values.
// You can construct a concrete instance of `MdbKafkaClusterTopicTopicConfigPtrInput` via:
//
//          MdbKafkaClusterTopicTopicConfigArgs{...}
//
//  or:
//
//          nil
type MdbKafkaClusterTopicTopicConfigPtrInput interface {
	pulumi.Input

	ToMdbKafkaClusterTopicTopicConfigPtrOutput() MdbKafkaClusterTopicTopicConfigPtrOutput
	ToMdbKafkaClusterTopicTopicConfigPtrOutputWithContext(context.Context) MdbKafkaClusterTopicTopicConfigPtrOutput
}

type mdbKafkaClusterTopicTopicConfigPtrType MdbKafkaClusterTopicTopicConfigArgs

func MdbKafkaClusterTopicTopicConfigPtr(v *MdbKafkaClusterTopicTopicConfigArgs) MdbKafkaClusterTopicTopicConfigPtrInput {
	return (*mdbKafkaClusterTopicTopicConfigPtrType)(v)
}

func (*mdbKafkaClusterTopicTopicConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbKafkaClusterTopicTopicConfig)(nil)).Elem()
}

func (i *mdbKafkaClusterTopicTopicConfigPtrType) ToMdbKafkaClusterTopicTopicConfigPtrOutput() MdbKafkaClusterTopicTopicConfigPtrOutput {
	return i.ToMdbKafkaClusterTopicTopicConfigPtrOutputWithContext(context.Background())
}

func (i *mdbKafkaClusterTopicTopicConfigPtrType) ToMdbKafkaClusterTopicTopicConfigPtrOutputWithContext(ctx context.Context) MdbKafkaClusterTopicTopicConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterTopicTopicConfigPtrOutput)
}

type MdbKafkaClusterTopicTopicConfigOutput struct{ *pulumi.OutputState }

func (MdbKafkaClusterTopicTopicConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbKafkaClusterTopicTopicConfig)(nil)).Elem()
}

func (o MdbKafkaClusterTopicTopicConfigOutput) ToMdbKafkaClusterTopicTopicConfigOutput() MdbKafkaClusterTopicTopicConfigOutput {
	return o
}

func (o MdbKafkaClusterTopicTopicConfigOutput) ToMdbKafkaClusterTopicTopicConfigOutputWithContext(ctx context.Context) MdbKafkaClusterTopicTopicConfigOutput {
	return o
}

func (o MdbKafkaClusterTopicTopicConfigOutput) ToMdbKafkaClusterTopicTopicConfigPtrOutput() MdbKafkaClusterTopicTopicConfigPtrOutput {
	return o.ToMdbKafkaClusterTopicTopicConfigPtrOutputWithContext(context.Background())
}

func (o MdbKafkaClusterTopicTopicConfigOutput) ToMdbKafkaClusterTopicTopicConfigPtrOutputWithContext(ctx context.Context) MdbKafkaClusterTopicTopicConfigPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterTopicTopicConfig) *MdbKafkaClusterTopicTopicConfig {
		return &v
	}).(MdbKafkaClusterTopicTopicConfigPtrOutput)
}
func (o MdbKafkaClusterTopicTopicConfigOutput) CleanupPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterTopicTopicConfig) *string { return v.CleanupPolicy }).(pulumi.StringPtrOutput)
}

func (o MdbKafkaClusterTopicTopicConfigOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterTopicTopicConfig) *string { return v.CompressionType }).(pulumi.StringPtrOutput)
}

func (o MdbKafkaClusterTopicTopicConfigOutput) DeleteRetentionMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterTopicTopicConfig) *int { return v.DeleteRetentionMs }).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterTopicTopicConfigOutput) FileDeleteDelayMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterTopicTopicConfig) *int { return v.FileDeleteDelayMs }).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterTopicTopicConfigOutput) FlushMessages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterTopicTopicConfig) *int { return v.FlushMessages }).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterTopicTopicConfigOutput) FlushMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterTopicTopicConfig) *int { return v.FlushMs }).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterTopicTopicConfigOutput) MaxMessageBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterTopicTopicConfig) *int { return v.MaxMessageBytes }).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterTopicTopicConfigOutput) MinCompactionLagMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterTopicTopicConfig) *int { return v.MinCompactionLagMs }).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterTopicTopicConfigOutput) MinInsyncReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterTopicTopicConfig) *int { return v.MinInsyncReplicas }).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterTopicTopicConfigOutput) Preallocate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterTopicTopicConfig) *bool { return v.Preallocate }).(pulumi.BoolPtrOutput)
}

func (o MdbKafkaClusterTopicTopicConfigOutput) RetentionBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterTopicTopicConfig) *int { return v.RetentionBytes }).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterTopicTopicConfigOutput) RetentionMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterTopicTopicConfig) *int { return v.RetentionMs }).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterTopicTopicConfigOutput) SegmentBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbKafkaClusterTopicTopicConfig) *int { return v.SegmentBytes }).(pulumi.IntPtrOutput)
}

type MdbKafkaClusterTopicTopicConfigPtrOutput struct{ *pulumi.OutputState }

func (MdbKafkaClusterTopicTopicConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbKafkaClusterTopicTopicConfig)(nil)).Elem()
}

func (o MdbKafkaClusterTopicTopicConfigPtrOutput) ToMdbKafkaClusterTopicTopicConfigPtrOutput() MdbKafkaClusterTopicTopicConfigPtrOutput {
	return o
}

func (o MdbKafkaClusterTopicTopicConfigPtrOutput) ToMdbKafkaClusterTopicTopicConfigPtrOutputWithContext(ctx context.Context) MdbKafkaClusterTopicTopicConfigPtrOutput {
	return o
}

func (o MdbKafkaClusterTopicTopicConfigPtrOutput) Elem() MdbKafkaClusterTopicTopicConfigOutput {
	return o.ApplyT(func(v *MdbKafkaClusterTopicTopicConfig) MdbKafkaClusterTopicTopicConfig { return *v }).(MdbKafkaClusterTopicTopicConfigOutput)
}

func (o MdbKafkaClusterTopicTopicConfigPtrOutput) CleanupPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterTopicTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.CleanupPolicy
	}).(pulumi.StringPtrOutput)
}

func (o MdbKafkaClusterTopicTopicConfigPtrOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterTopicTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.CompressionType
	}).(pulumi.StringPtrOutput)
}

func (o MdbKafkaClusterTopicTopicConfigPtrOutput) DeleteRetentionMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterTopicTopicConfig) *int {
		if v == nil {
			return nil
		}
		return v.DeleteRetentionMs
	}).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterTopicTopicConfigPtrOutput) FileDeleteDelayMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterTopicTopicConfig) *int {
		if v == nil {
			return nil
		}
		return v.FileDeleteDelayMs
	}).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterTopicTopicConfigPtrOutput) FlushMessages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterTopicTopicConfig) *int {
		if v == nil {
			return nil
		}
		return v.FlushMessages
	}).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterTopicTopicConfigPtrOutput) FlushMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterTopicTopicConfig) *int {
		if v == nil {
			return nil
		}
		return v.FlushMs
	}).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterTopicTopicConfigPtrOutput) MaxMessageBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterTopicTopicConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxMessageBytes
	}).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterTopicTopicConfigPtrOutput) MinCompactionLagMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterTopicTopicConfig) *int {
		if v == nil {
			return nil
		}
		return v.MinCompactionLagMs
	}).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterTopicTopicConfigPtrOutput) MinInsyncReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterTopicTopicConfig) *int {
		if v == nil {
			return nil
		}
		return v.MinInsyncReplicas
	}).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterTopicTopicConfigPtrOutput) Preallocate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterTopicTopicConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Preallocate
	}).(pulumi.BoolPtrOutput)
}

func (o MdbKafkaClusterTopicTopicConfigPtrOutput) RetentionBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterTopicTopicConfig) *int {
		if v == nil {
			return nil
		}
		return v.RetentionBytes
	}).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterTopicTopicConfigPtrOutput) RetentionMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterTopicTopicConfig) *int {
		if v == nil {
			return nil
		}
		return v.RetentionMs
	}).(pulumi.IntPtrOutput)
}

func (o MdbKafkaClusterTopicTopicConfigPtrOutput) SegmentBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbKafkaClusterTopicTopicConfig) *int {
		if v == nil {
			return nil
		}
		return v.SegmentBytes
	}).(pulumi.IntPtrOutput)
}

type MdbKafkaClusterUser struct {
	// The name of the topic.
	Name string `pulumi:"name"`
	// The password of the user.
	Password string `pulumi:"password"`
	// Set of permissions granted to the user. The structure is documented below.
	Permissions []MdbKafkaClusterUserPermission `pulumi:"permissions"`
}

// MdbKafkaClusterUserInput is an input type that accepts MdbKafkaClusterUserArgs and MdbKafkaClusterUserOutput values.
// You can construct a concrete instance of `MdbKafkaClusterUserInput` via:
//
//          MdbKafkaClusterUserArgs{...}
type MdbKafkaClusterUserInput interface {
	pulumi.Input

	ToMdbKafkaClusterUserOutput() MdbKafkaClusterUserOutput
	ToMdbKafkaClusterUserOutputWithContext(context.Context) MdbKafkaClusterUserOutput
}

type MdbKafkaClusterUserArgs struct {
	// The name of the topic.
	Name pulumi.StringInput `pulumi:"name"`
	// The password of the user.
	Password pulumi.StringInput `pulumi:"password"`
	// Set of permissions granted to the user. The structure is documented below.
	Permissions MdbKafkaClusterUserPermissionArrayInput `pulumi:"permissions"`
}

func (MdbKafkaClusterUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbKafkaClusterUser)(nil)).Elem()
}

func (i MdbKafkaClusterUserArgs) ToMdbKafkaClusterUserOutput() MdbKafkaClusterUserOutput {
	return i.ToMdbKafkaClusterUserOutputWithContext(context.Background())
}

func (i MdbKafkaClusterUserArgs) ToMdbKafkaClusterUserOutputWithContext(ctx context.Context) MdbKafkaClusterUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterUserOutput)
}

// MdbKafkaClusterUserArrayInput is an input type that accepts MdbKafkaClusterUserArray and MdbKafkaClusterUserArrayOutput values.
// You can construct a concrete instance of `MdbKafkaClusterUserArrayInput` via:
//
//          MdbKafkaClusterUserArray{ MdbKafkaClusterUserArgs{...} }
type MdbKafkaClusterUserArrayInput interface {
	pulumi.Input

	ToMdbKafkaClusterUserArrayOutput() MdbKafkaClusterUserArrayOutput
	ToMdbKafkaClusterUserArrayOutputWithContext(context.Context) MdbKafkaClusterUserArrayOutput
}

type MdbKafkaClusterUserArray []MdbKafkaClusterUserInput

func (MdbKafkaClusterUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbKafkaClusterUser)(nil)).Elem()
}

func (i MdbKafkaClusterUserArray) ToMdbKafkaClusterUserArrayOutput() MdbKafkaClusterUserArrayOutput {
	return i.ToMdbKafkaClusterUserArrayOutputWithContext(context.Background())
}

func (i MdbKafkaClusterUserArray) ToMdbKafkaClusterUserArrayOutputWithContext(ctx context.Context) MdbKafkaClusterUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterUserArrayOutput)
}

type MdbKafkaClusterUserOutput struct{ *pulumi.OutputState }

func (MdbKafkaClusterUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbKafkaClusterUser)(nil)).Elem()
}

func (o MdbKafkaClusterUserOutput) ToMdbKafkaClusterUserOutput() MdbKafkaClusterUserOutput {
	return o
}

func (o MdbKafkaClusterUserOutput) ToMdbKafkaClusterUserOutputWithContext(ctx context.Context) MdbKafkaClusterUserOutput {
	return o
}

// The name of the topic.
func (o MdbKafkaClusterUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MdbKafkaClusterUser) string { return v.Name }).(pulumi.StringOutput)
}

// The password of the user.
func (o MdbKafkaClusterUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v MdbKafkaClusterUser) string { return v.Password }).(pulumi.StringOutput)
}

// Set of permissions granted to the user. The structure is documented below.
func (o MdbKafkaClusterUserOutput) Permissions() MdbKafkaClusterUserPermissionArrayOutput {
	return o.ApplyT(func(v MdbKafkaClusterUser) []MdbKafkaClusterUserPermission { return v.Permissions }).(MdbKafkaClusterUserPermissionArrayOutput)
}

type MdbKafkaClusterUserArrayOutput struct{ *pulumi.OutputState }

func (MdbKafkaClusterUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbKafkaClusterUser)(nil)).Elem()
}

func (o MdbKafkaClusterUserArrayOutput) ToMdbKafkaClusterUserArrayOutput() MdbKafkaClusterUserArrayOutput {
	return o
}

func (o MdbKafkaClusterUserArrayOutput) ToMdbKafkaClusterUserArrayOutputWithContext(ctx context.Context) MdbKafkaClusterUserArrayOutput {
	return o
}

func (o MdbKafkaClusterUserArrayOutput) Index(i pulumi.IntInput) MdbKafkaClusterUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbKafkaClusterUser {
		return vs[0].([]MdbKafkaClusterUser)[vs[1].(int)]
	}).(MdbKafkaClusterUserOutput)
}

type MdbKafkaClusterUserPermission struct {
	// The role type to grant to the topic.
	Role string `pulumi:"role"`
	// The name of the topic that the permission grants access to.
	TopicName string `pulumi:"topicName"`
}

// MdbKafkaClusterUserPermissionInput is an input type that accepts MdbKafkaClusterUserPermissionArgs and MdbKafkaClusterUserPermissionOutput values.
// You can construct a concrete instance of `MdbKafkaClusterUserPermissionInput` via:
//
//          MdbKafkaClusterUserPermissionArgs{...}
type MdbKafkaClusterUserPermissionInput interface {
	pulumi.Input

	ToMdbKafkaClusterUserPermissionOutput() MdbKafkaClusterUserPermissionOutput
	ToMdbKafkaClusterUserPermissionOutputWithContext(context.Context) MdbKafkaClusterUserPermissionOutput
}

type MdbKafkaClusterUserPermissionArgs struct {
	// The role type to grant to the topic.
	Role pulumi.StringInput `pulumi:"role"`
	// The name of the topic that the permission grants access to.
	TopicName pulumi.StringInput `pulumi:"topicName"`
}

func (MdbKafkaClusterUserPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbKafkaClusterUserPermission)(nil)).Elem()
}

func (i MdbKafkaClusterUserPermissionArgs) ToMdbKafkaClusterUserPermissionOutput() MdbKafkaClusterUserPermissionOutput {
	return i.ToMdbKafkaClusterUserPermissionOutputWithContext(context.Background())
}

func (i MdbKafkaClusterUserPermissionArgs) ToMdbKafkaClusterUserPermissionOutputWithContext(ctx context.Context) MdbKafkaClusterUserPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterUserPermissionOutput)
}

// MdbKafkaClusterUserPermissionArrayInput is an input type that accepts MdbKafkaClusterUserPermissionArray and MdbKafkaClusterUserPermissionArrayOutput values.
// You can construct a concrete instance of `MdbKafkaClusterUserPermissionArrayInput` via:
//
//          MdbKafkaClusterUserPermissionArray{ MdbKafkaClusterUserPermissionArgs{...} }
type MdbKafkaClusterUserPermissionArrayInput interface {
	pulumi.Input

	ToMdbKafkaClusterUserPermissionArrayOutput() MdbKafkaClusterUserPermissionArrayOutput
	ToMdbKafkaClusterUserPermissionArrayOutputWithContext(context.Context) MdbKafkaClusterUserPermissionArrayOutput
}

type MdbKafkaClusterUserPermissionArray []MdbKafkaClusterUserPermissionInput

func (MdbKafkaClusterUserPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbKafkaClusterUserPermission)(nil)).Elem()
}

func (i MdbKafkaClusterUserPermissionArray) ToMdbKafkaClusterUserPermissionArrayOutput() MdbKafkaClusterUserPermissionArrayOutput {
	return i.ToMdbKafkaClusterUserPermissionArrayOutputWithContext(context.Background())
}

func (i MdbKafkaClusterUserPermissionArray) ToMdbKafkaClusterUserPermissionArrayOutputWithContext(ctx context.Context) MdbKafkaClusterUserPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbKafkaClusterUserPermissionArrayOutput)
}

type MdbKafkaClusterUserPermissionOutput struct{ *pulumi.OutputState }

func (MdbKafkaClusterUserPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbKafkaClusterUserPermission)(nil)).Elem()
}

func (o MdbKafkaClusterUserPermissionOutput) ToMdbKafkaClusterUserPermissionOutput() MdbKafkaClusterUserPermissionOutput {
	return o
}

func (o MdbKafkaClusterUserPermissionOutput) ToMdbKafkaClusterUserPermissionOutputWithContext(ctx context.Context) MdbKafkaClusterUserPermissionOutput {
	return o
}

// The role type to grant to the topic.
func (o MdbKafkaClusterUserPermissionOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v MdbKafkaClusterUserPermission) string { return v.Role }).(pulumi.StringOutput)
}

// The name of the topic that the permission grants access to.
func (o MdbKafkaClusterUserPermissionOutput) TopicName() pulumi.StringOutput {
	return o.ApplyT(func(v MdbKafkaClusterUserPermission) string { return v.TopicName }).(pulumi.StringOutput)
}

type MdbKafkaClusterUserPermissionArrayOutput struct{ *pulumi.OutputState }

func (MdbKafkaClusterUserPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbKafkaClusterUserPermission)(nil)).Elem()
}

func (o MdbKafkaClusterUserPermissionArrayOutput) ToMdbKafkaClusterUserPermissionArrayOutput() MdbKafkaClusterUserPermissionArrayOutput {
	return o
}

func (o MdbKafkaClusterUserPermissionArrayOutput) ToMdbKafkaClusterUserPermissionArrayOutputWithContext(ctx context.Context) MdbKafkaClusterUserPermissionArrayOutput {
	return o
}

func (o MdbKafkaClusterUserPermissionArrayOutput) Index(i pulumi.IntInput) MdbKafkaClusterUserPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbKafkaClusterUserPermission {
		return vs[0].([]MdbKafkaClusterUserPermission)[vs[1].(int)]
	}).(MdbKafkaClusterUserPermissionOutput)
}

type MdbMongodbClusterClusterConfig struct {
	// Shows whether cluster has access to data lens. The structure is documented below.
	Access *MdbMongodbClusterClusterConfigAccess `pulumi:"access"`
	// Time to start the daily backup, in the UTC timezone. The structure is documented below.
	BackupWindowStart *MdbMongodbClusterClusterConfigBackupWindowStart `pulumi:"backupWindowStart"`
	// Feature compatibility version of MongoDB. If not provided version is taken. Can be either `4.4`, `4.2`, `4.0` and `3.6`.
	FeatureCompatibilityVersion *string `pulumi:"featureCompatibilityVersion"`
	// Version of MongoDB (either 4.4, 4.2, 4.0 or 3.6).
	Version string `pulumi:"version"`
}

// MdbMongodbClusterClusterConfigInput is an input type that accepts MdbMongodbClusterClusterConfigArgs and MdbMongodbClusterClusterConfigOutput values.
// You can construct a concrete instance of `MdbMongodbClusterClusterConfigInput` via:
//
//          MdbMongodbClusterClusterConfigArgs{...}
type MdbMongodbClusterClusterConfigInput interface {
	pulumi.Input

	ToMdbMongodbClusterClusterConfigOutput() MdbMongodbClusterClusterConfigOutput
	ToMdbMongodbClusterClusterConfigOutputWithContext(context.Context) MdbMongodbClusterClusterConfigOutput
}

type MdbMongodbClusterClusterConfigArgs struct {
	// Shows whether cluster has access to data lens. The structure is documented below.
	Access MdbMongodbClusterClusterConfigAccessPtrInput `pulumi:"access"`
	// Time to start the daily backup, in the UTC timezone. The structure is documented below.
	BackupWindowStart MdbMongodbClusterClusterConfigBackupWindowStartPtrInput `pulumi:"backupWindowStart"`
	// Feature compatibility version of MongoDB. If not provided version is taken. Can be either `4.4`, `4.2`, `4.0` and `3.6`.
	FeatureCompatibilityVersion pulumi.StringPtrInput `pulumi:"featureCompatibilityVersion"`
	// Version of MongoDB (either 4.4, 4.2, 4.0 or 3.6).
	Version pulumi.StringInput `pulumi:"version"`
}

func (MdbMongodbClusterClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMongodbClusterClusterConfig)(nil)).Elem()
}

func (i MdbMongodbClusterClusterConfigArgs) ToMdbMongodbClusterClusterConfigOutput() MdbMongodbClusterClusterConfigOutput {
	return i.ToMdbMongodbClusterClusterConfigOutputWithContext(context.Background())
}

func (i MdbMongodbClusterClusterConfigArgs) ToMdbMongodbClusterClusterConfigOutputWithContext(ctx context.Context) MdbMongodbClusterClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMongodbClusterClusterConfigOutput)
}

func (i MdbMongodbClusterClusterConfigArgs) ToMdbMongodbClusterClusterConfigPtrOutput() MdbMongodbClusterClusterConfigPtrOutput {
	return i.ToMdbMongodbClusterClusterConfigPtrOutputWithContext(context.Background())
}

func (i MdbMongodbClusterClusterConfigArgs) ToMdbMongodbClusterClusterConfigPtrOutputWithContext(ctx context.Context) MdbMongodbClusterClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMongodbClusterClusterConfigOutput).ToMdbMongodbClusterClusterConfigPtrOutputWithContext(ctx)
}

// MdbMongodbClusterClusterConfigPtrInput is an input type that accepts MdbMongodbClusterClusterConfigArgs, MdbMongodbClusterClusterConfigPtr and MdbMongodbClusterClusterConfigPtrOutput values.
// You can construct a concrete instance of `MdbMongodbClusterClusterConfigPtrInput` via:
//
//          MdbMongodbClusterClusterConfigArgs{...}
//
//  or:
//
//          nil
type MdbMongodbClusterClusterConfigPtrInput interface {
	pulumi.Input

	ToMdbMongodbClusterClusterConfigPtrOutput() MdbMongodbClusterClusterConfigPtrOutput
	ToMdbMongodbClusterClusterConfigPtrOutputWithContext(context.Context) MdbMongodbClusterClusterConfigPtrOutput
}

type mdbMongodbClusterClusterConfigPtrType MdbMongodbClusterClusterConfigArgs

func MdbMongodbClusterClusterConfigPtr(v *MdbMongodbClusterClusterConfigArgs) MdbMongodbClusterClusterConfigPtrInput {
	return (*mdbMongodbClusterClusterConfigPtrType)(v)
}

func (*mdbMongodbClusterClusterConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbMongodbClusterClusterConfig)(nil)).Elem()
}

func (i *mdbMongodbClusterClusterConfigPtrType) ToMdbMongodbClusterClusterConfigPtrOutput() MdbMongodbClusterClusterConfigPtrOutput {
	return i.ToMdbMongodbClusterClusterConfigPtrOutputWithContext(context.Background())
}

func (i *mdbMongodbClusterClusterConfigPtrType) ToMdbMongodbClusterClusterConfigPtrOutputWithContext(ctx context.Context) MdbMongodbClusterClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMongodbClusterClusterConfigPtrOutput)
}

type MdbMongodbClusterClusterConfigOutput struct{ *pulumi.OutputState }

func (MdbMongodbClusterClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMongodbClusterClusterConfig)(nil)).Elem()
}

func (o MdbMongodbClusterClusterConfigOutput) ToMdbMongodbClusterClusterConfigOutput() MdbMongodbClusterClusterConfigOutput {
	return o
}

func (o MdbMongodbClusterClusterConfigOutput) ToMdbMongodbClusterClusterConfigOutputWithContext(ctx context.Context) MdbMongodbClusterClusterConfigOutput {
	return o
}

func (o MdbMongodbClusterClusterConfigOutput) ToMdbMongodbClusterClusterConfigPtrOutput() MdbMongodbClusterClusterConfigPtrOutput {
	return o.ToMdbMongodbClusterClusterConfigPtrOutputWithContext(context.Background())
}

func (o MdbMongodbClusterClusterConfigOutput) ToMdbMongodbClusterClusterConfigPtrOutputWithContext(ctx context.Context) MdbMongodbClusterClusterConfigPtrOutput {
	return o.ApplyT(func(v MdbMongodbClusterClusterConfig) *MdbMongodbClusterClusterConfig {
		return &v
	}).(MdbMongodbClusterClusterConfigPtrOutput)
}

// Shows whether cluster has access to data lens. The structure is documented below.
func (o MdbMongodbClusterClusterConfigOutput) Access() MdbMongodbClusterClusterConfigAccessPtrOutput {
	return o.ApplyT(func(v MdbMongodbClusterClusterConfig) *MdbMongodbClusterClusterConfigAccess { return v.Access }).(MdbMongodbClusterClusterConfigAccessPtrOutput)
}

// Time to start the daily backup, in the UTC timezone. The structure is documented below.
func (o MdbMongodbClusterClusterConfigOutput) BackupWindowStart() MdbMongodbClusterClusterConfigBackupWindowStartPtrOutput {
	return o.ApplyT(func(v MdbMongodbClusterClusterConfig) *MdbMongodbClusterClusterConfigBackupWindowStart {
		return v.BackupWindowStart
	}).(MdbMongodbClusterClusterConfigBackupWindowStartPtrOutput)
}

// Feature compatibility version of MongoDB. If not provided version is taken. Can be either `4.4`, `4.2`, `4.0` and `3.6`.
func (o MdbMongodbClusterClusterConfigOutput) FeatureCompatibilityVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbMongodbClusterClusterConfig) *string { return v.FeatureCompatibilityVersion }).(pulumi.StringPtrOutput)
}

// Version of MongoDB (either 4.4, 4.2, 4.0 or 3.6).
func (o MdbMongodbClusterClusterConfigOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v MdbMongodbClusterClusterConfig) string { return v.Version }).(pulumi.StringOutput)
}

type MdbMongodbClusterClusterConfigPtrOutput struct{ *pulumi.OutputState }

func (MdbMongodbClusterClusterConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbMongodbClusterClusterConfig)(nil)).Elem()
}

func (o MdbMongodbClusterClusterConfigPtrOutput) ToMdbMongodbClusterClusterConfigPtrOutput() MdbMongodbClusterClusterConfigPtrOutput {
	return o
}

func (o MdbMongodbClusterClusterConfigPtrOutput) ToMdbMongodbClusterClusterConfigPtrOutputWithContext(ctx context.Context) MdbMongodbClusterClusterConfigPtrOutput {
	return o
}

func (o MdbMongodbClusterClusterConfigPtrOutput) Elem() MdbMongodbClusterClusterConfigOutput {
	return o.ApplyT(func(v *MdbMongodbClusterClusterConfig) MdbMongodbClusterClusterConfig { return *v }).(MdbMongodbClusterClusterConfigOutput)
}

// Shows whether cluster has access to data lens. The structure is documented below.
func (o MdbMongodbClusterClusterConfigPtrOutput) Access() MdbMongodbClusterClusterConfigAccessPtrOutput {
	return o.ApplyT(func(v *MdbMongodbClusterClusterConfig) *MdbMongodbClusterClusterConfigAccess {
		if v == nil {
			return nil
		}
		return v.Access
	}).(MdbMongodbClusterClusterConfigAccessPtrOutput)
}

// Time to start the daily backup, in the UTC timezone. The structure is documented below.
func (o MdbMongodbClusterClusterConfigPtrOutput) BackupWindowStart() MdbMongodbClusterClusterConfigBackupWindowStartPtrOutput {
	return o.ApplyT(func(v *MdbMongodbClusterClusterConfig) *MdbMongodbClusterClusterConfigBackupWindowStart {
		if v == nil {
			return nil
		}
		return v.BackupWindowStart
	}).(MdbMongodbClusterClusterConfigBackupWindowStartPtrOutput)
}

// Feature compatibility version of MongoDB. If not provided version is taken. Can be either `4.4`, `4.2`, `4.0` and `3.6`.
func (o MdbMongodbClusterClusterConfigPtrOutput) FeatureCompatibilityVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbMongodbClusterClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.FeatureCompatibilityVersion
	}).(pulumi.StringPtrOutput)
}

// Version of MongoDB (either 4.4, 4.2, 4.0 or 3.6).
func (o MdbMongodbClusterClusterConfigPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbMongodbClusterClusterConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type MdbMongodbClusterClusterConfigAccess struct {
	// Allow access for DataLens.
	DataLens *bool `pulumi:"dataLens"`
}

// MdbMongodbClusterClusterConfigAccessInput is an input type that accepts MdbMongodbClusterClusterConfigAccessArgs and MdbMongodbClusterClusterConfigAccessOutput values.
// You can construct a concrete instance of `MdbMongodbClusterClusterConfigAccessInput` via:
//
//          MdbMongodbClusterClusterConfigAccessArgs{...}
type MdbMongodbClusterClusterConfigAccessInput interface {
	pulumi.Input

	ToMdbMongodbClusterClusterConfigAccessOutput() MdbMongodbClusterClusterConfigAccessOutput
	ToMdbMongodbClusterClusterConfigAccessOutputWithContext(context.Context) MdbMongodbClusterClusterConfigAccessOutput
}

type MdbMongodbClusterClusterConfigAccessArgs struct {
	// Allow access for DataLens.
	DataLens pulumi.BoolPtrInput `pulumi:"dataLens"`
}

func (MdbMongodbClusterClusterConfigAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMongodbClusterClusterConfigAccess)(nil)).Elem()
}

func (i MdbMongodbClusterClusterConfigAccessArgs) ToMdbMongodbClusterClusterConfigAccessOutput() MdbMongodbClusterClusterConfigAccessOutput {
	return i.ToMdbMongodbClusterClusterConfigAccessOutputWithContext(context.Background())
}

func (i MdbMongodbClusterClusterConfigAccessArgs) ToMdbMongodbClusterClusterConfigAccessOutputWithContext(ctx context.Context) MdbMongodbClusterClusterConfigAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMongodbClusterClusterConfigAccessOutput)
}

func (i MdbMongodbClusterClusterConfigAccessArgs) ToMdbMongodbClusterClusterConfigAccessPtrOutput() MdbMongodbClusterClusterConfigAccessPtrOutput {
	return i.ToMdbMongodbClusterClusterConfigAccessPtrOutputWithContext(context.Background())
}

func (i MdbMongodbClusterClusterConfigAccessArgs) ToMdbMongodbClusterClusterConfigAccessPtrOutputWithContext(ctx context.Context) MdbMongodbClusterClusterConfigAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMongodbClusterClusterConfigAccessOutput).ToMdbMongodbClusterClusterConfigAccessPtrOutputWithContext(ctx)
}

// MdbMongodbClusterClusterConfigAccessPtrInput is an input type that accepts MdbMongodbClusterClusterConfigAccessArgs, MdbMongodbClusterClusterConfigAccessPtr and MdbMongodbClusterClusterConfigAccessPtrOutput values.
// You can construct a concrete instance of `MdbMongodbClusterClusterConfigAccessPtrInput` via:
//
//          MdbMongodbClusterClusterConfigAccessArgs{...}
//
//  or:
//
//          nil
type MdbMongodbClusterClusterConfigAccessPtrInput interface {
	pulumi.Input

	ToMdbMongodbClusterClusterConfigAccessPtrOutput() MdbMongodbClusterClusterConfigAccessPtrOutput
	ToMdbMongodbClusterClusterConfigAccessPtrOutputWithContext(context.Context) MdbMongodbClusterClusterConfigAccessPtrOutput
}

type mdbMongodbClusterClusterConfigAccessPtrType MdbMongodbClusterClusterConfigAccessArgs

func MdbMongodbClusterClusterConfigAccessPtr(v *MdbMongodbClusterClusterConfigAccessArgs) MdbMongodbClusterClusterConfigAccessPtrInput {
	return (*mdbMongodbClusterClusterConfigAccessPtrType)(v)
}

func (*mdbMongodbClusterClusterConfigAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbMongodbClusterClusterConfigAccess)(nil)).Elem()
}

func (i *mdbMongodbClusterClusterConfigAccessPtrType) ToMdbMongodbClusterClusterConfigAccessPtrOutput() MdbMongodbClusterClusterConfigAccessPtrOutput {
	return i.ToMdbMongodbClusterClusterConfigAccessPtrOutputWithContext(context.Background())
}

func (i *mdbMongodbClusterClusterConfigAccessPtrType) ToMdbMongodbClusterClusterConfigAccessPtrOutputWithContext(ctx context.Context) MdbMongodbClusterClusterConfigAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMongodbClusterClusterConfigAccessPtrOutput)
}

type MdbMongodbClusterClusterConfigAccessOutput struct{ *pulumi.OutputState }

func (MdbMongodbClusterClusterConfigAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMongodbClusterClusterConfigAccess)(nil)).Elem()
}

func (o MdbMongodbClusterClusterConfigAccessOutput) ToMdbMongodbClusterClusterConfigAccessOutput() MdbMongodbClusterClusterConfigAccessOutput {
	return o
}

func (o MdbMongodbClusterClusterConfigAccessOutput) ToMdbMongodbClusterClusterConfigAccessOutputWithContext(ctx context.Context) MdbMongodbClusterClusterConfigAccessOutput {
	return o
}

func (o MdbMongodbClusterClusterConfigAccessOutput) ToMdbMongodbClusterClusterConfigAccessPtrOutput() MdbMongodbClusterClusterConfigAccessPtrOutput {
	return o.ToMdbMongodbClusterClusterConfigAccessPtrOutputWithContext(context.Background())
}

func (o MdbMongodbClusterClusterConfigAccessOutput) ToMdbMongodbClusterClusterConfigAccessPtrOutputWithContext(ctx context.Context) MdbMongodbClusterClusterConfigAccessPtrOutput {
	return o.ApplyT(func(v MdbMongodbClusterClusterConfigAccess) *MdbMongodbClusterClusterConfigAccess {
		return &v
	}).(MdbMongodbClusterClusterConfigAccessPtrOutput)
}

// Allow access for DataLens.
func (o MdbMongodbClusterClusterConfigAccessOutput) DataLens() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbMongodbClusterClusterConfigAccess) *bool { return v.DataLens }).(pulumi.BoolPtrOutput)
}

type MdbMongodbClusterClusterConfigAccessPtrOutput struct{ *pulumi.OutputState }

func (MdbMongodbClusterClusterConfigAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbMongodbClusterClusterConfigAccess)(nil)).Elem()
}

func (o MdbMongodbClusterClusterConfigAccessPtrOutput) ToMdbMongodbClusterClusterConfigAccessPtrOutput() MdbMongodbClusterClusterConfigAccessPtrOutput {
	return o
}

func (o MdbMongodbClusterClusterConfigAccessPtrOutput) ToMdbMongodbClusterClusterConfigAccessPtrOutputWithContext(ctx context.Context) MdbMongodbClusterClusterConfigAccessPtrOutput {
	return o
}

func (o MdbMongodbClusterClusterConfigAccessPtrOutput) Elem() MdbMongodbClusterClusterConfigAccessOutput {
	return o.ApplyT(func(v *MdbMongodbClusterClusterConfigAccess) MdbMongodbClusterClusterConfigAccess { return *v }).(MdbMongodbClusterClusterConfigAccessOutput)
}

// Allow access for DataLens.
func (o MdbMongodbClusterClusterConfigAccessPtrOutput) DataLens() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbMongodbClusterClusterConfigAccess) *bool {
		if v == nil {
			return nil
		}
		return v.DataLens
	}).(pulumi.BoolPtrOutput)
}

type MdbMongodbClusterClusterConfigBackupWindowStart struct {
	// The hour at which backup will be started.
	Hours *int `pulumi:"hours"`
	// The minute at which backup will be started.
	Minutes *int `pulumi:"minutes"`
}

// MdbMongodbClusterClusterConfigBackupWindowStartInput is an input type that accepts MdbMongodbClusterClusterConfigBackupWindowStartArgs and MdbMongodbClusterClusterConfigBackupWindowStartOutput values.
// You can construct a concrete instance of `MdbMongodbClusterClusterConfigBackupWindowStartInput` via:
//
//          MdbMongodbClusterClusterConfigBackupWindowStartArgs{...}
type MdbMongodbClusterClusterConfigBackupWindowStartInput interface {
	pulumi.Input

	ToMdbMongodbClusterClusterConfigBackupWindowStartOutput() MdbMongodbClusterClusterConfigBackupWindowStartOutput
	ToMdbMongodbClusterClusterConfigBackupWindowStartOutputWithContext(context.Context) MdbMongodbClusterClusterConfigBackupWindowStartOutput
}

type MdbMongodbClusterClusterConfigBackupWindowStartArgs struct {
	// The hour at which backup will be started.
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// The minute at which backup will be started.
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
}

func (MdbMongodbClusterClusterConfigBackupWindowStartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMongodbClusterClusterConfigBackupWindowStart)(nil)).Elem()
}

func (i MdbMongodbClusterClusterConfigBackupWindowStartArgs) ToMdbMongodbClusterClusterConfigBackupWindowStartOutput() MdbMongodbClusterClusterConfigBackupWindowStartOutput {
	return i.ToMdbMongodbClusterClusterConfigBackupWindowStartOutputWithContext(context.Background())
}

func (i MdbMongodbClusterClusterConfigBackupWindowStartArgs) ToMdbMongodbClusterClusterConfigBackupWindowStartOutputWithContext(ctx context.Context) MdbMongodbClusterClusterConfigBackupWindowStartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMongodbClusterClusterConfigBackupWindowStartOutput)
}

func (i MdbMongodbClusterClusterConfigBackupWindowStartArgs) ToMdbMongodbClusterClusterConfigBackupWindowStartPtrOutput() MdbMongodbClusterClusterConfigBackupWindowStartPtrOutput {
	return i.ToMdbMongodbClusterClusterConfigBackupWindowStartPtrOutputWithContext(context.Background())
}

func (i MdbMongodbClusterClusterConfigBackupWindowStartArgs) ToMdbMongodbClusterClusterConfigBackupWindowStartPtrOutputWithContext(ctx context.Context) MdbMongodbClusterClusterConfigBackupWindowStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMongodbClusterClusterConfigBackupWindowStartOutput).ToMdbMongodbClusterClusterConfigBackupWindowStartPtrOutputWithContext(ctx)
}

// MdbMongodbClusterClusterConfigBackupWindowStartPtrInput is an input type that accepts MdbMongodbClusterClusterConfigBackupWindowStartArgs, MdbMongodbClusterClusterConfigBackupWindowStartPtr and MdbMongodbClusterClusterConfigBackupWindowStartPtrOutput values.
// You can construct a concrete instance of `MdbMongodbClusterClusterConfigBackupWindowStartPtrInput` via:
//
//          MdbMongodbClusterClusterConfigBackupWindowStartArgs{...}
//
//  or:
//
//          nil
type MdbMongodbClusterClusterConfigBackupWindowStartPtrInput interface {
	pulumi.Input

	ToMdbMongodbClusterClusterConfigBackupWindowStartPtrOutput() MdbMongodbClusterClusterConfigBackupWindowStartPtrOutput
	ToMdbMongodbClusterClusterConfigBackupWindowStartPtrOutputWithContext(context.Context) MdbMongodbClusterClusterConfigBackupWindowStartPtrOutput
}

type mdbMongodbClusterClusterConfigBackupWindowStartPtrType MdbMongodbClusterClusterConfigBackupWindowStartArgs

func MdbMongodbClusterClusterConfigBackupWindowStartPtr(v *MdbMongodbClusterClusterConfigBackupWindowStartArgs) MdbMongodbClusterClusterConfigBackupWindowStartPtrInput {
	return (*mdbMongodbClusterClusterConfigBackupWindowStartPtrType)(v)
}

func (*mdbMongodbClusterClusterConfigBackupWindowStartPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbMongodbClusterClusterConfigBackupWindowStart)(nil)).Elem()
}

func (i *mdbMongodbClusterClusterConfigBackupWindowStartPtrType) ToMdbMongodbClusterClusterConfigBackupWindowStartPtrOutput() MdbMongodbClusterClusterConfigBackupWindowStartPtrOutput {
	return i.ToMdbMongodbClusterClusterConfigBackupWindowStartPtrOutputWithContext(context.Background())
}

func (i *mdbMongodbClusterClusterConfigBackupWindowStartPtrType) ToMdbMongodbClusterClusterConfigBackupWindowStartPtrOutputWithContext(ctx context.Context) MdbMongodbClusterClusterConfigBackupWindowStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMongodbClusterClusterConfigBackupWindowStartPtrOutput)
}

type MdbMongodbClusterClusterConfigBackupWindowStartOutput struct{ *pulumi.OutputState }

func (MdbMongodbClusterClusterConfigBackupWindowStartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMongodbClusterClusterConfigBackupWindowStart)(nil)).Elem()
}

func (o MdbMongodbClusterClusterConfigBackupWindowStartOutput) ToMdbMongodbClusterClusterConfigBackupWindowStartOutput() MdbMongodbClusterClusterConfigBackupWindowStartOutput {
	return o
}

func (o MdbMongodbClusterClusterConfigBackupWindowStartOutput) ToMdbMongodbClusterClusterConfigBackupWindowStartOutputWithContext(ctx context.Context) MdbMongodbClusterClusterConfigBackupWindowStartOutput {
	return o
}

func (o MdbMongodbClusterClusterConfigBackupWindowStartOutput) ToMdbMongodbClusterClusterConfigBackupWindowStartPtrOutput() MdbMongodbClusterClusterConfigBackupWindowStartPtrOutput {
	return o.ToMdbMongodbClusterClusterConfigBackupWindowStartPtrOutputWithContext(context.Background())
}

func (o MdbMongodbClusterClusterConfigBackupWindowStartOutput) ToMdbMongodbClusterClusterConfigBackupWindowStartPtrOutputWithContext(ctx context.Context) MdbMongodbClusterClusterConfigBackupWindowStartPtrOutput {
	return o.ApplyT(func(v MdbMongodbClusterClusterConfigBackupWindowStart) *MdbMongodbClusterClusterConfigBackupWindowStart {
		return &v
	}).(MdbMongodbClusterClusterConfigBackupWindowStartPtrOutput)
}

// The hour at which backup will be started.
func (o MdbMongodbClusterClusterConfigBackupWindowStartOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbMongodbClusterClusterConfigBackupWindowStart) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// The minute at which backup will be started.
func (o MdbMongodbClusterClusterConfigBackupWindowStartOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbMongodbClusterClusterConfigBackupWindowStart) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

type MdbMongodbClusterClusterConfigBackupWindowStartPtrOutput struct{ *pulumi.OutputState }

func (MdbMongodbClusterClusterConfigBackupWindowStartPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbMongodbClusterClusterConfigBackupWindowStart)(nil)).Elem()
}

func (o MdbMongodbClusterClusterConfigBackupWindowStartPtrOutput) ToMdbMongodbClusterClusterConfigBackupWindowStartPtrOutput() MdbMongodbClusterClusterConfigBackupWindowStartPtrOutput {
	return o
}

func (o MdbMongodbClusterClusterConfigBackupWindowStartPtrOutput) ToMdbMongodbClusterClusterConfigBackupWindowStartPtrOutputWithContext(ctx context.Context) MdbMongodbClusterClusterConfigBackupWindowStartPtrOutput {
	return o
}

func (o MdbMongodbClusterClusterConfigBackupWindowStartPtrOutput) Elem() MdbMongodbClusterClusterConfigBackupWindowStartOutput {
	return o.ApplyT(func(v *MdbMongodbClusterClusterConfigBackupWindowStart) MdbMongodbClusterClusterConfigBackupWindowStart {
		return *v
	}).(MdbMongodbClusterClusterConfigBackupWindowStartOutput)
}

// The hour at which backup will be started.
func (o MdbMongodbClusterClusterConfigBackupWindowStartPtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbMongodbClusterClusterConfigBackupWindowStart) *int {
		if v == nil {
			return nil
		}
		return v.Hours
	}).(pulumi.IntPtrOutput)
}

// The minute at which backup will be started.
func (o MdbMongodbClusterClusterConfigBackupWindowStartPtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbMongodbClusterClusterConfigBackupWindowStart) *int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntPtrOutput)
}

type MdbMongodbClusterDatabase struct {
	// The fully qualified domain name of the host. Computed on server side.
	Name string `pulumi:"name"`
}

// MdbMongodbClusterDatabaseInput is an input type that accepts MdbMongodbClusterDatabaseArgs and MdbMongodbClusterDatabaseOutput values.
// You can construct a concrete instance of `MdbMongodbClusterDatabaseInput` via:
//
//          MdbMongodbClusterDatabaseArgs{...}
type MdbMongodbClusterDatabaseInput interface {
	pulumi.Input

	ToMdbMongodbClusterDatabaseOutput() MdbMongodbClusterDatabaseOutput
	ToMdbMongodbClusterDatabaseOutputWithContext(context.Context) MdbMongodbClusterDatabaseOutput
}

type MdbMongodbClusterDatabaseArgs struct {
	// The fully qualified domain name of the host. Computed on server side.
	Name pulumi.StringInput `pulumi:"name"`
}

func (MdbMongodbClusterDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMongodbClusterDatabase)(nil)).Elem()
}

func (i MdbMongodbClusterDatabaseArgs) ToMdbMongodbClusterDatabaseOutput() MdbMongodbClusterDatabaseOutput {
	return i.ToMdbMongodbClusterDatabaseOutputWithContext(context.Background())
}

func (i MdbMongodbClusterDatabaseArgs) ToMdbMongodbClusterDatabaseOutputWithContext(ctx context.Context) MdbMongodbClusterDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMongodbClusterDatabaseOutput)
}

// MdbMongodbClusterDatabaseArrayInput is an input type that accepts MdbMongodbClusterDatabaseArray and MdbMongodbClusterDatabaseArrayOutput values.
// You can construct a concrete instance of `MdbMongodbClusterDatabaseArrayInput` via:
//
//          MdbMongodbClusterDatabaseArray{ MdbMongodbClusterDatabaseArgs{...} }
type MdbMongodbClusterDatabaseArrayInput interface {
	pulumi.Input

	ToMdbMongodbClusterDatabaseArrayOutput() MdbMongodbClusterDatabaseArrayOutput
	ToMdbMongodbClusterDatabaseArrayOutputWithContext(context.Context) MdbMongodbClusterDatabaseArrayOutput
}

type MdbMongodbClusterDatabaseArray []MdbMongodbClusterDatabaseInput

func (MdbMongodbClusterDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbMongodbClusterDatabase)(nil)).Elem()
}

func (i MdbMongodbClusterDatabaseArray) ToMdbMongodbClusterDatabaseArrayOutput() MdbMongodbClusterDatabaseArrayOutput {
	return i.ToMdbMongodbClusterDatabaseArrayOutputWithContext(context.Background())
}

func (i MdbMongodbClusterDatabaseArray) ToMdbMongodbClusterDatabaseArrayOutputWithContext(ctx context.Context) MdbMongodbClusterDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMongodbClusterDatabaseArrayOutput)
}

type MdbMongodbClusterDatabaseOutput struct{ *pulumi.OutputState }

func (MdbMongodbClusterDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMongodbClusterDatabase)(nil)).Elem()
}

func (o MdbMongodbClusterDatabaseOutput) ToMdbMongodbClusterDatabaseOutput() MdbMongodbClusterDatabaseOutput {
	return o
}

func (o MdbMongodbClusterDatabaseOutput) ToMdbMongodbClusterDatabaseOutputWithContext(ctx context.Context) MdbMongodbClusterDatabaseOutput {
	return o
}

// The fully qualified domain name of the host. Computed on server side.
func (o MdbMongodbClusterDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MdbMongodbClusterDatabase) string { return v.Name }).(pulumi.StringOutput)
}

type MdbMongodbClusterDatabaseArrayOutput struct{ *pulumi.OutputState }

func (MdbMongodbClusterDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbMongodbClusterDatabase)(nil)).Elem()
}

func (o MdbMongodbClusterDatabaseArrayOutput) ToMdbMongodbClusterDatabaseArrayOutput() MdbMongodbClusterDatabaseArrayOutput {
	return o
}

func (o MdbMongodbClusterDatabaseArrayOutput) ToMdbMongodbClusterDatabaseArrayOutputWithContext(ctx context.Context) MdbMongodbClusterDatabaseArrayOutput {
	return o
}

func (o MdbMongodbClusterDatabaseArrayOutput) Index(i pulumi.IntInput) MdbMongodbClusterDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbMongodbClusterDatabase {
		return vs[0].([]MdbMongodbClusterDatabase)[vs[1].(int)]
	}).(MdbMongodbClusterDatabaseOutput)
}

type MdbMongodbClusterHost struct {
	// -(Optional)  Should this host have assigned public IP assigned. Can be either `true` or `false`.
	AssignPublicIp *bool `pulumi:"assignPublicIp"`
	// The health of the host.
	Health *string `pulumi:"health"`
	// The fully qualified domain name of the host. Computed on server side.
	Name *string `pulumi:"name"`
	// The role of the cluster (either PRIMARY or SECONDARY).
	Role *string `pulumi:"role"`
	// The name of the shard to which the host belongs.
	ShardName *string `pulumi:"shardName"`
	// The ID of the subnet, to which the host belongs. The subnet must
	// be a part of the network to which the cluster belongs.
	SubnetId string `pulumi:"subnetId"`
	// type of mongo daemon which runs on this host (mongod, mongos or monogcfg). Defaults to mongod.
	Type *string `pulumi:"type"`
	// The availability zone where the MongoDB host will be created.
	// For more information see [the official documentation](https://cloud.yandex.com/docs/overview/concepts/geo-scope).
	ZoneId string `pulumi:"zoneId"`
}

// MdbMongodbClusterHostInput is an input type that accepts MdbMongodbClusterHostArgs and MdbMongodbClusterHostOutput values.
// You can construct a concrete instance of `MdbMongodbClusterHostInput` via:
//
//          MdbMongodbClusterHostArgs{...}
type MdbMongodbClusterHostInput interface {
	pulumi.Input

	ToMdbMongodbClusterHostOutput() MdbMongodbClusterHostOutput
	ToMdbMongodbClusterHostOutputWithContext(context.Context) MdbMongodbClusterHostOutput
}

type MdbMongodbClusterHostArgs struct {
	// -(Optional)  Should this host have assigned public IP assigned. Can be either `true` or `false`.
	AssignPublicIp pulumi.BoolPtrInput `pulumi:"assignPublicIp"`
	// The health of the host.
	Health pulumi.StringPtrInput `pulumi:"health"`
	// The fully qualified domain name of the host. Computed on server side.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The role of the cluster (either PRIMARY or SECONDARY).
	Role pulumi.StringPtrInput `pulumi:"role"`
	// The name of the shard to which the host belongs.
	ShardName pulumi.StringPtrInput `pulumi:"shardName"`
	// The ID of the subnet, to which the host belongs. The subnet must
	// be a part of the network to which the cluster belongs.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// type of mongo daemon which runs on this host (mongod, mongos or monogcfg). Defaults to mongod.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The availability zone where the MongoDB host will be created.
	// For more information see [the official documentation](https://cloud.yandex.com/docs/overview/concepts/geo-scope).
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (MdbMongodbClusterHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMongodbClusterHost)(nil)).Elem()
}

func (i MdbMongodbClusterHostArgs) ToMdbMongodbClusterHostOutput() MdbMongodbClusterHostOutput {
	return i.ToMdbMongodbClusterHostOutputWithContext(context.Background())
}

func (i MdbMongodbClusterHostArgs) ToMdbMongodbClusterHostOutputWithContext(ctx context.Context) MdbMongodbClusterHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMongodbClusterHostOutput)
}

// MdbMongodbClusterHostArrayInput is an input type that accepts MdbMongodbClusterHostArray and MdbMongodbClusterHostArrayOutput values.
// You can construct a concrete instance of `MdbMongodbClusterHostArrayInput` via:
//
//          MdbMongodbClusterHostArray{ MdbMongodbClusterHostArgs{...} }
type MdbMongodbClusterHostArrayInput interface {
	pulumi.Input

	ToMdbMongodbClusterHostArrayOutput() MdbMongodbClusterHostArrayOutput
	ToMdbMongodbClusterHostArrayOutputWithContext(context.Context) MdbMongodbClusterHostArrayOutput
}

type MdbMongodbClusterHostArray []MdbMongodbClusterHostInput

func (MdbMongodbClusterHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbMongodbClusterHost)(nil)).Elem()
}

func (i MdbMongodbClusterHostArray) ToMdbMongodbClusterHostArrayOutput() MdbMongodbClusterHostArrayOutput {
	return i.ToMdbMongodbClusterHostArrayOutputWithContext(context.Background())
}

func (i MdbMongodbClusterHostArray) ToMdbMongodbClusterHostArrayOutputWithContext(ctx context.Context) MdbMongodbClusterHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMongodbClusterHostArrayOutput)
}

type MdbMongodbClusterHostOutput struct{ *pulumi.OutputState }

func (MdbMongodbClusterHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMongodbClusterHost)(nil)).Elem()
}

func (o MdbMongodbClusterHostOutput) ToMdbMongodbClusterHostOutput() MdbMongodbClusterHostOutput {
	return o
}

func (o MdbMongodbClusterHostOutput) ToMdbMongodbClusterHostOutputWithContext(ctx context.Context) MdbMongodbClusterHostOutput {
	return o
}

// -(Optional)  Should this host have assigned public IP assigned. Can be either `true` or `false`.
func (o MdbMongodbClusterHostOutput) AssignPublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbMongodbClusterHost) *bool { return v.AssignPublicIp }).(pulumi.BoolPtrOutput)
}

// The health of the host.
func (o MdbMongodbClusterHostOutput) Health() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbMongodbClusterHost) *string { return v.Health }).(pulumi.StringPtrOutput)
}

// The fully qualified domain name of the host. Computed on server side.
func (o MdbMongodbClusterHostOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbMongodbClusterHost) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The role of the cluster (either PRIMARY or SECONDARY).
func (o MdbMongodbClusterHostOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbMongodbClusterHost) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// The name of the shard to which the host belongs.
func (o MdbMongodbClusterHostOutput) ShardName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbMongodbClusterHost) *string { return v.ShardName }).(pulumi.StringPtrOutput)
}

// The ID of the subnet, to which the host belongs. The subnet must
// be a part of the network to which the cluster belongs.
func (o MdbMongodbClusterHostOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v MdbMongodbClusterHost) string { return v.SubnetId }).(pulumi.StringOutput)
}

// type of mongo daemon which runs on this host (mongod, mongos or monogcfg). Defaults to mongod.
func (o MdbMongodbClusterHostOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbMongodbClusterHost) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The availability zone where the MongoDB host will be created.
// For more information see [the official documentation](https://cloud.yandex.com/docs/overview/concepts/geo-scope).
func (o MdbMongodbClusterHostOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v MdbMongodbClusterHost) string { return v.ZoneId }).(pulumi.StringOutput)
}

type MdbMongodbClusterHostArrayOutput struct{ *pulumi.OutputState }

func (MdbMongodbClusterHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbMongodbClusterHost)(nil)).Elem()
}

func (o MdbMongodbClusterHostArrayOutput) ToMdbMongodbClusterHostArrayOutput() MdbMongodbClusterHostArrayOutput {
	return o
}

func (o MdbMongodbClusterHostArrayOutput) ToMdbMongodbClusterHostArrayOutputWithContext(ctx context.Context) MdbMongodbClusterHostArrayOutput {
	return o
}

func (o MdbMongodbClusterHostArrayOutput) Index(i pulumi.IntInput) MdbMongodbClusterHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbMongodbClusterHost {
		return vs[0].([]MdbMongodbClusterHost)[vs[1].(int)]
	}).(MdbMongodbClusterHostOutput)
}

type MdbMongodbClusterResources struct {
	// Volume of the storage available to a MongoDB host, in gigabytes.
	DiskSize int `pulumi:"diskSize"`
	// Type of the storage of MongoDB hosts.
	// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-clickhouse/concepts/storage).
	DiskTypeId       string `pulumi:"diskTypeId"`
	ResourcePresetId string `pulumi:"resourcePresetId"`
}

// MdbMongodbClusterResourcesInput is an input type that accepts MdbMongodbClusterResourcesArgs and MdbMongodbClusterResourcesOutput values.
// You can construct a concrete instance of `MdbMongodbClusterResourcesInput` via:
//
//          MdbMongodbClusterResourcesArgs{...}
type MdbMongodbClusterResourcesInput interface {
	pulumi.Input

	ToMdbMongodbClusterResourcesOutput() MdbMongodbClusterResourcesOutput
	ToMdbMongodbClusterResourcesOutputWithContext(context.Context) MdbMongodbClusterResourcesOutput
}

type MdbMongodbClusterResourcesArgs struct {
	// Volume of the storage available to a MongoDB host, in gigabytes.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// Type of the storage of MongoDB hosts.
	// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-clickhouse/concepts/storage).
	DiskTypeId       pulumi.StringInput `pulumi:"diskTypeId"`
	ResourcePresetId pulumi.StringInput `pulumi:"resourcePresetId"`
}

func (MdbMongodbClusterResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMongodbClusterResources)(nil)).Elem()
}

func (i MdbMongodbClusterResourcesArgs) ToMdbMongodbClusterResourcesOutput() MdbMongodbClusterResourcesOutput {
	return i.ToMdbMongodbClusterResourcesOutputWithContext(context.Background())
}

func (i MdbMongodbClusterResourcesArgs) ToMdbMongodbClusterResourcesOutputWithContext(ctx context.Context) MdbMongodbClusterResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMongodbClusterResourcesOutput)
}

func (i MdbMongodbClusterResourcesArgs) ToMdbMongodbClusterResourcesPtrOutput() MdbMongodbClusterResourcesPtrOutput {
	return i.ToMdbMongodbClusterResourcesPtrOutputWithContext(context.Background())
}

func (i MdbMongodbClusterResourcesArgs) ToMdbMongodbClusterResourcesPtrOutputWithContext(ctx context.Context) MdbMongodbClusterResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMongodbClusterResourcesOutput).ToMdbMongodbClusterResourcesPtrOutputWithContext(ctx)
}

// MdbMongodbClusterResourcesPtrInput is an input type that accepts MdbMongodbClusterResourcesArgs, MdbMongodbClusterResourcesPtr and MdbMongodbClusterResourcesPtrOutput values.
// You can construct a concrete instance of `MdbMongodbClusterResourcesPtrInput` via:
//
//          MdbMongodbClusterResourcesArgs{...}
//
//  or:
//
//          nil
type MdbMongodbClusterResourcesPtrInput interface {
	pulumi.Input

	ToMdbMongodbClusterResourcesPtrOutput() MdbMongodbClusterResourcesPtrOutput
	ToMdbMongodbClusterResourcesPtrOutputWithContext(context.Context) MdbMongodbClusterResourcesPtrOutput
}

type mdbMongodbClusterResourcesPtrType MdbMongodbClusterResourcesArgs

func MdbMongodbClusterResourcesPtr(v *MdbMongodbClusterResourcesArgs) MdbMongodbClusterResourcesPtrInput {
	return (*mdbMongodbClusterResourcesPtrType)(v)
}

func (*mdbMongodbClusterResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbMongodbClusterResources)(nil)).Elem()
}

func (i *mdbMongodbClusterResourcesPtrType) ToMdbMongodbClusterResourcesPtrOutput() MdbMongodbClusterResourcesPtrOutput {
	return i.ToMdbMongodbClusterResourcesPtrOutputWithContext(context.Background())
}

func (i *mdbMongodbClusterResourcesPtrType) ToMdbMongodbClusterResourcesPtrOutputWithContext(ctx context.Context) MdbMongodbClusterResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMongodbClusterResourcesPtrOutput)
}

type MdbMongodbClusterResourcesOutput struct{ *pulumi.OutputState }

func (MdbMongodbClusterResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMongodbClusterResources)(nil)).Elem()
}

func (o MdbMongodbClusterResourcesOutput) ToMdbMongodbClusterResourcesOutput() MdbMongodbClusterResourcesOutput {
	return o
}

func (o MdbMongodbClusterResourcesOutput) ToMdbMongodbClusterResourcesOutputWithContext(ctx context.Context) MdbMongodbClusterResourcesOutput {
	return o
}

func (o MdbMongodbClusterResourcesOutput) ToMdbMongodbClusterResourcesPtrOutput() MdbMongodbClusterResourcesPtrOutput {
	return o.ToMdbMongodbClusterResourcesPtrOutputWithContext(context.Background())
}

func (o MdbMongodbClusterResourcesOutput) ToMdbMongodbClusterResourcesPtrOutputWithContext(ctx context.Context) MdbMongodbClusterResourcesPtrOutput {
	return o.ApplyT(func(v MdbMongodbClusterResources) *MdbMongodbClusterResources {
		return &v
	}).(MdbMongodbClusterResourcesPtrOutput)
}

// Volume of the storage available to a MongoDB host, in gigabytes.
func (o MdbMongodbClusterResourcesOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v MdbMongodbClusterResources) int { return v.DiskSize }).(pulumi.IntOutput)
}

// Type of the storage of MongoDB hosts.
// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-clickhouse/concepts/storage).
func (o MdbMongodbClusterResourcesOutput) DiskTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v MdbMongodbClusterResources) string { return v.DiskTypeId }).(pulumi.StringOutput)
}

func (o MdbMongodbClusterResourcesOutput) ResourcePresetId() pulumi.StringOutput {
	return o.ApplyT(func(v MdbMongodbClusterResources) string { return v.ResourcePresetId }).(pulumi.StringOutput)
}

type MdbMongodbClusterResourcesPtrOutput struct{ *pulumi.OutputState }

func (MdbMongodbClusterResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbMongodbClusterResources)(nil)).Elem()
}

func (o MdbMongodbClusterResourcesPtrOutput) ToMdbMongodbClusterResourcesPtrOutput() MdbMongodbClusterResourcesPtrOutput {
	return o
}

func (o MdbMongodbClusterResourcesPtrOutput) ToMdbMongodbClusterResourcesPtrOutputWithContext(ctx context.Context) MdbMongodbClusterResourcesPtrOutput {
	return o
}

func (o MdbMongodbClusterResourcesPtrOutput) Elem() MdbMongodbClusterResourcesOutput {
	return o.ApplyT(func(v *MdbMongodbClusterResources) MdbMongodbClusterResources { return *v }).(MdbMongodbClusterResourcesOutput)
}

// Volume of the storage available to a MongoDB host, in gigabytes.
func (o MdbMongodbClusterResourcesPtrOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbMongodbClusterResources) *int {
		if v == nil {
			return nil
		}
		return &v.DiskSize
	}).(pulumi.IntPtrOutput)
}

// Type of the storage of MongoDB hosts.
// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-clickhouse/concepts/storage).
func (o MdbMongodbClusterResourcesPtrOutput) DiskTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbMongodbClusterResources) *string {
		if v == nil {
			return nil
		}
		return &v.DiskTypeId
	}).(pulumi.StringPtrOutput)
}

func (o MdbMongodbClusterResourcesPtrOutput) ResourcePresetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbMongodbClusterResources) *string {
		if v == nil {
			return nil
		}
		return &v.ResourcePresetId
	}).(pulumi.StringPtrOutput)
}

type MdbMongodbClusterUser struct {
	// The fully qualified domain name of the host. Computed on server side.
	Name string `pulumi:"name"`
	// The password of the user.
	Password string `pulumi:"password"`
	// Set of permissions granted to the user. The structure is documented below.
	Permissions []MdbMongodbClusterUserPermission `pulumi:"permissions"`
}

// MdbMongodbClusterUserInput is an input type that accepts MdbMongodbClusterUserArgs and MdbMongodbClusterUserOutput values.
// You can construct a concrete instance of `MdbMongodbClusterUserInput` via:
//
//          MdbMongodbClusterUserArgs{...}
type MdbMongodbClusterUserInput interface {
	pulumi.Input

	ToMdbMongodbClusterUserOutput() MdbMongodbClusterUserOutput
	ToMdbMongodbClusterUserOutputWithContext(context.Context) MdbMongodbClusterUserOutput
}

type MdbMongodbClusterUserArgs struct {
	// The fully qualified domain name of the host. Computed on server side.
	Name pulumi.StringInput `pulumi:"name"`
	// The password of the user.
	Password pulumi.StringInput `pulumi:"password"`
	// Set of permissions granted to the user. The structure is documented below.
	Permissions MdbMongodbClusterUserPermissionArrayInput `pulumi:"permissions"`
}

func (MdbMongodbClusterUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMongodbClusterUser)(nil)).Elem()
}

func (i MdbMongodbClusterUserArgs) ToMdbMongodbClusterUserOutput() MdbMongodbClusterUserOutput {
	return i.ToMdbMongodbClusterUserOutputWithContext(context.Background())
}

func (i MdbMongodbClusterUserArgs) ToMdbMongodbClusterUserOutputWithContext(ctx context.Context) MdbMongodbClusterUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMongodbClusterUserOutput)
}

// MdbMongodbClusterUserArrayInput is an input type that accepts MdbMongodbClusterUserArray and MdbMongodbClusterUserArrayOutput values.
// You can construct a concrete instance of `MdbMongodbClusterUserArrayInput` via:
//
//          MdbMongodbClusterUserArray{ MdbMongodbClusterUserArgs{...} }
type MdbMongodbClusterUserArrayInput interface {
	pulumi.Input

	ToMdbMongodbClusterUserArrayOutput() MdbMongodbClusterUserArrayOutput
	ToMdbMongodbClusterUserArrayOutputWithContext(context.Context) MdbMongodbClusterUserArrayOutput
}

type MdbMongodbClusterUserArray []MdbMongodbClusterUserInput

func (MdbMongodbClusterUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbMongodbClusterUser)(nil)).Elem()
}

func (i MdbMongodbClusterUserArray) ToMdbMongodbClusterUserArrayOutput() MdbMongodbClusterUserArrayOutput {
	return i.ToMdbMongodbClusterUserArrayOutputWithContext(context.Background())
}

func (i MdbMongodbClusterUserArray) ToMdbMongodbClusterUserArrayOutputWithContext(ctx context.Context) MdbMongodbClusterUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMongodbClusterUserArrayOutput)
}

type MdbMongodbClusterUserOutput struct{ *pulumi.OutputState }

func (MdbMongodbClusterUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMongodbClusterUser)(nil)).Elem()
}

func (o MdbMongodbClusterUserOutput) ToMdbMongodbClusterUserOutput() MdbMongodbClusterUserOutput {
	return o
}

func (o MdbMongodbClusterUserOutput) ToMdbMongodbClusterUserOutputWithContext(ctx context.Context) MdbMongodbClusterUserOutput {
	return o
}

// The fully qualified domain name of the host. Computed on server side.
func (o MdbMongodbClusterUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MdbMongodbClusterUser) string { return v.Name }).(pulumi.StringOutput)
}

// The password of the user.
func (o MdbMongodbClusterUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v MdbMongodbClusterUser) string { return v.Password }).(pulumi.StringOutput)
}

// Set of permissions granted to the user. The structure is documented below.
func (o MdbMongodbClusterUserOutput) Permissions() MdbMongodbClusterUserPermissionArrayOutput {
	return o.ApplyT(func(v MdbMongodbClusterUser) []MdbMongodbClusterUserPermission { return v.Permissions }).(MdbMongodbClusterUserPermissionArrayOutput)
}

type MdbMongodbClusterUserArrayOutput struct{ *pulumi.OutputState }

func (MdbMongodbClusterUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbMongodbClusterUser)(nil)).Elem()
}

func (o MdbMongodbClusterUserArrayOutput) ToMdbMongodbClusterUserArrayOutput() MdbMongodbClusterUserArrayOutput {
	return o
}

func (o MdbMongodbClusterUserArrayOutput) ToMdbMongodbClusterUserArrayOutputWithContext(ctx context.Context) MdbMongodbClusterUserArrayOutput {
	return o
}

func (o MdbMongodbClusterUserArrayOutput) Index(i pulumi.IntInput) MdbMongodbClusterUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbMongodbClusterUser {
		return vs[0].([]MdbMongodbClusterUser)[vs[1].(int)]
	}).(MdbMongodbClusterUserOutput)
}

type MdbMongodbClusterUserPermission struct {
	// The name of the database that the permission grants access to.
	DatabaseName string   `pulumi:"databaseName"`
	Roles        []string `pulumi:"roles"`
}

// MdbMongodbClusterUserPermissionInput is an input type that accepts MdbMongodbClusterUserPermissionArgs and MdbMongodbClusterUserPermissionOutput values.
// You can construct a concrete instance of `MdbMongodbClusterUserPermissionInput` via:
//
//          MdbMongodbClusterUserPermissionArgs{...}
type MdbMongodbClusterUserPermissionInput interface {
	pulumi.Input

	ToMdbMongodbClusterUserPermissionOutput() MdbMongodbClusterUserPermissionOutput
	ToMdbMongodbClusterUserPermissionOutputWithContext(context.Context) MdbMongodbClusterUserPermissionOutput
}

type MdbMongodbClusterUserPermissionArgs struct {
	// The name of the database that the permission grants access to.
	DatabaseName pulumi.StringInput      `pulumi:"databaseName"`
	Roles        pulumi.StringArrayInput `pulumi:"roles"`
}

func (MdbMongodbClusterUserPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMongodbClusterUserPermission)(nil)).Elem()
}

func (i MdbMongodbClusterUserPermissionArgs) ToMdbMongodbClusterUserPermissionOutput() MdbMongodbClusterUserPermissionOutput {
	return i.ToMdbMongodbClusterUserPermissionOutputWithContext(context.Background())
}

func (i MdbMongodbClusterUserPermissionArgs) ToMdbMongodbClusterUserPermissionOutputWithContext(ctx context.Context) MdbMongodbClusterUserPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMongodbClusterUserPermissionOutput)
}

// MdbMongodbClusterUserPermissionArrayInput is an input type that accepts MdbMongodbClusterUserPermissionArray and MdbMongodbClusterUserPermissionArrayOutput values.
// You can construct a concrete instance of `MdbMongodbClusterUserPermissionArrayInput` via:
//
//          MdbMongodbClusterUserPermissionArray{ MdbMongodbClusterUserPermissionArgs{...} }
type MdbMongodbClusterUserPermissionArrayInput interface {
	pulumi.Input

	ToMdbMongodbClusterUserPermissionArrayOutput() MdbMongodbClusterUserPermissionArrayOutput
	ToMdbMongodbClusterUserPermissionArrayOutputWithContext(context.Context) MdbMongodbClusterUserPermissionArrayOutput
}

type MdbMongodbClusterUserPermissionArray []MdbMongodbClusterUserPermissionInput

func (MdbMongodbClusterUserPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbMongodbClusterUserPermission)(nil)).Elem()
}

func (i MdbMongodbClusterUserPermissionArray) ToMdbMongodbClusterUserPermissionArrayOutput() MdbMongodbClusterUserPermissionArrayOutput {
	return i.ToMdbMongodbClusterUserPermissionArrayOutputWithContext(context.Background())
}

func (i MdbMongodbClusterUserPermissionArray) ToMdbMongodbClusterUserPermissionArrayOutputWithContext(ctx context.Context) MdbMongodbClusterUserPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMongodbClusterUserPermissionArrayOutput)
}

type MdbMongodbClusterUserPermissionOutput struct{ *pulumi.OutputState }

func (MdbMongodbClusterUserPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMongodbClusterUserPermission)(nil)).Elem()
}

func (o MdbMongodbClusterUserPermissionOutput) ToMdbMongodbClusterUserPermissionOutput() MdbMongodbClusterUserPermissionOutput {
	return o
}

func (o MdbMongodbClusterUserPermissionOutput) ToMdbMongodbClusterUserPermissionOutputWithContext(ctx context.Context) MdbMongodbClusterUserPermissionOutput {
	return o
}

// The name of the database that the permission grants access to.
func (o MdbMongodbClusterUserPermissionOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MdbMongodbClusterUserPermission) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o MdbMongodbClusterUserPermissionOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MdbMongodbClusterUserPermission) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

type MdbMongodbClusterUserPermissionArrayOutput struct{ *pulumi.OutputState }

func (MdbMongodbClusterUserPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbMongodbClusterUserPermission)(nil)).Elem()
}

func (o MdbMongodbClusterUserPermissionArrayOutput) ToMdbMongodbClusterUserPermissionArrayOutput() MdbMongodbClusterUserPermissionArrayOutput {
	return o
}

func (o MdbMongodbClusterUserPermissionArrayOutput) ToMdbMongodbClusterUserPermissionArrayOutputWithContext(ctx context.Context) MdbMongodbClusterUserPermissionArrayOutput {
	return o
}

func (o MdbMongodbClusterUserPermissionArrayOutput) Index(i pulumi.IntInput) MdbMongodbClusterUserPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbMongodbClusterUserPermission {
		return vs[0].([]MdbMongodbClusterUserPermission)[vs[1].(int)]
	}).(MdbMongodbClusterUserPermissionOutput)
}

type MdbMysqlClusterAccess struct {
	// Allow access for [Yandex DataLens](https://cloud.yandex.com/services/datalens).
	DataLens *bool `pulumi:"dataLens"`
	// Allows access for [SQL queries in the management console](https://cloud.yandex.ru/docs/managed-mysql/operations/web-sql-query).
	WebSql *bool `pulumi:"webSql"`
}

// MdbMysqlClusterAccessInput is an input type that accepts MdbMysqlClusterAccessArgs and MdbMysqlClusterAccessOutput values.
// You can construct a concrete instance of `MdbMysqlClusterAccessInput` via:
//
//          MdbMysqlClusterAccessArgs{...}
type MdbMysqlClusterAccessInput interface {
	pulumi.Input

	ToMdbMysqlClusterAccessOutput() MdbMysqlClusterAccessOutput
	ToMdbMysqlClusterAccessOutputWithContext(context.Context) MdbMysqlClusterAccessOutput
}

type MdbMysqlClusterAccessArgs struct {
	// Allow access for [Yandex DataLens](https://cloud.yandex.com/services/datalens).
	DataLens pulumi.BoolPtrInput `pulumi:"dataLens"`
	// Allows access for [SQL queries in the management console](https://cloud.yandex.ru/docs/managed-mysql/operations/web-sql-query).
	WebSql pulumi.BoolPtrInput `pulumi:"webSql"`
}

func (MdbMysqlClusterAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMysqlClusterAccess)(nil)).Elem()
}

func (i MdbMysqlClusterAccessArgs) ToMdbMysqlClusterAccessOutput() MdbMysqlClusterAccessOutput {
	return i.ToMdbMysqlClusterAccessOutputWithContext(context.Background())
}

func (i MdbMysqlClusterAccessArgs) ToMdbMysqlClusterAccessOutputWithContext(ctx context.Context) MdbMysqlClusterAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMysqlClusterAccessOutput)
}

func (i MdbMysqlClusterAccessArgs) ToMdbMysqlClusterAccessPtrOutput() MdbMysqlClusterAccessPtrOutput {
	return i.ToMdbMysqlClusterAccessPtrOutputWithContext(context.Background())
}

func (i MdbMysqlClusterAccessArgs) ToMdbMysqlClusterAccessPtrOutputWithContext(ctx context.Context) MdbMysqlClusterAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMysqlClusterAccessOutput).ToMdbMysqlClusterAccessPtrOutputWithContext(ctx)
}

// MdbMysqlClusterAccessPtrInput is an input type that accepts MdbMysqlClusterAccessArgs, MdbMysqlClusterAccessPtr and MdbMysqlClusterAccessPtrOutput values.
// You can construct a concrete instance of `MdbMysqlClusterAccessPtrInput` via:
//
//          MdbMysqlClusterAccessArgs{...}
//
//  or:
//
//          nil
type MdbMysqlClusterAccessPtrInput interface {
	pulumi.Input

	ToMdbMysqlClusterAccessPtrOutput() MdbMysqlClusterAccessPtrOutput
	ToMdbMysqlClusterAccessPtrOutputWithContext(context.Context) MdbMysqlClusterAccessPtrOutput
}

type mdbMysqlClusterAccessPtrType MdbMysqlClusterAccessArgs

func MdbMysqlClusterAccessPtr(v *MdbMysqlClusterAccessArgs) MdbMysqlClusterAccessPtrInput {
	return (*mdbMysqlClusterAccessPtrType)(v)
}

func (*mdbMysqlClusterAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbMysqlClusterAccess)(nil)).Elem()
}

func (i *mdbMysqlClusterAccessPtrType) ToMdbMysqlClusterAccessPtrOutput() MdbMysqlClusterAccessPtrOutput {
	return i.ToMdbMysqlClusterAccessPtrOutputWithContext(context.Background())
}

func (i *mdbMysqlClusterAccessPtrType) ToMdbMysqlClusterAccessPtrOutputWithContext(ctx context.Context) MdbMysqlClusterAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMysqlClusterAccessPtrOutput)
}

type MdbMysqlClusterAccessOutput struct{ *pulumi.OutputState }

func (MdbMysqlClusterAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMysqlClusterAccess)(nil)).Elem()
}

func (o MdbMysqlClusterAccessOutput) ToMdbMysqlClusterAccessOutput() MdbMysqlClusterAccessOutput {
	return o
}

func (o MdbMysqlClusterAccessOutput) ToMdbMysqlClusterAccessOutputWithContext(ctx context.Context) MdbMysqlClusterAccessOutput {
	return o
}

func (o MdbMysqlClusterAccessOutput) ToMdbMysqlClusterAccessPtrOutput() MdbMysqlClusterAccessPtrOutput {
	return o.ToMdbMysqlClusterAccessPtrOutputWithContext(context.Background())
}

func (o MdbMysqlClusterAccessOutput) ToMdbMysqlClusterAccessPtrOutputWithContext(ctx context.Context) MdbMysqlClusterAccessPtrOutput {
	return o.ApplyT(func(v MdbMysqlClusterAccess) *MdbMysqlClusterAccess {
		return &v
	}).(MdbMysqlClusterAccessPtrOutput)
}

// Allow access for [Yandex DataLens](https://cloud.yandex.com/services/datalens).
func (o MdbMysqlClusterAccessOutput) DataLens() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbMysqlClusterAccess) *bool { return v.DataLens }).(pulumi.BoolPtrOutput)
}

// Allows access for [SQL queries in the management console](https://cloud.yandex.ru/docs/managed-mysql/operations/web-sql-query).
func (o MdbMysqlClusterAccessOutput) WebSql() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbMysqlClusterAccess) *bool { return v.WebSql }).(pulumi.BoolPtrOutput)
}

type MdbMysqlClusterAccessPtrOutput struct{ *pulumi.OutputState }

func (MdbMysqlClusterAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbMysqlClusterAccess)(nil)).Elem()
}

func (o MdbMysqlClusterAccessPtrOutput) ToMdbMysqlClusterAccessPtrOutput() MdbMysqlClusterAccessPtrOutput {
	return o
}

func (o MdbMysqlClusterAccessPtrOutput) ToMdbMysqlClusterAccessPtrOutputWithContext(ctx context.Context) MdbMysqlClusterAccessPtrOutput {
	return o
}

func (o MdbMysqlClusterAccessPtrOutput) Elem() MdbMysqlClusterAccessOutput {
	return o.ApplyT(func(v *MdbMysqlClusterAccess) MdbMysqlClusterAccess { return *v }).(MdbMysqlClusterAccessOutput)
}

// Allow access for [Yandex DataLens](https://cloud.yandex.com/services/datalens).
func (o MdbMysqlClusterAccessPtrOutput) DataLens() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbMysqlClusterAccess) *bool {
		if v == nil {
			return nil
		}
		return v.DataLens
	}).(pulumi.BoolPtrOutput)
}

// Allows access for [SQL queries in the management console](https://cloud.yandex.ru/docs/managed-mysql/operations/web-sql-query).
func (o MdbMysqlClusterAccessPtrOutput) WebSql() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbMysqlClusterAccess) *bool {
		if v == nil {
			return nil
		}
		return v.WebSql
	}).(pulumi.BoolPtrOutput)
}

type MdbMysqlClusterBackupWindowStart struct {
	// The hour at which backup will be started.
	Hours *int `pulumi:"hours"`
	// The minute at which backup will be started.
	Minutes *int `pulumi:"minutes"`
}

// MdbMysqlClusterBackupWindowStartInput is an input type that accepts MdbMysqlClusterBackupWindowStartArgs and MdbMysqlClusterBackupWindowStartOutput values.
// You can construct a concrete instance of `MdbMysqlClusterBackupWindowStartInput` via:
//
//          MdbMysqlClusterBackupWindowStartArgs{...}
type MdbMysqlClusterBackupWindowStartInput interface {
	pulumi.Input

	ToMdbMysqlClusterBackupWindowStartOutput() MdbMysqlClusterBackupWindowStartOutput
	ToMdbMysqlClusterBackupWindowStartOutputWithContext(context.Context) MdbMysqlClusterBackupWindowStartOutput
}

type MdbMysqlClusterBackupWindowStartArgs struct {
	// The hour at which backup will be started.
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// The minute at which backup will be started.
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
}

func (MdbMysqlClusterBackupWindowStartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMysqlClusterBackupWindowStart)(nil)).Elem()
}

func (i MdbMysqlClusterBackupWindowStartArgs) ToMdbMysqlClusterBackupWindowStartOutput() MdbMysqlClusterBackupWindowStartOutput {
	return i.ToMdbMysqlClusterBackupWindowStartOutputWithContext(context.Background())
}

func (i MdbMysqlClusterBackupWindowStartArgs) ToMdbMysqlClusterBackupWindowStartOutputWithContext(ctx context.Context) MdbMysqlClusterBackupWindowStartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMysqlClusterBackupWindowStartOutput)
}

func (i MdbMysqlClusterBackupWindowStartArgs) ToMdbMysqlClusterBackupWindowStartPtrOutput() MdbMysqlClusterBackupWindowStartPtrOutput {
	return i.ToMdbMysqlClusterBackupWindowStartPtrOutputWithContext(context.Background())
}

func (i MdbMysqlClusterBackupWindowStartArgs) ToMdbMysqlClusterBackupWindowStartPtrOutputWithContext(ctx context.Context) MdbMysqlClusterBackupWindowStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMysqlClusterBackupWindowStartOutput).ToMdbMysqlClusterBackupWindowStartPtrOutputWithContext(ctx)
}

// MdbMysqlClusterBackupWindowStartPtrInput is an input type that accepts MdbMysqlClusterBackupWindowStartArgs, MdbMysqlClusterBackupWindowStartPtr and MdbMysqlClusterBackupWindowStartPtrOutput values.
// You can construct a concrete instance of `MdbMysqlClusterBackupWindowStartPtrInput` via:
//
//          MdbMysqlClusterBackupWindowStartArgs{...}
//
//  or:
//
//          nil
type MdbMysqlClusterBackupWindowStartPtrInput interface {
	pulumi.Input

	ToMdbMysqlClusterBackupWindowStartPtrOutput() MdbMysqlClusterBackupWindowStartPtrOutput
	ToMdbMysqlClusterBackupWindowStartPtrOutputWithContext(context.Context) MdbMysqlClusterBackupWindowStartPtrOutput
}

type mdbMysqlClusterBackupWindowStartPtrType MdbMysqlClusterBackupWindowStartArgs

func MdbMysqlClusterBackupWindowStartPtr(v *MdbMysqlClusterBackupWindowStartArgs) MdbMysqlClusterBackupWindowStartPtrInput {
	return (*mdbMysqlClusterBackupWindowStartPtrType)(v)
}

func (*mdbMysqlClusterBackupWindowStartPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbMysqlClusterBackupWindowStart)(nil)).Elem()
}

func (i *mdbMysqlClusterBackupWindowStartPtrType) ToMdbMysqlClusterBackupWindowStartPtrOutput() MdbMysqlClusterBackupWindowStartPtrOutput {
	return i.ToMdbMysqlClusterBackupWindowStartPtrOutputWithContext(context.Background())
}

func (i *mdbMysqlClusterBackupWindowStartPtrType) ToMdbMysqlClusterBackupWindowStartPtrOutputWithContext(ctx context.Context) MdbMysqlClusterBackupWindowStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMysqlClusterBackupWindowStartPtrOutput)
}

type MdbMysqlClusterBackupWindowStartOutput struct{ *pulumi.OutputState }

func (MdbMysqlClusterBackupWindowStartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMysqlClusterBackupWindowStart)(nil)).Elem()
}

func (o MdbMysqlClusterBackupWindowStartOutput) ToMdbMysqlClusterBackupWindowStartOutput() MdbMysqlClusterBackupWindowStartOutput {
	return o
}

func (o MdbMysqlClusterBackupWindowStartOutput) ToMdbMysqlClusterBackupWindowStartOutputWithContext(ctx context.Context) MdbMysqlClusterBackupWindowStartOutput {
	return o
}

func (o MdbMysqlClusterBackupWindowStartOutput) ToMdbMysqlClusterBackupWindowStartPtrOutput() MdbMysqlClusterBackupWindowStartPtrOutput {
	return o.ToMdbMysqlClusterBackupWindowStartPtrOutputWithContext(context.Background())
}

func (o MdbMysqlClusterBackupWindowStartOutput) ToMdbMysqlClusterBackupWindowStartPtrOutputWithContext(ctx context.Context) MdbMysqlClusterBackupWindowStartPtrOutput {
	return o.ApplyT(func(v MdbMysqlClusterBackupWindowStart) *MdbMysqlClusterBackupWindowStart {
		return &v
	}).(MdbMysqlClusterBackupWindowStartPtrOutput)
}

// The hour at which backup will be started.
func (o MdbMysqlClusterBackupWindowStartOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbMysqlClusterBackupWindowStart) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// The minute at which backup will be started.
func (o MdbMysqlClusterBackupWindowStartOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbMysqlClusterBackupWindowStart) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

type MdbMysqlClusterBackupWindowStartPtrOutput struct{ *pulumi.OutputState }

func (MdbMysqlClusterBackupWindowStartPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbMysqlClusterBackupWindowStart)(nil)).Elem()
}

func (o MdbMysqlClusterBackupWindowStartPtrOutput) ToMdbMysqlClusterBackupWindowStartPtrOutput() MdbMysqlClusterBackupWindowStartPtrOutput {
	return o
}

func (o MdbMysqlClusterBackupWindowStartPtrOutput) ToMdbMysqlClusterBackupWindowStartPtrOutputWithContext(ctx context.Context) MdbMysqlClusterBackupWindowStartPtrOutput {
	return o
}

func (o MdbMysqlClusterBackupWindowStartPtrOutput) Elem() MdbMysqlClusterBackupWindowStartOutput {
	return o.ApplyT(func(v *MdbMysqlClusterBackupWindowStart) MdbMysqlClusterBackupWindowStart { return *v }).(MdbMysqlClusterBackupWindowStartOutput)
}

// The hour at which backup will be started.
func (o MdbMysqlClusterBackupWindowStartPtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbMysqlClusterBackupWindowStart) *int {
		if v == nil {
			return nil
		}
		return v.Hours
	}).(pulumi.IntPtrOutput)
}

// The minute at which backup will be started.
func (o MdbMysqlClusterBackupWindowStartPtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbMysqlClusterBackupWindowStart) *int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntPtrOutput)
}

type MdbMysqlClusterDatabase struct {
	// The name of the database.
	Name string `pulumi:"name"`
}

// MdbMysqlClusterDatabaseInput is an input type that accepts MdbMysqlClusterDatabaseArgs and MdbMysqlClusterDatabaseOutput values.
// You can construct a concrete instance of `MdbMysqlClusterDatabaseInput` via:
//
//          MdbMysqlClusterDatabaseArgs{...}
type MdbMysqlClusterDatabaseInput interface {
	pulumi.Input

	ToMdbMysqlClusterDatabaseOutput() MdbMysqlClusterDatabaseOutput
	ToMdbMysqlClusterDatabaseOutputWithContext(context.Context) MdbMysqlClusterDatabaseOutput
}

type MdbMysqlClusterDatabaseArgs struct {
	// The name of the database.
	Name pulumi.StringInput `pulumi:"name"`
}

func (MdbMysqlClusterDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMysqlClusterDatabase)(nil)).Elem()
}

func (i MdbMysqlClusterDatabaseArgs) ToMdbMysqlClusterDatabaseOutput() MdbMysqlClusterDatabaseOutput {
	return i.ToMdbMysqlClusterDatabaseOutputWithContext(context.Background())
}

func (i MdbMysqlClusterDatabaseArgs) ToMdbMysqlClusterDatabaseOutputWithContext(ctx context.Context) MdbMysqlClusterDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMysqlClusterDatabaseOutput)
}

// MdbMysqlClusterDatabaseArrayInput is an input type that accepts MdbMysqlClusterDatabaseArray and MdbMysqlClusterDatabaseArrayOutput values.
// You can construct a concrete instance of `MdbMysqlClusterDatabaseArrayInput` via:
//
//          MdbMysqlClusterDatabaseArray{ MdbMysqlClusterDatabaseArgs{...} }
type MdbMysqlClusterDatabaseArrayInput interface {
	pulumi.Input

	ToMdbMysqlClusterDatabaseArrayOutput() MdbMysqlClusterDatabaseArrayOutput
	ToMdbMysqlClusterDatabaseArrayOutputWithContext(context.Context) MdbMysqlClusterDatabaseArrayOutput
}

type MdbMysqlClusterDatabaseArray []MdbMysqlClusterDatabaseInput

func (MdbMysqlClusterDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbMysqlClusterDatabase)(nil)).Elem()
}

func (i MdbMysqlClusterDatabaseArray) ToMdbMysqlClusterDatabaseArrayOutput() MdbMysqlClusterDatabaseArrayOutput {
	return i.ToMdbMysqlClusterDatabaseArrayOutputWithContext(context.Background())
}

func (i MdbMysqlClusterDatabaseArray) ToMdbMysqlClusterDatabaseArrayOutputWithContext(ctx context.Context) MdbMysqlClusterDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMysqlClusterDatabaseArrayOutput)
}

type MdbMysqlClusterDatabaseOutput struct{ *pulumi.OutputState }

func (MdbMysqlClusterDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMysqlClusterDatabase)(nil)).Elem()
}

func (o MdbMysqlClusterDatabaseOutput) ToMdbMysqlClusterDatabaseOutput() MdbMysqlClusterDatabaseOutput {
	return o
}

func (o MdbMysqlClusterDatabaseOutput) ToMdbMysqlClusterDatabaseOutputWithContext(ctx context.Context) MdbMysqlClusterDatabaseOutput {
	return o
}

// The name of the database.
func (o MdbMysqlClusterDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MdbMysqlClusterDatabase) string { return v.Name }).(pulumi.StringOutput)
}

type MdbMysqlClusterDatabaseArrayOutput struct{ *pulumi.OutputState }

func (MdbMysqlClusterDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbMysqlClusterDatabase)(nil)).Elem()
}

func (o MdbMysqlClusterDatabaseArrayOutput) ToMdbMysqlClusterDatabaseArrayOutput() MdbMysqlClusterDatabaseArrayOutput {
	return o
}

func (o MdbMysqlClusterDatabaseArrayOutput) ToMdbMysqlClusterDatabaseArrayOutputWithContext(ctx context.Context) MdbMysqlClusterDatabaseArrayOutput {
	return o
}

func (o MdbMysqlClusterDatabaseArrayOutput) Index(i pulumi.IntInput) MdbMysqlClusterDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbMysqlClusterDatabase {
		return vs[0].([]MdbMysqlClusterDatabase)[vs[1].(int)]
	}).(MdbMysqlClusterDatabaseOutput)
}

type MdbMysqlClusterHost struct {
	// Sets whether the host should get a public IP address on creation. When changing the `assignPublicIp` attribute and `allowRegenerationHost` is true, the old host is deleted and a new host is created. Changing this parameter for an existing host is not supported at the moment.
	AssignPublicIp *bool `pulumi:"assignPublicIp"`
	// The fully qualified domain name of the host.
	Fqdn *string `pulumi:"fqdn"`
	// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
	SubnetId *string `pulumi:"subnetId"`
	// The availability zone where the MySQL host will be created.
	Zone string `pulumi:"zone"`
}

// MdbMysqlClusterHostInput is an input type that accepts MdbMysqlClusterHostArgs and MdbMysqlClusterHostOutput values.
// You can construct a concrete instance of `MdbMysqlClusterHostInput` via:
//
//          MdbMysqlClusterHostArgs{...}
type MdbMysqlClusterHostInput interface {
	pulumi.Input

	ToMdbMysqlClusterHostOutput() MdbMysqlClusterHostOutput
	ToMdbMysqlClusterHostOutputWithContext(context.Context) MdbMysqlClusterHostOutput
}

type MdbMysqlClusterHostArgs struct {
	// Sets whether the host should get a public IP address on creation. When changing the `assignPublicIp` attribute and `allowRegenerationHost` is true, the old host is deleted and a new host is created. Changing this parameter for an existing host is not supported at the moment.
	AssignPublicIp pulumi.BoolPtrInput `pulumi:"assignPublicIp"`
	// The fully qualified domain name of the host.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The availability zone where the MySQL host will be created.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (MdbMysqlClusterHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMysqlClusterHost)(nil)).Elem()
}

func (i MdbMysqlClusterHostArgs) ToMdbMysqlClusterHostOutput() MdbMysqlClusterHostOutput {
	return i.ToMdbMysqlClusterHostOutputWithContext(context.Background())
}

func (i MdbMysqlClusterHostArgs) ToMdbMysqlClusterHostOutputWithContext(ctx context.Context) MdbMysqlClusterHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMysqlClusterHostOutput)
}

// MdbMysqlClusterHostArrayInput is an input type that accepts MdbMysqlClusterHostArray and MdbMysqlClusterHostArrayOutput values.
// You can construct a concrete instance of `MdbMysqlClusterHostArrayInput` via:
//
//          MdbMysqlClusterHostArray{ MdbMysqlClusterHostArgs{...} }
type MdbMysqlClusterHostArrayInput interface {
	pulumi.Input

	ToMdbMysqlClusterHostArrayOutput() MdbMysqlClusterHostArrayOutput
	ToMdbMysqlClusterHostArrayOutputWithContext(context.Context) MdbMysqlClusterHostArrayOutput
}

type MdbMysqlClusterHostArray []MdbMysqlClusterHostInput

func (MdbMysqlClusterHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbMysqlClusterHost)(nil)).Elem()
}

func (i MdbMysqlClusterHostArray) ToMdbMysqlClusterHostArrayOutput() MdbMysqlClusterHostArrayOutput {
	return i.ToMdbMysqlClusterHostArrayOutputWithContext(context.Background())
}

func (i MdbMysqlClusterHostArray) ToMdbMysqlClusterHostArrayOutputWithContext(ctx context.Context) MdbMysqlClusterHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMysqlClusterHostArrayOutput)
}

type MdbMysqlClusterHostOutput struct{ *pulumi.OutputState }

func (MdbMysqlClusterHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMysqlClusterHost)(nil)).Elem()
}

func (o MdbMysqlClusterHostOutput) ToMdbMysqlClusterHostOutput() MdbMysqlClusterHostOutput {
	return o
}

func (o MdbMysqlClusterHostOutput) ToMdbMysqlClusterHostOutputWithContext(ctx context.Context) MdbMysqlClusterHostOutput {
	return o
}

// Sets whether the host should get a public IP address on creation. When changing the `assignPublicIp` attribute and `allowRegenerationHost` is true, the old host is deleted and a new host is created. Changing this parameter for an existing host is not supported at the moment.
func (o MdbMysqlClusterHostOutput) AssignPublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbMysqlClusterHost) *bool { return v.AssignPublicIp }).(pulumi.BoolPtrOutput)
}

// The fully qualified domain name of the host.
func (o MdbMysqlClusterHostOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbMysqlClusterHost) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
func (o MdbMysqlClusterHostOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbMysqlClusterHost) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The availability zone where the MySQL host will be created.
func (o MdbMysqlClusterHostOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v MdbMysqlClusterHost) string { return v.Zone }).(pulumi.StringOutput)
}

type MdbMysqlClusterHostArrayOutput struct{ *pulumi.OutputState }

func (MdbMysqlClusterHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbMysqlClusterHost)(nil)).Elem()
}

func (o MdbMysqlClusterHostArrayOutput) ToMdbMysqlClusterHostArrayOutput() MdbMysqlClusterHostArrayOutput {
	return o
}

func (o MdbMysqlClusterHostArrayOutput) ToMdbMysqlClusterHostArrayOutputWithContext(ctx context.Context) MdbMysqlClusterHostArrayOutput {
	return o
}

func (o MdbMysqlClusterHostArrayOutput) Index(i pulumi.IntInput) MdbMysqlClusterHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbMysqlClusterHost {
		return vs[0].([]MdbMysqlClusterHost)[vs[1].(int)]
	}).(MdbMysqlClusterHostOutput)
}

type MdbMysqlClusterResources struct {
	// Volume of the storage available to a MySQL host, in gigabytes.
	DiskSize int `pulumi:"diskSize"`
	// Type of the storage of MySQL hosts.
	DiskTypeId       string `pulumi:"diskTypeId"`
	ResourcePresetId string `pulumi:"resourcePresetId"`
}

// MdbMysqlClusterResourcesInput is an input type that accepts MdbMysqlClusterResourcesArgs and MdbMysqlClusterResourcesOutput values.
// You can construct a concrete instance of `MdbMysqlClusterResourcesInput` via:
//
//          MdbMysqlClusterResourcesArgs{...}
type MdbMysqlClusterResourcesInput interface {
	pulumi.Input

	ToMdbMysqlClusterResourcesOutput() MdbMysqlClusterResourcesOutput
	ToMdbMysqlClusterResourcesOutputWithContext(context.Context) MdbMysqlClusterResourcesOutput
}

type MdbMysqlClusterResourcesArgs struct {
	// Volume of the storage available to a MySQL host, in gigabytes.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// Type of the storage of MySQL hosts.
	DiskTypeId       pulumi.StringInput `pulumi:"diskTypeId"`
	ResourcePresetId pulumi.StringInput `pulumi:"resourcePresetId"`
}

func (MdbMysqlClusterResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMysqlClusterResources)(nil)).Elem()
}

func (i MdbMysqlClusterResourcesArgs) ToMdbMysqlClusterResourcesOutput() MdbMysqlClusterResourcesOutput {
	return i.ToMdbMysqlClusterResourcesOutputWithContext(context.Background())
}

func (i MdbMysqlClusterResourcesArgs) ToMdbMysqlClusterResourcesOutputWithContext(ctx context.Context) MdbMysqlClusterResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMysqlClusterResourcesOutput)
}

func (i MdbMysqlClusterResourcesArgs) ToMdbMysqlClusterResourcesPtrOutput() MdbMysqlClusterResourcesPtrOutput {
	return i.ToMdbMysqlClusterResourcesPtrOutputWithContext(context.Background())
}

func (i MdbMysqlClusterResourcesArgs) ToMdbMysqlClusterResourcesPtrOutputWithContext(ctx context.Context) MdbMysqlClusterResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMysqlClusterResourcesOutput).ToMdbMysqlClusterResourcesPtrOutputWithContext(ctx)
}

// MdbMysqlClusterResourcesPtrInput is an input type that accepts MdbMysqlClusterResourcesArgs, MdbMysqlClusterResourcesPtr and MdbMysqlClusterResourcesPtrOutput values.
// You can construct a concrete instance of `MdbMysqlClusterResourcesPtrInput` via:
//
//          MdbMysqlClusterResourcesArgs{...}
//
//  or:
//
//          nil
type MdbMysqlClusterResourcesPtrInput interface {
	pulumi.Input

	ToMdbMysqlClusterResourcesPtrOutput() MdbMysqlClusterResourcesPtrOutput
	ToMdbMysqlClusterResourcesPtrOutputWithContext(context.Context) MdbMysqlClusterResourcesPtrOutput
}

type mdbMysqlClusterResourcesPtrType MdbMysqlClusterResourcesArgs

func MdbMysqlClusterResourcesPtr(v *MdbMysqlClusterResourcesArgs) MdbMysqlClusterResourcesPtrInput {
	return (*mdbMysqlClusterResourcesPtrType)(v)
}

func (*mdbMysqlClusterResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbMysqlClusterResources)(nil)).Elem()
}

func (i *mdbMysqlClusterResourcesPtrType) ToMdbMysqlClusterResourcesPtrOutput() MdbMysqlClusterResourcesPtrOutput {
	return i.ToMdbMysqlClusterResourcesPtrOutputWithContext(context.Background())
}

func (i *mdbMysqlClusterResourcesPtrType) ToMdbMysqlClusterResourcesPtrOutputWithContext(ctx context.Context) MdbMysqlClusterResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMysqlClusterResourcesPtrOutput)
}

type MdbMysqlClusterResourcesOutput struct{ *pulumi.OutputState }

func (MdbMysqlClusterResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMysqlClusterResources)(nil)).Elem()
}

func (o MdbMysqlClusterResourcesOutput) ToMdbMysqlClusterResourcesOutput() MdbMysqlClusterResourcesOutput {
	return o
}

func (o MdbMysqlClusterResourcesOutput) ToMdbMysqlClusterResourcesOutputWithContext(ctx context.Context) MdbMysqlClusterResourcesOutput {
	return o
}

func (o MdbMysqlClusterResourcesOutput) ToMdbMysqlClusterResourcesPtrOutput() MdbMysqlClusterResourcesPtrOutput {
	return o.ToMdbMysqlClusterResourcesPtrOutputWithContext(context.Background())
}

func (o MdbMysqlClusterResourcesOutput) ToMdbMysqlClusterResourcesPtrOutputWithContext(ctx context.Context) MdbMysqlClusterResourcesPtrOutput {
	return o.ApplyT(func(v MdbMysqlClusterResources) *MdbMysqlClusterResources {
		return &v
	}).(MdbMysqlClusterResourcesPtrOutput)
}

// Volume of the storage available to a MySQL host, in gigabytes.
func (o MdbMysqlClusterResourcesOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v MdbMysqlClusterResources) int { return v.DiskSize }).(pulumi.IntOutput)
}

// Type of the storage of MySQL hosts.
func (o MdbMysqlClusterResourcesOutput) DiskTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v MdbMysqlClusterResources) string { return v.DiskTypeId }).(pulumi.StringOutput)
}

func (o MdbMysqlClusterResourcesOutput) ResourcePresetId() pulumi.StringOutput {
	return o.ApplyT(func(v MdbMysqlClusterResources) string { return v.ResourcePresetId }).(pulumi.StringOutput)
}

type MdbMysqlClusterResourcesPtrOutput struct{ *pulumi.OutputState }

func (MdbMysqlClusterResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbMysqlClusterResources)(nil)).Elem()
}

func (o MdbMysqlClusterResourcesPtrOutput) ToMdbMysqlClusterResourcesPtrOutput() MdbMysqlClusterResourcesPtrOutput {
	return o
}

func (o MdbMysqlClusterResourcesPtrOutput) ToMdbMysqlClusterResourcesPtrOutputWithContext(ctx context.Context) MdbMysqlClusterResourcesPtrOutput {
	return o
}

func (o MdbMysqlClusterResourcesPtrOutput) Elem() MdbMysqlClusterResourcesOutput {
	return o.ApplyT(func(v *MdbMysqlClusterResources) MdbMysqlClusterResources { return *v }).(MdbMysqlClusterResourcesOutput)
}

// Volume of the storage available to a MySQL host, in gigabytes.
func (o MdbMysqlClusterResourcesPtrOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbMysqlClusterResources) *int {
		if v == nil {
			return nil
		}
		return &v.DiskSize
	}).(pulumi.IntPtrOutput)
}

// Type of the storage of MySQL hosts.
func (o MdbMysqlClusterResourcesPtrOutput) DiskTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbMysqlClusterResources) *string {
		if v == nil {
			return nil
		}
		return &v.DiskTypeId
	}).(pulumi.StringPtrOutput)
}

func (o MdbMysqlClusterResourcesPtrOutput) ResourcePresetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbMysqlClusterResources) *string {
		if v == nil {
			return nil
		}
		return &v.ResourcePresetId
	}).(pulumi.StringPtrOutput)
}

type MdbMysqlClusterRestore struct {
	// Backup ID. The cluster will be created from the specified backup. [How to get a list of MySQL backups](https://cloud.yandex.com/docs/managed-mysql/operations/cluster-backups).
	BackupId string `pulumi:"backupId"`
	// Timestamp of the moment to which the MySQL cluster should be restored. (Format: "2006-01-02T15:04:05" - UTC). When not set, current time is used.
	Time *string `pulumi:"time"`
}

// MdbMysqlClusterRestoreInput is an input type that accepts MdbMysqlClusterRestoreArgs and MdbMysqlClusterRestoreOutput values.
// You can construct a concrete instance of `MdbMysqlClusterRestoreInput` via:
//
//          MdbMysqlClusterRestoreArgs{...}
type MdbMysqlClusterRestoreInput interface {
	pulumi.Input

	ToMdbMysqlClusterRestoreOutput() MdbMysqlClusterRestoreOutput
	ToMdbMysqlClusterRestoreOutputWithContext(context.Context) MdbMysqlClusterRestoreOutput
}

type MdbMysqlClusterRestoreArgs struct {
	// Backup ID. The cluster will be created from the specified backup. [How to get a list of MySQL backups](https://cloud.yandex.com/docs/managed-mysql/operations/cluster-backups).
	BackupId pulumi.StringInput `pulumi:"backupId"`
	// Timestamp of the moment to which the MySQL cluster should be restored. (Format: "2006-01-02T15:04:05" - UTC). When not set, current time is used.
	Time pulumi.StringPtrInput `pulumi:"time"`
}

func (MdbMysqlClusterRestoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMysqlClusterRestore)(nil)).Elem()
}

func (i MdbMysqlClusterRestoreArgs) ToMdbMysqlClusterRestoreOutput() MdbMysqlClusterRestoreOutput {
	return i.ToMdbMysqlClusterRestoreOutputWithContext(context.Background())
}

func (i MdbMysqlClusterRestoreArgs) ToMdbMysqlClusterRestoreOutputWithContext(ctx context.Context) MdbMysqlClusterRestoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMysqlClusterRestoreOutput)
}

func (i MdbMysqlClusterRestoreArgs) ToMdbMysqlClusterRestorePtrOutput() MdbMysqlClusterRestorePtrOutput {
	return i.ToMdbMysqlClusterRestorePtrOutputWithContext(context.Background())
}

func (i MdbMysqlClusterRestoreArgs) ToMdbMysqlClusterRestorePtrOutputWithContext(ctx context.Context) MdbMysqlClusterRestorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMysqlClusterRestoreOutput).ToMdbMysqlClusterRestorePtrOutputWithContext(ctx)
}

// MdbMysqlClusterRestorePtrInput is an input type that accepts MdbMysqlClusterRestoreArgs, MdbMysqlClusterRestorePtr and MdbMysqlClusterRestorePtrOutput values.
// You can construct a concrete instance of `MdbMysqlClusterRestorePtrInput` via:
//
//          MdbMysqlClusterRestoreArgs{...}
//
//  or:
//
//          nil
type MdbMysqlClusterRestorePtrInput interface {
	pulumi.Input

	ToMdbMysqlClusterRestorePtrOutput() MdbMysqlClusterRestorePtrOutput
	ToMdbMysqlClusterRestorePtrOutputWithContext(context.Context) MdbMysqlClusterRestorePtrOutput
}

type mdbMysqlClusterRestorePtrType MdbMysqlClusterRestoreArgs

func MdbMysqlClusterRestorePtr(v *MdbMysqlClusterRestoreArgs) MdbMysqlClusterRestorePtrInput {
	return (*mdbMysqlClusterRestorePtrType)(v)
}

func (*mdbMysqlClusterRestorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbMysqlClusterRestore)(nil)).Elem()
}

func (i *mdbMysqlClusterRestorePtrType) ToMdbMysqlClusterRestorePtrOutput() MdbMysqlClusterRestorePtrOutput {
	return i.ToMdbMysqlClusterRestorePtrOutputWithContext(context.Background())
}

func (i *mdbMysqlClusterRestorePtrType) ToMdbMysqlClusterRestorePtrOutputWithContext(ctx context.Context) MdbMysqlClusterRestorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMysqlClusterRestorePtrOutput)
}

type MdbMysqlClusterRestoreOutput struct{ *pulumi.OutputState }

func (MdbMysqlClusterRestoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMysqlClusterRestore)(nil)).Elem()
}

func (o MdbMysqlClusterRestoreOutput) ToMdbMysqlClusterRestoreOutput() MdbMysqlClusterRestoreOutput {
	return o
}

func (o MdbMysqlClusterRestoreOutput) ToMdbMysqlClusterRestoreOutputWithContext(ctx context.Context) MdbMysqlClusterRestoreOutput {
	return o
}

func (o MdbMysqlClusterRestoreOutput) ToMdbMysqlClusterRestorePtrOutput() MdbMysqlClusterRestorePtrOutput {
	return o.ToMdbMysqlClusterRestorePtrOutputWithContext(context.Background())
}

func (o MdbMysqlClusterRestoreOutput) ToMdbMysqlClusterRestorePtrOutputWithContext(ctx context.Context) MdbMysqlClusterRestorePtrOutput {
	return o.ApplyT(func(v MdbMysqlClusterRestore) *MdbMysqlClusterRestore {
		return &v
	}).(MdbMysqlClusterRestorePtrOutput)
}

// Backup ID. The cluster will be created from the specified backup. [How to get a list of MySQL backups](https://cloud.yandex.com/docs/managed-mysql/operations/cluster-backups).
func (o MdbMysqlClusterRestoreOutput) BackupId() pulumi.StringOutput {
	return o.ApplyT(func(v MdbMysqlClusterRestore) string { return v.BackupId }).(pulumi.StringOutput)
}

// Timestamp of the moment to which the MySQL cluster should be restored. (Format: "2006-01-02T15:04:05" - UTC). When not set, current time is used.
func (o MdbMysqlClusterRestoreOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbMysqlClusterRestore) *string { return v.Time }).(pulumi.StringPtrOutput)
}

type MdbMysqlClusterRestorePtrOutput struct{ *pulumi.OutputState }

func (MdbMysqlClusterRestorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbMysqlClusterRestore)(nil)).Elem()
}

func (o MdbMysqlClusterRestorePtrOutput) ToMdbMysqlClusterRestorePtrOutput() MdbMysqlClusterRestorePtrOutput {
	return o
}

func (o MdbMysqlClusterRestorePtrOutput) ToMdbMysqlClusterRestorePtrOutputWithContext(ctx context.Context) MdbMysqlClusterRestorePtrOutput {
	return o
}

func (o MdbMysqlClusterRestorePtrOutput) Elem() MdbMysqlClusterRestoreOutput {
	return o.ApplyT(func(v *MdbMysqlClusterRestore) MdbMysqlClusterRestore { return *v }).(MdbMysqlClusterRestoreOutput)
}

// Backup ID. The cluster will be created from the specified backup. [How to get a list of MySQL backups](https://cloud.yandex.com/docs/managed-mysql/operations/cluster-backups).
func (o MdbMysqlClusterRestorePtrOutput) BackupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbMysqlClusterRestore) *string {
		if v == nil {
			return nil
		}
		return &v.BackupId
	}).(pulumi.StringPtrOutput)
}

// Timestamp of the moment to which the MySQL cluster should be restored. (Format: "2006-01-02T15:04:05" - UTC). When not set, current time is used.
func (o MdbMysqlClusterRestorePtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbMysqlClusterRestore) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

type MdbMysqlClusterUser struct {
	// Authentication plugin. Allowed values: `MYSQL_NATIVE_PASSWORD`, `CACHING_SHA2_PASSWORD`, `SHA256_PASSWORD` (for version 5.7 `MYSQL_NATIVE_PASSWORD`, `SHA256_PASSWORD`)
	AuthenticationPlugin *string `pulumi:"authenticationPlugin"`
	// User's connection limits. The structure is documented below.
	// If the attribute is not specified there will be no changes.
	ConnectionLimits *MdbMysqlClusterUserConnectionLimits `pulumi:"connectionLimits"`
	// List user's global permissions\
	// Allowed permissions:  `REPLICATION_CLIENT`, `REPLICATION_SLAVE`, `PROCESS` for clear list use empty list.
	// If the attribute is not specified there will be no changes.
	GlobalPermissions []string `pulumi:"globalPermissions"`
	// The name of the database.
	Name string `pulumi:"name"`
	// The password of the user.
	Password string `pulumi:"password"`
	// Set of permissions granted to the user. The structure is documented below.
	Permissions []MdbMysqlClusterUserPermission `pulumi:"permissions"`
}

// MdbMysqlClusterUserInput is an input type that accepts MdbMysqlClusterUserArgs and MdbMysqlClusterUserOutput values.
// You can construct a concrete instance of `MdbMysqlClusterUserInput` via:
//
//          MdbMysqlClusterUserArgs{...}
type MdbMysqlClusterUserInput interface {
	pulumi.Input

	ToMdbMysqlClusterUserOutput() MdbMysqlClusterUserOutput
	ToMdbMysqlClusterUserOutputWithContext(context.Context) MdbMysqlClusterUserOutput
}

type MdbMysqlClusterUserArgs struct {
	// Authentication plugin. Allowed values: `MYSQL_NATIVE_PASSWORD`, `CACHING_SHA2_PASSWORD`, `SHA256_PASSWORD` (for version 5.7 `MYSQL_NATIVE_PASSWORD`, `SHA256_PASSWORD`)
	AuthenticationPlugin pulumi.StringPtrInput `pulumi:"authenticationPlugin"`
	// User's connection limits. The structure is documented below.
	// If the attribute is not specified there will be no changes.
	ConnectionLimits MdbMysqlClusterUserConnectionLimitsPtrInput `pulumi:"connectionLimits"`
	// List user's global permissions\
	// Allowed permissions:  `REPLICATION_CLIENT`, `REPLICATION_SLAVE`, `PROCESS` for clear list use empty list.
	// If the attribute is not specified there will be no changes.
	GlobalPermissions pulumi.StringArrayInput `pulumi:"globalPermissions"`
	// The name of the database.
	Name pulumi.StringInput `pulumi:"name"`
	// The password of the user.
	Password pulumi.StringInput `pulumi:"password"`
	// Set of permissions granted to the user. The structure is documented below.
	Permissions MdbMysqlClusterUserPermissionArrayInput `pulumi:"permissions"`
}

func (MdbMysqlClusterUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMysqlClusterUser)(nil)).Elem()
}

func (i MdbMysqlClusterUserArgs) ToMdbMysqlClusterUserOutput() MdbMysqlClusterUserOutput {
	return i.ToMdbMysqlClusterUserOutputWithContext(context.Background())
}

func (i MdbMysqlClusterUserArgs) ToMdbMysqlClusterUserOutputWithContext(ctx context.Context) MdbMysqlClusterUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMysqlClusterUserOutput)
}

// MdbMysqlClusterUserArrayInput is an input type that accepts MdbMysqlClusterUserArray and MdbMysqlClusterUserArrayOutput values.
// You can construct a concrete instance of `MdbMysqlClusterUserArrayInput` via:
//
//          MdbMysqlClusterUserArray{ MdbMysqlClusterUserArgs{...} }
type MdbMysqlClusterUserArrayInput interface {
	pulumi.Input

	ToMdbMysqlClusterUserArrayOutput() MdbMysqlClusterUserArrayOutput
	ToMdbMysqlClusterUserArrayOutputWithContext(context.Context) MdbMysqlClusterUserArrayOutput
}

type MdbMysqlClusterUserArray []MdbMysqlClusterUserInput

func (MdbMysqlClusterUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbMysqlClusterUser)(nil)).Elem()
}

func (i MdbMysqlClusterUserArray) ToMdbMysqlClusterUserArrayOutput() MdbMysqlClusterUserArrayOutput {
	return i.ToMdbMysqlClusterUserArrayOutputWithContext(context.Background())
}

func (i MdbMysqlClusterUserArray) ToMdbMysqlClusterUserArrayOutputWithContext(ctx context.Context) MdbMysqlClusterUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMysqlClusterUserArrayOutput)
}

type MdbMysqlClusterUserOutput struct{ *pulumi.OutputState }

func (MdbMysqlClusterUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMysqlClusterUser)(nil)).Elem()
}

func (o MdbMysqlClusterUserOutput) ToMdbMysqlClusterUserOutput() MdbMysqlClusterUserOutput {
	return o
}

func (o MdbMysqlClusterUserOutput) ToMdbMysqlClusterUserOutputWithContext(ctx context.Context) MdbMysqlClusterUserOutput {
	return o
}

// Authentication plugin. Allowed values: `MYSQL_NATIVE_PASSWORD`, `CACHING_SHA2_PASSWORD`, `SHA256_PASSWORD` (for version 5.7 `MYSQL_NATIVE_PASSWORD`, `SHA256_PASSWORD`)
func (o MdbMysqlClusterUserOutput) AuthenticationPlugin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbMysqlClusterUser) *string { return v.AuthenticationPlugin }).(pulumi.StringPtrOutput)
}

// User's connection limits. The structure is documented below.
// If the attribute is not specified there will be no changes.
func (o MdbMysqlClusterUserOutput) ConnectionLimits() MdbMysqlClusterUserConnectionLimitsPtrOutput {
	return o.ApplyT(func(v MdbMysqlClusterUser) *MdbMysqlClusterUserConnectionLimits { return v.ConnectionLimits }).(MdbMysqlClusterUserConnectionLimitsPtrOutput)
}

// List user's global permissions\
// Allowed permissions:  `REPLICATION_CLIENT`, `REPLICATION_SLAVE`, `PROCESS` for clear list use empty list.
// If the attribute is not specified there will be no changes.
func (o MdbMysqlClusterUserOutput) GlobalPermissions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MdbMysqlClusterUser) []string { return v.GlobalPermissions }).(pulumi.StringArrayOutput)
}

// The name of the database.
func (o MdbMysqlClusterUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MdbMysqlClusterUser) string { return v.Name }).(pulumi.StringOutput)
}

// The password of the user.
func (o MdbMysqlClusterUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v MdbMysqlClusterUser) string { return v.Password }).(pulumi.StringOutput)
}

// Set of permissions granted to the user. The structure is documented below.
func (o MdbMysqlClusterUserOutput) Permissions() MdbMysqlClusterUserPermissionArrayOutput {
	return o.ApplyT(func(v MdbMysqlClusterUser) []MdbMysqlClusterUserPermission { return v.Permissions }).(MdbMysqlClusterUserPermissionArrayOutput)
}

type MdbMysqlClusterUserArrayOutput struct{ *pulumi.OutputState }

func (MdbMysqlClusterUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbMysqlClusterUser)(nil)).Elem()
}

func (o MdbMysqlClusterUserArrayOutput) ToMdbMysqlClusterUserArrayOutput() MdbMysqlClusterUserArrayOutput {
	return o
}

func (o MdbMysqlClusterUserArrayOutput) ToMdbMysqlClusterUserArrayOutputWithContext(ctx context.Context) MdbMysqlClusterUserArrayOutput {
	return o
}

func (o MdbMysqlClusterUserArrayOutput) Index(i pulumi.IntInput) MdbMysqlClusterUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbMysqlClusterUser {
		return vs[0].([]MdbMysqlClusterUser)[vs[1].(int)]
	}).(MdbMysqlClusterUserOutput)
}

type MdbMysqlClusterUserConnectionLimits struct {
	// Max connections per hour.
	MaxConnectionsPerHour *int `pulumi:"maxConnectionsPerHour"`
	// Max questions per hour.
	MaxQuestionsPerHour *int `pulumi:"maxQuestionsPerHour"`
	// Max updates per hour.
	MaxUpdatesPerHour *int `pulumi:"maxUpdatesPerHour"`
	// Max user connections.
	MaxUserConnections *int `pulumi:"maxUserConnections"`
}

// MdbMysqlClusterUserConnectionLimitsInput is an input type that accepts MdbMysqlClusterUserConnectionLimitsArgs and MdbMysqlClusterUserConnectionLimitsOutput values.
// You can construct a concrete instance of `MdbMysqlClusterUserConnectionLimitsInput` via:
//
//          MdbMysqlClusterUserConnectionLimitsArgs{...}
type MdbMysqlClusterUserConnectionLimitsInput interface {
	pulumi.Input

	ToMdbMysqlClusterUserConnectionLimitsOutput() MdbMysqlClusterUserConnectionLimitsOutput
	ToMdbMysqlClusterUserConnectionLimitsOutputWithContext(context.Context) MdbMysqlClusterUserConnectionLimitsOutput
}

type MdbMysqlClusterUserConnectionLimitsArgs struct {
	// Max connections per hour.
	MaxConnectionsPerHour pulumi.IntPtrInput `pulumi:"maxConnectionsPerHour"`
	// Max questions per hour.
	MaxQuestionsPerHour pulumi.IntPtrInput `pulumi:"maxQuestionsPerHour"`
	// Max updates per hour.
	MaxUpdatesPerHour pulumi.IntPtrInput `pulumi:"maxUpdatesPerHour"`
	// Max user connections.
	MaxUserConnections pulumi.IntPtrInput `pulumi:"maxUserConnections"`
}

func (MdbMysqlClusterUserConnectionLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMysqlClusterUserConnectionLimits)(nil)).Elem()
}

func (i MdbMysqlClusterUserConnectionLimitsArgs) ToMdbMysqlClusterUserConnectionLimitsOutput() MdbMysqlClusterUserConnectionLimitsOutput {
	return i.ToMdbMysqlClusterUserConnectionLimitsOutputWithContext(context.Background())
}

func (i MdbMysqlClusterUserConnectionLimitsArgs) ToMdbMysqlClusterUserConnectionLimitsOutputWithContext(ctx context.Context) MdbMysqlClusterUserConnectionLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMysqlClusterUserConnectionLimitsOutput)
}

func (i MdbMysqlClusterUserConnectionLimitsArgs) ToMdbMysqlClusterUserConnectionLimitsPtrOutput() MdbMysqlClusterUserConnectionLimitsPtrOutput {
	return i.ToMdbMysqlClusterUserConnectionLimitsPtrOutputWithContext(context.Background())
}

func (i MdbMysqlClusterUserConnectionLimitsArgs) ToMdbMysqlClusterUserConnectionLimitsPtrOutputWithContext(ctx context.Context) MdbMysqlClusterUserConnectionLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMysqlClusterUserConnectionLimitsOutput).ToMdbMysqlClusterUserConnectionLimitsPtrOutputWithContext(ctx)
}

// MdbMysqlClusterUserConnectionLimitsPtrInput is an input type that accepts MdbMysqlClusterUserConnectionLimitsArgs, MdbMysqlClusterUserConnectionLimitsPtr and MdbMysqlClusterUserConnectionLimitsPtrOutput values.
// You can construct a concrete instance of `MdbMysqlClusterUserConnectionLimitsPtrInput` via:
//
//          MdbMysqlClusterUserConnectionLimitsArgs{...}
//
//  or:
//
//          nil
type MdbMysqlClusterUserConnectionLimitsPtrInput interface {
	pulumi.Input

	ToMdbMysqlClusterUserConnectionLimitsPtrOutput() MdbMysqlClusterUserConnectionLimitsPtrOutput
	ToMdbMysqlClusterUserConnectionLimitsPtrOutputWithContext(context.Context) MdbMysqlClusterUserConnectionLimitsPtrOutput
}

type mdbMysqlClusterUserConnectionLimitsPtrType MdbMysqlClusterUserConnectionLimitsArgs

func MdbMysqlClusterUserConnectionLimitsPtr(v *MdbMysqlClusterUserConnectionLimitsArgs) MdbMysqlClusterUserConnectionLimitsPtrInput {
	return (*mdbMysqlClusterUserConnectionLimitsPtrType)(v)
}

func (*mdbMysqlClusterUserConnectionLimitsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbMysqlClusterUserConnectionLimits)(nil)).Elem()
}

func (i *mdbMysqlClusterUserConnectionLimitsPtrType) ToMdbMysqlClusterUserConnectionLimitsPtrOutput() MdbMysqlClusterUserConnectionLimitsPtrOutput {
	return i.ToMdbMysqlClusterUserConnectionLimitsPtrOutputWithContext(context.Background())
}

func (i *mdbMysqlClusterUserConnectionLimitsPtrType) ToMdbMysqlClusterUserConnectionLimitsPtrOutputWithContext(ctx context.Context) MdbMysqlClusterUserConnectionLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMysqlClusterUserConnectionLimitsPtrOutput)
}

type MdbMysqlClusterUserConnectionLimitsOutput struct{ *pulumi.OutputState }

func (MdbMysqlClusterUserConnectionLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMysqlClusterUserConnectionLimits)(nil)).Elem()
}

func (o MdbMysqlClusterUserConnectionLimitsOutput) ToMdbMysqlClusterUserConnectionLimitsOutput() MdbMysqlClusterUserConnectionLimitsOutput {
	return o
}

func (o MdbMysqlClusterUserConnectionLimitsOutput) ToMdbMysqlClusterUserConnectionLimitsOutputWithContext(ctx context.Context) MdbMysqlClusterUserConnectionLimitsOutput {
	return o
}

func (o MdbMysqlClusterUserConnectionLimitsOutput) ToMdbMysqlClusterUserConnectionLimitsPtrOutput() MdbMysqlClusterUserConnectionLimitsPtrOutput {
	return o.ToMdbMysqlClusterUserConnectionLimitsPtrOutputWithContext(context.Background())
}

func (o MdbMysqlClusterUserConnectionLimitsOutput) ToMdbMysqlClusterUserConnectionLimitsPtrOutputWithContext(ctx context.Context) MdbMysqlClusterUserConnectionLimitsPtrOutput {
	return o.ApplyT(func(v MdbMysqlClusterUserConnectionLimits) *MdbMysqlClusterUserConnectionLimits {
		return &v
	}).(MdbMysqlClusterUserConnectionLimitsPtrOutput)
}

// Max connections per hour.
func (o MdbMysqlClusterUserConnectionLimitsOutput) MaxConnectionsPerHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbMysqlClusterUserConnectionLimits) *int { return v.MaxConnectionsPerHour }).(pulumi.IntPtrOutput)
}

// Max questions per hour.
func (o MdbMysqlClusterUserConnectionLimitsOutput) MaxQuestionsPerHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbMysqlClusterUserConnectionLimits) *int { return v.MaxQuestionsPerHour }).(pulumi.IntPtrOutput)
}

// Max updates per hour.
func (o MdbMysqlClusterUserConnectionLimitsOutput) MaxUpdatesPerHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbMysqlClusterUserConnectionLimits) *int { return v.MaxUpdatesPerHour }).(pulumi.IntPtrOutput)
}

// Max user connections.
func (o MdbMysqlClusterUserConnectionLimitsOutput) MaxUserConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbMysqlClusterUserConnectionLimits) *int { return v.MaxUserConnections }).(pulumi.IntPtrOutput)
}

type MdbMysqlClusterUserConnectionLimitsPtrOutput struct{ *pulumi.OutputState }

func (MdbMysqlClusterUserConnectionLimitsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbMysqlClusterUserConnectionLimits)(nil)).Elem()
}

func (o MdbMysqlClusterUserConnectionLimitsPtrOutput) ToMdbMysqlClusterUserConnectionLimitsPtrOutput() MdbMysqlClusterUserConnectionLimitsPtrOutput {
	return o
}

func (o MdbMysqlClusterUserConnectionLimitsPtrOutput) ToMdbMysqlClusterUserConnectionLimitsPtrOutputWithContext(ctx context.Context) MdbMysqlClusterUserConnectionLimitsPtrOutput {
	return o
}

func (o MdbMysqlClusterUserConnectionLimitsPtrOutput) Elem() MdbMysqlClusterUserConnectionLimitsOutput {
	return o.ApplyT(func(v *MdbMysqlClusterUserConnectionLimits) MdbMysqlClusterUserConnectionLimits { return *v }).(MdbMysqlClusterUserConnectionLimitsOutput)
}

// Max connections per hour.
func (o MdbMysqlClusterUserConnectionLimitsPtrOutput) MaxConnectionsPerHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbMysqlClusterUserConnectionLimits) *int {
		if v == nil {
			return nil
		}
		return v.MaxConnectionsPerHour
	}).(pulumi.IntPtrOutput)
}

// Max questions per hour.
func (o MdbMysqlClusterUserConnectionLimitsPtrOutput) MaxQuestionsPerHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbMysqlClusterUserConnectionLimits) *int {
		if v == nil {
			return nil
		}
		return v.MaxQuestionsPerHour
	}).(pulumi.IntPtrOutput)
}

// Max updates per hour.
func (o MdbMysqlClusterUserConnectionLimitsPtrOutput) MaxUpdatesPerHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbMysqlClusterUserConnectionLimits) *int {
		if v == nil {
			return nil
		}
		return v.MaxUpdatesPerHour
	}).(pulumi.IntPtrOutput)
}

// Max user connections.
func (o MdbMysqlClusterUserConnectionLimitsPtrOutput) MaxUserConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbMysqlClusterUserConnectionLimits) *int {
		if v == nil {
			return nil
		}
		return v.MaxUserConnections
	}).(pulumi.IntPtrOutput)
}

type MdbMysqlClusterUserPermission struct {
	// The name of the database that the permission grants access to.
	DatabaseName string `pulumi:"databaseName"`
	// List user's roles in the database.
	// Allowed roles: `ALL`,`ALTER`,`ALTER_ROUTINE`,`CREATE`,`CREATE_ROUTINE`,`CREATE_TEMPORARY_TABLES`,
	// `CREATE_VIEW`,`DELETE`,`DROP`,`EVENT`,`EXECUTE`,`INDEX`,`INSERT`,`LOCK_TABLES`,`SELECT`,`SHOW_VIEW`,`TRIGGER`,`UPDATE`.
	Roles []string `pulumi:"roles"`
}

// MdbMysqlClusterUserPermissionInput is an input type that accepts MdbMysqlClusterUserPermissionArgs and MdbMysqlClusterUserPermissionOutput values.
// You can construct a concrete instance of `MdbMysqlClusterUserPermissionInput` via:
//
//          MdbMysqlClusterUserPermissionArgs{...}
type MdbMysqlClusterUserPermissionInput interface {
	pulumi.Input

	ToMdbMysqlClusterUserPermissionOutput() MdbMysqlClusterUserPermissionOutput
	ToMdbMysqlClusterUserPermissionOutputWithContext(context.Context) MdbMysqlClusterUserPermissionOutput
}

type MdbMysqlClusterUserPermissionArgs struct {
	// The name of the database that the permission grants access to.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// List user's roles in the database.
	// Allowed roles: `ALL`,`ALTER`,`ALTER_ROUTINE`,`CREATE`,`CREATE_ROUTINE`,`CREATE_TEMPORARY_TABLES`,
	// `CREATE_VIEW`,`DELETE`,`DROP`,`EVENT`,`EXECUTE`,`INDEX`,`INSERT`,`LOCK_TABLES`,`SELECT`,`SHOW_VIEW`,`TRIGGER`,`UPDATE`.
	Roles pulumi.StringArrayInput `pulumi:"roles"`
}

func (MdbMysqlClusterUserPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMysqlClusterUserPermission)(nil)).Elem()
}

func (i MdbMysqlClusterUserPermissionArgs) ToMdbMysqlClusterUserPermissionOutput() MdbMysqlClusterUserPermissionOutput {
	return i.ToMdbMysqlClusterUserPermissionOutputWithContext(context.Background())
}

func (i MdbMysqlClusterUserPermissionArgs) ToMdbMysqlClusterUserPermissionOutputWithContext(ctx context.Context) MdbMysqlClusterUserPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMysqlClusterUserPermissionOutput)
}

// MdbMysqlClusterUserPermissionArrayInput is an input type that accepts MdbMysqlClusterUserPermissionArray and MdbMysqlClusterUserPermissionArrayOutput values.
// You can construct a concrete instance of `MdbMysqlClusterUserPermissionArrayInput` via:
//
//          MdbMysqlClusterUserPermissionArray{ MdbMysqlClusterUserPermissionArgs{...} }
type MdbMysqlClusterUserPermissionArrayInput interface {
	pulumi.Input

	ToMdbMysqlClusterUserPermissionArrayOutput() MdbMysqlClusterUserPermissionArrayOutput
	ToMdbMysqlClusterUserPermissionArrayOutputWithContext(context.Context) MdbMysqlClusterUserPermissionArrayOutput
}

type MdbMysqlClusterUserPermissionArray []MdbMysqlClusterUserPermissionInput

func (MdbMysqlClusterUserPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbMysqlClusterUserPermission)(nil)).Elem()
}

func (i MdbMysqlClusterUserPermissionArray) ToMdbMysqlClusterUserPermissionArrayOutput() MdbMysqlClusterUserPermissionArrayOutput {
	return i.ToMdbMysqlClusterUserPermissionArrayOutputWithContext(context.Background())
}

func (i MdbMysqlClusterUserPermissionArray) ToMdbMysqlClusterUserPermissionArrayOutputWithContext(ctx context.Context) MdbMysqlClusterUserPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMysqlClusterUserPermissionArrayOutput)
}

type MdbMysqlClusterUserPermissionOutput struct{ *pulumi.OutputState }

func (MdbMysqlClusterUserPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMysqlClusterUserPermission)(nil)).Elem()
}

func (o MdbMysqlClusterUserPermissionOutput) ToMdbMysqlClusterUserPermissionOutput() MdbMysqlClusterUserPermissionOutput {
	return o
}

func (o MdbMysqlClusterUserPermissionOutput) ToMdbMysqlClusterUserPermissionOutputWithContext(ctx context.Context) MdbMysqlClusterUserPermissionOutput {
	return o
}

// The name of the database that the permission grants access to.
func (o MdbMysqlClusterUserPermissionOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MdbMysqlClusterUserPermission) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// List user's roles in the database.
// Allowed roles: `ALL`,`ALTER`,`ALTER_ROUTINE`,`CREATE`,`CREATE_ROUTINE`,`CREATE_TEMPORARY_TABLES`,
// `CREATE_VIEW`,`DELETE`,`DROP`,`EVENT`,`EXECUTE`,`INDEX`,`INSERT`,`LOCK_TABLES`,`SELECT`,`SHOW_VIEW`,`TRIGGER`,`UPDATE`.
func (o MdbMysqlClusterUserPermissionOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MdbMysqlClusterUserPermission) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

type MdbMysqlClusterUserPermissionArrayOutput struct{ *pulumi.OutputState }

func (MdbMysqlClusterUserPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbMysqlClusterUserPermission)(nil)).Elem()
}

func (o MdbMysqlClusterUserPermissionArrayOutput) ToMdbMysqlClusterUserPermissionArrayOutput() MdbMysqlClusterUserPermissionArrayOutput {
	return o
}

func (o MdbMysqlClusterUserPermissionArrayOutput) ToMdbMysqlClusterUserPermissionArrayOutputWithContext(ctx context.Context) MdbMysqlClusterUserPermissionArrayOutput {
	return o
}

func (o MdbMysqlClusterUserPermissionArrayOutput) Index(i pulumi.IntInput) MdbMysqlClusterUserPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbMysqlClusterUserPermission {
		return vs[0].([]MdbMysqlClusterUserPermission)[vs[1].(int)]
	}).(MdbMysqlClusterUserPermissionOutput)
}

type MdbPostgresqlClusterConfig struct {
	// Access policy to the PostgreSQL cluster. The structure is documented below.
	Access *MdbPostgresqlClusterConfigAccess `pulumi:"access"`
	// Configuration setting which enables/disables autofailover in cluster.
	Autofailover *bool `pulumi:"autofailover"`
	// Time to start the daily backup, in the UTC timezone. The structure is documented below.
	BackupWindowStart *MdbPostgresqlClusterConfigBackupWindowStart `pulumi:"backupWindowStart"`
	// Cluster performance diagnostics settings. The structure is documented below. [YC Documentation](https://cloud.yandex.com/docs/managed-postgresql/grpc/cluster_service#PerformanceDiagnostics)
	PerformanceDiagnostics *MdbPostgresqlClusterConfigPerformanceDiagnostics `pulumi:"performanceDiagnostics"`
	// Configuration of the connection pooler. The structure is documented below.
	PoolerConfig *MdbPostgresqlClusterConfigPoolerConfig `pulumi:"poolerConfig"`
	// PostgreSQL cluster config. Detail info in "postresql config" section (documented below).
	PostgresqlConfig map[string]string `pulumi:"postgresqlConfig"`
	// Resources allocated to hosts of the PostgreSQL cluster. The structure is documented below.
	Resources MdbPostgresqlClusterConfigResources `pulumi:"resources"`
	// Version of the extension.
	Version string `pulumi:"version"`
}

// MdbPostgresqlClusterConfigInput is an input type that accepts MdbPostgresqlClusterConfigArgs and MdbPostgresqlClusterConfigOutput values.
// You can construct a concrete instance of `MdbPostgresqlClusterConfigInput` via:
//
//          MdbPostgresqlClusterConfigArgs{...}
type MdbPostgresqlClusterConfigInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterConfigOutput() MdbPostgresqlClusterConfigOutput
	ToMdbPostgresqlClusterConfigOutputWithContext(context.Context) MdbPostgresqlClusterConfigOutput
}

type MdbPostgresqlClusterConfigArgs struct {
	// Access policy to the PostgreSQL cluster. The structure is documented below.
	Access MdbPostgresqlClusterConfigAccessPtrInput `pulumi:"access"`
	// Configuration setting which enables/disables autofailover in cluster.
	Autofailover pulumi.BoolPtrInput `pulumi:"autofailover"`
	// Time to start the daily backup, in the UTC timezone. The structure is documented below.
	BackupWindowStart MdbPostgresqlClusterConfigBackupWindowStartPtrInput `pulumi:"backupWindowStart"`
	// Cluster performance diagnostics settings. The structure is documented below. [YC Documentation](https://cloud.yandex.com/docs/managed-postgresql/grpc/cluster_service#PerformanceDiagnostics)
	PerformanceDiagnostics MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrInput `pulumi:"performanceDiagnostics"`
	// Configuration of the connection pooler. The structure is documented below.
	PoolerConfig MdbPostgresqlClusterConfigPoolerConfigPtrInput `pulumi:"poolerConfig"`
	// PostgreSQL cluster config. Detail info in "postresql config" section (documented below).
	PostgresqlConfig pulumi.StringMapInput `pulumi:"postgresqlConfig"`
	// Resources allocated to hosts of the PostgreSQL cluster. The structure is documented below.
	Resources MdbPostgresqlClusterConfigResourcesInput `pulumi:"resources"`
	// Version of the extension.
	Version pulumi.StringInput `pulumi:"version"`
}

func (MdbPostgresqlClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbPostgresqlClusterConfig)(nil)).Elem()
}

func (i MdbPostgresqlClusterConfigArgs) ToMdbPostgresqlClusterConfigOutput() MdbPostgresqlClusterConfigOutput {
	return i.ToMdbPostgresqlClusterConfigOutputWithContext(context.Background())
}

func (i MdbPostgresqlClusterConfigArgs) ToMdbPostgresqlClusterConfigOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterConfigOutput)
}

func (i MdbPostgresqlClusterConfigArgs) ToMdbPostgresqlClusterConfigPtrOutput() MdbPostgresqlClusterConfigPtrOutput {
	return i.ToMdbPostgresqlClusterConfigPtrOutputWithContext(context.Background())
}

func (i MdbPostgresqlClusterConfigArgs) ToMdbPostgresqlClusterConfigPtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterConfigOutput).ToMdbPostgresqlClusterConfigPtrOutputWithContext(ctx)
}

// MdbPostgresqlClusterConfigPtrInput is an input type that accepts MdbPostgresqlClusterConfigArgs, MdbPostgresqlClusterConfigPtr and MdbPostgresqlClusterConfigPtrOutput values.
// You can construct a concrete instance of `MdbPostgresqlClusterConfigPtrInput` via:
//
//          MdbPostgresqlClusterConfigArgs{...}
//
//  or:
//
//          nil
type MdbPostgresqlClusterConfigPtrInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterConfigPtrOutput() MdbPostgresqlClusterConfigPtrOutput
	ToMdbPostgresqlClusterConfigPtrOutputWithContext(context.Context) MdbPostgresqlClusterConfigPtrOutput
}

type mdbPostgresqlClusterConfigPtrType MdbPostgresqlClusterConfigArgs

func MdbPostgresqlClusterConfigPtr(v *MdbPostgresqlClusterConfigArgs) MdbPostgresqlClusterConfigPtrInput {
	return (*mdbPostgresqlClusterConfigPtrType)(v)
}

func (*mdbPostgresqlClusterConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbPostgresqlClusterConfig)(nil)).Elem()
}

func (i *mdbPostgresqlClusterConfigPtrType) ToMdbPostgresqlClusterConfigPtrOutput() MdbPostgresqlClusterConfigPtrOutput {
	return i.ToMdbPostgresqlClusterConfigPtrOutputWithContext(context.Background())
}

func (i *mdbPostgresqlClusterConfigPtrType) ToMdbPostgresqlClusterConfigPtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterConfigPtrOutput)
}

type MdbPostgresqlClusterConfigOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbPostgresqlClusterConfig)(nil)).Elem()
}

func (o MdbPostgresqlClusterConfigOutput) ToMdbPostgresqlClusterConfigOutput() MdbPostgresqlClusterConfigOutput {
	return o
}

func (o MdbPostgresqlClusterConfigOutput) ToMdbPostgresqlClusterConfigOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigOutput {
	return o
}

func (o MdbPostgresqlClusterConfigOutput) ToMdbPostgresqlClusterConfigPtrOutput() MdbPostgresqlClusterConfigPtrOutput {
	return o.ToMdbPostgresqlClusterConfigPtrOutputWithContext(context.Background())
}

func (o MdbPostgresqlClusterConfigOutput) ToMdbPostgresqlClusterConfigPtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterConfig) *MdbPostgresqlClusterConfig {
		return &v
	}).(MdbPostgresqlClusterConfigPtrOutput)
}

// Access policy to the PostgreSQL cluster. The structure is documented below.
func (o MdbPostgresqlClusterConfigOutput) Access() MdbPostgresqlClusterConfigAccessPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterConfig) *MdbPostgresqlClusterConfigAccess { return v.Access }).(MdbPostgresqlClusterConfigAccessPtrOutput)
}

// Configuration setting which enables/disables autofailover in cluster.
func (o MdbPostgresqlClusterConfigOutput) Autofailover() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterConfig) *bool { return v.Autofailover }).(pulumi.BoolPtrOutput)
}

// Time to start the daily backup, in the UTC timezone. The structure is documented below.
func (o MdbPostgresqlClusterConfigOutput) BackupWindowStart() MdbPostgresqlClusterConfigBackupWindowStartPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterConfig) *MdbPostgresqlClusterConfigBackupWindowStart {
		return v.BackupWindowStart
	}).(MdbPostgresqlClusterConfigBackupWindowStartPtrOutput)
}

// Cluster performance diagnostics settings. The structure is documented below. [YC Documentation](https://cloud.yandex.com/docs/managed-postgresql/grpc/cluster_service#PerformanceDiagnostics)
func (o MdbPostgresqlClusterConfigOutput) PerformanceDiagnostics() MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterConfig) *MdbPostgresqlClusterConfigPerformanceDiagnostics {
		return v.PerformanceDiagnostics
	}).(MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput)
}

// Configuration of the connection pooler. The structure is documented below.
func (o MdbPostgresqlClusterConfigOutput) PoolerConfig() MdbPostgresqlClusterConfigPoolerConfigPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterConfig) *MdbPostgresqlClusterConfigPoolerConfig { return v.PoolerConfig }).(MdbPostgresqlClusterConfigPoolerConfigPtrOutput)
}

// PostgreSQL cluster config. Detail info in "postresql config" section (documented below).
func (o MdbPostgresqlClusterConfigOutput) PostgresqlConfig() pulumi.StringMapOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterConfig) map[string]string { return v.PostgresqlConfig }).(pulumi.StringMapOutput)
}

// Resources allocated to hosts of the PostgreSQL cluster. The structure is documented below.
func (o MdbPostgresqlClusterConfigOutput) Resources() MdbPostgresqlClusterConfigResourcesOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterConfig) MdbPostgresqlClusterConfigResources { return v.Resources }).(MdbPostgresqlClusterConfigResourcesOutput)
}

// Version of the extension.
func (o MdbPostgresqlClusterConfigOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterConfig) string { return v.Version }).(pulumi.StringOutput)
}

type MdbPostgresqlClusterConfigPtrOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbPostgresqlClusterConfig)(nil)).Elem()
}

func (o MdbPostgresqlClusterConfigPtrOutput) ToMdbPostgresqlClusterConfigPtrOutput() MdbPostgresqlClusterConfigPtrOutput {
	return o
}

func (o MdbPostgresqlClusterConfigPtrOutput) ToMdbPostgresqlClusterConfigPtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigPtrOutput {
	return o
}

func (o MdbPostgresqlClusterConfigPtrOutput) Elem() MdbPostgresqlClusterConfigOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterConfig) MdbPostgresqlClusterConfig { return *v }).(MdbPostgresqlClusterConfigOutput)
}

// Access policy to the PostgreSQL cluster. The structure is documented below.
func (o MdbPostgresqlClusterConfigPtrOutput) Access() MdbPostgresqlClusterConfigAccessPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterConfig) *MdbPostgresqlClusterConfigAccess {
		if v == nil {
			return nil
		}
		return v.Access
	}).(MdbPostgresqlClusterConfigAccessPtrOutput)
}

// Configuration setting which enables/disables autofailover in cluster.
func (o MdbPostgresqlClusterConfigPtrOutput) Autofailover() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Autofailover
	}).(pulumi.BoolPtrOutput)
}

// Time to start the daily backup, in the UTC timezone. The structure is documented below.
func (o MdbPostgresqlClusterConfigPtrOutput) BackupWindowStart() MdbPostgresqlClusterConfigBackupWindowStartPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterConfig) *MdbPostgresqlClusterConfigBackupWindowStart {
		if v == nil {
			return nil
		}
		return v.BackupWindowStart
	}).(MdbPostgresqlClusterConfigBackupWindowStartPtrOutput)
}

// Cluster performance diagnostics settings. The structure is documented below. [YC Documentation](https://cloud.yandex.com/docs/managed-postgresql/grpc/cluster_service#PerformanceDiagnostics)
func (o MdbPostgresqlClusterConfigPtrOutput) PerformanceDiagnostics() MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterConfig) *MdbPostgresqlClusterConfigPerformanceDiagnostics {
		if v == nil {
			return nil
		}
		return v.PerformanceDiagnostics
	}).(MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput)
}

// Configuration of the connection pooler. The structure is documented below.
func (o MdbPostgresqlClusterConfigPtrOutput) PoolerConfig() MdbPostgresqlClusterConfigPoolerConfigPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterConfig) *MdbPostgresqlClusterConfigPoolerConfig {
		if v == nil {
			return nil
		}
		return v.PoolerConfig
	}).(MdbPostgresqlClusterConfigPoolerConfigPtrOutput)
}

// PostgreSQL cluster config. Detail info in "postresql config" section (documented below).
func (o MdbPostgresqlClusterConfigPtrOutput) PostgresqlConfig() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.PostgresqlConfig
	}).(pulumi.StringMapOutput)
}

// Resources allocated to hosts of the PostgreSQL cluster. The structure is documented below.
func (o MdbPostgresqlClusterConfigPtrOutput) Resources() MdbPostgresqlClusterConfigResourcesPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterConfig) *MdbPostgresqlClusterConfigResources {
		if v == nil {
			return nil
		}
		return &v.Resources
	}).(MdbPostgresqlClusterConfigResourcesPtrOutput)
}

// Version of the extension.
func (o MdbPostgresqlClusterConfigPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type MdbPostgresqlClusterConfigAccess struct {
	// Allow access for [Yandex DataLens](https://cloud.yandex.com/services/datalens).
	DataLens *bool `pulumi:"dataLens"`
	// Allows access for [SQL queries in the management console](https://cloud.yandex.com/docs/managed-postgresql/operations/web-sql-query)
	WebSql *bool `pulumi:"webSql"`
}

// MdbPostgresqlClusterConfigAccessInput is an input type that accepts MdbPostgresqlClusterConfigAccessArgs and MdbPostgresqlClusterConfigAccessOutput values.
// You can construct a concrete instance of `MdbPostgresqlClusterConfigAccessInput` via:
//
//          MdbPostgresqlClusterConfigAccessArgs{...}
type MdbPostgresqlClusterConfigAccessInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterConfigAccessOutput() MdbPostgresqlClusterConfigAccessOutput
	ToMdbPostgresqlClusterConfigAccessOutputWithContext(context.Context) MdbPostgresqlClusterConfigAccessOutput
}

type MdbPostgresqlClusterConfigAccessArgs struct {
	// Allow access for [Yandex DataLens](https://cloud.yandex.com/services/datalens).
	DataLens pulumi.BoolPtrInput `pulumi:"dataLens"`
	// Allows access for [SQL queries in the management console](https://cloud.yandex.com/docs/managed-postgresql/operations/web-sql-query)
	WebSql pulumi.BoolPtrInput `pulumi:"webSql"`
}

func (MdbPostgresqlClusterConfigAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbPostgresqlClusterConfigAccess)(nil)).Elem()
}

func (i MdbPostgresqlClusterConfigAccessArgs) ToMdbPostgresqlClusterConfigAccessOutput() MdbPostgresqlClusterConfigAccessOutput {
	return i.ToMdbPostgresqlClusterConfigAccessOutputWithContext(context.Background())
}

func (i MdbPostgresqlClusterConfigAccessArgs) ToMdbPostgresqlClusterConfigAccessOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterConfigAccessOutput)
}

func (i MdbPostgresqlClusterConfigAccessArgs) ToMdbPostgresqlClusterConfigAccessPtrOutput() MdbPostgresqlClusterConfigAccessPtrOutput {
	return i.ToMdbPostgresqlClusterConfigAccessPtrOutputWithContext(context.Background())
}

func (i MdbPostgresqlClusterConfigAccessArgs) ToMdbPostgresqlClusterConfigAccessPtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterConfigAccessOutput).ToMdbPostgresqlClusterConfigAccessPtrOutputWithContext(ctx)
}

// MdbPostgresqlClusterConfigAccessPtrInput is an input type that accepts MdbPostgresqlClusterConfigAccessArgs, MdbPostgresqlClusterConfigAccessPtr and MdbPostgresqlClusterConfigAccessPtrOutput values.
// You can construct a concrete instance of `MdbPostgresqlClusterConfigAccessPtrInput` via:
//
//          MdbPostgresqlClusterConfigAccessArgs{...}
//
//  or:
//
//          nil
type MdbPostgresqlClusterConfigAccessPtrInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterConfigAccessPtrOutput() MdbPostgresqlClusterConfigAccessPtrOutput
	ToMdbPostgresqlClusterConfigAccessPtrOutputWithContext(context.Context) MdbPostgresqlClusterConfigAccessPtrOutput
}

type mdbPostgresqlClusterConfigAccessPtrType MdbPostgresqlClusterConfigAccessArgs

func MdbPostgresqlClusterConfigAccessPtr(v *MdbPostgresqlClusterConfigAccessArgs) MdbPostgresqlClusterConfigAccessPtrInput {
	return (*mdbPostgresqlClusterConfigAccessPtrType)(v)
}

func (*mdbPostgresqlClusterConfigAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbPostgresqlClusterConfigAccess)(nil)).Elem()
}

func (i *mdbPostgresqlClusterConfigAccessPtrType) ToMdbPostgresqlClusterConfigAccessPtrOutput() MdbPostgresqlClusterConfigAccessPtrOutput {
	return i.ToMdbPostgresqlClusterConfigAccessPtrOutputWithContext(context.Background())
}

func (i *mdbPostgresqlClusterConfigAccessPtrType) ToMdbPostgresqlClusterConfigAccessPtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterConfigAccessPtrOutput)
}

type MdbPostgresqlClusterConfigAccessOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterConfigAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbPostgresqlClusterConfigAccess)(nil)).Elem()
}

func (o MdbPostgresqlClusterConfigAccessOutput) ToMdbPostgresqlClusterConfigAccessOutput() MdbPostgresqlClusterConfigAccessOutput {
	return o
}

func (o MdbPostgresqlClusterConfigAccessOutput) ToMdbPostgresqlClusterConfigAccessOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigAccessOutput {
	return o
}

func (o MdbPostgresqlClusterConfigAccessOutput) ToMdbPostgresqlClusterConfigAccessPtrOutput() MdbPostgresqlClusterConfigAccessPtrOutput {
	return o.ToMdbPostgresqlClusterConfigAccessPtrOutputWithContext(context.Background())
}

func (o MdbPostgresqlClusterConfigAccessOutput) ToMdbPostgresqlClusterConfigAccessPtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigAccessPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterConfigAccess) *MdbPostgresqlClusterConfigAccess {
		return &v
	}).(MdbPostgresqlClusterConfigAccessPtrOutput)
}

// Allow access for [Yandex DataLens](https://cloud.yandex.com/services/datalens).
func (o MdbPostgresqlClusterConfigAccessOutput) DataLens() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterConfigAccess) *bool { return v.DataLens }).(pulumi.BoolPtrOutput)
}

// Allows access for [SQL queries in the management console](https://cloud.yandex.com/docs/managed-postgresql/operations/web-sql-query)
func (o MdbPostgresqlClusterConfigAccessOutput) WebSql() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterConfigAccess) *bool { return v.WebSql }).(pulumi.BoolPtrOutput)
}

type MdbPostgresqlClusterConfigAccessPtrOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterConfigAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbPostgresqlClusterConfigAccess)(nil)).Elem()
}

func (o MdbPostgresqlClusterConfigAccessPtrOutput) ToMdbPostgresqlClusterConfigAccessPtrOutput() MdbPostgresqlClusterConfigAccessPtrOutput {
	return o
}

func (o MdbPostgresqlClusterConfigAccessPtrOutput) ToMdbPostgresqlClusterConfigAccessPtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigAccessPtrOutput {
	return o
}

func (o MdbPostgresqlClusterConfigAccessPtrOutput) Elem() MdbPostgresqlClusterConfigAccessOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterConfigAccess) MdbPostgresqlClusterConfigAccess { return *v }).(MdbPostgresqlClusterConfigAccessOutput)
}

// Allow access for [Yandex DataLens](https://cloud.yandex.com/services/datalens).
func (o MdbPostgresqlClusterConfigAccessPtrOutput) DataLens() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterConfigAccess) *bool {
		if v == nil {
			return nil
		}
		return v.DataLens
	}).(pulumi.BoolPtrOutput)
}

// Allows access for [SQL queries in the management console](https://cloud.yandex.com/docs/managed-postgresql/operations/web-sql-query)
func (o MdbPostgresqlClusterConfigAccessPtrOutput) WebSql() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterConfigAccess) *bool {
		if v == nil {
			return nil
		}
		return v.WebSql
	}).(pulumi.BoolPtrOutput)
}

type MdbPostgresqlClusterConfigBackupWindowStart struct {
	// The hour at which backup will be started (UTC).
	Hours *int `pulumi:"hours"`
	// The minute at which backup will be started (UTC).
	Minutes *int `pulumi:"minutes"`
}

// MdbPostgresqlClusterConfigBackupWindowStartInput is an input type that accepts MdbPostgresqlClusterConfigBackupWindowStartArgs and MdbPostgresqlClusterConfigBackupWindowStartOutput values.
// You can construct a concrete instance of `MdbPostgresqlClusterConfigBackupWindowStartInput` via:
//
//          MdbPostgresqlClusterConfigBackupWindowStartArgs{...}
type MdbPostgresqlClusterConfigBackupWindowStartInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterConfigBackupWindowStartOutput() MdbPostgresqlClusterConfigBackupWindowStartOutput
	ToMdbPostgresqlClusterConfigBackupWindowStartOutputWithContext(context.Context) MdbPostgresqlClusterConfigBackupWindowStartOutput
}

type MdbPostgresqlClusterConfigBackupWindowStartArgs struct {
	// The hour at which backup will be started (UTC).
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// The minute at which backup will be started (UTC).
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
}

func (MdbPostgresqlClusterConfigBackupWindowStartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbPostgresqlClusterConfigBackupWindowStart)(nil)).Elem()
}

func (i MdbPostgresqlClusterConfigBackupWindowStartArgs) ToMdbPostgresqlClusterConfigBackupWindowStartOutput() MdbPostgresqlClusterConfigBackupWindowStartOutput {
	return i.ToMdbPostgresqlClusterConfigBackupWindowStartOutputWithContext(context.Background())
}

func (i MdbPostgresqlClusterConfigBackupWindowStartArgs) ToMdbPostgresqlClusterConfigBackupWindowStartOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigBackupWindowStartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterConfigBackupWindowStartOutput)
}

func (i MdbPostgresqlClusterConfigBackupWindowStartArgs) ToMdbPostgresqlClusterConfigBackupWindowStartPtrOutput() MdbPostgresqlClusterConfigBackupWindowStartPtrOutput {
	return i.ToMdbPostgresqlClusterConfigBackupWindowStartPtrOutputWithContext(context.Background())
}

func (i MdbPostgresqlClusterConfigBackupWindowStartArgs) ToMdbPostgresqlClusterConfigBackupWindowStartPtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigBackupWindowStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterConfigBackupWindowStartOutput).ToMdbPostgresqlClusterConfigBackupWindowStartPtrOutputWithContext(ctx)
}

// MdbPostgresqlClusterConfigBackupWindowStartPtrInput is an input type that accepts MdbPostgresqlClusterConfigBackupWindowStartArgs, MdbPostgresqlClusterConfigBackupWindowStartPtr and MdbPostgresqlClusterConfigBackupWindowStartPtrOutput values.
// You can construct a concrete instance of `MdbPostgresqlClusterConfigBackupWindowStartPtrInput` via:
//
//          MdbPostgresqlClusterConfigBackupWindowStartArgs{...}
//
//  or:
//
//          nil
type MdbPostgresqlClusterConfigBackupWindowStartPtrInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterConfigBackupWindowStartPtrOutput() MdbPostgresqlClusterConfigBackupWindowStartPtrOutput
	ToMdbPostgresqlClusterConfigBackupWindowStartPtrOutputWithContext(context.Context) MdbPostgresqlClusterConfigBackupWindowStartPtrOutput
}

type mdbPostgresqlClusterConfigBackupWindowStartPtrType MdbPostgresqlClusterConfigBackupWindowStartArgs

func MdbPostgresqlClusterConfigBackupWindowStartPtr(v *MdbPostgresqlClusterConfigBackupWindowStartArgs) MdbPostgresqlClusterConfigBackupWindowStartPtrInput {
	return (*mdbPostgresqlClusterConfigBackupWindowStartPtrType)(v)
}

func (*mdbPostgresqlClusterConfigBackupWindowStartPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbPostgresqlClusterConfigBackupWindowStart)(nil)).Elem()
}

func (i *mdbPostgresqlClusterConfigBackupWindowStartPtrType) ToMdbPostgresqlClusterConfigBackupWindowStartPtrOutput() MdbPostgresqlClusterConfigBackupWindowStartPtrOutput {
	return i.ToMdbPostgresqlClusterConfigBackupWindowStartPtrOutputWithContext(context.Background())
}

func (i *mdbPostgresqlClusterConfigBackupWindowStartPtrType) ToMdbPostgresqlClusterConfigBackupWindowStartPtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigBackupWindowStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterConfigBackupWindowStartPtrOutput)
}

type MdbPostgresqlClusterConfigBackupWindowStartOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterConfigBackupWindowStartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbPostgresqlClusterConfigBackupWindowStart)(nil)).Elem()
}

func (o MdbPostgresqlClusterConfigBackupWindowStartOutput) ToMdbPostgresqlClusterConfigBackupWindowStartOutput() MdbPostgresqlClusterConfigBackupWindowStartOutput {
	return o
}

func (o MdbPostgresqlClusterConfigBackupWindowStartOutput) ToMdbPostgresqlClusterConfigBackupWindowStartOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigBackupWindowStartOutput {
	return o
}

func (o MdbPostgresqlClusterConfigBackupWindowStartOutput) ToMdbPostgresqlClusterConfigBackupWindowStartPtrOutput() MdbPostgresqlClusterConfigBackupWindowStartPtrOutput {
	return o.ToMdbPostgresqlClusterConfigBackupWindowStartPtrOutputWithContext(context.Background())
}

func (o MdbPostgresqlClusterConfigBackupWindowStartOutput) ToMdbPostgresqlClusterConfigBackupWindowStartPtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigBackupWindowStartPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterConfigBackupWindowStart) *MdbPostgresqlClusterConfigBackupWindowStart {
		return &v
	}).(MdbPostgresqlClusterConfigBackupWindowStartPtrOutput)
}

// The hour at which backup will be started (UTC).
func (o MdbPostgresqlClusterConfigBackupWindowStartOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterConfigBackupWindowStart) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// The minute at which backup will be started (UTC).
func (o MdbPostgresqlClusterConfigBackupWindowStartOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterConfigBackupWindowStart) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

type MdbPostgresqlClusterConfigBackupWindowStartPtrOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterConfigBackupWindowStartPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbPostgresqlClusterConfigBackupWindowStart)(nil)).Elem()
}

func (o MdbPostgresqlClusterConfigBackupWindowStartPtrOutput) ToMdbPostgresqlClusterConfigBackupWindowStartPtrOutput() MdbPostgresqlClusterConfigBackupWindowStartPtrOutput {
	return o
}

func (o MdbPostgresqlClusterConfigBackupWindowStartPtrOutput) ToMdbPostgresqlClusterConfigBackupWindowStartPtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigBackupWindowStartPtrOutput {
	return o
}

func (o MdbPostgresqlClusterConfigBackupWindowStartPtrOutput) Elem() MdbPostgresqlClusterConfigBackupWindowStartOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterConfigBackupWindowStart) MdbPostgresqlClusterConfigBackupWindowStart {
		return *v
	}).(MdbPostgresqlClusterConfigBackupWindowStartOutput)
}

// The hour at which backup will be started (UTC).
func (o MdbPostgresqlClusterConfigBackupWindowStartPtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterConfigBackupWindowStart) *int {
		if v == nil {
			return nil
		}
		return v.Hours
	}).(pulumi.IntPtrOutput)
}

// The minute at which backup will be started (UTC).
func (o MdbPostgresqlClusterConfigBackupWindowStartPtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterConfigBackupWindowStart) *int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntPtrOutput)
}

type MdbPostgresqlClusterConfigPerformanceDiagnostics struct {
	// Enable performance diagnostics
	Enabled *bool `pulumi:"enabled"`
	// Interval (in seconds) for pgStatActivity sampling Acceptable values are 1 to 86400, inclusive.
	SessionsSamplingInterval int `pulumi:"sessionsSamplingInterval"`
	// Interval (in seconds) for pgStatStatements sampling Acceptable values are 1 to 86400, inclusive.
	StatementsSamplingInterval int `pulumi:"statementsSamplingInterval"`
}

// MdbPostgresqlClusterConfigPerformanceDiagnosticsInput is an input type that accepts MdbPostgresqlClusterConfigPerformanceDiagnosticsArgs and MdbPostgresqlClusterConfigPerformanceDiagnosticsOutput values.
// You can construct a concrete instance of `MdbPostgresqlClusterConfigPerformanceDiagnosticsInput` via:
//
//          MdbPostgresqlClusterConfigPerformanceDiagnosticsArgs{...}
type MdbPostgresqlClusterConfigPerformanceDiagnosticsInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterConfigPerformanceDiagnosticsOutput() MdbPostgresqlClusterConfigPerformanceDiagnosticsOutput
	ToMdbPostgresqlClusterConfigPerformanceDiagnosticsOutputWithContext(context.Context) MdbPostgresqlClusterConfigPerformanceDiagnosticsOutput
}

type MdbPostgresqlClusterConfigPerformanceDiagnosticsArgs struct {
	// Enable performance diagnostics
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Interval (in seconds) for pgStatActivity sampling Acceptable values are 1 to 86400, inclusive.
	SessionsSamplingInterval pulumi.IntInput `pulumi:"sessionsSamplingInterval"`
	// Interval (in seconds) for pgStatStatements sampling Acceptable values are 1 to 86400, inclusive.
	StatementsSamplingInterval pulumi.IntInput `pulumi:"statementsSamplingInterval"`
}

func (MdbPostgresqlClusterConfigPerformanceDiagnosticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbPostgresqlClusterConfigPerformanceDiagnostics)(nil)).Elem()
}

func (i MdbPostgresqlClusterConfigPerformanceDiagnosticsArgs) ToMdbPostgresqlClusterConfigPerformanceDiagnosticsOutput() MdbPostgresqlClusterConfigPerformanceDiagnosticsOutput {
	return i.ToMdbPostgresqlClusterConfigPerformanceDiagnosticsOutputWithContext(context.Background())
}

func (i MdbPostgresqlClusterConfigPerformanceDiagnosticsArgs) ToMdbPostgresqlClusterConfigPerformanceDiagnosticsOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigPerformanceDiagnosticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterConfigPerformanceDiagnosticsOutput)
}

func (i MdbPostgresqlClusterConfigPerformanceDiagnosticsArgs) ToMdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput() MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput {
	return i.ToMdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutputWithContext(context.Background())
}

func (i MdbPostgresqlClusterConfigPerformanceDiagnosticsArgs) ToMdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterConfigPerformanceDiagnosticsOutput).ToMdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutputWithContext(ctx)
}

// MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrInput is an input type that accepts MdbPostgresqlClusterConfigPerformanceDiagnosticsArgs, MdbPostgresqlClusterConfigPerformanceDiagnosticsPtr and MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput values.
// You can construct a concrete instance of `MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrInput` via:
//
//          MdbPostgresqlClusterConfigPerformanceDiagnosticsArgs{...}
//
//  or:
//
//          nil
type MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput() MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput
	ToMdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutputWithContext(context.Context) MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput
}

type mdbPostgresqlClusterConfigPerformanceDiagnosticsPtrType MdbPostgresqlClusterConfigPerformanceDiagnosticsArgs

func MdbPostgresqlClusterConfigPerformanceDiagnosticsPtr(v *MdbPostgresqlClusterConfigPerformanceDiagnosticsArgs) MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrInput {
	return (*mdbPostgresqlClusterConfigPerformanceDiagnosticsPtrType)(v)
}

func (*mdbPostgresqlClusterConfigPerformanceDiagnosticsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbPostgresqlClusterConfigPerformanceDiagnostics)(nil)).Elem()
}

func (i *mdbPostgresqlClusterConfigPerformanceDiagnosticsPtrType) ToMdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput() MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput {
	return i.ToMdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutputWithContext(context.Background())
}

func (i *mdbPostgresqlClusterConfigPerformanceDiagnosticsPtrType) ToMdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput)
}

type MdbPostgresqlClusterConfigPerformanceDiagnosticsOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterConfigPerformanceDiagnosticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbPostgresqlClusterConfigPerformanceDiagnostics)(nil)).Elem()
}

func (o MdbPostgresqlClusterConfigPerformanceDiagnosticsOutput) ToMdbPostgresqlClusterConfigPerformanceDiagnosticsOutput() MdbPostgresqlClusterConfigPerformanceDiagnosticsOutput {
	return o
}

func (o MdbPostgresqlClusterConfigPerformanceDiagnosticsOutput) ToMdbPostgresqlClusterConfigPerformanceDiagnosticsOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigPerformanceDiagnosticsOutput {
	return o
}

func (o MdbPostgresqlClusterConfigPerformanceDiagnosticsOutput) ToMdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput() MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput {
	return o.ToMdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutputWithContext(context.Background())
}

func (o MdbPostgresqlClusterConfigPerformanceDiagnosticsOutput) ToMdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterConfigPerformanceDiagnostics) *MdbPostgresqlClusterConfigPerformanceDiagnostics {
		return &v
	}).(MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput)
}

// Enable performance diagnostics
func (o MdbPostgresqlClusterConfigPerformanceDiagnosticsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterConfigPerformanceDiagnostics) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Interval (in seconds) for pgStatActivity sampling Acceptable values are 1 to 86400, inclusive.
func (o MdbPostgresqlClusterConfigPerformanceDiagnosticsOutput) SessionsSamplingInterval() pulumi.IntOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterConfigPerformanceDiagnostics) int { return v.SessionsSamplingInterval }).(pulumi.IntOutput)
}

// Interval (in seconds) for pgStatStatements sampling Acceptable values are 1 to 86400, inclusive.
func (o MdbPostgresqlClusterConfigPerformanceDiagnosticsOutput) StatementsSamplingInterval() pulumi.IntOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterConfigPerformanceDiagnostics) int { return v.StatementsSamplingInterval }).(pulumi.IntOutput)
}

type MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbPostgresqlClusterConfigPerformanceDiagnostics)(nil)).Elem()
}

func (o MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput) ToMdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput() MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput {
	return o
}

func (o MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput) ToMdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput {
	return o
}

func (o MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput) Elem() MdbPostgresqlClusterConfigPerformanceDiagnosticsOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterConfigPerformanceDiagnostics) MdbPostgresqlClusterConfigPerformanceDiagnostics {
		return *v
	}).(MdbPostgresqlClusterConfigPerformanceDiagnosticsOutput)
}

// Enable performance diagnostics
func (o MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterConfigPerformanceDiagnostics) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Interval (in seconds) for pgStatActivity sampling Acceptable values are 1 to 86400, inclusive.
func (o MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput) SessionsSamplingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterConfigPerformanceDiagnostics) *int {
		if v == nil {
			return nil
		}
		return &v.SessionsSamplingInterval
	}).(pulumi.IntPtrOutput)
}

// Interval (in seconds) for pgStatStatements sampling Acceptable values are 1 to 86400, inclusive.
func (o MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput) StatementsSamplingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterConfigPerformanceDiagnostics) *int {
		if v == nil {
			return nil
		}
		return &v.StatementsSamplingInterval
	}).(pulumi.IntPtrOutput)
}

type MdbPostgresqlClusterConfigPoolerConfig struct {
	// Setting `poolDiscard` [parameter in Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_discard-yesno).
	PoolDiscard *bool `pulumi:"poolDiscard"`
	// Mode that the connection pooler is working in. See descriptions of all modes in the [documentation for Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string.
	PoolingMode *string `pulumi:"poolingMode"`
}

// MdbPostgresqlClusterConfigPoolerConfigInput is an input type that accepts MdbPostgresqlClusterConfigPoolerConfigArgs and MdbPostgresqlClusterConfigPoolerConfigOutput values.
// You can construct a concrete instance of `MdbPostgresqlClusterConfigPoolerConfigInput` via:
//
//          MdbPostgresqlClusterConfigPoolerConfigArgs{...}
type MdbPostgresqlClusterConfigPoolerConfigInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterConfigPoolerConfigOutput() MdbPostgresqlClusterConfigPoolerConfigOutput
	ToMdbPostgresqlClusterConfigPoolerConfigOutputWithContext(context.Context) MdbPostgresqlClusterConfigPoolerConfigOutput
}

type MdbPostgresqlClusterConfigPoolerConfigArgs struct {
	// Setting `poolDiscard` [parameter in Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_discard-yesno).
	PoolDiscard pulumi.BoolPtrInput `pulumi:"poolDiscard"`
	// Mode that the connection pooler is working in. See descriptions of all modes in the [documentation for Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string.
	PoolingMode pulumi.StringPtrInput `pulumi:"poolingMode"`
}

func (MdbPostgresqlClusterConfigPoolerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbPostgresqlClusterConfigPoolerConfig)(nil)).Elem()
}

func (i MdbPostgresqlClusterConfigPoolerConfigArgs) ToMdbPostgresqlClusterConfigPoolerConfigOutput() MdbPostgresqlClusterConfigPoolerConfigOutput {
	return i.ToMdbPostgresqlClusterConfigPoolerConfigOutputWithContext(context.Background())
}

func (i MdbPostgresqlClusterConfigPoolerConfigArgs) ToMdbPostgresqlClusterConfigPoolerConfigOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigPoolerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterConfigPoolerConfigOutput)
}

func (i MdbPostgresqlClusterConfigPoolerConfigArgs) ToMdbPostgresqlClusterConfigPoolerConfigPtrOutput() MdbPostgresqlClusterConfigPoolerConfigPtrOutput {
	return i.ToMdbPostgresqlClusterConfigPoolerConfigPtrOutputWithContext(context.Background())
}

func (i MdbPostgresqlClusterConfigPoolerConfigArgs) ToMdbPostgresqlClusterConfigPoolerConfigPtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigPoolerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterConfigPoolerConfigOutput).ToMdbPostgresqlClusterConfigPoolerConfigPtrOutputWithContext(ctx)
}

// MdbPostgresqlClusterConfigPoolerConfigPtrInput is an input type that accepts MdbPostgresqlClusterConfigPoolerConfigArgs, MdbPostgresqlClusterConfigPoolerConfigPtr and MdbPostgresqlClusterConfigPoolerConfigPtrOutput values.
// You can construct a concrete instance of `MdbPostgresqlClusterConfigPoolerConfigPtrInput` via:
//
//          MdbPostgresqlClusterConfigPoolerConfigArgs{...}
//
//  or:
//
//          nil
type MdbPostgresqlClusterConfigPoolerConfigPtrInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterConfigPoolerConfigPtrOutput() MdbPostgresqlClusterConfigPoolerConfigPtrOutput
	ToMdbPostgresqlClusterConfigPoolerConfigPtrOutputWithContext(context.Context) MdbPostgresqlClusterConfigPoolerConfigPtrOutput
}

type mdbPostgresqlClusterConfigPoolerConfigPtrType MdbPostgresqlClusterConfigPoolerConfigArgs

func MdbPostgresqlClusterConfigPoolerConfigPtr(v *MdbPostgresqlClusterConfigPoolerConfigArgs) MdbPostgresqlClusterConfigPoolerConfigPtrInput {
	return (*mdbPostgresqlClusterConfigPoolerConfigPtrType)(v)
}

func (*mdbPostgresqlClusterConfigPoolerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbPostgresqlClusterConfigPoolerConfig)(nil)).Elem()
}

func (i *mdbPostgresqlClusterConfigPoolerConfigPtrType) ToMdbPostgresqlClusterConfigPoolerConfigPtrOutput() MdbPostgresqlClusterConfigPoolerConfigPtrOutput {
	return i.ToMdbPostgresqlClusterConfigPoolerConfigPtrOutputWithContext(context.Background())
}

func (i *mdbPostgresqlClusterConfigPoolerConfigPtrType) ToMdbPostgresqlClusterConfigPoolerConfigPtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigPoolerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterConfigPoolerConfigPtrOutput)
}

type MdbPostgresqlClusterConfigPoolerConfigOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterConfigPoolerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbPostgresqlClusterConfigPoolerConfig)(nil)).Elem()
}

func (o MdbPostgresqlClusterConfigPoolerConfigOutput) ToMdbPostgresqlClusterConfigPoolerConfigOutput() MdbPostgresqlClusterConfigPoolerConfigOutput {
	return o
}

func (o MdbPostgresqlClusterConfigPoolerConfigOutput) ToMdbPostgresqlClusterConfigPoolerConfigOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigPoolerConfigOutput {
	return o
}

func (o MdbPostgresqlClusterConfigPoolerConfigOutput) ToMdbPostgresqlClusterConfigPoolerConfigPtrOutput() MdbPostgresqlClusterConfigPoolerConfigPtrOutput {
	return o.ToMdbPostgresqlClusterConfigPoolerConfigPtrOutputWithContext(context.Background())
}

func (o MdbPostgresqlClusterConfigPoolerConfigOutput) ToMdbPostgresqlClusterConfigPoolerConfigPtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigPoolerConfigPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterConfigPoolerConfig) *MdbPostgresqlClusterConfigPoolerConfig {
		return &v
	}).(MdbPostgresqlClusterConfigPoolerConfigPtrOutput)
}

// Setting `poolDiscard` [parameter in Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_discard-yesno).
func (o MdbPostgresqlClusterConfigPoolerConfigOutput) PoolDiscard() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterConfigPoolerConfig) *bool { return v.PoolDiscard }).(pulumi.BoolPtrOutput)
}

// Mode that the connection pooler is working in. See descriptions of all modes in the [documentation for Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string.
func (o MdbPostgresqlClusterConfigPoolerConfigOutput) PoolingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterConfigPoolerConfig) *string { return v.PoolingMode }).(pulumi.StringPtrOutput)
}

type MdbPostgresqlClusterConfigPoolerConfigPtrOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterConfigPoolerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbPostgresqlClusterConfigPoolerConfig)(nil)).Elem()
}

func (o MdbPostgresqlClusterConfigPoolerConfigPtrOutput) ToMdbPostgresqlClusterConfigPoolerConfigPtrOutput() MdbPostgresqlClusterConfigPoolerConfigPtrOutput {
	return o
}

func (o MdbPostgresqlClusterConfigPoolerConfigPtrOutput) ToMdbPostgresqlClusterConfigPoolerConfigPtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigPoolerConfigPtrOutput {
	return o
}

func (o MdbPostgresqlClusterConfigPoolerConfigPtrOutput) Elem() MdbPostgresqlClusterConfigPoolerConfigOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterConfigPoolerConfig) MdbPostgresqlClusterConfigPoolerConfig { return *v }).(MdbPostgresqlClusterConfigPoolerConfigOutput)
}

// Setting `poolDiscard` [parameter in Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_discard-yesno).
func (o MdbPostgresqlClusterConfigPoolerConfigPtrOutput) PoolDiscard() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterConfigPoolerConfig) *bool {
		if v == nil {
			return nil
		}
		return v.PoolDiscard
	}).(pulumi.BoolPtrOutput)
}

// Mode that the connection pooler is working in. See descriptions of all modes in the [documentation for Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string.
func (o MdbPostgresqlClusterConfigPoolerConfigPtrOutput) PoolingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterConfigPoolerConfig) *string {
		if v == nil {
			return nil
		}
		return v.PoolingMode
	}).(pulumi.StringPtrOutput)
}

type MdbPostgresqlClusterConfigResources struct {
	// Volume of the storage available to a PostgreSQL host, in gigabytes.
	DiskSize int `pulumi:"diskSize"`
	// Type of the storage of PostgreSQL hosts.
	DiskTypeId       *string `pulumi:"diskTypeId"`
	ResourcePresetId string  `pulumi:"resourcePresetId"`
}

// MdbPostgresqlClusterConfigResourcesInput is an input type that accepts MdbPostgresqlClusterConfigResourcesArgs and MdbPostgresqlClusterConfigResourcesOutput values.
// You can construct a concrete instance of `MdbPostgresqlClusterConfigResourcesInput` via:
//
//          MdbPostgresqlClusterConfigResourcesArgs{...}
type MdbPostgresqlClusterConfigResourcesInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterConfigResourcesOutput() MdbPostgresqlClusterConfigResourcesOutput
	ToMdbPostgresqlClusterConfigResourcesOutputWithContext(context.Context) MdbPostgresqlClusterConfigResourcesOutput
}

type MdbPostgresqlClusterConfigResourcesArgs struct {
	// Volume of the storage available to a PostgreSQL host, in gigabytes.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// Type of the storage of PostgreSQL hosts.
	DiskTypeId       pulumi.StringPtrInput `pulumi:"diskTypeId"`
	ResourcePresetId pulumi.StringInput    `pulumi:"resourcePresetId"`
}

func (MdbPostgresqlClusterConfigResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbPostgresqlClusterConfigResources)(nil)).Elem()
}

func (i MdbPostgresqlClusterConfigResourcesArgs) ToMdbPostgresqlClusterConfigResourcesOutput() MdbPostgresqlClusterConfigResourcesOutput {
	return i.ToMdbPostgresqlClusterConfigResourcesOutputWithContext(context.Background())
}

func (i MdbPostgresqlClusterConfigResourcesArgs) ToMdbPostgresqlClusterConfigResourcesOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterConfigResourcesOutput)
}

func (i MdbPostgresqlClusterConfigResourcesArgs) ToMdbPostgresqlClusterConfigResourcesPtrOutput() MdbPostgresqlClusterConfigResourcesPtrOutput {
	return i.ToMdbPostgresqlClusterConfigResourcesPtrOutputWithContext(context.Background())
}

func (i MdbPostgresqlClusterConfigResourcesArgs) ToMdbPostgresqlClusterConfigResourcesPtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterConfigResourcesOutput).ToMdbPostgresqlClusterConfigResourcesPtrOutputWithContext(ctx)
}

// MdbPostgresqlClusterConfigResourcesPtrInput is an input type that accepts MdbPostgresqlClusterConfigResourcesArgs, MdbPostgresqlClusterConfigResourcesPtr and MdbPostgresqlClusterConfigResourcesPtrOutput values.
// You can construct a concrete instance of `MdbPostgresqlClusterConfigResourcesPtrInput` via:
//
//          MdbPostgresqlClusterConfigResourcesArgs{...}
//
//  or:
//
//          nil
type MdbPostgresqlClusterConfigResourcesPtrInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterConfigResourcesPtrOutput() MdbPostgresqlClusterConfigResourcesPtrOutput
	ToMdbPostgresqlClusterConfigResourcesPtrOutputWithContext(context.Context) MdbPostgresqlClusterConfigResourcesPtrOutput
}

type mdbPostgresqlClusterConfigResourcesPtrType MdbPostgresqlClusterConfigResourcesArgs

func MdbPostgresqlClusterConfigResourcesPtr(v *MdbPostgresqlClusterConfigResourcesArgs) MdbPostgresqlClusterConfigResourcesPtrInput {
	return (*mdbPostgresqlClusterConfigResourcesPtrType)(v)
}

func (*mdbPostgresqlClusterConfigResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbPostgresqlClusterConfigResources)(nil)).Elem()
}

func (i *mdbPostgresqlClusterConfigResourcesPtrType) ToMdbPostgresqlClusterConfigResourcesPtrOutput() MdbPostgresqlClusterConfigResourcesPtrOutput {
	return i.ToMdbPostgresqlClusterConfigResourcesPtrOutputWithContext(context.Background())
}

func (i *mdbPostgresqlClusterConfigResourcesPtrType) ToMdbPostgresqlClusterConfigResourcesPtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterConfigResourcesPtrOutput)
}

type MdbPostgresqlClusterConfigResourcesOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterConfigResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbPostgresqlClusterConfigResources)(nil)).Elem()
}

func (o MdbPostgresqlClusterConfigResourcesOutput) ToMdbPostgresqlClusterConfigResourcesOutput() MdbPostgresqlClusterConfigResourcesOutput {
	return o
}

func (o MdbPostgresqlClusterConfigResourcesOutput) ToMdbPostgresqlClusterConfigResourcesOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigResourcesOutput {
	return o
}

func (o MdbPostgresqlClusterConfigResourcesOutput) ToMdbPostgresqlClusterConfigResourcesPtrOutput() MdbPostgresqlClusterConfigResourcesPtrOutput {
	return o.ToMdbPostgresqlClusterConfigResourcesPtrOutputWithContext(context.Background())
}

func (o MdbPostgresqlClusterConfigResourcesOutput) ToMdbPostgresqlClusterConfigResourcesPtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigResourcesPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterConfigResources) *MdbPostgresqlClusterConfigResources {
		return &v
	}).(MdbPostgresqlClusterConfigResourcesPtrOutput)
}

// Volume of the storage available to a PostgreSQL host, in gigabytes.
func (o MdbPostgresqlClusterConfigResourcesOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterConfigResources) int { return v.DiskSize }).(pulumi.IntOutput)
}

// Type of the storage of PostgreSQL hosts.
func (o MdbPostgresqlClusterConfigResourcesOutput) DiskTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterConfigResources) *string { return v.DiskTypeId }).(pulumi.StringPtrOutput)
}

func (o MdbPostgresqlClusterConfigResourcesOutput) ResourcePresetId() pulumi.StringOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterConfigResources) string { return v.ResourcePresetId }).(pulumi.StringOutput)
}

type MdbPostgresqlClusterConfigResourcesPtrOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterConfigResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbPostgresqlClusterConfigResources)(nil)).Elem()
}

func (o MdbPostgresqlClusterConfigResourcesPtrOutput) ToMdbPostgresqlClusterConfigResourcesPtrOutput() MdbPostgresqlClusterConfigResourcesPtrOutput {
	return o
}

func (o MdbPostgresqlClusterConfigResourcesPtrOutput) ToMdbPostgresqlClusterConfigResourcesPtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterConfigResourcesPtrOutput {
	return o
}

func (o MdbPostgresqlClusterConfigResourcesPtrOutput) Elem() MdbPostgresqlClusterConfigResourcesOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterConfigResources) MdbPostgresqlClusterConfigResources { return *v }).(MdbPostgresqlClusterConfigResourcesOutput)
}

// Volume of the storage available to a PostgreSQL host, in gigabytes.
func (o MdbPostgresqlClusterConfigResourcesPtrOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterConfigResources) *int {
		if v == nil {
			return nil
		}
		return &v.DiskSize
	}).(pulumi.IntPtrOutput)
}

// Type of the storage of PostgreSQL hosts.
func (o MdbPostgresqlClusterConfigResourcesPtrOutput) DiskTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterConfigResources) *string {
		if v == nil {
			return nil
		}
		return v.DiskTypeId
	}).(pulumi.StringPtrOutput)
}

func (o MdbPostgresqlClusterConfigResourcesPtrOutput) ResourcePresetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterConfigResources) *string {
		if v == nil {
			return nil
		}
		return &v.ResourcePresetId
	}).(pulumi.StringPtrOutput)
}

type MdbPostgresqlClusterDatabase struct {
	// Set of database extensions. The structure is documented below
	Extensions []MdbPostgresqlClusterDatabaseExtension `pulumi:"extensions"`
	// POSIX locale for string sorting order. Forbidden to change in an existing database.
	LcCollate *string `pulumi:"lcCollate"`
	// POSIX locale for character classification. Forbidden to change in an existing database.
	LcType *string `pulumi:"lcType"`
	// Host state name. Is should be set for all hosts or unset for all hosts. This field can be used by another host, to select which host will be its replication source. Please see `replicationSourceName` parameter.
	// Also, this field is used to select which host will be selected as a master host. Please see `hostMasterName` parameter.
	Name string `pulumi:"name"`
	// Name of the user assigned as the owner of the database.
	Owner string `pulumi:"owner"`
}

// MdbPostgresqlClusterDatabaseInput is an input type that accepts MdbPostgresqlClusterDatabaseArgs and MdbPostgresqlClusterDatabaseOutput values.
// You can construct a concrete instance of `MdbPostgresqlClusterDatabaseInput` via:
//
//          MdbPostgresqlClusterDatabaseArgs{...}
type MdbPostgresqlClusterDatabaseInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterDatabaseOutput() MdbPostgresqlClusterDatabaseOutput
	ToMdbPostgresqlClusterDatabaseOutputWithContext(context.Context) MdbPostgresqlClusterDatabaseOutput
}

type MdbPostgresqlClusterDatabaseArgs struct {
	// Set of database extensions. The structure is documented below
	Extensions MdbPostgresqlClusterDatabaseExtensionArrayInput `pulumi:"extensions"`
	// POSIX locale for string sorting order. Forbidden to change in an existing database.
	LcCollate pulumi.StringPtrInput `pulumi:"lcCollate"`
	// POSIX locale for character classification. Forbidden to change in an existing database.
	LcType pulumi.StringPtrInput `pulumi:"lcType"`
	// Host state name. Is should be set for all hosts or unset for all hosts. This field can be used by another host, to select which host will be its replication source. Please see `replicationSourceName` parameter.
	// Also, this field is used to select which host will be selected as a master host. Please see `hostMasterName` parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// Name of the user assigned as the owner of the database.
	Owner pulumi.StringInput `pulumi:"owner"`
}

func (MdbPostgresqlClusterDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbPostgresqlClusterDatabase)(nil)).Elem()
}

func (i MdbPostgresqlClusterDatabaseArgs) ToMdbPostgresqlClusterDatabaseOutput() MdbPostgresqlClusterDatabaseOutput {
	return i.ToMdbPostgresqlClusterDatabaseOutputWithContext(context.Background())
}

func (i MdbPostgresqlClusterDatabaseArgs) ToMdbPostgresqlClusterDatabaseOutputWithContext(ctx context.Context) MdbPostgresqlClusterDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterDatabaseOutput)
}

// MdbPostgresqlClusterDatabaseArrayInput is an input type that accepts MdbPostgresqlClusterDatabaseArray and MdbPostgresqlClusterDatabaseArrayOutput values.
// You can construct a concrete instance of `MdbPostgresqlClusterDatabaseArrayInput` via:
//
//          MdbPostgresqlClusterDatabaseArray{ MdbPostgresqlClusterDatabaseArgs{...} }
type MdbPostgresqlClusterDatabaseArrayInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterDatabaseArrayOutput() MdbPostgresqlClusterDatabaseArrayOutput
	ToMdbPostgresqlClusterDatabaseArrayOutputWithContext(context.Context) MdbPostgresqlClusterDatabaseArrayOutput
}

type MdbPostgresqlClusterDatabaseArray []MdbPostgresqlClusterDatabaseInput

func (MdbPostgresqlClusterDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbPostgresqlClusterDatabase)(nil)).Elem()
}

func (i MdbPostgresqlClusterDatabaseArray) ToMdbPostgresqlClusterDatabaseArrayOutput() MdbPostgresqlClusterDatabaseArrayOutput {
	return i.ToMdbPostgresqlClusterDatabaseArrayOutputWithContext(context.Background())
}

func (i MdbPostgresqlClusterDatabaseArray) ToMdbPostgresqlClusterDatabaseArrayOutputWithContext(ctx context.Context) MdbPostgresqlClusterDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterDatabaseArrayOutput)
}

type MdbPostgresqlClusterDatabaseOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbPostgresqlClusterDatabase)(nil)).Elem()
}

func (o MdbPostgresqlClusterDatabaseOutput) ToMdbPostgresqlClusterDatabaseOutput() MdbPostgresqlClusterDatabaseOutput {
	return o
}

func (o MdbPostgresqlClusterDatabaseOutput) ToMdbPostgresqlClusterDatabaseOutputWithContext(ctx context.Context) MdbPostgresqlClusterDatabaseOutput {
	return o
}

// Set of database extensions. The structure is documented below
func (o MdbPostgresqlClusterDatabaseOutput) Extensions() MdbPostgresqlClusterDatabaseExtensionArrayOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterDatabase) []MdbPostgresqlClusterDatabaseExtension { return v.Extensions }).(MdbPostgresqlClusterDatabaseExtensionArrayOutput)
}

// POSIX locale for string sorting order. Forbidden to change in an existing database.
func (o MdbPostgresqlClusterDatabaseOutput) LcCollate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterDatabase) *string { return v.LcCollate }).(pulumi.StringPtrOutput)
}

// POSIX locale for character classification. Forbidden to change in an existing database.
func (o MdbPostgresqlClusterDatabaseOutput) LcType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterDatabase) *string { return v.LcType }).(pulumi.StringPtrOutput)
}

// Host state name. Is should be set for all hosts or unset for all hosts. This field can be used by another host, to select which host will be its replication source. Please see `replicationSourceName` parameter.
// Also, this field is used to select which host will be selected as a master host. Please see `hostMasterName` parameter.
func (o MdbPostgresqlClusterDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterDatabase) string { return v.Name }).(pulumi.StringOutput)
}

// Name of the user assigned as the owner of the database.
func (o MdbPostgresqlClusterDatabaseOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterDatabase) string { return v.Owner }).(pulumi.StringOutput)
}

type MdbPostgresqlClusterDatabaseArrayOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbPostgresqlClusterDatabase)(nil)).Elem()
}

func (o MdbPostgresqlClusterDatabaseArrayOutput) ToMdbPostgresqlClusterDatabaseArrayOutput() MdbPostgresqlClusterDatabaseArrayOutput {
	return o
}

func (o MdbPostgresqlClusterDatabaseArrayOutput) ToMdbPostgresqlClusterDatabaseArrayOutputWithContext(ctx context.Context) MdbPostgresqlClusterDatabaseArrayOutput {
	return o
}

func (o MdbPostgresqlClusterDatabaseArrayOutput) Index(i pulumi.IntInput) MdbPostgresqlClusterDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbPostgresqlClusterDatabase {
		return vs[0].([]MdbPostgresqlClusterDatabase)[vs[1].(int)]
	}).(MdbPostgresqlClusterDatabaseOutput)
}

type MdbPostgresqlClusterDatabaseExtension struct {
	// Host state name. Is should be set for all hosts or unset for all hosts. This field can be used by another host, to select which host will be its replication source. Please see `replicationSourceName` parameter.
	// Also, this field is used to select which host will be selected as a master host. Please see `hostMasterName` parameter.
	Name string `pulumi:"name"`
	// Version of the extension.
	Version *string `pulumi:"version"`
}

// MdbPostgresqlClusterDatabaseExtensionInput is an input type that accepts MdbPostgresqlClusterDatabaseExtensionArgs and MdbPostgresqlClusterDatabaseExtensionOutput values.
// You can construct a concrete instance of `MdbPostgresqlClusterDatabaseExtensionInput` via:
//
//          MdbPostgresqlClusterDatabaseExtensionArgs{...}
type MdbPostgresqlClusterDatabaseExtensionInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterDatabaseExtensionOutput() MdbPostgresqlClusterDatabaseExtensionOutput
	ToMdbPostgresqlClusterDatabaseExtensionOutputWithContext(context.Context) MdbPostgresqlClusterDatabaseExtensionOutput
}

type MdbPostgresqlClusterDatabaseExtensionArgs struct {
	// Host state name. Is should be set for all hosts or unset for all hosts. This field can be used by another host, to select which host will be its replication source. Please see `replicationSourceName` parameter.
	// Also, this field is used to select which host will be selected as a master host. Please see `hostMasterName` parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// Version of the extension.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (MdbPostgresqlClusterDatabaseExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbPostgresqlClusterDatabaseExtension)(nil)).Elem()
}

func (i MdbPostgresqlClusterDatabaseExtensionArgs) ToMdbPostgresqlClusterDatabaseExtensionOutput() MdbPostgresqlClusterDatabaseExtensionOutput {
	return i.ToMdbPostgresqlClusterDatabaseExtensionOutputWithContext(context.Background())
}

func (i MdbPostgresqlClusterDatabaseExtensionArgs) ToMdbPostgresqlClusterDatabaseExtensionOutputWithContext(ctx context.Context) MdbPostgresqlClusterDatabaseExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterDatabaseExtensionOutput)
}

// MdbPostgresqlClusterDatabaseExtensionArrayInput is an input type that accepts MdbPostgresqlClusterDatabaseExtensionArray and MdbPostgresqlClusterDatabaseExtensionArrayOutput values.
// You can construct a concrete instance of `MdbPostgresqlClusterDatabaseExtensionArrayInput` via:
//
//          MdbPostgresqlClusterDatabaseExtensionArray{ MdbPostgresqlClusterDatabaseExtensionArgs{...} }
type MdbPostgresqlClusterDatabaseExtensionArrayInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterDatabaseExtensionArrayOutput() MdbPostgresqlClusterDatabaseExtensionArrayOutput
	ToMdbPostgresqlClusterDatabaseExtensionArrayOutputWithContext(context.Context) MdbPostgresqlClusterDatabaseExtensionArrayOutput
}

type MdbPostgresqlClusterDatabaseExtensionArray []MdbPostgresqlClusterDatabaseExtensionInput

func (MdbPostgresqlClusterDatabaseExtensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbPostgresqlClusterDatabaseExtension)(nil)).Elem()
}

func (i MdbPostgresqlClusterDatabaseExtensionArray) ToMdbPostgresqlClusterDatabaseExtensionArrayOutput() MdbPostgresqlClusterDatabaseExtensionArrayOutput {
	return i.ToMdbPostgresqlClusterDatabaseExtensionArrayOutputWithContext(context.Background())
}

func (i MdbPostgresqlClusterDatabaseExtensionArray) ToMdbPostgresqlClusterDatabaseExtensionArrayOutputWithContext(ctx context.Context) MdbPostgresqlClusterDatabaseExtensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterDatabaseExtensionArrayOutput)
}

type MdbPostgresqlClusterDatabaseExtensionOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterDatabaseExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbPostgresqlClusterDatabaseExtension)(nil)).Elem()
}

func (o MdbPostgresqlClusterDatabaseExtensionOutput) ToMdbPostgresqlClusterDatabaseExtensionOutput() MdbPostgresqlClusterDatabaseExtensionOutput {
	return o
}

func (o MdbPostgresqlClusterDatabaseExtensionOutput) ToMdbPostgresqlClusterDatabaseExtensionOutputWithContext(ctx context.Context) MdbPostgresqlClusterDatabaseExtensionOutput {
	return o
}

// Host state name. Is should be set for all hosts or unset for all hosts. This field can be used by another host, to select which host will be its replication source. Please see `replicationSourceName` parameter.
// Also, this field is used to select which host will be selected as a master host. Please see `hostMasterName` parameter.
func (o MdbPostgresqlClusterDatabaseExtensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterDatabaseExtension) string { return v.Name }).(pulumi.StringOutput)
}

// Version of the extension.
func (o MdbPostgresqlClusterDatabaseExtensionOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterDatabaseExtension) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type MdbPostgresqlClusterDatabaseExtensionArrayOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterDatabaseExtensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbPostgresqlClusterDatabaseExtension)(nil)).Elem()
}

func (o MdbPostgresqlClusterDatabaseExtensionArrayOutput) ToMdbPostgresqlClusterDatabaseExtensionArrayOutput() MdbPostgresqlClusterDatabaseExtensionArrayOutput {
	return o
}

func (o MdbPostgresqlClusterDatabaseExtensionArrayOutput) ToMdbPostgresqlClusterDatabaseExtensionArrayOutputWithContext(ctx context.Context) MdbPostgresqlClusterDatabaseExtensionArrayOutput {
	return o
}

func (o MdbPostgresqlClusterDatabaseExtensionArrayOutput) Index(i pulumi.IntInput) MdbPostgresqlClusterDatabaseExtensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbPostgresqlClusterDatabaseExtension {
		return vs[0].([]MdbPostgresqlClusterDatabaseExtension)[vs[1].(int)]
	}).(MdbPostgresqlClusterDatabaseExtensionOutput)
}

type MdbPostgresqlClusterHost struct {
	// Sets whether the host should get a public IP address on creation. Changing this parameter for an existing host is not supported at the moment.
	AssignPublicIp *bool `pulumi:"assignPublicIp"`
	// The fully qualified domain name of the host.
	Fqdn *string `pulumi:"fqdn"`
	// Host state name. Is should be set for all hosts or unset for all hosts. This field can be used by another host, to select which host will be its replication source. Please see `replicationSourceName` parameter.
	// Also, this field is used to select which host will be selected as a master host. Please see `hostMasterName` parameter.
	Name *string `pulumi:"name"`
	// Host priority in HA group. It works only when `name` is set.
	Priority *int `pulumi:"priority"`
	// Host replication source (fqdn), when replicationSource is empty then host is in HA group.
	ReplicationSource *string `pulumi:"replicationSource"`
	// Host replication source name, case when not set then host shuld be in HA group. It works only when `name` is set.
	ReplicationSourceName *string `pulumi:"replicationSourceName"`
	Role                  *string `pulumi:"role"`
	// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
	SubnetId *string `pulumi:"subnetId"`
	// The availability zone where the PostgreSQL host will be created.
	Zone string `pulumi:"zone"`
}

// MdbPostgresqlClusterHostInput is an input type that accepts MdbPostgresqlClusterHostArgs and MdbPostgresqlClusterHostOutput values.
// You can construct a concrete instance of `MdbPostgresqlClusterHostInput` via:
//
//          MdbPostgresqlClusterHostArgs{...}
type MdbPostgresqlClusterHostInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterHostOutput() MdbPostgresqlClusterHostOutput
	ToMdbPostgresqlClusterHostOutputWithContext(context.Context) MdbPostgresqlClusterHostOutput
}

type MdbPostgresqlClusterHostArgs struct {
	// Sets whether the host should get a public IP address on creation. Changing this parameter for an existing host is not supported at the moment.
	AssignPublicIp pulumi.BoolPtrInput `pulumi:"assignPublicIp"`
	// The fully qualified domain name of the host.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// Host state name. Is should be set for all hosts or unset for all hosts. This field can be used by another host, to select which host will be its replication source. Please see `replicationSourceName` parameter.
	// Also, this field is used to select which host will be selected as a master host. Please see `hostMasterName` parameter.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Host priority in HA group. It works only when `name` is set.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Host replication source (fqdn), when replicationSource is empty then host is in HA group.
	ReplicationSource pulumi.StringPtrInput `pulumi:"replicationSource"`
	// Host replication source name, case when not set then host shuld be in HA group. It works only when `name` is set.
	ReplicationSourceName pulumi.StringPtrInput `pulumi:"replicationSourceName"`
	Role                  pulumi.StringPtrInput `pulumi:"role"`
	// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The availability zone where the PostgreSQL host will be created.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (MdbPostgresqlClusterHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbPostgresqlClusterHost)(nil)).Elem()
}

func (i MdbPostgresqlClusterHostArgs) ToMdbPostgresqlClusterHostOutput() MdbPostgresqlClusterHostOutput {
	return i.ToMdbPostgresqlClusterHostOutputWithContext(context.Background())
}

func (i MdbPostgresqlClusterHostArgs) ToMdbPostgresqlClusterHostOutputWithContext(ctx context.Context) MdbPostgresqlClusterHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterHostOutput)
}

// MdbPostgresqlClusterHostArrayInput is an input type that accepts MdbPostgresqlClusterHostArray and MdbPostgresqlClusterHostArrayOutput values.
// You can construct a concrete instance of `MdbPostgresqlClusterHostArrayInput` via:
//
//          MdbPostgresqlClusterHostArray{ MdbPostgresqlClusterHostArgs{...} }
type MdbPostgresqlClusterHostArrayInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterHostArrayOutput() MdbPostgresqlClusterHostArrayOutput
	ToMdbPostgresqlClusterHostArrayOutputWithContext(context.Context) MdbPostgresqlClusterHostArrayOutput
}

type MdbPostgresqlClusterHostArray []MdbPostgresqlClusterHostInput

func (MdbPostgresqlClusterHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbPostgresqlClusterHost)(nil)).Elem()
}

func (i MdbPostgresqlClusterHostArray) ToMdbPostgresqlClusterHostArrayOutput() MdbPostgresqlClusterHostArrayOutput {
	return i.ToMdbPostgresqlClusterHostArrayOutputWithContext(context.Background())
}

func (i MdbPostgresqlClusterHostArray) ToMdbPostgresqlClusterHostArrayOutputWithContext(ctx context.Context) MdbPostgresqlClusterHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterHostArrayOutput)
}

type MdbPostgresqlClusterHostOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbPostgresqlClusterHost)(nil)).Elem()
}

func (o MdbPostgresqlClusterHostOutput) ToMdbPostgresqlClusterHostOutput() MdbPostgresqlClusterHostOutput {
	return o
}

func (o MdbPostgresqlClusterHostOutput) ToMdbPostgresqlClusterHostOutputWithContext(ctx context.Context) MdbPostgresqlClusterHostOutput {
	return o
}

// Sets whether the host should get a public IP address on creation. Changing this parameter for an existing host is not supported at the moment.
func (o MdbPostgresqlClusterHostOutput) AssignPublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterHost) *bool { return v.AssignPublicIp }).(pulumi.BoolPtrOutput)
}

// The fully qualified domain name of the host.
func (o MdbPostgresqlClusterHostOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterHost) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// Host state name. Is should be set for all hosts or unset for all hosts. This field can be used by another host, to select which host will be its replication source. Please see `replicationSourceName` parameter.
// Also, this field is used to select which host will be selected as a master host. Please see `hostMasterName` parameter.
func (o MdbPostgresqlClusterHostOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterHost) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Host priority in HA group. It works only when `name` is set.
func (o MdbPostgresqlClusterHostOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterHost) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Host replication source (fqdn), when replicationSource is empty then host is in HA group.
func (o MdbPostgresqlClusterHostOutput) ReplicationSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterHost) *string { return v.ReplicationSource }).(pulumi.StringPtrOutput)
}

// Host replication source name, case when not set then host shuld be in HA group. It works only when `name` is set.
func (o MdbPostgresqlClusterHostOutput) ReplicationSourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterHost) *string { return v.ReplicationSourceName }).(pulumi.StringPtrOutput)
}

func (o MdbPostgresqlClusterHostOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterHost) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
func (o MdbPostgresqlClusterHostOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterHost) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The availability zone where the PostgreSQL host will be created.
func (o MdbPostgresqlClusterHostOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterHost) string { return v.Zone }).(pulumi.StringOutput)
}

type MdbPostgresqlClusterHostArrayOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbPostgresqlClusterHost)(nil)).Elem()
}

func (o MdbPostgresqlClusterHostArrayOutput) ToMdbPostgresqlClusterHostArrayOutput() MdbPostgresqlClusterHostArrayOutput {
	return o
}

func (o MdbPostgresqlClusterHostArrayOutput) ToMdbPostgresqlClusterHostArrayOutputWithContext(ctx context.Context) MdbPostgresqlClusterHostArrayOutput {
	return o
}

func (o MdbPostgresqlClusterHostArrayOutput) Index(i pulumi.IntInput) MdbPostgresqlClusterHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbPostgresqlClusterHost {
		return vs[0].([]MdbPostgresqlClusterHost)[vs[1].(int)]
	}).(MdbPostgresqlClusterHostOutput)
}

type MdbPostgresqlClusterRestore struct {
	// Backup ID. The cluster will be created from the specified backup. [How to get a list of PostgreSQL backups](https://cloud.yandex.com/docs/managed-postgresql/operations/cluster-backups).
	BackupId string `pulumi:"backupId"`
	// Timestamp of the moment to which the PostgreSQL cluster should be restored. (Format: "2006-01-02T15:04:05" - UTC). When not set, current time is used.
	Time *string `pulumi:"time"`
	// Flag that indicates whether a database should be restored to the first backup point available just after the timestamp specified in the [time] field instead of just before.\
	// Possible values:
	// - false (default) — the restore point refers to the first backup moment before [time].
	// - true — the restore point refers to the first backup point after [time].
	TimeInclusive *bool `pulumi:"timeInclusive"`
}

// MdbPostgresqlClusterRestoreInput is an input type that accepts MdbPostgresqlClusterRestoreArgs and MdbPostgresqlClusterRestoreOutput values.
// You can construct a concrete instance of `MdbPostgresqlClusterRestoreInput` via:
//
//          MdbPostgresqlClusterRestoreArgs{...}
type MdbPostgresqlClusterRestoreInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterRestoreOutput() MdbPostgresqlClusterRestoreOutput
	ToMdbPostgresqlClusterRestoreOutputWithContext(context.Context) MdbPostgresqlClusterRestoreOutput
}

type MdbPostgresqlClusterRestoreArgs struct {
	// Backup ID. The cluster will be created from the specified backup. [How to get a list of PostgreSQL backups](https://cloud.yandex.com/docs/managed-postgresql/operations/cluster-backups).
	BackupId pulumi.StringInput `pulumi:"backupId"`
	// Timestamp of the moment to which the PostgreSQL cluster should be restored. (Format: "2006-01-02T15:04:05" - UTC). When not set, current time is used.
	Time pulumi.StringPtrInput `pulumi:"time"`
	// Flag that indicates whether a database should be restored to the first backup point available just after the timestamp specified in the [time] field instead of just before.\
	// Possible values:
	// - false (default) — the restore point refers to the first backup moment before [time].
	// - true — the restore point refers to the first backup point after [time].
	TimeInclusive pulumi.BoolPtrInput `pulumi:"timeInclusive"`
}

func (MdbPostgresqlClusterRestoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbPostgresqlClusterRestore)(nil)).Elem()
}

func (i MdbPostgresqlClusterRestoreArgs) ToMdbPostgresqlClusterRestoreOutput() MdbPostgresqlClusterRestoreOutput {
	return i.ToMdbPostgresqlClusterRestoreOutputWithContext(context.Background())
}

func (i MdbPostgresqlClusterRestoreArgs) ToMdbPostgresqlClusterRestoreOutputWithContext(ctx context.Context) MdbPostgresqlClusterRestoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterRestoreOutput)
}

func (i MdbPostgresqlClusterRestoreArgs) ToMdbPostgresqlClusterRestorePtrOutput() MdbPostgresqlClusterRestorePtrOutput {
	return i.ToMdbPostgresqlClusterRestorePtrOutputWithContext(context.Background())
}

func (i MdbPostgresqlClusterRestoreArgs) ToMdbPostgresqlClusterRestorePtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterRestorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterRestoreOutput).ToMdbPostgresqlClusterRestorePtrOutputWithContext(ctx)
}

// MdbPostgresqlClusterRestorePtrInput is an input type that accepts MdbPostgresqlClusterRestoreArgs, MdbPostgresqlClusterRestorePtr and MdbPostgresqlClusterRestorePtrOutput values.
// You can construct a concrete instance of `MdbPostgresqlClusterRestorePtrInput` via:
//
//          MdbPostgresqlClusterRestoreArgs{...}
//
//  or:
//
//          nil
type MdbPostgresqlClusterRestorePtrInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterRestorePtrOutput() MdbPostgresqlClusterRestorePtrOutput
	ToMdbPostgresqlClusterRestorePtrOutputWithContext(context.Context) MdbPostgresqlClusterRestorePtrOutput
}

type mdbPostgresqlClusterRestorePtrType MdbPostgresqlClusterRestoreArgs

func MdbPostgresqlClusterRestorePtr(v *MdbPostgresqlClusterRestoreArgs) MdbPostgresqlClusterRestorePtrInput {
	return (*mdbPostgresqlClusterRestorePtrType)(v)
}

func (*mdbPostgresqlClusterRestorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbPostgresqlClusterRestore)(nil)).Elem()
}

func (i *mdbPostgresqlClusterRestorePtrType) ToMdbPostgresqlClusterRestorePtrOutput() MdbPostgresqlClusterRestorePtrOutput {
	return i.ToMdbPostgresqlClusterRestorePtrOutputWithContext(context.Background())
}

func (i *mdbPostgresqlClusterRestorePtrType) ToMdbPostgresqlClusterRestorePtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterRestorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterRestorePtrOutput)
}

type MdbPostgresqlClusterRestoreOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterRestoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbPostgresqlClusterRestore)(nil)).Elem()
}

func (o MdbPostgresqlClusterRestoreOutput) ToMdbPostgresqlClusterRestoreOutput() MdbPostgresqlClusterRestoreOutput {
	return o
}

func (o MdbPostgresqlClusterRestoreOutput) ToMdbPostgresqlClusterRestoreOutputWithContext(ctx context.Context) MdbPostgresqlClusterRestoreOutput {
	return o
}

func (o MdbPostgresqlClusterRestoreOutput) ToMdbPostgresqlClusterRestorePtrOutput() MdbPostgresqlClusterRestorePtrOutput {
	return o.ToMdbPostgresqlClusterRestorePtrOutputWithContext(context.Background())
}

func (o MdbPostgresqlClusterRestoreOutput) ToMdbPostgresqlClusterRestorePtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterRestorePtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterRestore) *MdbPostgresqlClusterRestore {
		return &v
	}).(MdbPostgresqlClusterRestorePtrOutput)
}

// Backup ID. The cluster will be created from the specified backup. [How to get a list of PostgreSQL backups](https://cloud.yandex.com/docs/managed-postgresql/operations/cluster-backups).
func (o MdbPostgresqlClusterRestoreOutput) BackupId() pulumi.StringOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterRestore) string { return v.BackupId }).(pulumi.StringOutput)
}

// Timestamp of the moment to which the PostgreSQL cluster should be restored. (Format: "2006-01-02T15:04:05" - UTC). When not set, current time is used.
func (o MdbPostgresqlClusterRestoreOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterRestore) *string { return v.Time }).(pulumi.StringPtrOutput)
}

// Flag that indicates whether a database should be restored to the first backup point available just after the timestamp specified in the [time] field instead of just before.\
// Possible values:
// - false (default) — the restore point refers to the first backup moment before [time].
// - true — the restore point refers to the first backup point after [time].
func (o MdbPostgresqlClusterRestoreOutput) TimeInclusive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterRestore) *bool { return v.TimeInclusive }).(pulumi.BoolPtrOutput)
}

type MdbPostgresqlClusterRestorePtrOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterRestorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbPostgresqlClusterRestore)(nil)).Elem()
}

func (o MdbPostgresqlClusterRestorePtrOutput) ToMdbPostgresqlClusterRestorePtrOutput() MdbPostgresqlClusterRestorePtrOutput {
	return o
}

func (o MdbPostgresqlClusterRestorePtrOutput) ToMdbPostgresqlClusterRestorePtrOutputWithContext(ctx context.Context) MdbPostgresqlClusterRestorePtrOutput {
	return o
}

func (o MdbPostgresqlClusterRestorePtrOutput) Elem() MdbPostgresqlClusterRestoreOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterRestore) MdbPostgresqlClusterRestore { return *v }).(MdbPostgresqlClusterRestoreOutput)
}

// Backup ID. The cluster will be created from the specified backup. [How to get a list of PostgreSQL backups](https://cloud.yandex.com/docs/managed-postgresql/operations/cluster-backups).
func (o MdbPostgresqlClusterRestorePtrOutput) BackupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterRestore) *string {
		if v == nil {
			return nil
		}
		return &v.BackupId
	}).(pulumi.StringPtrOutput)
}

// Timestamp of the moment to which the PostgreSQL cluster should be restored. (Format: "2006-01-02T15:04:05" - UTC). When not set, current time is used.
func (o MdbPostgresqlClusterRestorePtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterRestore) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

// Flag that indicates whether a database should be restored to the first backup point available just after the timestamp specified in the [time] field instead of just before.\
// Possible values:
// - false (default) — the restore point refers to the first backup moment before [time].
// - true — the restore point refers to the first backup point after [time].
func (o MdbPostgresqlClusterRestorePtrOutput) TimeInclusive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlClusterRestore) *bool {
		if v == nil {
			return nil
		}
		return v.TimeInclusive
	}).(pulumi.BoolPtrOutput)
}

type MdbPostgresqlClusterUser struct {
	// The maximum number of connections per user. (Default 50)
	ConnLimit *int `pulumi:"connLimit"`
	// List of the user's grants.
	Grants []string `pulumi:"grants"`
	// User's ability to login.
	Login *bool `pulumi:"login"`
	// Host state name. Is should be set for all hosts or unset for all hosts. This field can be used by another host, to select which host will be its replication source. Please see `replicationSourceName` parameter.
	// Also, this field is used to select which host will be selected as a master host. Please see `hostMasterName` parameter.
	Name string `pulumi:"name"`
	// The password of the user.
	Password string `pulumi:"password"`
	// Set of permissions granted to the user. The structure is documented below.
	Permissions []MdbPostgresqlClusterUserPermission `pulumi:"permissions"`
	// Map of user settings. List of settings is documented below.
	Settings map[string]string `pulumi:"settings"`
}

// MdbPostgresqlClusterUserInput is an input type that accepts MdbPostgresqlClusterUserArgs and MdbPostgresqlClusterUserOutput values.
// You can construct a concrete instance of `MdbPostgresqlClusterUserInput` via:
//
//          MdbPostgresqlClusterUserArgs{...}
type MdbPostgresqlClusterUserInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterUserOutput() MdbPostgresqlClusterUserOutput
	ToMdbPostgresqlClusterUserOutputWithContext(context.Context) MdbPostgresqlClusterUserOutput
}

type MdbPostgresqlClusterUserArgs struct {
	// The maximum number of connections per user. (Default 50)
	ConnLimit pulumi.IntPtrInput `pulumi:"connLimit"`
	// List of the user's grants.
	Grants pulumi.StringArrayInput `pulumi:"grants"`
	// User's ability to login.
	Login pulumi.BoolPtrInput `pulumi:"login"`
	// Host state name. Is should be set for all hosts or unset for all hosts. This field can be used by another host, to select which host will be its replication source. Please see `replicationSourceName` parameter.
	// Also, this field is used to select which host will be selected as a master host. Please see `hostMasterName` parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// The password of the user.
	Password pulumi.StringInput `pulumi:"password"`
	// Set of permissions granted to the user. The structure is documented below.
	Permissions MdbPostgresqlClusterUserPermissionArrayInput `pulumi:"permissions"`
	// Map of user settings. List of settings is documented below.
	Settings pulumi.StringMapInput `pulumi:"settings"`
}

func (MdbPostgresqlClusterUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbPostgresqlClusterUser)(nil)).Elem()
}

func (i MdbPostgresqlClusterUserArgs) ToMdbPostgresqlClusterUserOutput() MdbPostgresqlClusterUserOutput {
	return i.ToMdbPostgresqlClusterUserOutputWithContext(context.Background())
}

func (i MdbPostgresqlClusterUserArgs) ToMdbPostgresqlClusterUserOutputWithContext(ctx context.Context) MdbPostgresqlClusterUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterUserOutput)
}

// MdbPostgresqlClusterUserArrayInput is an input type that accepts MdbPostgresqlClusterUserArray and MdbPostgresqlClusterUserArrayOutput values.
// You can construct a concrete instance of `MdbPostgresqlClusterUserArrayInput` via:
//
//          MdbPostgresqlClusterUserArray{ MdbPostgresqlClusterUserArgs{...} }
type MdbPostgresqlClusterUserArrayInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterUserArrayOutput() MdbPostgresqlClusterUserArrayOutput
	ToMdbPostgresqlClusterUserArrayOutputWithContext(context.Context) MdbPostgresqlClusterUserArrayOutput
}

type MdbPostgresqlClusterUserArray []MdbPostgresqlClusterUserInput

func (MdbPostgresqlClusterUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbPostgresqlClusterUser)(nil)).Elem()
}

func (i MdbPostgresqlClusterUserArray) ToMdbPostgresqlClusterUserArrayOutput() MdbPostgresqlClusterUserArrayOutput {
	return i.ToMdbPostgresqlClusterUserArrayOutputWithContext(context.Background())
}

func (i MdbPostgresqlClusterUserArray) ToMdbPostgresqlClusterUserArrayOutputWithContext(ctx context.Context) MdbPostgresqlClusterUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterUserArrayOutput)
}

type MdbPostgresqlClusterUserOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbPostgresqlClusterUser)(nil)).Elem()
}

func (o MdbPostgresqlClusterUserOutput) ToMdbPostgresqlClusterUserOutput() MdbPostgresqlClusterUserOutput {
	return o
}

func (o MdbPostgresqlClusterUserOutput) ToMdbPostgresqlClusterUserOutputWithContext(ctx context.Context) MdbPostgresqlClusterUserOutput {
	return o
}

// The maximum number of connections per user. (Default 50)
func (o MdbPostgresqlClusterUserOutput) ConnLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterUser) *int { return v.ConnLimit }).(pulumi.IntPtrOutput)
}

// List of the user's grants.
func (o MdbPostgresqlClusterUserOutput) Grants() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterUser) []string { return v.Grants }).(pulumi.StringArrayOutput)
}

// User's ability to login.
func (o MdbPostgresqlClusterUserOutput) Login() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterUser) *bool { return v.Login }).(pulumi.BoolPtrOutput)
}

// Host state name. Is should be set for all hosts or unset for all hosts. This field can be used by another host, to select which host will be its replication source. Please see `replicationSourceName` parameter.
// Also, this field is used to select which host will be selected as a master host. Please see `hostMasterName` parameter.
func (o MdbPostgresqlClusterUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterUser) string { return v.Name }).(pulumi.StringOutput)
}

// The password of the user.
func (o MdbPostgresqlClusterUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterUser) string { return v.Password }).(pulumi.StringOutput)
}

// Set of permissions granted to the user. The structure is documented below.
func (o MdbPostgresqlClusterUserOutput) Permissions() MdbPostgresqlClusterUserPermissionArrayOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterUser) []MdbPostgresqlClusterUserPermission { return v.Permissions }).(MdbPostgresqlClusterUserPermissionArrayOutput)
}

// Map of user settings. List of settings is documented below.
func (o MdbPostgresqlClusterUserOutput) Settings() pulumi.StringMapOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterUser) map[string]string { return v.Settings }).(pulumi.StringMapOutput)
}

type MdbPostgresqlClusterUserArrayOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbPostgresqlClusterUser)(nil)).Elem()
}

func (o MdbPostgresqlClusterUserArrayOutput) ToMdbPostgresqlClusterUserArrayOutput() MdbPostgresqlClusterUserArrayOutput {
	return o
}

func (o MdbPostgresqlClusterUserArrayOutput) ToMdbPostgresqlClusterUserArrayOutputWithContext(ctx context.Context) MdbPostgresqlClusterUserArrayOutput {
	return o
}

func (o MdbPostgresqlClusterUserArrayOutput) Index(i pulumi.IntInput) MdbPostgresqlClusterUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbPostgresqlClusterUser {
		return vs[0].([]MdbPostgresqlClusterUser)[vs[1].(int)]
	}).(MdbPostgresqlClusterUserOutput)
}

type MdbPostgresqlClusterUserPermission struct {
	// The name of the database that the permission grants access to.
	DatabaseName string `pulumi:"databaseName"`
}

// MdbPostgresqlClusterUserPermissionInput is an input type that accepts MdbPostgresqlClusterUserPermissionArgs and MdbPostgresqlClusterUserPermissionOutput values.
// You can construct a concrete instance of `MdbPostgresqlClusterUserPermissionInput` via:
//
//          MdbPostgresqlClusterUserPermissionArgs{...}
type MdbPostgresqlClusterUserPermissionInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterUserPermissionOutput() MdbPostgresqlClusterUserPermissionOutput
	ToMdbPostgresqlClusterUserPermissionOutputWithContext(context.Context) MdbPostgresqlClusterUserPermissionOutput
}

type MdbPostgresqlClusterUserPermissionArgs struct {
	// The name of the database that the permission grants access to.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
}

func (MdbPostgresqlClusterUserPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbPostgresqlClusterUserPermission)(nil)).Elem()
}

func (i MdbPostgresqlClusterUserPermissionArgs) ToMdbPostgresqlClusterUserPermissionOutput() MdbPostgresqlClusterUserPermissionOutput {
	return i.ToMdbPostgresqlClusterUserPermissionOutputWithContext(context.Background())
}

func (i MdbPostgresqlClusterUserPermissionArgs) ToMdbPostgresqlClusterUserPermissionOutputWithContext(ctx context.Context) MdbPostgresqlClusterUserPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterUserPermissionOutput)
}

// MdbPostgresqlClusterUserPermissionArrayInput is an input type that accepts MdbPostgresqlClusterUserPermissionArray and MdbPostgresqlClusterUserPermissionArrayOutput values.
// You can construct a concrete instance of `MdbPostgresqlClusterUserPermissionArrayInput` via:
//
//          MdbPostgresqlClusterUserPermissionArray{ MdbPostgresqlClusterUserPermissionArgs{...} }
type MdbPostgresqlClusterUserPermissionArrayInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterUserPermissionArrayOutput() MdbPostgresqlClusterUserPermissionArrayOutput
	ToMdbPostgresqlClusterUserPermissionArrayOutputWithContext(context.Context) MdbPostgresqlClusterUserPermissionArrayOutput
}

type MdbPostgresqlClusterUserPermissionArray []MdbPostgresqlClusterUserPermissionInput

func (MdbPostgresqlClusterUserPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbPostgresqlClusterUserPermission)(nil)).Elem()
}

func (i MdbPostgresqlClusterUserPermissionArray) ToMdbPostgresqlClusterUserPermissionArrayOutput() MdbPostgresqlClusterUserPermissionArrayOutput {
	return i.ToMdbPostgresqlClusterUserPermissionArrayOutputWithContext(context.Background())
}

func (i MdbPostgresqlClusterUserPermissionArray) ToMdbPostgresqlClusterUserPermissionArrayOutputWithContext(ctx context.Context) MdbPostgresqlClusterUserPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterUserPermissionArrayOutput)
}

type MdbPostgresqlClusterUserPermissionOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterUserPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbPostgresqlClusterUserPermission)(nil)).Elem()
}

func (o MdbPostgresqlClusterUserPermissionOutput) ToMdbPostgresqlClusterUserPermissionOutput() MdbPostgresqlClusterUserPermissionOutput {
	return o
}

func (o MdbPostgresqlClusterUserPermissionOutput) ToMdbPostgresqlClusterUserPermissionOutputWithContext(ctx context.Context) MdbPostgresqlClusterUserPermissionOutput {
	return o
}

// The name of the database that the permission grants access to.
func (o MdbPostgresqlClusterUserPermissionOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MdbPostgresqlClusterUserPermission) string { return v.DatabaseName }).(pulumi.StringOutput)
}

type MdbPostgresqlClusterUserPermissionArrayOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterUserPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbPostgresqlClusterUserPermission)(nil)).Elem()
}

func (o MdbPostgresqlClusterUserPermissionArrayOutput) ToMdbPostgresqlClusterUserPermissionArrayOutput() MdbPostgresqlClusterUserPermissionArrayOutput {
	return o
}

func (o MdbPostgresqlClusterUserPermissionArrayOutput) ToMdbPostgresqlClusterUserPermissionArrayOutputWithContext(ctx context.Context) MdbPostgresqlClusterUserPermissionArrayOutput {
	return o
}

func (o MdbPostgresqlClusterUserPermissionArrayOutput) Index(i pulumi.IntInput) MdbPostgresqlClusterUserPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbPostgresqlClusterUserPermission {
		return vs[0].([]MdbPostgresqlClusterUserPermission)[vs[1].(int)]
	}).(MdbPostgresqlClusterUserPermissionOutput)
}

type MdbRedisClusterConfig struct {
	// Redis key eviction policy for a dataset that reaches maximum memory.
	// Can be any of the listed in [the official RedisDB documentation](https://docs.redislabs.com/latest/rs/administering/database-operations/eviction-policy/).
	MaxmemoryPolicy *string `pulumi:"maxmemoryPolicy"`
	// Password for the Redis cluster.
	Password string `pulumi:"password"`
	// Close the connection after a client is idle for N seconds.
	Timeout *int `pulumi:"timeout"`
	// Version of Redis (either 5.0 or 6.0).
	Version string `pulumi:"version"`
}

// MdbRedisClusterConfigInput is an input type that accepts MdbRedisClusterConfigArgs and MdbRedisClusterConfigOutput values.
// You can construct a concrete instance of `MdbRedisClusterConfigInput` via:
//
//          MdbRedisClusterConfigArgs{...}
type MdbRedisClusterConfigInput interface {
	pulumi.Input

	ToMdbRedisClusterConfigOutput() MdbRedisClusterConfigOutput
	ToMdbRedisClusterConfigOutputWithContext(context.Context) MdbRedisClusterConfigOutput
}

type MdbRedisClusterConfigArgs struct {
	// Redis key eviction policy for a dataset that reaches maximum memory.
	// Can be any of the listed in [the official RedisDB documentation](https://docs.redislabs.com/latest/rs/administering/database-operations/eviction-policy/).
	MaxmemoryPolicy pulumi.StringPtrInput `pulumi:"maxmemoryPolicy"`
	// Password for the Redis cluster.
	Password pulumi.StringInput `pulumi:"password"`
	// Close the connection after a client is idle for N seconds.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// Version of Redis (either 5.0 or 6.0).
	Version pulumi.StringInput `pulumi:"version"`
}

func (MdbRedisClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbRedisClusterConfig)(nil)).Elem()
}

func (i MdbRedisClusterConfigArgs) ToMdbRedisClusterConfigOutput() MdbRedisClusterConfigOutput {
	return i.ToMdbRedisClusterConfigOutputWithContext(context.Background())
}

func (i MdbRedisClusterConfigArgs) ToMdbRedisClusterConfigOutputWithContext(ctx context.Context) MdbRedisClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbRedisClusterConfigOutput)
}

func (i MdbRedisClusterConfigArgs) ToMdbRedisClusterConfigPtrOutput() MdbRedisClusterConfigPtrOutput {
	return i.ToMdbRedisClusterConfigPtrOutputWithContext(context.Background())
}

func (i MdbRedisClusterConfigArgs) ToMdbRedisClusterConfigPtrOutputWithContext(ctx context.Context) MdbRedisClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbRedisClusterConfigOutput).ToMdbRedisClusterConfigPtrOutputWithContext(ctx)
}

// MdbRedisClusterConfigPtrInput is an input type that accepts MdbRedisClusterConfigArgs, MdbRedisClusterConfigPtr and MdbRedisClusterConfigPtrOutput values.
// You can construct a concrete instance of `MdbRedisClusterConfigPtrInput` via:
//
//          MdbRedisClusterConfigArgs{...}
//
//  or:
//
//          nil
type MdbRedisClusterConfigPtrInput interface {
	pulumi.Input

	ToMdbRedisClusterConfigPtrOutput() MdbRedisClusterConfigPtrOutput
	ToMdbRedisClusterConfigPtrOutputWithContext(context.Context) MdbRedisClusterConfigPtrOutput
}

type mdbRedisClusterConfigPtrType MdbRedisClusterConfigArgs

func MdbRedisClusterConfigPtr(v *MdbRedisClusterConfigArgs) MdbRedisClusterConfigPtrInput {
	return (*mdbRedisClusterConfigPtrType)(v)
}

func (*mdbRedisClusterConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbRedisClusterConfig)(nil)).Elem()
}

func (i *mdbRedisClusterConfigPtrType) ToMdbRedisClusterConfigPtrOutput() MdbRedisClusterConfigPtrOutput {
	return i.ToMdbRedisClusterConfigPtrOutputWithContext(context.Background())
}

func (i *mdbRedisClusterConfigPtrType) ToMdbRedisClusterConfigPtrOutputWithContext(ctx context.Context) MdbRedisClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbRedisClusterConfigPtrOutput)
}

type MdbRedisClusterConfigOutput struct{ *pulumi.OutputState }

func (MdbRedisClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbRedisClusterConfig)(nil)).Elem()
}

func (o MdbRedisClusterConfigOutput) ToMdbRedisClusterConfigOutput() MdbRedisClusterConfigOutput {
	return o
}

func (o MdbRedisClusterConfigOutput) ToMdbRedisClusterConfigOutputWithContext(ctx context.Context) MdbRedisClusterConfigOutput {
	return o
}

func (o MdbRedisClusterConfigOutput) ToMdbRedisClusterConfigPtrOutput() MdbRedisClusterConfigPtrOutput {
	return o.ToMdbRedisClusterConfigPtrOutputWithContext(context.Background())
}

func (o MdbRedisClusterConfigOutput) ToMdbRedisClusterConfigPtrOutputWithContext(ctx context.Context) MdbRedisClusterConfigPtrOutput {
	return o.ApplyT(func(v MdbRedisClusterConfig) *MdbRedisClusterConfig {
		return &v
	}).(MdbRedisClusterConfigPtrOutput)
}

// Redis key eviction policy for a dataset that reaches maximum memory.
// Can be any of the listed in [the official RedisDB documentation](https://docs.redislabs.com/latest/rs/administering/database-operations/eviction-policy/).
func (o MdbRedisClusterConfigOutput) MaxmemoryPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbRedisClusterConfig) *string { return v.MaxmemoryPolicy }).(pulumi.StringPtrOutput)
}

// Password for the Redis cluster.
func (o MdbRedisClusterConfigOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v MdbRedisClusterConfig) string { return v.Password }).(pulumi.StringOutput)
}

// Close the connection after a client is idle for N seconds.
func (o MdbRedisClusterConfigOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbRedisClusterConfig) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// Version of Redis (either 5.0 or 6.0).
func (o MdbRedisClusterConfigOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v MdbRedisClusterConfig) string { return v.Version }).(pulumi.StringOutput)
}

type MdbRedisClusterConfigPtrOutput struct{ *pulumi.OutputState }

func (MdbRedisClusterConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbRedisClusterConfig)(nil)).Elem()
}

func (o MdbRedisClusterConfigPtrOutput) ToMdbRedisClusterConfigPtrOutput() MdbRedisClusterConfigPtrOutput {
	return o
}

func (o MdbRedisClusterConfigPtrOutput) ToMdbRedisClusterConfigPtrOutputWithContext(ctx context.Context) MdbRedisClusterConfigPtrOutput {
	return o
}

func (o MdbRedisClusterConfigPtrOutput) Elem() MdbRedisClusterConfigOutput {
	return o.ApplyT(func(v *MdbRedisClusterConfig) MdbRedisClusterConfig { return *v }).(MdbRedisClusterConfigOutput)
}

// Redis key eviction policy for a dataset that reaches maximum memory.
// Can be any of the listed in [the official RedisDB documentation](https://docs.redislabs.com/latest/rs/administering/database-operations/eviction-policy/).
func (o MdbRedisClusterConfigPtrOutput) MaxmemoryPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbRedisClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.MaxmemoryPolicy
	}).(pulumi.StringPtrOutput)
}

// Password for the Redis cluster.
func (o MdbRedisClusterConfigPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbRedisClusterConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// Close the connection after a client is idle for N seconds.
func (o MdbRedisClusterConfigPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbRedisClusterConfig) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// Version of Redis (either 5.0 or 6.0).
func (o MdbRedisClusterConfigPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbRedisClusterConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type MdbRedisClusterHost struct {
	// The fully qualified domain name of the host.
	Fqdn *string `pulumi:"fqdn"`
	// The name of the shard to which the host belongs.
	ShardName *string `pulumi:"shardName"`
	// The ID of the subnet, to which the host belongs. The subnet must
	// be a part of the network to which the cluster belongs.
	SubnetId *string `pulumi:"subnetId"`
	// The availability zone where the Redis host will be created.
	// For more information see [the official documentation](https://cloud.yandex.com/docs/overview/concepts/geo-scope).
	Zone string `pulumi:"zone"`
}

// MdbRedisClusterHostInput is an input type that accepts MdbRedisClusterHostArgs and MdbRedisClusterHostOutput values.
// You can construct a concrete instance of `MdbRedisClusterHostInput` via:
//
//          MdbRedisClusterHostArgs{...}
type MdbRedisClusterHostInput interface {
	pulumi.Input

	ToMdbRedisClusterHostOutput() MdbRedisClusterHostOutput
	ToMdbRedisClusterHostOutputWithContext(context.Context) MdbRedisClusterHostOutput
}

type MdbRedisClusterHostArgs struct {
	// The fully qualified domain name of the host.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// The name of the shard to which the host belongs.
	ShardName pulumi.StringPtrInput `pulumi:"shardName"`
	// The ID of the subnet, to which the host belongs. The subnet must
	// be a part of the network to which the cluster belongs.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The availability zone where the Redis host will be created.
	// For more information see [the official documentation](https://cloud.yandex.com/docs/overview/concepts/geo-scope).
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (MdbRedisClusterHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbRedisClusterHost)(nil)).Elem()
}

func (i MdbRedisClusterHostArgs) ToMdbRedisClusterHostOutput() MdbRedisClusterHostOutput {
	return i.ToMdbRedisClusterHostOutputWithContext(context.Background())
}

func (i MdbRedisClusterHostArgs) ToMdbRedisClusterHostOutputWithContext(ctx context.Context) MdbRedisClusterHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbRedisClusterHostOutput)
}

// MdbRedisClusterHostArrayInput is an input type that accepts MdbRedisClusterHostArray and MdbRedisClusterHostArrayOutput values.
// You can construct a concrete instance of `MdbRedisClusterHostArrayInput` via:
//
//          MdbRedisClusterHostArray{ MdbRedisClusterHostArgs{...} }
type MdbRedisClusterHostArrayInput interface {
	pulumi.Input

	ToMdbRedisClusterHostArrayOutput() MdbRedisClusterHostArrayOutput
	ToMdbRedisClusterHostArrayOutputWithContext(context.Context) MdbRedisClusterHostArrayOutput
}

type MdbRedisClusterHostArray []MdbRedisClusterHostInput

func (MdbRedisClusterHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbRedisClusterHost)(nil)).Elem()
}

func (i MdbRedisClusterHostArray) ToMdbRedisClusterHostArrayOutput() MdbRedisClusterHostArrayOutput {
	return i.ToMdbRedisClusterHostArrayOutputWithContext(context.Background())
}

func (i MdbRedisClusterHostArray) ToMdbRedisClusterHostArrayOutputWithContext(ctx context.Context) MdbRedisClusterHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbRedisClusterHostArrayOutput)
}

type MdbRedisClusterHostOutput struct{ *pulumi.OutputState }

func (MdbRedisClusterHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbRedisClusterHost)(nil)).Elem()
}

func (o MdbRedisClusterHostOutput) ToMdbRedisClusterHostOutput() MdbRedisClusterHostOutput {
	return o
}

func (o MdbRedisClusterHostOutput) ToMdbRedisClusterHostOutputWithContext(ctx context.Context) MdbRedisClusterHostOutput {
	return o
}

// The fully qualified domain name of the host.
func (o MdbRedisClusterHostOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbRedisClusterHost) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The name of the shard to which the host belongs.
func (o MdbRedisClusterHostOutput) ShardName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbRedisClusterHost) *string { return v.ShardName }).(pulumi.StringPtrOutput)
}

// The ID of the subnet, to which the host belongs. The subnet must
// be a part of the network to which the cluster belongs.
func (o MdbRedisClusterHostOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbRedisClusterHost) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The availability zone where the Redis host will be created.
// For more information see [the official documentation](https://cloud.yandex.com/docs/overview/concepts/geo-scope).
func (o MdbRedisClusterHostOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v MdbRedisClusterHost) string { return v.Zone }).(pulumi.StringOutput)
}

type MdbRedisClusterHostArrayOutput struct{ *pulumi.OutputState }

func (MdbRedisClusterHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbRedisClusterHost)(nil)).Elem()
}

func (o MdbRedisClusterHostArrayOutput) ToMdbRedisClusterHostArrayOutput() MdbRedisClusterHostArrayOutput {
	return o
}

func (o MdbRedisClusterHostArrayOutput) ToMdbRedisClusterHostArrayOutputWithContext(ctx context.Context) MdbRedisClusterHostArrayOutput {
	return o
}

func (o MdbRedisClusterHostArrayOutput) Index(i pulumi.IntInput) MdbRedisClusterHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbRedisClusterHost {
		return vs[0].([]MdbRedisClusterHost)[vs[1].(int)]
	}).(MdbRedisClusterHostOutput)
}

type MdbRedisClusterResources struct {
	// Volume of the storage available to a host, in gigabytes.
	DiskSize int `pulumi:"diskSize"`
	// Type of the storage of Redis hosts - environment default is used if missing.
	DiskTypeId       *string `pulumi:"diskTypeId"`
	ResourcePresetId string  `pulumi:"resourcePresetId"`
}

// MdbRedisClusterResourcesInput is an input type that accepts MdbRedisClusterResourcesArgs and MdbRedisClusterResourcesOutput values.
// You can construct a concrete instance of `MdbRedisClusterResourcesInput` via:
//
//          MdbRedisClusterResourcesArgs{...}
type MdbRedisClusterResourcesInput interface {
	pulumi.Input

	ToMdbRedisClusterResourcesOutput() MdbRedisClusterResourcesOutput
	ToMdbRedisClusterResourcesOutputWithContext(context.Context) MdbRedisClusterResourcesOutput
}

type MdbRedisClusterResourcesArgs struct {
	// Volume of the storage available to a host, in gigabytes.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// Type of the storage of Redis hosts - environment default is used if missing.
	DiskTypeId       pulumi.StringPtrInput `pulumi:"diskTypeId"`
	ResourcePresetId pulumi.StringInput    `pulumi:"resourcePresetId"`
}

func (MdbRedisClusterResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbRedisClusterResources)(nil)).Elem()
}

func (i MdbRedisClusterResourcesArgs) ToMdbRedisClusterResourcesOutput() MdbRedisClusterResourcesOutput {
	return i.ToMdbRedisClusterResourcesOutputWithContext(context.Background())
}

func (i MdbRedisClusterResourcesArgs) ToMdbRedisClusterResourcesOutputWithContext(ctx context.Context) MdbRedisClusterResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbRedisClusterResourcesOutput)
}

func (i MdbRedisClusterResourcesArgs) ToMdbRedisClusterResourcesPtrOutput() MdbRedisClusterResourcesPtrOutput {
	return i.ToMdbRedisClusterResourcesPtrOutputWithContext(context.Background())
}

func (i MdbRedisClusterResourcesArgs) ToMdbRedisClusterResourcesPtrOutputWithContext(ctx context.Context) MdbRedisClusterResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbRedisClusterResourcesOutput).ToMdbRedisClusterResourcesPtrOutputWithContext(ctx)
}

// MdbRedisClusterResourcesPtrInput is an input type that accepts MdbRedisClusterResourcesArgs, MdbRedisClusterResourcesPtr and MdbRedisClusterResourcesPtrOutput values.
// You can construct a concrete instance of `MdbRedisClusterResourcesPtrInput` via:
//
//          MdbRedisClusterResourcesArgs{...}
//
//  or:
//
//          nil
type MdbRedisClusterResourcesPtrInput interface {
	pulumi.Input

	ToMdbRedisClusterResourcesPtrOutput() MdbRedisClusterResourcesPtrOutput
	ToMdbRedisClusterResourcesPtrOutputWithContext(context.Context) MdbRedisClusterResourcesPtrOutput
}

type mdbRedisClusterResourcesPtrType MdbRedisClusterResourcesArgs

func MdbRedisClusterResourcesPtr(v *MdbRedisClusterResourcesArgs) MdbRedisClusterResourcesPtrInput {
	return (*mdbRedisClusterResourcesPtrType)(v)
}

func (*mdbRedisClusterResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbRedisClusterResources)(nil)).Elem()
}

func (i *mdbRedisClusterResourcesPtrType) ToMdbRedisClusterResourcesPtrOutput() MdbRedisClusterResourcesPtrOutput {
	return i.ToMdbRedisClusterResourcesPtrOutputWithContext(context.Background())
}

func (i *mdbRedisClusterResourcesPtrType) ToMdbRedisClusterResourcesPtrOutputWithContext(ctx context.Context) MdbRedisClusterResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbRedisClusterResourcesPtrOutput)
}

type MdbRedisClusterResourcesOutput struct{ *pulumi.OutputState }

func (MdbRedisClusterResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbRedisClusterResources)(nil)).Elem()
}

func (o MdbRedisClusterResourcesOutput) ToMdbRedisClusterResourcesOutput() MdbRedisClusterResourcesOutput {
	return o
}

func (o MdbRedisClusterResourcesOutput) ToMdbRedisClusterResourcesOutputWithContext(ctx context.Context) MdbRedisClusterResourcesOutput {
	return o
}

func (o MdbRedisClusterResourcesOutput) ToMdbRedisClusterResourcesPtrOutput() MdbRedisClusterResourcesPtrOutput {
	return o.ToMdbRedisClusterResourcesPtrOutputWithContext(context.Background())
}

func (o MdbRedisClusterResourcesOutput) ToMdbRedisClusterResourcesPtrOutputWithContext(ctx context.Context) MdbRedisClusterResourcesPtrOutput {
	return o.ApplyT(func(v MdbRedisClusterResources) *MdbRedisClusterResources {
		return &v
	}).(MdbRedisClusterResourcesPtrOutput)
}

// Volume of the storage available to a host, in gigabytes.
func (o MdbRedisClusterResourcesOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v MdbRedisClusterResources) int { return v.DiskSize }).(pulumi.IntOutput)
}

// Type of the storage of Redis hosts - environment default is used if missing.
func (o MdbRedisClusterResourcesOutput) DiskTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbRedisClusterResources) *string { return v.DiskTypeId }).(pulumi.StringPtrOutput)
}

func (o MdbRedisClusterResourcesOutput) ResourcePresetId() pulumi.StringOutput {
	return o.ApplyT(func(v MdbRedisClusterResources) string { return v.ResourcePresetId }).(pulumi.StringOutput)
}

type MdbRedisClusterResourcesPtrOutput struct{ *pulumi.OutputState }

func (MdbRedisClusterResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbRedisClusterResources)(nil)).Elem()
}

func (o MdbRedisClusterResourcesPtrOutput) ToMdbRedisClusterResourcesPtrOutput() MdbRedisClusterResourcesPtrOutput {
	return o
}

func (o MdbRedisClusterResourcesPtrOutput) ToMdbRedisClusterResourcesPtrOutputWithContext(ctx context.Context) MdbRedisClusterResourcesPtrOutput {
	return o
}

func (o MdbRedisClusterResourcesPtrOutput) Elem() MdbRedisClusterResourcesOutput {
	return o.ApplyT(func(v *MdbRedisClusterResources) MdbRedisClusterResources { return *v }).(MdbRedisClusterResourcesOutput)
}

// Volume of the storage available to a host, in gigabytes.
func (o MdbRedisClusterResourcesPtrOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbRedisClusterResources) *int {
		if v == nil {
			return nil
		}
		return &v.DiskSize
	}).(pulumi.IntPtrOutput)
}

// Type of the storage of Redis hosts - environment default is used if missing.
func (o MdbRedisClusterResourcesPtrOutput) DiskTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbRedisClusterResources) *string {
		if v == nil {
			return nil
		}
		return v.DiskTypeId
	}).(pulumi.StringPtrOutput)
}

func (o MdbRedisClusterResourcesPtrOutput) ResourcePresetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbRedisClusterResources) *string {
		if v == nil {
			return nil
		}
		return &v.ResourcePresetId
	}).(pulumi.StringPtrOutput)
}

type MdbSqlServerClusterBackupWindowStart struct {
	// The hour at which backup will be started.
	Hours *int `pulumi:"hours"`
	// The minute at which backup will be started.
	Minutes *int `pulumi:"minutes"`
}

// MdbSqlServerClusterBackupWindowStartInput is an input type that accepts MdbSqlServerClusterBackupWindowStartArgs and MdbSqlServerClusterBackupWindowStartOutput values.
// You can construct a concrete instance of `MdbSqlServerClusterBackupWindowStartInput` via:
//
//          MdbSqlServerClusterBackupWindowStartArgs{...}
type MdbSqlServerClusterBackupWindowStartInput interface {
	pulumi.Input

	ToMdbSqlServerClusterBackupWindowStartOutput() MdbSqlServerClusterBackupWindowStartOutput
	ToMdbSqlServerClusterBackupWindowStartOutputWithContext(context.Context) MdbSqlServerClusterBackupWindowStartOutput
}

type MdbSqlServerClusterBackupWindowStartArgs struct {
	// The hour at which backup will be started.
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// The minute at which backup will be started.
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
}

func (MdbSqlServerClusterBackupWindowStartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbSqlServerClusterBackupWindowStart)(nil)).Elem()
}

func (i MdbSqlServerClusterBackupWindowStartArgs) ToMdbSqlServerClusterBackupWindowStartOutput() MdbSqlServerClusterBackupWindowStartOutput {
	return i.ToMdbSqlServerClusterBackupWindowStartOutputWithContext(context.Background())
}

func (i MdbSqlServerClusterBackupWindowStartArgs) ToMdbSqlServerClusterBackupWindowStartOutputWithContext(ctx context.Context) MdbSqlServerClusterBackupWindowStartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbSqlServerClusterBackupWindowStartOutput)
}

func (i MdbSqlServerClusterBackupWindowStartArgs) ToMdbSqlServerClusterBackupWindowStartPtrOutput() MdbSqlServerClusterBackupWindowStartPtrOutput {
	return i.ToMdbSqlServerClusterBackupWindowStartPtrOutputWithContext(context.Background())
}

func (i MdbSqlServerClusterBackupWindowStartArgs) ToMdbSqlServerClusterBackupWindowStartPtrOutputWithContext(ctx context.Context) MdbSqlServerClusterBackupWindowStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbSqlServerClusterBackupWindowStartOutput).ToMdbSqlServerClusterBackupWindowStartPtrOutputWithContext(ctx)
}

// MdbSqlServerClusterBackupWindowStartPtrInput is an input type that accepts MdbSqlServerClusterBackupWindowStartArgs, MdbSqlServerClusterBackupWindowStartPtr and MdbSqlServerClusterBackupWindowStartPtrOutput values.
// You can construct a concrete instance of `MdbSqlServerClusterBackupWindowStartPtrInput` via:
//
//          MdbSqlServerClusterBackupWindowStartArgs{...}
//
//  or:
//
//          nil
type MdbSqlServerClusterBackupWindowStartPtrInput interface {
	pulumi.Input

	ToMdbSqlServerClusterBackupWindowStartPtrOutput() MdbSqlServerClusterBackupWindowStartPtrOutput
	ToMdbSqlServerClusterBackupWindowStartPtrOutputWithContext(context.Context) MdbSqlServerClusterBackupWindowStartPtrOutput
}

type mdbSqlServerClusterBackupWindowStartPtrType MdbSqlServerClusterBackupWindowStartArgs

func MdbSqlServerClusterBackupWindowStartPtr(v *MdbSqlServerClusterBackupWindowStartArgs) MdbSqlServerClusterBackupWindowStartPtrInput {
	return (*mdbSqlServerClusterBackupWindowStartPtrType)(v)
}

func (*mdbSqlServerClusterBackupWindowStartPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbSqlServerClusterBackupWindowStart)(nil)).Elem()
}

func (i *mdbSqlServerClusterBackupWindowStartPtrType) ToMdbSqlServerClusterBackupWindowStartPtrOutput() MdbSqlServerClusterBackupWindowStartPtrOutput {
	return i.ToMdbSqlServerClusterBackupWindowStartPtrOutputWithContext(context.Background())
}

func (i *mdbSqlServerClusterBackupWindowStartPtrType) ToMdbSqlServerClusterBackupWindowStartPtrOutputWithContext(ctx context.Context) MdbSqlServerClusterBackupWindowStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbSqlServerClusterBackupWindowStartPtrOutput)
}

type MdbSqlServerClusterBackupWindowStartOutput struct{ *pulumi.OutputState }

func (MdbSqlServerClusterBackupWindowStartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbSqlServerClusterBackupWindowStart)(nil)).Elem()
}

func (o MdbSqlServerClusterBackupWindowStartOutput) ToMdbSqlServerClusterBackupWindowStartOutput() MdbSqlServerClusterBackupWindowStartOutput {
	return o
}

func (o MdbSqlServerClusterBackupWindowStartOutput) ToMdbSqlServerClusterBackupWindowStartOutputWithContext(ctx context.Context) MdbSqlServerClusterBackupWindowStartOutput {
	return o
}

func (o MdbSqlServerClusterBackupWindowStartOutput) ToMdbSqlServerClusterBackupWindowStartPtrOutput() MdbSqlServerClusterBackupWindowStartPtrOutput {
	return o.ToMdbSqlServerClusterBackupWindowStartPtrOutputWithContext(context.Background())
}

func (o MdbSqlServerClusterBackupWindowStartOutput) ToMdbSqlServerClusterBackupWindowStartPtrOutputWithContext(ctx context.Context) MdbSqlServerClusterBackupWindowStartPtrOutput {
	return o.ApplyT(func(v MdbSqlServerClusterBackupWindowStart) *MdbSqlServerClusterBackupWindowStart {
		return &v
	}).(MdbSqlServerClusterBackupWindowStartPtrOutput)
}

// The hour at which backup will be started.
func (o MdbSqlServerClusterBackupWindowStartOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbSqlServerClusterBackupWindowStart) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// The minute at which backup will be started.
func (o MdbSqlServerClusterBackupWindowStartOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MdbSqlServerClusterBackupWindowStart) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

type MdbSqlServerClusterBackupWindowStartPtrOutput struct{ *pulumi.OutputState }

func (MdbSqlServerClusterBackupWindowStartPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbSqlServerClusterBackupWindowStart)(nil)).Elem()
}

func (o MdbSqlServerClusterBackupWindowStartPtrOutput) ToMdbSqlServerClusterBackupWindowStartPtrOutput() MdbSqlServerClusterBackupWindowStartPtrOutput {
	return o
}

func (o MdbSqlServerClusterBackupWindowStartPtrOutput) ToMdbSqlServerClusterBackupWindowStartPtrOutputWithContext(ctx context.Context) MdbSqlServerClusterBackupWindowStartPtrOutput {
	return o
}

func (o MdbSqlServerClusterBackupWindowStartPtrOutput) Elem() MdbSqlServerClusterBackupWindowStartOutput {
	return o.ApplyT(func(v *MdbSqlServerClusterBackupWindowStart) MdbSqlServerClusterBackupWindowStart { return *v }).(MdbSqlServerClusterBackupWindowStartOutput)
}

// The hour at which backup will be started.
func (o MdbSqlServerClusterBackupWindowStartPtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbSqlServerClusterBackupWindowStart) *int {
		if v == nil {
			return nil
		}
		return v.Hours
	}).(pulumi.IntPtrOutput)
}

// The minute at which backup will be started.
func (o MdbSqlServerClusterBackupWindowStartPtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbSqlServerClusterBackupWindowStart) *int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntPtrOutput)
}

type MdbSqlServerClusterDatabase struct {
	// The name of the database.
	Name string `pulumi:"name"`
}

// MdbSqlServerClusterDatabaseInput is an input type that accepts MdbSqlServerClusterDatabaseArgs and MdbSqlServerClusterDatabaseOutput values.
// You can construct a concrete instance of `MdbSqlServerClusterDatabaseInput` via:
//
//          MdbSqlServerClusterDatabaseArgs{...}
type MdbSqlServerClusterDatabaseInput interface {
	pulumi.Input

	ToMdbSqlServerClusterDatabaseOutput() MdbSqlServerClusterDatabaseOutput
	ToMdbSqlServerClusterDatabaseOutputWithContext(context.Context) MdbSqlServerClusterDatabaseOutput
}

type MdbSqlServerClusterDatabaseArgs struct {
	// The name of the database.
	Name pulumi.StringInput `pulumi:"name"`
}

func (MdbSqlServerClusterDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbSqlServerClusterDatabase)(nil)).Elem()
}

func (i MdbSqlServerClusterDatabaseArgs) ToMdbSqlServerClusterDatabaseOutput() MdbSqlServerClusterDatabaseOutput {
	return i.ToMdbSqlServerClusterDatabaseOutputWithContext(context.Background())
}

func (i MdbSqlServerClusterDatabaseArgs) ToMdbSqlServerClusterDatabaseOutputWithContext(ctx context.Context) MdbSqlServerClusterDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbSqlServerClusterDatabaseOutput)
}

// MdbSqlServerClusterDatabaseArrayInput is an input type that accepts MdbSqlServerClusterDatabaseArray and MdbSqlServerClusterDatabaseArrayOutput values.
// You can construct a concrete instance of `MdbSqlServerClusterDatabaseArrayInput` via:
//
//          MdbSqlServerClusterDatabaseArray{ MdbSqlServerClusterDatabaseArgs{...} }
type MdbSqlServerClusterDatabaseArrayInput interface {
	pulumi.Input

	ToMdbSqlServerClusterDatabaseArrayOutput() MdbSqlServerClusterDatabaseArrayOutput
	ToMdbSqlServerClusterDatabaseArrayOutputWithContext(context.Context) MdbSqlServerClusterDatabaseArrayOutput
}

type MdbSqlServerClusterDatabaseArray []MdbSqlServerClusterDatabaseInput

func (MdbSqlServerClusterDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbSqlServerClusterDatabase)(nil)).Elem()
}

func (i MdbSqlServerClusterDatabaseArray) ToMdbSqlServerClusterDatabaseArrayOutput() MdbSqlServerClusterDatabaseArrayOutput {
	return i.ToMdbSqlServerClusterDatabaseArrayOutputWithContext(context.Background())
}

func (i MdbSqlServerClusterDatabaseArray) ToMdbSqlServerClusterDatabaseArrayOutputWithContext(ctx context.Context) MdbSqlServerClusterDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbSqlServerClusterDatabaseArrayOutput)
}

type MdbSqlServerClusterDatabaseOutput struct{ *pulumi.OutputState }

func (MdbSqlServerClusterDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbSqlServerClusterDatabase)(nil)).Elem()
}

func (o MdbSqlServerClusterDatabaseOutput) ToMdbSqlServerClusterDatabaseOutput() MdbSqlServerClusterDatabaseOutput {
	return o
}

func (o MdbSqlServerClusterDatabaseOutput) ToMdbSqlServerClusterDatabaseOutputWithContext(ctx context.Context) MdbSqlServerClusterDatabaseOutput {
	return o
}

// The name of the database.
func (o MdbSqlServerClusterDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MdbSqlServerClusterDatabase) string { return v.Name }).(pulumi.StringOutput)
}

type MdbSqlServerClusterDatabaseArrayOutput struct{ *pulumi.OutputState }

func (MdbSqlServerClusterDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbSqlServerClusterDatabase)(nil)).Elem()
}

func (o MdbSqlServerClusterDatabaseArrayOutput) ToMdbSqlServerClusterDatabaseArrayOutput() MdbSqlServerClusterDatabaseArrayOutput {
	return o
}

func (o MdbSqlServerClusterDatabaseArrayOutput) ToMdbSqlServerClusterDatabaseArrayOutputWithContext(ctx context.Context) MdbSqlServerClusterDatabaseArrayOutput {
	return o
}

func (o MdbSqlServerClusterDatabaseArrayOutput) Index(i pulumi.IntInput) MdbSqlServerClusterDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbSqlServerClusterDatabase {
		return vs[0].([]MdbSqlServerClusterDatabase)[vs[1].(int)]
	}).(MdbSqlServerClusterDatabaseOutput)
}

type MdbSqlServerClusterHost struct {
	// Sets whether the host should get a public IP address on creation. Changing this parameter for an existing host is not supported at the moment
	AssignPublicIp *bool `pulumi:"assignPublicIp"`
	// The fully qualified domain name of the host.
	Fqdn *string `pulumi:"fqdn"`
	// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
	SubnetId *string `pulumi:"subnetId"`
	// The availability zone where the SQLServer host will be created.
	Zone string `pulumi:"zone"`
}

// MdbSqlServerClusterHostInput is an input type that accepts MdbSqlServerClusterHostArgs and MdbSqlServerClusterHostOutput values.
// You can construct a concrete instance of `MdbSqlServerClusterHostInput` via:
//
//          MdbSqlServerClusterHostArgs{...}
type MdbSqlServerClusterHostInput interface {
	pulumi.Input

	ToMdbSqlServerClusterHostOutput() MdbSqlServerClusterHostOutput
	ToMdbSqlServerClusterHostOutputWithContext(context.Context) MdbSqlServerClusterHostOutput
}

type MdbSqlServerClusterHostArgs struct {
	// Sets whether the host should get a public IP address on creation. Changing this parameter for an existing host is not supported at the moment
	AssignPublicIp pulumi.BoolPtrInput `pulumi:"assignPublicIp"`
	// The fully qualified domain name of the host.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The availability zone where the SQLServer host will be created.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (MdbSqlServerClusterHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbSqlServerClusterHost)(nil)).Elem()
}

func (i MdbSqlServerClusterHostArgs) ToMdbSqlServerClusterHostOutput() MdbSqlServerClusterHostOutput {
	return i.ToMdbSqlServerClusterHostOutputWithContext(context.Background())
}

func (i MdbSqlServerClusterHostArgs) ToMdbSqlServerClusterHostOutputWithContext(ctx context.Context) MdbSqlServerClusterHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbSqlServerClusterHostOutput)
}

// MdbSqlServerClusterHostArrayInput is an input type that accepts MdbSqlServerClusterHostArray and MdbSqlServerClusterHostArrayOutput values.
// You can construct a concrete instance of `MdbSqlServerClusterHostArrayInput` via:
//
//          MdbSqlServerClusterHostArray{ MdbSqlServerClusterHostArgs{...} }
type MdbSqlServerClusterHostArrayInput interface {
	pulumi.Input

	ToMdbSqlServerClusterHostArrayOutput() MdbSqlServerClusterHostArrayOutput
	ToMdbSqlServerClusterHostArrayOutputWithContext(context.Context) MdbSqlServerClusterHostArrayOutput
}

type MdbSqlServerClusterHostArray []MdbSqlServerClusterHostInput

func (MdbSqlServerClusterHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbSqlServerClusterHost)(nil)).Elem()
}

func (i MdbSqlServerClusterHostArray) ToMdbSqlServerClusterHostArrayOutput() MdbSqlServerClusterHostArrayOutput {
	return i.ToMdbSqlServerClusterHostArrayOutputWithContext(context.Background())
}

func (i MdbSqlServerClusterHostArray) ToMdbSqlServerClusterHostArrayOutputWithContext(ctx context.Context) MdbSqlServerClusterHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbSqlServerClusterHostArrayOutput)
}

type MdbSqlServerClusterHostOutput struct{ *pulumi.OutputState }

func (MdbSqlServerClusterHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbSqlServerClusterHost)(nil)).Elem()
}

func (o MdbSqlServerClusterHostOutput) ToMdbSqlServerClusterHostOutput() MdbSqlServerClusterHostOutput {
	return o
}

func (o MdbSqlServerClusterHostOutput) ToMdbSqlServerClusterHostOutputWithContext(ctx context.Context) MdbSqlServerClusterHostOutput {
	return o
}

// Sets whether the host should get a public IP address on creation. Changing this parameter for an existing host is not supported at the moment
func (o MdbSqlServerClusterHostOutput) AssignPublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MdbSqlServerClusterHost) *bool { return v.AssignPublicIp }).(pulumi.BoolPtrOutput)
}

// The fully qualified domain name of the host.
func (o MdbSqlServerClusterHostOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbSqlServerClusterHost) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
func (o MdbSqlServerClusterHostOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MdbSqlServerClusterHost) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The availability zone where the SQLServer host will be created.
func (o MdbSqlServerClusterHostOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v MdbSqlServerClusterHost) string { return v.Zone }).(pulumi.StringOutput)
}

type MdbSqlServerClusterHostArrayOutput struct{ *pulumi.OutputState }

func (MdbSqlServerClusterHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbSqlServerClusterHost)(nil)).Elem()
}

func (o MdbSqlServerClusterHostArrayOutput) ToMdbSqlServerClusterHostArrayOutput() MdbSqlServerClusterHostArrayOutput {
	return o
}

func (o MdbSqlServerClusterHostArrayOutput) ToMdbSqlServerClusterHostArrayOutputWithContext(ctx context.Context) MdbSqlServerClusterHostArrayOutput {
	return o
}

func (o MdbSqlServerClusterHostArrayOutput) Index(i pulumi.IntInput) MdbSqlServerClusterHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbSqlServerClusterHost {
		return vs[0].([]MdbSqlServerClusterHost)[vs[1].(int)]
	}).(MdbSqlServerClusterHostOutput)
}

type MdbSqlServerClusterResources struct {
	// Volume of the storage available to a SQLServer host, in gigabytes.
	DiskSize int `pulumi:"diskSize"`
	// Type of the storage of SQLServer hosts.
	DiskTypeId       string `pulumi:"diskTypeId"`
	ResourcePresetId string `pulumi:"resourcePresetId"`
}

// MdbSqlServerClusterResourcesInput is an input type that accepts MdbSqlServerClusterResourcesArgs and MdbSqlServerClusterResourcesOutput values.
// You can construct a concrete instance of `MdbSqlServerClusterResourcesInput` via:
//
//          MdbSqlServerClusterResourcesArgs{...}
type MdbSqlServerClusterResourcesInput interface {
	pulumi.Input

	ToMdbSqlServerClusterResourcesOutput() MdbSqlServerClusterResourcesOutput
	ToMdbSqlServerClusterResourcesOutputWithContext(context.Context) MdbSqlServerClusterResourcesOutput
}

type MdbSqlServerClusterResourcesArgs struct {
	// Volume of the storage available to a SQLServer host, in gigabytes.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// Type of the storage of SQLServer hosts.
	DiskTypeId       pulumi.StringInput `pulumi:"diskTypeId"`
	ResourcePresetId pulumi.StringInput `pulumi:"resourcePresetId"`
}

func (MdbSqlServerClusterResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbSqlServerClusterResources)(nil)).Elem()
}

func (i MdbSqlServerClusterResourcesArgs) ToMdbSqlServerClusterResourcesOutput() MdbSqlServerClusterResourcesOutput {
	return i.ToMdbSqlServerClusterResourcesOutputWithContext(context.Background())
}

func (i MdbSqlServerClusterResourcesArgs) ToMdbSqlServerClusterResourcesOutputWithContext(ctx context.Context) MdbSqlServerClusterResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbSqlServerClusterResourcesOutput)
}

func (i MdbSqlServerClusterResourcesArgs) ToMdbSqlServerClusterResourcesPtrOutput() MdbSqlServerClusterResourcesPtrOutput {
	return i.ToMdbSqlServerClusterResourcesPtrOutputWithContext(context.Background())
}

func (i MdbSqlServerClusterResourcesArgs) ToMdbSqlServerClusterResourcesPtrOutputWithContext(ctx context.Context) MdbSqlServerClusterResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbSqlServerClusterResourcesOutput).ToMdbSqlServerClusterResourcesPtrOutputWithContext(ctx)
}

// MdbSqlServerClusterResourcesPtrInput is an input type that accepts MdbSqlServerClusterResourcesArgs, MdbSqlServerClusterResourcesPtr and MdbSqlServerClusterResourcesPtrOutput values.
// You can construct a concrete instance of `MdbSqlServerClusterResourcesPtrInput` via:
//
//          MdbSqlServerClusterResourcesArgs{...}
//
//  or:
//
//          nil
type MdbSqlServerClusterResourcesPtrInput interface {
	pulumi.Input

	ToMdbSqlServerClusterResourcesPtrOutput() MdbSqlServerClusterResourcesPtrOutput
	ToMdbSqlServerClusterResourcesPtrOutputWithContext(context.Context) MdbSqlServerClusterResourcesPtrOutput
}

type mdbSqlServerClusterResourcesPtrType MdbSqlServerClusterResourcesArgs

func MdbSqlServerClusterResourcesPtr(v *MdbSqlServerClusterResourcesArgs) MdbSqlServerClusterResourcesPtrInput {
	return (*mdbSqlServerClusterResourcesPtrType)(v)
}

func (*mdbSqlServerClusterResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbSqlServerClusterResources)(nil)).Elem()
}

func (i *mdbSqlServerClusterResourcesPtrType) ToMdbSqlServerClusterResourcesPtrOutput() MdbSqlServerClusterResourcesPtrOutput {
	return i.ToMdbSqlServerClusterResourcesPtrOutputWithContext(context.Background())
}

func (i *mdbSqlServerClusterResourcesPtrType) ToMdbSqlServerClusterResourcesPtrOutputWithContext(ctx context.Context) MdbSqlServerClusterResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbSqlServerClusterResourcesPtrOutput)
}

type MdbSqlServerClusterResourcesOutput struct{ *pulumi.OutputState }

func (MdbSqlServerClusterResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbSqlServerClusterResources)(nil)).Elem()
}

func (o MdbSqlServerClusterResourcesOutput) ToMdbSqlServerClusterResourcesOutput() MdbSqlServerClusterResourcesOutput {
	return o
}

func (o MdbSqlServerClusterResourcesOutput) ToMdbSqlServerClusterResourcesOutputWithContext(ctx context.Context) MdbSqlServerClusterResourcesOutput {
	return o
}

func (o MdbSqlServerClusterResourcesOutput) ToMdbSqlServerClusterResourcesPtrOutput() MdbSqlServerClusterResourcesPtrOutput {
	return o.ToMdbSqlServerClusterResourcesPtrOutputWithContext(context.Background())
}

func (o MdbSqlServerClusterResourcesOutput) ToMdbSqlServerClusterResourcesPtrOutputWithContext(ctx context.Context) MdbSqlServerClusterResourcesPtrOutput {
	return o.ApplyT(func(v MdbSqlServerClusterResources) *MdbSqlServerClusterResources {
		return &v
	}).(MdbSqlServerClusterResourcesPtrOutput)
}

// Volume of the storage available to a SQLServer host, in gigabytes.
func (o MdbSqlServerClusterResourcesOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v MdbSqlServerClusterResources) int { return v.DiskSize }).(pulumi.IntOutput)
}

// Type of the storage of SQLServer hosts.
func (o MdbSqlServerClusterResourcesOutput) DiskTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v MdbSqlServerClusterResources) string { return v.DiskTypeId }).(pulumi.StringOutput)
}

func (o MdbSqlServerClusterResourcesOutput) ResourcePresetId() pulumi.StringOutput {
	return o.ApplyT(func(v MdbSqlServerClusterResources) string { return v.ResourcePresetId }).(pulumi.StringOutput)
}

type MdbSqlServerClusterResourcesPtrOutput struct{ *pulumi.OutputState }

func (MdbSqlServerClusterResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbSqlServerClusterResources)(nil)).Elem()
}

func (o MdbSqlServerClusterResourcesPtrOutput) ToMdbSqlServerClusterResourcesPtrOutput() MdbSqlServerClusterResourcesPtrOutput {
	return o
}

func (o MdbSqlServerClusterResourcesPtrOutput) ToMdbSqlServerClusterResourcesPtrOutputWithContext(ctx context.Context) MdbSqlServerClusterResourcesPtrOutput {
	return o
}

func (o MdbSqlServerClusterResourcesPtrOutput) Elem() MdbSqlServerClusterResourcesOutput {
	return o.ApplyT(func(v *MdbSqlServerClusterResources) MdbSqlServerClusterResources { return *v }).(MdbSqlServerClusterResourcesOutput)
}

// Volume of the storage available to a SQLServer host, in gigabytes.
func (o MdbSqlServerClusterResourcesPtrOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MdbSqlServerClusterResources) *int {
		if v == nil {
			return nil
		}
		return &v.DiskSize
	}).(pulumi.IntPtrOutput)
}

// Type of the storage of SQLServer hosts.
func (o MdbSqlServerClusterResourcesPtrOutput) DiskTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbSqlServerClusterResources) *string {
		if v == nil {
			return nil
		}
		return &v.DiskTypeId
	}).(pulumi.StringPtrOutput)
}

func (o MdbSqlServerClusterResourcesPtrOutput) ResourcePresetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbSqlServerClusterResources) *string {
		if v == nil {
			return nil
		}
		return &v.ResourcePresetId
	}).(pulumi.StringPtrOutput)
}

type MdbSqlServerClusterUser struct {
	// The name of the database.
	Name string `pulumi:"name"`
	// The password of the user.
	Password string `pulumi:"password"`
	// Set of permissions granted to the user. The structure is documented below.
	Permissions []MdbSqlServerClusterUserPermission `pulumi:"permissions"`
}

// MdbSqlServerClusterUserInput is an input type that accepts MdbSqlServerClusterUserArgs and MdbSqlServerClusterUserOutput values.
// You can construct a concrete instance of `MdbSqlServerClusterUserInput` via:
//
//          MdbSqlServerClusterUserArgs{...}
type MdbSqlServerClusterUserInput interface {
	pulumi.Input

	ToMdbSqlServerClusterUserOutput() MdbSqlServerClusterUserOutput
	ToMdbSqlServerClusterUserOutputWithContext(context.Context) MdbSqlServerClusterUserOutput
}

type MdbSqlServerClusterUserArgs struct {
	// The name of the database.
	Name pulumi.StringInput `pulumi:"name"`
	// The password of the user.
	Password pulumi.StringInput `pulumi:"password"`
	// Set of permissions granted to the user. The structure is documented below.
	Permissions MdbSqlServerClusterUserPermissionArrayInput `pulumi:"permissions"`
}

func (MdbSqlServerClusterUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbSqlServerClusterUser)(nil)).Elem()
}

func (i MdbSqlServerClusterUserArgs) ToMdbSqlServerClusterUserOutput() MdbSqlServerClusterUserOutput {
	return i.ToMdbSqlServerClusterUserOutputWithContext(context.Background())
}

func (i MdbSqlServerClusterUserArgs) ToMdbSqlServerClusterUserOutputWithContext(ctx context.Context) MdbSqlServerClusterUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbSqlServerClusterUserOutput)
}

// MdbSqlServerClusterUserArrayInput is an input type that accepts MdbSqlServerClusterUserArray and MdbSqlServerClusterUserArrayOutput values.
// You can construct a concrete instance of `MdbSqlServerClusterUserArrayInput` via:
//
//          MdbSqlServerClusterUserArray{ MdbSqlServerClusterUserArgs{...} }
type MdbSqlServerClusterUserArrayInput interface {
	pulumi.Input

	ToMdbSqlServerClusterUserArrayOutput() MdbSqlServerClusterUserArrayOutput
	ToMdbSqlServerClusterUserArrayOutputWithContext(context.Context) MdbSqlServerClusterUserArrayOutput
}

type MdbSqlServerClusterUserArray []MdbSqlServerClusterUserInput

func (MdbSqlServerClusterUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbSqlServerClusterUser)(nil)).Elem()
}

func (i MdbSqlServerClusterUserArray) ToMdbSqlServerClusterUserArrayOutput() MdbSqlServerClusterUserArrayOutput {
	return i.ToMdbSqlServerClusterUserArrayOutputWithContext(context.Background())
}

func (i MdbSqlServerClusterUserArray) ToMdbSqlServerClusterUserArrayOutputWithContext(ctx context.Context) MdbSqlServerClusterUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbSqlServerClusterUserArrayOutput)
}

type MdbSqlServerClusterUserOutput struct{ *pulumi.OutputState }

func (MdbSqlServerClusterUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbSqlServerClusterUser)(nil)).Elem()
}

func (o MdbSqlServerClusterUserOutput) ToMdbSqlServerClusterUserOutput() MdbSqlServerClusterUserOutput {
	return o
}

func (o MdbSqlServerClusterUserOutput) ToMdbSqlServerClusterUserOutputWithContext(ctx context.Context) MdbSqlServerClusterUserOutput {
	return o
}

// The name of the database.
func (o MdbSqlServerClusterUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MdbSqlServerClusterUser) string { return v.Name }).(pulumi.StringOutput)
}

// The password of the user.
func (o MdbSqlServerClusterUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v MdbSqlServerClusterUser) string { return v.Password }).(pulumi.StringOutput)
}

// Set of permissions granted to the user. The structure is documented below.
func (o MdbSqlServerClusterUserOutput) Permissions() MdbSqlServerClusterUserPermissionArrayOutput {
	return o.ApplyT(func(v MdbSqlServerClusterUser) []MdbSqlServerClusterUserPermission { return v.Permissions }).(MdbSqlServerClusterUserPermissionArrayOutput)
}

type MdbSqlServerClusterUserArrayOutput struct{ *pulumi.OutputState }

func (MdbSqlServerClusterUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbSqlServerClusterUser)(nil)).Elem()
}

func (o MdbSqlServerClusterUserArrayOutput) ToMdbSqlServerClusterUserArrayOutput() MdbSqlServerClusterUserArrayOutput {
	return o
}

func (o MdbSqlServerClusterUserArrayOutput) ToMdbSqlServerClusterUserArrayOutputWithContext(ctx context.Context) MdbSqlServerClusterUserArrayOutput {
	return o
}

func (o MdbSqlServerClusterUserArrayOutput) Index(i pulumi.IntInput) MdbSqlServerClusterUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbSqlServerClusterUser {
		return vs[0].([]MdbSqlServerClusterUser)[vs[1].(int)]
	}).(MdbSqlServerClusterUserOutput)
}

type MdbSqlServerClusterUserPermission struct {
	// The name of the database that the permission grants access to.
	DatabaseName string `pulumi:"databaseName"`
	// List user's roles in the database.
	// Allowed roles: `OWNER`, `SECURITYADMIN`, `ACCESSADMIN`, `BACKUPOPERATOR`, `DDLADMIN`, `DATAWRITER`, `DATAREADER`, `DENYDATAWRITER`, `DENYDATAREADER`.
	Roles []string `pulumi:"roles"`
}

// MdbSqlServerClusterUserPermissionInput is an input type that accepts MdbSqlServerClusterUserPermissionArgs and MdbSqlServerClusterUserPermissionOutput values.
// You can construct a concrete instance of `MdbSqlServerClusterUserPermissionInput` via:
//
//          MdbSqlServerClusterUserPermissionArgs{...}
type MdbSqlServerClusterUserPermissionInput interface {
	pulumi.Input

	ToMdbSqlServerClusterUserPermissionOutput() MdbSqlServerClusterUserPermissionOutput
	ToMdbSqlServerClusterUserPermissionOutputWithContext(context.Context) MdbSqlServerClusterUserPermissionOutput
}

type MdbSqlServerClusterUserPermissionArgs struct {
	// The name of the database that the permission grants access to.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// List user's roles in the database.
	// Allowed roles: `OWNER`, `SECURITYADMIN`, `ACCESSADMIN`, `BACKUPOPERATOR`, `DDLADMIN`, `DATAWRITER`, `DATAREADER`, `DENYDATAWRITER`, `DENYDATAREADER`.
	Roles pulumi.StringArrayInput `pulumi:"roles"`
}

func (MdbSqlServerClusterUserPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbSqlServerClusterUserPermission)(nil)).Elem()
}

func (i MdbSqlServerClusterUserPermissionArgs) ToMdbSqlServerClusterUserPermissionOutput() MdbSqlServerClusterUserPermissionOutput {
	return i.ToMdbSqlServerClusterUserPermissionOutputWithContext(context.Background())
}

func (i MdbSqlServerClusterUserPermissionArgs) ToMdbSqlServerClusterUserPermissionOutputWithContext(ctx context.Context) MdbSqlServerClusterUserPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbSqlServerClusterUserPermissionOutput)
}

// MdbSqlServerClusterUserPermissionArrayInput is an input type that accepts MdbSqlServerClusterUserPermissionArray and MdbSqlServerClusterUserPermissionArrayOutput values.
// You can construct a concrete instance of `MdbSqlServerClusterUserPermissionArrayInput` via:
//
//          MdbSqlServerClusterUserPermissionArray{ MdbSqlServerClusterUserPermissionArgs{...} }
type MdbSqlServerClusterUserPermissionArrayInput interface {
	pulumi.Input

	ToMdbSqlServerClusterUserPermissionArrayOutput() MdbSqlServerClusterUserPermissionArrayOutput
	ToMdbSqlServerClusterUserPermissionArrayOutputWithContext(context.Context) MdbSqlServerClusterUserPermissionArrayOutput
}

type MdbSqlServerClusterUserPermissionArray []MdbSqlServerClusterUserPermissionInput

func (MdbSqlServerClusterUserPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbSqlServerClusterUserPermission)(nil)).Elem()
}

func (i MdbSqlServerClusterUserPermissionArray) ToMdbSqlServerClusterUserPermissionArrayOutput() MdbSqlServerClusterUserPermissionArrayOutput {
	return i.ToMdbSqlServerClusterUserPermissionArrayOutputWithContext(context.Background())
}

func (i MdbSqlServerClusterUserPermissionArray) ToMdbSqlServerClusterUserPermissionArrayOutputWithContext(ctx context.Context) MdbSqlServerClusterUserPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbSqlServerClusterUserPermissionArrayOutput)
}

type MdbSqlServerClusterUserPermissionOutput struct{ *pulumi.OutputState }

func (MdbSqlServerClusterUserPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbSqlServerClusterUserPermission)(nil)).Elem()
}

func (o MdbSqlServerClusterUserPermissionOutput) ToMdbSqlServerClusterUserPermissionOutput() MdbSqlServerClusterUserPermissionOutput {
	return o
}

func (o MdbSqlServerClusterUserPermissionOutput) ToMdbSqlServerClusterUserPermissionOutputWithContext(ctx context.Context) MdbSqlServerClusterUserPermissionOutput {
	return o
}

// The name of the database that the permission grants access to.
func (o MdbSqlServerClusterUserPermissionOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MdbSqlServerClusterUserPermission) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// List user's roles in the database.
// Allowed roles: `OWNER`, `SECURITYADMIN`, `ACCESSADMIN`, `BACKUPOPERATOR`, `DDLADMIN`, `DATAWRITER`, `DATAREADER`, `DENYDATAWRITER`, `DENYDATAREADER`.
func (o MdbSqlServerClusterUserPermissionOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MdbSqlServerClusterUserPermission) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

type MdbSqlServerClusterUserPermissionArrayOutput struct{ *pulumi.OutputState }

func (MdbSqlServerClusterUserPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MdbSqlServerClusterUserPermission)(nil)).Elem()
}

func (o MdbSqlServerClusterUserPermissionArrayOutput) ToMdbSqlServerClusterUserPermissionArrayOutput() MdbSqlServerClusterUserPermissionArrayOutput {
	return o
}

func (o MdbSqlServerClusterUserPermissionArrayOutput) ToMdbSqlServerClusterUserPermissionArrayOutputWithContext(ctx context.Context) MdbSqlServerClusterUserPermissionArrayOutput {
	return o
}

func (o MdbSqlServerClusterUserPermissionArrayOutput) Index(i pulumi.IntInput) MdbSqlServerClusterUserPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MdbSqlServerClusterUserPermission {
		return vs[0].([]MdbSqlServerClusterUserPermission)[vs[1].(int)]
	}).(MdbSqlServerClusterUserPermissionOutput)
}

type StorageBucketCorsRule struct {
	// Specifies which headers are allowed.
	AllowedHeaders []string `pulumi:"allowedHeaders"`
	// Specifies which methods are allowed. Can be `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.
	AllowedMethods []string `pulumi:"allowedMethods"`
	// Specifies which origins are allowed.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// Specifies expose header in the response.
	ExposeHeaders []string `pulumi:"exposeHeaders"`
	// Specifies time in seconds that browser can cache the response for a preflight request.
	MaxAgeSeconds *int `pulumi:"maxAgeSeconds"`
}

// StorageBucketCorsRuleInput is an input type that accepts StorageBucketCorsRuleArgs and StorageBucketCorsRuleOutput values.
// You can construct a concrete instance of `StorageBucketCorsRuleInput` via:
//
//          StorageBucketCorsRuleArgs{...}
type StorageBucketCorsRuleInput interface {
	pulumi.Input

	ToStorageBucketCorsRuleOutput() StorageBucketCorsRuleOutput
	ToStorageBucketCorsRuleOutputWithContext(context.Context) StorageBucketCorsRuleOutput
}

type StorageBucketCorsRuleArgs struct {
	// Specifies which headers are allowed.
	AllowedHeaders pulumi.StringArrayInput `pulumi:"allowedHeaders"`
	// Specifies which methods are allowed. Can be `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.
	AllowedMethods pulumi.StringArrayInput `pulumi:"allowedMethods"`
	// Specifies which origins are allowed.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// Specifies expose header in the response.
	ExposeHeaders pulumi.StringArrayInput `pulumi:"exposeHeaders"`
	// Specifies time in seconds that browser can cache the response for a preflight request.
	MaxAgeSeconds pulumi.IntPtrInput `pulumi:"maxAgeSeconds"`
}

func (StorageBucketCorsRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBucketCorsRule)(nil)).Elem()
}

func (i StorageBucketCorsRuleArgs) ToStorageBucketCorsRuleOutput() StorageBucketCorsRuleOutput {
	return i.ToStorageBucketCorsRuleOutputWithContext(context.Background())
}

func (i StorageBucketCorsRuleArgs) ToStorageBucketCorsRuleOutputWithContext(ctx context.Context) StorageBucketCorsRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketCorsRuleOutput)
}

// StorageBucketCorsRuleArrayInput is an input type that accepts StorageBucketCorsRuleArray and StorageBucketCorsRuleArrayOutput values.
// You can construct a concrete instance of `StorageBucketCorsRuleArrayInput` via:
//
//          StorageBucketCorsRuleArray{ StorageBucketCorsRuleArgs{...} }
type StorageBucketCorsRuleArrayInput interface {
	pulumi.Input

	ToStorageBucketCorsRuleArrayOutput() StorageBucketCorsRuleArrayOutput
	ToStorageBucketCorsRuleArrayOutputWithContext(context.Context) StorageBucketCorsRuleArrayOutput
}

type StorageBucketCorsRuleArray []StorageBucketCorsRuleInput

func (StorageBucketCorsRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageBucketCorsRule)(nil)).Elem()
}

func (i StorageBucketCorsRuleArray) ToStorageBucketCorsRuleArrayOutput() StorageBucketCorsRuleArrayOutput {
	return i.ToStorageBucketCorsRuleArrayOutputWithContext(context.Background())
}

func (i StorageBucketCorsRuleArray) ToStorageBucketCorsRuleArrayOutputWithContext(ctx context.Context) StorageBucketCorsRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketCorsRuleArrayOutput)
}

type StorageBucketCorsRuleOutput struct{ *pulumi.OutputState }

func (StorageBucketCorsRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBucketCorsRule)(nil)).Elem()
}

func (o StorageBucketCorsRuleOutput) ToStorageBucketCorsRuleOutput() StorageBucketCorsRuleOutput {
	return o
}

func (o StorageBucketCorsRuleOutput) ToStorageBucketCorsRuleOutputWithContext(ctx context.Context) StorageBucketCorsRuleOutput {
	return o
}

// Specifies which headers are allowed.
func (o StorageBucketCorsRuleOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageBucketCorsRule) []string { return v.AllowedHeaders }).(pulumi.StringArrayOutput)
}

// Specifies which methods are allowed. Can be `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.
func (o StorageBucketCorsRuleOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageBucketCorsRule) []string { return v.AllowedMethods }).(pulumi.StringArrayOutput)
}

// Specifies which origins are allowed.
func (o StorageBucketCorsRuleOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageBucketCorsRule) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// Specifies expose header in the response.
func (o StorageBucketCorsRuleOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageBucketCorsRule) []string { return v.ExposeHeaders }).(pulumi.StringArrayOutput)
}

// Specifies time in seconds that browser can cache the response for a preflight request.
func (o StorageBucketCorsRuleOutput) MaxAgeSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageBucketCorsRule) *int { return v.MaxAgeSeconds }).(pulumi.IntPtrOutput)
}

type StorageBucketCorsRuleArrayOutput struct{ *pulumi.OutputState }

func (StorageBucketCorsRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageBucketCorsRule)(nil)).Elem()
}

func (o StorageBucketCorsRuleArrayOutput) ToStorageBucketCorsRuleArrayOutput() StorageBucketCorsRuleArrayOutput {
	return o
}

func (o StorageBucketCorsRuleArrayOutput) ToStorageBucketCorsRuleArrayOutputWithContext(ctx context.Context) StorageBucketCorsRuleArrayOutput {
	return o
}

func (o StorageBucketCorsRuleArrayOutput) Index(i pulumi.IntInput) StorageBucketCorsRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageBucketCorsRule {
		return vs[0].([]StorageBucketCorsRule)[vs[1].(int)]
	}).(StorageBucketCorsRuleOutput)
}

type StorageBucketGrant struct {
	// Unique identifier for the rule. Must be less than or equal to 255 characters in length.
	Id          *string  `pulumi:"id"`
	Permissions []string `pulumi:"permissions"`
	Type        string   `pulumi:"type"`
	Uri         *string  `pulumi:"uri"`
}

// StorageBucketGrantInput is an input type that accepts StorageBucketGrantArgs and StorageBucketGrantOutput values.
// You can construct a concrete instance of `StorageBucketGrantInput` via:
//
//          StorageBucketGrantArgs{...}
type StorageBucketGrantInput interface {
	pulumi.Input

	ToStorageBucketGrantOutput() StorageBucketGrantOutput
	ToStorageBucketGrantOutputWithContext(context.Context) StorageBucketGrantOutput
}

type StorageBucketGrantArgs struct {
	// Unique identifier for the rule. Must be less than or equal to 255 characters in length.
	Id          pulumi.StringPtrInput   `pulumi:"id"`
	Permissions pulumi.StringArrayInput `pulumi:"permissions"`
	Type        pulumi.StringInput      `pulumi:"type"`
	Uri         pulumi.StringPtrInput   `pulumi:"uri"`
}

func (StorageBucketGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBucketGrant)(nil)).Elem()
}

func (i StorageBucketGrantArgs) ToStorageBucketGrantOutput() StorageBucketGrantOutput {
	return i.ToStorageBucketGrantOutputWithContext(context.Background())
}

func (i StorageBucketGrantArgs) ToStorageBucketGrantOutputWithContext(ctx context.Context) StorageBucketGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketGrantOutput)
}

// StorageBucketGrantArrayInput is an input type that accepts StorageBucketGrantArray and StorageBucketGrantArrayOutput values.
// You can construct a concrete instance of `StorageBucketGrantArrayInput` via:
//
//          StorageBucketGrantArray{ StorageBucketGrantArgs{...} }
type StorageBucketGrantArrayInput interface {
	pulumi.Input

	ToStorageBucketGrantArrayOutput() StorageBucketGrantArrayOutput
	ToStorageBucketGrantArrayOutputWithContext(context.Context) StorageBucketGrantArrayOutput
}

type StorageBucketGrantArray []StorageBucketGrantInput

func (StorageBucketGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageBucketGrant)(nil)).Elem()
}

func (i StorageBucketGrantArray) ToStorageBucketGrantArrayOutput() StorageBucketGrantArrayOutput {
	return i.ToStorageBucketGrantArrayOutputWithContext(context.Background())
}

func (i StorageBucketGrantArray) ToStorageBucketGrantArrayOutputWithContext(ctx context.Context) StorageBucketGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketGrantArrayOutput)
}

type StorageBucketGrantOutput struct{ *pulumi.OutputState }

func (StorageBucketGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBucketGrant)(nil)).Elem()
}

func (o StorageBucketGrantOutput) ToStorageBucketGrantOutput() StorageBucketGrantOutput {
	return o
}

func (o StorageBucketGrantOutput) ToStorageBucketGrantOutputWithContext(ctx context.Context) StorageBucketGrantOutput {
	return o
}

// Unique identifier for the rule. Must be less than or equal to 255 characters in length.
func (o StorageBucketGrantOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageBucketGrant) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o StorageBucketGrantOutput) Permissions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageBucketGrant) []string { return v.Permissions }).(pulumi.StringArrayOutput)
}

func (o StorageBucketGrantOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v StorageBucketGrant) string { return v.Type }).(pulumi.StringOutput)
}

func (o StorageBucketGrantOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageBucketGrant) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type StorageBucketGrantArrayOutput struct{ *pulumi.OutputState }

func (StorageBucketGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageBucketGrant)(nil)).Elem()
}

func (o StorageBucketGrantArrayOutput) ToStorageBucketGrantArrayOutput() StorageBucketGrantArrayOutput {
	return o
}

func (o StorageBucketGrantArrayOutput) ToStorageBucketGrantArrayOutputWithContext(ctx context.Context) StorageBucketGrantArrayOutput {
	return o
}

func (o StorageBucketGrantArrayOutput) Index(i pulumi.IntInput) StorageBucketGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageBucketGrant {
		return vs[0].([]StorageBucketGrant)[vs[1].(int)]
	}).(StorageBucketGrantOutput)
}

type StorageBucketLifecycleRule struct {
	// Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
	AbortIncompleteMultipartUploadDays *int `pulumi:"abortIncompleteMultipartUploadDays"`
	// Specifies lifecycle rule status.
	Enabled bool `pulumi:"enabled"`
	// Specifies a period in the object's expire (documented below).
	Expiration *StorageBucketLifecycleRuleExpiration `pulumi:"expiration"`
	// Unique identifier for the rule. Must be less than or equal to 255 characters in length.
	Id *string `pulumi:"id"`
	// Specifies when noncurrent object versions expire (documented below).
	NoncurrentVersionExpiration *StorageBucketLifecycleRuleNoncurrentVersionExpiration `pulumi:"noncurrentVersionExpiration"`
	// Specifies when noncurrent object versions transitions (documented below).
	NoncurrentVersionTransitions []StorageBucketLifecycleRuleNoncurrentVersionTransition `pulumi:"noncurrentVersionTransitions"`
	// Object key prefix identifying one or more objects to which the rule applies.
	Prefix *string `pulumi:"prefix"`
	// Specifies a period in the object's transitions (documented below).
	Transitions []StorageBucketLifecycleRuleTransition `pulumi:"transitions"`
}

// StorageBucketLifecycleRuleInput is an input type that accepts StorageBucketLifecycleRuleArgs and StorageBucketLifecycleRuleOutput values.
// You can construct a concrete instance of `StorageBucketLifecycleRuleInput` via:
//
//          StorageBucketLifecycleRuleArgs{...}
type StorageBucketLifecycleRuleInput interface {
	pulumi.Input

	ToStorageBucketLifecycleRuleOutput() StorageBucketLifecycleRuleOutput
	ToStorageBucketLifecycleRuleOutputWithContext(context.Context) StorageBucketLifecycleRuleOutput
}

type StorageBucketLifecycleRuleArgs struct {
	// Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
	AbortIncompleteMultipartUploadDays pulumi.IntPtrInput `pulumi:"abortIncompleteMultipartUploadDays"`
	// Specifies lifecycle rule status.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Specifies a period in the object's expire (documented below).
	Expiration StorageBucketLifecycleRuleExpirationPtrInput `pulumi:"expiration"`
	// Unique identifier for the rule. Must be less than or equal to 255 characters in length.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies when noncurrent object versions expire (documented below).
	NoncurrentVersionExpiration StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrInput `pulumi:"noncurrentVersionExpiration"`
	// Specifies when noncurrent object versions transitions (documented below).
	NoncurrentVersionTransitions StorageBucketLifecycleRuleNoncurrentVersionTransitionArrayInput `pulumi:"noncurrentVersionTransitions"`
	// Object key prefix identifying one or more objects to which the rule applies.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Specifies a period in the object's transitions (documented below).
	Transitions StorageBucketLifecycleRuleTransitionArrayInput `pulumi:"transitions"`
}

func (StorageBucketLifecycleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBucketLifecycleRule)(nil)).Elem()
}

func (i StorageBucketLifecycleRuleArgs) ToStorageBucketLifecycleRuleOutput() StorageBucketLifecycleRuleOutput {
	return i.ToStorageBucketLifecycleRuleOutputWithContext(context.Background())
}

func (i StorageBucketLifecycleRuleArgs) ToStorageBucketLifecycleRuleOutputWithContext(ctx context.Context) StorageBucketLifecycleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketLifecycleRuleOutput)
}

// StorageBucketLifecycleRuleArrayInput is an input type that accepts StorageBucketLifecycleRuleArray and StorageBucketLifecycleRuleArrayOutput values.
// You can construct a concrete instance of `StorageBucketLifecycleRuleArrayInput` via:
//
//          StorageBucketLifecycleRuleArray{ StorageBucketLifecycleRuleArgs{...} }
type StorageBucketLifecycleRuleArrayInput interface {
	pulumi.Input

	ToStorageBucketLifecycleRuleArrayOutput() StorageBucketLifecycleRuleArrayOutput
	ToStorageBucketLifecycleRuleArrayOutputWithContext(context.Context) StorageBucketLifecycleRuleArrayOutput
}

type StorageBucketLifecycleRuleArray []StorageBucketLifecycleRuleInput

func (StorageBucketLifecycleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageBucketLifecycleRule)(nil)).Elem()
}

func (i StorageBucketLifecycleRuleArray) ToStorageBucketLifecycleRuleArrayOutput() StorageBucketLifecycleRuleArrayOutput {
	return i.ToStorageBucketLifecycleRuleArrayOutputWithContext(context.Background())
}

func (i StorageBucketLifecycleRuleArray) ToStorageBucketLifecycleRuleArrayOutputWithContext(ctx context.Context) StorageBucketLifecycleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketLifecycleRuleArrayOutput)
}

type StorageBucketLifecycleRuleOutput struct{ *pulumi.OutputState }

func (StorageBucketLifecycleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBucketLifecycleRule)(nil)).Elem()
}

func (o StorageBucketLifecycleRuleOutput) ToStorageBucketLifecycleRuleOutput() StorageBucketLifecycleRuleOutput {
	return o
}

func (o StorageBucketLifecycleRuleOutput) ToStorageBucketLifecycleRuleOutputWithContext(ctx context.Context) StorageBucketLifecycleRuleOutput {
	return o
}

// Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
func (o StorageBucketLifecycleRuleOutput) AbortIncompleteMultipartUploadDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageBucketLifecycleRule) *int { return v.AbortIncompleteMultipartUploadDays }).(pulumi.IntPtrOutput)
}

// Specifies lifecycle rule status.
func (o StorageBucketLifecycleRuleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v StorageBucketLifecycleRule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Specifies a period in the object's expire (documented below).
func (o StorageBucketLifecycleRuleOutput) Expiration() StorageBucketLifecycleRuleExpirationPtrOutput {
	return o.ApplyT(func(v StorageBucketLifecycleRule) *StorageBucketLifecycleRuleExpiration { return v.Expiration }).(StorageBucketLifecycleRuleExpirationPtrOutput)
}

// Unique identifier for the rule. Must be less than or equal to 255 characters in length.
func (o StorageBucketLifecycleRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageBucketLifecycleRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies when noncurrent object versions expire (documented below).
func (o StorageBucketLifecycleRuleOutput) NoncurrentVersionExpiration() StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return o.ApplyT(func(v StorageBucketLifecycleRule) *StorageBucketLifecycleRuleNoncurrentVersionExpiration {
		return v.NoncurrentVersionExpiration
	}).(StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput)
}

// Specifies when noncurrent object versions transitions (documented below).
func (o StorageBucketLifecycleRuleOutput) NoncurrentVersionTransitions() StorageBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput {
	return o.ApplyT(func(v StorageBucketLifecycleRule) []StorageBucketLifecycleRuleNoncurrentVersionTransition {
		return v.NoncurrentVersionTransitions
	}).(StorageBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput)
}

// Object key prefix identifying one or more objects to which the rule applies.
func (o StorageBucketLifecycleRuleOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageBucketLifecycleRule) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Specifies a period in the object's transitions (documented below).
func (o StorageBucketLifecycleRuleOutput) Transitions() StorageBucketLifecycleRuleTransitionArrayOutput {
	return o.ApplyT(func(v StorageBucketLifecycleRule) []StorageBucketLifecycleRuleTransition { return v.Transitions }).(StorageBucketLifecycleRuleTransitionArrayOutput)
}

type StorageBucketLifecycleRuleArrayOutput struct{ *pulumi.OutputState }

func (StorageBucketLifecycleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageBucketLifecycleRule)(nil)).Elem()
}

func (o StorageBucketLifecycleRuleArrayOutput) ToStorageBucketLifecycleRuleArrayOutput() StorageBucketLifecycleRuleArrayOutput {
	return o
}

func (o StorageBucketLifecycleRuleArrayOutput) ToStorageBucketLifecycleRuleArrayOutputWithContext(ctx context.Context) StorageBucketLifecycleRuleArrayOutput {
	return o
}

func (o StorageBucketLifecycleRuleArrayOutput) Index(i pulumi.IntInput) StorageBucketLifecycleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageBucketLifecycleRule {
		return vs[0].([]StorageBucketLifecycleRule)[vs[1].(int)]
	}).(StorageBucketLifecycleRuleOutput)
}

type StorageBucketLifecycleRuleExpiration struct {
	// Specifies the date after which you want the corresponding action to take effect.
	Date *string `pulumi:"date"`
	// Specifies the number of days after object creation when the specific rule action takes effect.
	Days *int `pulumi:"days"`
	// On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Object Storage to delete expired object delete markers.
	ExpiredObjectDeleteMarker *bool `pulumi:"expiredObjectDeleteMarker"`
}

// StorageBucketLifecycleRuleExpirationInput is an input type that accepts StorageBucketLifecycleRuleExpirationArgs and StorageBucketLifecycleRuleExpirationOutput values.
// You can construct a concrete instance of `StorageBucketLifecycleRuleExpirationInput` via:
//
//          StorageBucketLifecycleRuleExpirationArgs{...}
type StorageBucketLifecycleRuleExpirationInput interface {
	pulumi.Input

	ToStorageBucketLifecycleRuleExpirationOutput() StorageBucketLifecycleRuleExpirationOutput
	ToStorageBucketLifecycleRuleExpirationOutputWithContext(context.Context) StorageBucketLifecycleRuleExpirationOutput
}

type StorageBucketLifecycleRuleExpirationArgs struct {
	// Specifies the date after which you want the corresponding action to take effect.
	Date pulumi.StringPtrInput `pulumi:"date"`
	// Specifies the number of days after object creation when the specific rule action takes effect.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Object Storage to delete expired object delete markers.
	ExpiredObjectDeleteMarker pulumi.BoolPtrInput `pulumi:"expiredObjectDeleteMarker"`
}

func (StorageBucketLifecycleRuleExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (i StorageBucketLifecycleRuleExpirationArgs) ToStorageBucketLifecycleRuleExpirationOutput() StorageBucketLifecycleRuleExpirationOutput {
	return i.ToStorageBucketLifecycleRuleExpirationOutputWithContext(context.Background())
}

func (i StorageBucketLifecycleRuleExpirationArgs) ToStorageBucketLifecycleRuleExpirationOutputWithContext(ctx context.Context) StorageBucketLifecycleRuleExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketLifecycleRuleExpirationOutput)
}

func (i StorageBucketLifecycleRuleExpirationArgs) ToStorageBucketLifecycleRuleExpirationPtrOutput() StorageBucketLifecycleRuleExpirationPtrOutput {
	return i.ToStorageBucketLifecycleRuleExpirationPtrOutputWithContext(context.Background())
}

func (i StorageBucketLifecycleRuleExpirationArgs) ToStorageBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) StorageBucketLifecycleRuleExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketLifecycleRuleExpirationOutput).ToStorageBucketLifecycleRuleExpirationPtrOutputWithContext(ctx)
}

// StorageBucketLifecycleRuleExpirationPtrInput is an input type that accepts StorageBucketLifecycleRuleExpirationArgs, StorageBucketLifecycleRuleExpirationPtr and StorageBucketLifecycleRuleExpirationPtrOutput values.
// You can construct a concrete instance of `StorageBucketLifecycleRuleExpirationPtrInput` via:
//
//          StorageBucketLifecycleRuleExpirationArgs{...}
//
//  or:
//
//          nil
type StorageBucketLifecycleRuleExpirationPtrInput interface {
	pulumi.Input

	ToStorageBucketLifecycleRuleExpirationPtrOutput() StorageBucketLifecycleRuleExpirationPtrOutput
	ToStorageBucketLifecycleRuleExpirationPtrOutputWithContext(context.Context) StorageBucketLifecycleRuleExpirationPtrOutput
}

type storageBucketLifecycleRuleExpirationPtrType StorageBucketLifecycleRuleExpirationArgs

func StorageBucketLifecycleRuleExpirationPtr(v *StorageBucketLifecycleRuleExpirationArgs) StorageBucketLifecycleRuleExpirationPtrInput {
	return (*storageBucketLifecycleRuleExpirationPtrType)(v)
}

func (*storageBucketLifecycleRuleExpirationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (i *storageBucketLifecycleRuleExpirationPtrType) ToStorageBucketLifecycleRuleExpirationPtrOutput() StorageBucketLifecycleRuleExpirationPtrOutput {
	return i.ToStorageBucketLifecycleRuleExpirationPtrOutputWithContext(context.Background())
}

func (i *storageBucketLifecycleRuleExpirationPtrType) ToStorageBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) StorageBucketLifecycleRuleExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketLifecycleRuleExpirationPtrOutput)
}

type StorageBucketLifecycleRuleExpirationOutput struct{ *pulumi.OutputState }

func (StorageBucketLifecycleRuleExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (o StorageBucketLifecycleRuleExpirationOutput) ToStorageBucketLifecycleRuleExpirationOutput() StorageBucketLifecycleRuleExpirationOutput {
	return o
}

func (o StorageBucketLifecycleRuleExpirationOutput) ToStorageBucketLifecycleRuleExpirationOutputWithContext(ctx context.Context) StorageBucketLifecycleRuleExpirationOutput {
	return o
}

func (o StorageBucketLifecycleRuleExpirationOutput) ToStorageBucketLifecycleRuleExpirationPtrOutput() StorageBucketLifecycleRuleExpirationPtrOutput {
	return o.ToStorageBucketLifecycleRuleExpirationPtrOutputWithContext(context.Background())
}

func (o StorageBucketLifecycleRuleExpirationOutput) ToStorageBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) StorageBucketLifecycleRuleExpirationPtrOutput {
	return o.ApplyT(func(v StorageBucketLifecycleRuleExpiration) *StorageBucketLifecycleRuleExpiration {
		return &v
	}).(StorageBucketLifecycleRuleExpirationPtrOutput)
}

// Specifies the date after which you want the corresponding action to take effect.
func (o StorageBucketLifecycleRuleExpirationOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageBucketLifecycleRuleExpiration) *string { return v.Date }).(pulumi.StringPtrOutput)
}

// Specifies the number of days after object creation when the specific rule action takes effect.
func (o StorageBucketLifecycleRuleExpirationOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageBucketLifecycleRuleExpiration) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Object Storage to delete expired object delete markers.
func (o StorageBucketLifecycleRuleExpirationOutput) ExpiredObjectDeleteMarker() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageBucketLifecycleRuleExpiration) *bool { return v.ExpiredObjectDeleteMarker }).(pulumi.BoolPtrOutput)
}

type StorageBucketLifecycleRuleExpirationPtrOutput struct{ *pulumi.OutputState }

func (StorageBucketLifecycleRuleExpirationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (o StorageBucketLifecycleRuleExpirationPtrOutput) ToStorageBucketLifecycleRuleExpirationPtrOutput() StorageBucketLifecycleRuleExpirationPtrOutput {
	return o
}

func (o StorageBucketLifecycleRuleExpirationPtrOutput) ToStorageBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) StorageBucketLifecycleRuleExpirationPtrOutput {
	return o
}

func (o StorageBucketLifecycleRuleExpirationPtrOutput) Elem() StorageBucketLifecycleRuleExpirationOutput {
	return o.ApplyT(func(v *StorageBucketLifecycleRuleExpiration) StorageBucketLifecycleRuleExpiration { return *v }).(StorageBucketLifecycleRuleExpirationOutput)
}

// Specifies the date after which you want the corresponding action to take effect.
func (o StorageBucketLifecycleRuleExpirationPtrOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageBucketLifecycleRuleExpiration) *string {
		if v == nil {
			return nil
		}
		return v.Date
	}).(pulumi.StringPtrOutput)
}

// Specifies the number of days after object creation when the specific rule action takes effect.
func (o StorageBucketLifecycleRuleExpirationPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageBucketLifecycleRuleExpiration) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Object Storage to delete expired object delete markers.
func (o StorageBucketLifecycleRuleExpirationPtrOutput) ExpiredObjectDeleteMarker() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageBucketLifecycleRuleExpiration) *bool {
		if v == nil {
			return nil
		}
		return v.ExpiredObjectDeleteMarker
	}).(pulumi.BoolPtrOutput)
}

type StorageBucketLifecycleRuleNoncurrentVersionExpiration struct {
	// Specifies the number of days noncurrent object versions expire.
	Days *int `pulumi:"days"`
}

// StorageBucketLifecycleRuleNoncurrentVersionExpirationInput is an input type that accepts StorageBucketLifecycleRuleNoncurrentVersionExpirationArgs and StorageBucketLifecycleRuleNoncurrentVersionExpirationOutput values.
// You can construct a concrete instance of `StorageBucketLifecycleRuleNoncurrentVersionExpirationInput` via:
//
//          StorageBucketLifecycleRuleNoncurrentVersionExpirationArgs{...}
type StorageBucketLifecycleRuleNoncurrentVersionExpirationInput interface {
	pulumi.Input

	ToStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput() StorageBucketLifecycleRuleNoncurrentVersionExpirationOutput
	ToStorageBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(context.Context) StorageBucketLifecycleRuleNoncurrentVersionExpirationOutput
}

type StorageBucketLifecycleRuleNoncurrentVersionExpirationArgs struct {
	// Specifies the number of days noncurrent object versions expire.
	Days pulumi.IntPtrInput `pulumi:"days"`
}

func (StorageBucketLifecycleRuleNoncurrentVersionExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (i StorageBucketLifecycleRuleNoncurrentVersionExpirationArgs) ToStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput() StorageBucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return i.ToStorageBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(context.Background())
}

func (i StorageBucketLifecycleRuleNoncurrentVersionExpirationArgs) ToStorageBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(ctx context.Context) StorageBucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketLifecycleRuleNoncurrentVersionExpirationOutput)
}

func (i StorageBucketLifecycleRuleNoncurrentVersionExpirationArgs) ToStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput() StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return i.ToStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(context.Background())
}

func (i StorageBucketLifecycleRuleNoncurrentVersionExpirationArgs) ToStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketLifecycleRuleNoncurrentVersionExpirationOutput).ToStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(ctx)
}

// StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrInput is an input type that accepts StorageBucketLifecycleRuleNoncurrentVersionExpirationArgs, StorageBucketLifecycleRuleNoncurrentVersionExpirationPtr and StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput values.
// You can construct a concrete instance of `StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrInput` via:
//
//          StorageBucketLifecycleRuleNoncurrentVersionExpirationArgs{...}
//
//  or:
//
//          nil
type StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrInput interface {
	pulumi.Input

	ToStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput() StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput
	ToStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(context.Context) StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput
}

type storageBucketLifecycleRuleNoncurrentVersionExpirationPtrType StorageBucketLifecycleRuleNoncurrentVersionExpirationArgs

func StorageBucketLifecycleRuleNoncurrentVersionExpirationPtr(v *StorageBucketLifecycleRuleNoncurrentVersionExpirationArgs) StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrInput {
	return (*storageBucketLifecycleRuleNoncurrentVersionExpirationPtrType)(v)
}

func (*storageBucketLifecycleRuleNoncurrentVersionExpirationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageBucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (i *storageBucketLifecycleRuleNoncurrentVersionExpirationPtrType) ToStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput() StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return i.ToStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(context.Background())
}

func (i *storageBucketLifecycleRuleNoncurrentVersionExpirationPtrType) ToStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput)
}

type StorageBucketLifecycleRuleNoncurrentVersionExpirationOutput struct{ *pulumi.OutputState }

func (StorageBucketLifecycleRuleNoncurrentVersionExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (o StorageBucketLifecycleRuleNoncurrentVersionExpirationOutput) ToStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput() StorageBucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return o
}

func (o StorageBucketLifecycleRuleNoncurrentVersionExpirationOutput) ToStorageBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(ctx context.Context) StorageBucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return o
}

func (o StorageBucketLifecycleRuleNoncurrentVersionExpirationOutput) ToStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput() StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return o.ToStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(context.Background())
}

func (o StorageBucketLifecycleRuleNoncurrentVersionExpirationOutput) ToStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return o.ApplyT(func(v StorageBucketLifecycleRuleNoncurrentVersionExpiration) *StorageBucketLifecycleRuleNoncurrentVersionExpiration {
		return &v
	}).(StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput)
}

// Specifies the number of days noncurrent object versions expire.
func (o StorageBucketLifecycleRuleNoncurrentVersionExpirationOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageBucketLifecycleRuleNoncurrentVersionExpiration) *int { return v.Days }).(pulumi.IntPtrOutput)
}

type StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput struct{ *pulumi.OutputState }

func (StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageBucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (o StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput) ToStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput() StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return o
}

func (o StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput) ToStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return o
}

func (o StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput) Elem() StorageBucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return o.ApplyT(func(v *StorageBucketLifecycleRuleNoncurrentVersionExpiration) StorageBucketLifecycleRuleNoncurrentVersionExpiration {
		return *v
	}).(StorageBucketLifecycleRuleNoncurrentVersionExpirationOutput)
}

// Specifies the number of days noncurrent object versions expire.
func (o StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageBucketLifecycleRuleNoncurrentVersionExpiration) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

type StorageBucketLifecycleRuleNoncurrentVersionTransition struct {
	// Specifies the number of days noncurrent object versions transition.
	Days *int `pulumi:"days"`
	// Specifies the storage class to which you want the noncurrent object versions to transition. Can only be `COLD` or `STANDARD_IA`.
	StorageClass string `pulumi:"storageClass"`
}

// StorageBucketLifecycleRuleNoncurrentVersionTransitionInput is an input type that accepts StorageBucketLifecycleRuleNoncurrentVersionTransitionArgs and StorageBucketLifecycleRuleNoncurrentVersionTransitionOutput values.
// You can construct a concrete instance of `StorageBucketLifecycleRuleNoncurrentVersionTransitionInput` via:
//
//          StorageBucketLifecycleRuleNoncurrentVersionTransitionArgs{...}
type StorageBucketLifecycleRuleNoncurrentVersionTransitionInput interface {
	pulumi.Input

	ToStorageBucketLifecycleRuleNoncurrentVersionTransitionOutput() StorageBucketLifecycleRuleNoncurrentVersionTransitionOutput
	ToStorageBucketLifecycleRuleNoncurrentVersionTransitionOutputWithContext(context.Context) StorageBucketLifecycleRuleNoncurrentVersionTransitionOutput
}

type StorageBucketLifecycleRuleNoncurrentVersionTransitionArgs struct {
	// Specifies the number of days noncurrent object versions transition.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// Specifies the storage class to which you want the noncurrent object versions to transition. Can only be `COLD` or `STANDARD_IA`.
	StorageClass pulumi.StringInput `pulumi:"storageClass"`
}

func (StorageBucketLifecycleRuleNoncurrentVersionTransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBucketLifecycleRuleNoncurrentVersionTransition)(nil)).Elem()
}

func (i StorageBucketLifecycleRuleNoncurrentVersionTransitionArgs) ToStorageBucketLifecycleRuleNoncurrentVersionTransitionOutput() StorageBucketLifecycleRuleNoncurrentVersionTransitionOutput {
	return i.ToStorageBucketLifecycleRuleNoncurrentVersionTransitionOutputWithContext(context.Background())
}

func (i StorageBucketLifecycleRuleNoncurrentVersionTransitionArgs) ToStorageBucketLifecycleRuleNoncurrentVersionTransitionOutputWithContext(ctx context.Context) StorageBucketLifecycleRuleNoncurrentVersionTransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketLifecycleRuleNoncurrentVersionTransitionOutput)
}

// StorageBucketLifecycleRuleNoncurrentVersionTransitionArrayInput is an input type that accepts StorageBucketLifecycleRuleNoncurrentVersionTransitionArray and StorageBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput values.
// You can construct a concrete instance of `StorageBucketLifecycleRuleNoncurrentVersionTransitionArrayInput` via:
//
//          StorageBucketLifecycleRuleNoncurrentVersionTransitionArray{ StorageBucketLifecycleRuleNoncurrentVersionTransitionArgs{...} }
type StorageBucketLifecycleRuleNoncurrentVersionTransitionArrayInput interface {
	pulumi.Input

	ToStorageBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput() StorageBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput
	ToStorageBucketLifecycleRuleNoncurrentVersionTransitionArrayOutputWithContext(context.Context) StorageBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput
}

type StorageBucketLifecycleRuleNoncurrentVersionTransitionArray []StorageBucketLifecycleRuleNoncurrentVersionTransitionInput

func (StorageBucketLifecycleRuleNoncurrentVersionTransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageBucketLifecycleRuleNoncurrentVersionTransition)(nil)).Elem()
}

func (i StorageBucketLifecycleRuleNoncurrentVersionTransitionArray) ToStorageBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput() StorageBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput {
	return i.ToStorageBucketLifecycleRuleNoncurrentVersionTransitionArrayOutputWithContext(context.Background())
}

func (i StorageBucketLifecycleRuleNoncurrentVersionTransitionArray) ToStorageBucketLifecycleRuleNoncurrentVersionTransitionArrayOutputWithContext(ctx context.Context) StorageBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput)
}

type StorageBucketLifecycleRuleNoncurrentVersionTransitionOutput struct{ *pulumi.OutputState }

func (StorageBucketLifecycleRuleNoncurrentVersionTransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBucketLifecycleRuleNoncurrentVersionTransition)(nil)).Elem()
}

func (o StorageBucketLifecycleRuleNoncurrentVersionTransitionOutput) ToStorageBucketLifecycleRuleNoncurrentVersionTransitionOutput() StorageBucketLifecycleRuleNoncurrentVersionTransitionOutput {
	return o
}

func (o StorageBucketLifecycleRuleNoncurrentVersionTransitionOutput) ToStorageBucketLifecycleRuleNoncurrentVersionTransitionOutputWithContext(ctx context.Context) StorageBucketLifecycleRuleNoncurrentVersionTransitionOutput {
	return o
}

// Specifies the number of days noncurrent object versions transition.
func (o StorageBucketLifecycleRuleNoncurrentVersionTransitionOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageBucketLifecycleRuleNoncurrentVersionTransition) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// Specifies the storage class to which you want the noncurrent object versions to transition. Can only be `COLD` or `STANDARD_IA`.
func (o StorageBucketLifecycleRuleNoncurrentVersionTransitionOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v StorageBucketLifecycleRuleNoncurrentVersionTransition) string { return v.StorageClass }).(pulumi.StringOutput)
}

type StorageBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput struct{ *pulumi.OutputState }

func (StorageBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageBucketLifecycleRuleNoncurrentVersionTransition)(nil)).Elem()
}

func (o StorageBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput) ToStorageBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput() StorageBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput {
	return o
}

func (o StorageBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput) ToStorageBucketLifecycleRuleNoncurrentVersionTransitionArrayOutputWithContext(ctx context.Context) StorageBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput {
	return o
}

func (o StorageBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput) Index(i pulumi.IntInput) StorageBucketLifecycleRuleNoncurrentVersionTransitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageBucketLifecycleRuleNoncurrentVersionTransition {
		return vs[0].([]StorageBucketLifecycleRuleNoncurrentVersionTransition)[vs[1].(int)]
	}).(StorageBucketLifecycleRuleNoncurrentVersionTransitionOutput)
}

type StorageBucketLifecycleRuleTransition struct {
	// Specifies the date after which you want the corresponding action to take effect.
	Date *string `pulumi:"date"`
	// Specifies the number of days after object creation when the specific rule action takes effect.
	Days *int `pulumi:"days"`
	// Specifies the storage class to which you want the object to transition. Can only be `COLD` or `STANDARD_IA`.
	StorageClass string `pulumi:"storageClass"`
}

// StorageBucketLifecycleRuleTransitionInput is an input type that accepts StorageBucketLifecycleRuleTransitionArgs and StorageBucketLifecycleRuleTransitionOutput values.
// You can construct a concrete instance of `StorageBucketLifecycleRuleTransitionInput` via:
//
//          StorageBucketLifecycleRuleTransitionArgs{...}
type StorageBucketLifecycleRuleTransitionInput interface {
	pulumi.Input

	ToStorageBucketLifecycleRuleTransitionOutput() StorageBucketLifecycleRuleTransitionOutput
	ToStorageBucketLifecycleRuleTransitionOutputWithContext(context.Context) StorageBucketLifecycleRuleTransitionOutput
}

type StorageBucketLifecycleRuleTransitionArgs struct {
	// Specifies the date after which you want the corresponding action to take effect.
	Date pulumi.StringPtrInput `pulumi:"date"`
	// Specifies the number of days after object creation when the specific rule action takes effect.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// Specifies the storage class to which you want the object to transition. Can only be `COLD` or `STANDARD_IA`.
	StorageClass pulumi.StringInput `pulumi:"storageClass"`
}

func (StorageBucketLifecycleRuleTransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBucketLifecycleRuleTransition)(nil)).Elem()
}

func (i StorageBucketLifecycleRuleTransitionArgs) ToStorageBucketLifecycleRuleTransitionOutput() StorageBucketLifecycleRuleTransitionOutput {
	return i.ToStorageBucketLifecycleRuleTransitionOutputWithContext(context.Background())
}

func (i StorageBucketLifecycleRuleTransitionArgs) ToStorageBucketLifecycleRuleTransitionOutputWithContext(ctx context.Context) StorageBucketLifecycleRuleTransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketLifecycleRuleTransitionOutput)
}

// StorageBucketLifecycleRuleTransitionArrayInput is an input type that accepts StorageBucketLifecycleRuleTransitionArray and StorageBucketLifecycleRuleTransitionArrayOutput values.
// You can construct a concrete instance of `StorageBucketLifecycleRuleTransitionArrayInput` via:
//
//          StorageBucketLifecycleRuleTransitionArray{ StorageBucketLifecycleRuleTransitionArgs{...} }
type StorageBucketLifecycleRuleTransitionArrayInput interface {
	pulumi.Input

	ToStorageBucketLifecycleRuleTransitionArrayOutput() StorageBucketLifecycleRuleTransitionArrayOutput
	ToStorageBucketLifecycleRuleTransitionArrayOutputWithContext(context.Context) StorageBucketLifecycleRuleTransitionArrayOutput
}

type StorageBucketLifecycleRuleTransitionArray []StorageBucketLifecycleRuleTransitionInput

func (StorageBucketLifecycleRuleTransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageBucketLifecycleRuleTransition)(nil)).Elem()
}

func (i StorageBucketLifecycleRuleTransitionArray) ToStorageBucketLifecycleRuleTransitionArrayOutput() StorageBucketLifecycleRuleTransitionArrayOutput {
	return i.ToStorageBucketLifecycleRuleTransitionArrayOutputWithContext(context.Background())
}

func (i StorageBucketLifecycleRuleTransitionArray) ToStorageBucketLifecycleRuleTransitionArrayOutputWithContext(ctx context.Context) StorageBucketLifecycleRuleTransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketLifecycleRuleTransitionArrayOutput)
}

type StorageBucketLifecycleRuleTransitionOutput struct{ *pulumi.OutputState }

func (StorageBucketLifecycleRuleTransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBucketLifecycleRuleTransition)(nil)).Elem()
}

func (o StorageBucketLifecycleRuleTransitionOutput) ToStorageBucketLifecycleRuleTransitionOutput() StorageBucketLifecycleRuleTransitionOutput {
	return o
}

func (o StorageBucketLifecycleRuleTransitionOutput) ToStorageBucketLifecycleRuleTransitionOutputWithContext(ctx context.Context) StorageBucketLifecycleRuleTransitionOutput {
	return o
}

// Specifies the date after which you want the corresponding action to take effect.
func (o StorageBucketLifecycleRuleTransitionOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageBucketLifecycleRuleTransition) *string { return v.Date }).(pulumi.StringPtrOutput)
}

// Specifies the number of days after object creation when the specific rule action takes effect.
func (o StorageBucketLifecycleRuleTransitionOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageBucketLifecycleRuleTransition) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// Specifies the storage class to which you want the object to transition. Can only be `COLD` or `STANDARD_IA`.
func (o StorageBucketLifecycleRuleTransitionOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v StorageBucketLifecycleRuleTransition) string { return v.StorageClass }).(pulumi.StringOutput)
}

type StorageBucketLifecycleRuleTransitionArrayOutput struct{ *pulumi.OutputState }

func (StorageBucketLifecycleRuleTransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageBucketLifecycleRuleTransition)(nil)).Elem()
}

func (o StorageBucketLifecycleRuleTransitionArrayOutput) ToStorageBucketLifecycleRuleTransitionArrayOutput() StorageBucketLifecycleRuleTransitionArrayOutput {
	return o
}

func (o StorageBucketLifecycleRuleTransitionArrayOutput) ToStorageBucketLifecycleRuleTransitionArrayOutputWithContext(ctx context.Context) StorageBucketLifecycleRuleTransitionArrayOutput {
	return o
}

func (o StorageBucketLifecycleRuleTransitionArrayOutput) Index(i pulumi.IntInput) StorageBucketLifecycleRuleTransitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageBucketLifecycleRuleTransition {
		return vs[0].([]StorageBucketLifecycleRuleTransition)[vs[1].(int)]
	}).(StorageBucketLifecycleRuleTransitionOutput)
}

type StorageBucketLogging struct {
	// The name of the bucket that will receive the log objects.
	TargetBucket string `pulumi:"targetBucket"`
	// To specify a key prefix for log objects.
	TargetPrefix *string `pulumi:"targetPrefix"`
}

// StorageBucketLoggingInput is an input type that accepts StorageBucketLoggingArgs and StorageBucketLoggingOutput values.
// You can construct a concrete instance of `StorageBucketLoggingInput` via:
//
//          StorageBucketLoggingArgs{...}
type StorageBucketLoggingInput interface {
	pulumi.Input

	ToStorageBucketLoggingOutput() StorageBucketLoggingOutput
	ToStorageBucketLoggingOutputWithContext(context.Context) StorageBucketLoggingOutput
}

type StorageBucketLoggingArgs struct {
	// The name of the bucket that will receive the log objects.
	TargetBucket pulumi.StringInput `pulumi:"targetBucket"`
	// To specify a key prefix for log objects.
	TargetPrefix pulumi.StringPtrInput `pulumi:"targetPrefix"`
}

func (StorageBucketLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBucketLogging)(nil)).Elem()
}

func (i StorageBucketLoggingArgs) ToStorageBucketLoggingOutput() StorageBucketLoggingOutput {
	return i.ToStorageBucketLoggingOutputWithContext(context.Background())
}

func (i StorageBucketLoggingArgs) ToStorageBucketLoggingOutputWithContext(ctx context.Context) StorageBucketLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketLoggingOutput)
}

// StorageBucketLoggingArrayInput is an input type that accepts StorageBucketLoggingArray and StorageBucketLoggingArrayOutput values.
// You can construct a concrete instance of `StorageBucketLoggingArrayInput` via:
//
//          StorageBucketLoggingArray{ StorageBucketLoggingArgs{...} }
type StorageBucketLoggingArrayInput interface {
	pulumi.Input

	ToStorageBucketLoggingArrayOutput() StorageBucketLoggingArrayOutput
	ToStorageBucketLoggingArrayOutputWithContext(context.Context) StorageBucketLoggingArrayOutput
}

type StorageBucketLoggingArray []StorageBucketLoggingInput

func (StorageBucketLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageBucketLogging)(nil)).Elem()
}

func (i StorageBucketLoggingArray) ToStorageBucketLoggingArrayOutput() StorageBucketLoggingArrayOutput {
	return i.ToStorageBucketLoggingArrayOutputWithContext(context.Background())
}

func (i StorageBucketLoggingArray) ToStorageBucketLoggingArrayOutputWithContext(ctx context.Context) StorageBucketLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketLoggingArrayOutput)
}

type StorageBucketLoggingOutput struct{ *pulumi.OutputState }

func (StorageBucketLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBucketLogging)(nil)).Elem()
}

func (o StorageBucketLoggingOutput) ToStorageBucketLoggingOutput() StorageBucketLoggingOutput {
	return o
}

func (o StorageBucketLoggingOutput) ToStorageBucketLoggingOutputWithContext(ctx context.Context) StorageBucketLoggingOutput {
	return o
}

// The name of the bucket that will receive the log objects.
func (o StorageBucketLoggingOutput) TargetBucket() pulumi.StringOutput {
	return o.ApplyT(func(v StorageBucketLogging) string { return v.TargetBucket }).(pulumi.StringOutput)
}

// To specify a key prefix for log objects.
func (o StorageBucketLoggingOutput) TargetPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageBucketLogging) *string { return v.TargetPrefix }).(pulumi.StringPtrOutput)
}

type StorageBucketLoggingArrayOutput struct{ *pulumi.OutputState }

func (StorageBucketLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageBucketLogging)(nil)).Elem()
}

func (o StorageBucketLoggingArrayOutput) ToStorageBucketLoggingArrayOutput() StorageBucketLoggingArrayOutput {
	return o
}

func (o StorageBucketLoggingArrayOutput) ToStorageBucketLoggingArrayOutputWithContext(ctx context.Context) StorageBucketLoggingArrayOutput {
	return o
}

func (o StorageBucketLoggingArrayOutput) Index(i pulumi.IntInput) StorageBucketLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageBucketLogging {
		return vs[0].([]StorageBucketLogging)[vs[1].(int)]
	}).(StorageBucketLoggingOutput)
}

type StorageBucketServerSideEncryptionConfiguration struct {
	// A single object for server-side encryption by default configuration. (documented below)
	Rule StorageBucketServerSideEncryptionConfigurationRule `pulumi:"rule"`
}

// StorageBucketServerSideEncryptionConfigurationInput is an input type that accepts StorageBucketServerSideEncryptionConfigurationArgs and StorageBucketServerSideEncryptionConfigurationOutput values.
// You can construct a concrete instance of `StorageBucketServerSideEncryptionConfigurationInput` via:
//
//          StorageBucketServerSideEncryptionConfigurationArgs{...}
type StorageBucketServerSideEncryptionConfigurationInput interface {
	pulumi.Input

	ToStorageBucketServerSideEncryptionConfigurationOutput() StorageBucketServerSideEncryptionConfigurationOutput
	ToStorageBucketServerSideEncryptionConfigurationOutputWithContext(context.Context) StorageBucketServerSideEncryptionConfigurationOutput
}

type StorageBucketServerSideEncryptionConfigurationArgs struct {
	// A single object for server-side encryption by default configuration. (documented below)
	Rule StorageBucketServerSideEncryptionConfigurationRuleInput `pulumi:"rule"`
}

func (StorageBucketServerSideEncryptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBucketServerSideEncryptionConfiguration)(nil)).Elem()
}

func (i StorageBucketServerSideEncryptionConfigurationArgs) ToStorageBucketServerSideEncryptionConfigurationOutput() StorageBucketServerSideEncryptionConfigurationOutput {
	return i.ToStorageBucketServerSideEncryptionConfigurationOutputWithContext(context.Background())
}

func (i StorageBucketServerSideEncryptionConfigurationArgs) ToStorageBucketServerSideEncryptionConfigurationOutputWithContext(ctx context.Context) StorageBucketServerSideEncryptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketServerSideEncryptionConfigurationOutput)
}

func (i StorageBucketServerSideEncryptionConfigurationArgs) ToStorageBucketServerSideEncryptionConfigurationPtrOutput() StorageBucketServerSideEncryptionConfigurationPtrOutput {
	return i.ToStorageBucketServerSideEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i StorageBucketServerSideEncryptionConfigurationArgs) ToStorageBucketServerSideEncryptionConfigurationPtrOutputWithContext(ctx context.Context) StorageBucketServerSideEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketServerSideEncryptionConfigurationOutput).ToStorageBucketServerSideEncryptionConfigurationPtrOutputWithContext(ctx)
}

// StorageBucketServerSideEncryptionConfigurationPtrInput is an input type that accepts StorageBucketServerSideEncryptionConfigurationArgs, StorageBucketServerSideEncryptionConfigurationPtr and StorageBucketServerSideEncryptionConfigurationPtrOutput values.
// You can construct a concrete instance of `StorageBucketServerSideEncryptionConfigurationPtrInput` via:
//
//          StorageBucketServerSideEncryptionConfigurationArgs{...}
//
//  or:
//
//          nil
type StorageBucketServerSideEncryptionConfigurationPtrInput interface {
	pulumi.Input

	ToStorageBucketServerSideEncryptionConfigurationPtrOutput() StorageBucketServerSideEncryptionConfigurationPtrOutput
	ToStorageBucketServerSideEncryptionConfigurationPtrOutputWithContext(context.Context) StorageBucketServerSideEncryptionConfigurationPtrOutput
}

type storageBucketServerSideEncryptionConfigurationPtrType StorageBucketServerSideEncryptionConfigurationArgs

func StorageBucketServerSideEncryptionConfigurationPtr(v *StorageBucketServerSideEncryptionConfigurationArgs) StorageBucketServerSideEncryptionConfigurationPtrInput {
	return (*storageBucketServerSideEncryptionConfigurationPtrType)(v)
}

func (*storageBucketServerSideEncryptionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageBucketServerSideEncryptionConfiguration)(nil)).Elem()
}

func (i *storageBucketServerSideEncryptionConfigurationPtrType) ToStorageBucketServerSideEncryptionConfigurationPtrOutput() StorageBucketServerSideEncryptionConfigurationPtrOutput {
	return i.ToStorageBucketServerSideEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i *storageBucketServerSideEncryptionConfigurationPtrType) ToStorageBucketServerSideEncryptionConfigurationPtrOutputWithContext(ctx context.Context) StorageBucketServerSideEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketServerSideEncryptionConfigurationPtrOutput)
}

type StorageBucketServerSideEncryptionConfigurationOutput struct{ *pulumi.OutputState }

func (StorageBucketServerSideEncryptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBucketServerSideEncryptionConfiguration)(nil)).Elem()
}

func (o StorageBucketServerSideEncryptionConfigurationOutput) ToStorageBucketServerSideEncryptionConfigurationOutput() StorageBucketServerSideEncryptionConfigurationOutput {
	return o
}

func (o StorageBucketServerSideEncryptionConfigurationOutput) ToStorageBucketServerSideEncryptionConfigurationOutputWithContext(ctx context.Context) StorageBucketServerSideEncryptionConfigurationOutput {
	return o
}

func (o StorageBucketServerSideEncryptionConfigurationOutput) ToStorageBucketServerSideEncryptionConfigurationPtrOutput() StorageBucketServerSideEncryptionConfigurationPtrOutput {
	return o.ToStorageBucketServerSideEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (o StorageBucketServerSideEncryptionConfigurationOutput) ToStorageBucketServerSideEncryptionConfigurationPtrOutputWithContext(ctx context.Context) StorageBucketServerSideEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v StorageBucketServerSideEncryptionConfiguration) *StorageBucketServerSideEncryptionConfiguration {
		return &v
	}).(StorageBucketServerSideEncryptionConfigurationPtrOutput)
}

// A single object for server-side encryption by default configuration. (documented below)
func (o StorageBucketServerSideEncryptionConfigurationOutput) Rule() StorageBucketServerSideEncryptionConfigurationRuleOutput {
	return o.ApplyT(func(v StorageBucketServerSideEncryptionConfiguration) StorageBucketServerSideEncryptionConfigurationRule {
		return v.Rule
	}).(StorageBucketServerSideEncryptionConfigurationRuleOutput)
}

type StorageBucketServerSideEncryptionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (StorageBucketServerSideEncryptionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageBucketServerSideEncryptionConfiguration)(nil)).Elem()
}

func (o StorageBucketServerSideEncryptionConfigurationPtrOutput) ToStorageBucketServerSideEncryptionConfigurationPtrOutput() StorageBucketServerSideEncryptionConfigurationPtrOutput {
	return o
}

func (o StorageBucketServerSideEncryptionConfigurationPtrOutput) ToStorageBucketServerSideEncryptionConfigurationPtrOutputWithContext(ctx context.Context) StorageBucketServerSideEncryptionConfigurationPtrOutput {
	return o
}

func (o StorageBucketServerSideEncryptionConfigurationPtrOutput) Elem() StorageBucketServerSideEncryptionConfigurationOutput {
	return o.ApplyT(func(v *StorageBucketServerSideEncryptionConfiguration) StorageBucketServerSideEncryptionConfiguration {
		return *v
	}).(StorageBucketServerSideEncryptionConfigurationOutput)
}

// A single object for server-side encryption by default configuration. (documented below)
func (o StorageBucketServerSideEncryptionConfigurationPtrOutput) Rule() StorageBucketServerSideEncryptionConfigurationRulePtrOutput {
	return o.ApplyT(func(v *StorageBucketServerSideEncryptionConfiguration) *StorageBucketServerSideEncryptionConfigurationRule {
		if v == nil {
			return nil
		}
		return &v.Rule
	}).(StorageBucketServerSideEncryptionConfigurationRulePtrOutput)
}

type StorageBucketServerSideEncryptionConfigurationRule struct {
	// A single object for setting server-side encryption by default. (documented below)
	ApplyServerSideEncryptionByDefault StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault `pulumi:"applyServerSideEncryptionByDefault"`
}

// StorageBucketServerSideEncryptionConfigurationRuleInput is an input type that accepts StorageBucketServerSideEncryptionConfigurationRuleArgs and StorageBucketServerSideEncryptionConfigurationRuleOutput values.
// You can construct a concrete instance of `StorageBucketServerSideEncryptionConfigurationRuleInput` via:
//
//          StorageBucketServerSideEncryptionConfigurationRuleArgs{...}
type StorageBucketServerSideEncryptionConfigurationRuleInput interface {
	pulumi.Input

	ToStorageBucketServerSideEncryptionConfigurationRuleOutput() StorageBucketServerSideEncryptionConfigurationRuleOutput
	ToStorageBucketServerSideEncryptionConfigurationRuleOutputWithContext(context.Context) StorageBucketServerSideEncryptionConfigurationRuleOutput
}

type StorageBucketServerSideEncryptionConfigurationRuleArgs struct {
	// A single object for setting server-side encryption by default. (documented below)
	ApplyServerSideEncryptionByDefault StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultInput `pulumi:"applyServerSideEncryptionByDefault"`
}

func (StorageBucketServerSideEncryptionConfigurationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBucketServerSideEncryptionConfigurationRule)(nil)).Elem()
}

func (i StorageBucketServerSideEncryptionConfigurationRuleArgs) ToStorageBucketServerSideEncryptionConfigurationRuleOutput() StorageBucketServerSideEncryptionConfigurationRuleOutput {
	return i.ToStorageBucketServerSideEncryptionConfigurationRuleOutputWithContext(context.Background())
}

func (i StorageBucketServerSideEncryptionConfigurationRuleArgs) ToStorageBucketServerSideEncryptionConfigurationRuleOutputWithContext(ctx context.Context) StorageBucketServerSideEncryptionConfigurationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketServerSideEncryptionConfigurationRuleOutput)
}

func (i StorageBucketServerSideEncryptionConfigurationRuleArgs) ToStorageBucketServerSideEncryptionConfigurationRulePtrOutput() StorageBucketServerSideEncryptionConfigurationRulePtrOutput {
	return i.ToStorageBucketServerSideEncryptionConfigurationRulePtrOutputWithContext(context.Background())
}

func (i StorageBucketServerSideEncryptionConfigurationRuleArgs) ToStorageBucketServerSideEncryptionConfigurationRulePtrOutputWithContext(ctx context.Context) StorageBucketServerSideEncryptionConfigurationRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketServerSideEncryptionConfigurationRuleOutput).ToStorageBucketServerSideEncryptionConfigurationRulePtrOutputWithContext(ctx)
}

// StorageBucketServerSideEncryptionConfigurationRulePtrInput is an input type that accepts StorageBucketServerSideEncryptionConfigurationRuleArgs, StorageBucketServerSideEncryptionConfigurationRulePtr and StorageBucketServerSideEncryptionConfigurationRulePtrOutput values.
// You can construct a concrete instance of `StorageBucketServerSideEncryptionConfigurationRulePtrInput` via:
//
//          StorageBucketServerSideEncryptionConfigurationRuleArgs{...}
//
//  or:
//
//          nil
type StorageBucketServerSideEncryptionConfigurationRulePtrInput interface {
	pulumi.Input

	ToStorageBucketServerSideEncryptionConfigurationRulePtrOutput() StorageBucketServerSideEncryptionConfigurationRulePtrOutput
	ToStorageBucketServerSideEncryptionConfigurationRulePtrOutputWithContext(context.Context) StorageBucketServerSideEncryptionConfigurationRulePtrOutput
}

type storageBucketServerSideEncryptionConfigurationRulePtrType StorageBucketServerSideEncryptionConfigurationRuleArgs

func StorageBucketServerSideEncryptionConfigurationRulePtr(v *StorageBucketServerSideEncryptionConfigurationRuleArgs) StorageBucketServerSideEncryptionConfigurationRulePtrInput {
	return (*storageBucketServerSideEncryptionConfigurationRulePtrType)(v)
}

func (*storageBucketServerSideEncryptionConfigurationRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageBucketServerSideEncryptionConfigurationRule)(nil)).Elem()
}

func (i *storageBucketServerSideEncryptionConfigurationRulePtrType) ToStorageBucketServerSideEncryptionConfigurationRulePtrOutput() StorageBucketServerSideEncryptionConfigurationRulePtrOutput {
	return i.ToStorageBucketServerSideEncryptionConfigurationRulePtrOutputWithContext(context.Background())
}

func (i *storageBucketServerSideEncryptionConfigurationRulePtrType) ToStorageBucketServerSideEncryptionConfigurationRulePtrOutputWithContext(ctx context.Context) StorageBucketServerSideEncryptionConfigurationRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketServerSideEncryptionConfigurationRulePtrOutput)
}

type StorageBucketServerSideEncryptionConfigurationRuleOutput struct{ *pulumi.OutputState }

func (StorageBucketServerSideEncryptionConfigurationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBucketServerSideEncryptionConfigurationRule)(nil)).Elem()
}

func (o StorageBucketServerSideEncryptionConfigurationRuleOutput) ToStorageBucketServerSideEncryptionConfigurationRuleOutput() StorageBucketServerSideEncryptionConfigurationRuleOutput {
	return o
}

func (o StorageBucketServerSideEncryptionConfigurationRuleOutput) ToStorageBucketServerSideEncryptionConfigurationRuleOutputWithContext(ctx context.Context) StorageBucketServerSideEncryptionConfigurationRuleOutput {
	return o
}

func (o StorageBucketServerSideEncryptionConfigurationRuleOutput) ToStorageBucketServerSideEncryptionConfigurationRulePtrOutput() StorageBucketServerSideEncryptionConfigurationRulePtrOutput {
	return o.ToStorageBucketServerSideEncryptionConfigurationRulePtrOutputWithContext(context.Background())
}

func (o StorageBucketServerSideEncryptionConfigurationRuleOutput) ToStorageBucketServerSideEncryptionConfigurationRulePtrOutputWithContext(ctx context.Context) StorageBucketServerSideEncryptionConfigurationRulePtrOutput {
	return o.ApplyT(func(v StorageBucketServerSideEncryptionConfigurationRule) *StorageBucketServerSideEncryptionConfigurationRule {
		return &v
	}).(StorageBucketServerSideEncryptionConfigurationRulePtrOutput)
}

// A single object for setting server-side encryption by default. (documented below)
func (o StorageBucketServerSideEncryptionConfigurationRuleOutput) ApplyServerSideEncryptionByDefault() StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput {
	return o.ApplyT(func(v StorageBucketServerSideEncryptionConfigurationRule) StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault {
		return v.ApplyServerSideEncryptionByDefault
	}).(StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput)
}

type StorageBucketServerSideEncryptionConfigurationRulePtrOutput struct{ *pulumi.OutputState }

func (StorageBucketServerSideEncryptionConfigurationRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageBucketServerSideEncryptionConfigurationRule)(nil)).Elem()
}

func (o StorageBucketServerSideEncryptionConfigurationRulePtrOutput) ToStorageBucketServerSideEncryptionConfigurationRulePtrOutput() StorageBucketServerSideEncryptionConfigurationRulePtrOutput {
	return o
}

func (o StorageBucketServerSideEncryptionConfigurationRulePtrOutput) ToStorageBucketServerSideEncryptionConfigurationRulePtrOutputWithContext(ctx context.Context) StorageBucketServerSideEncryptionConfigurationRulePtrOutput {
	return o
}

func (o StorageBucketServerSideEncryptionConfigurationRulePtrOutput) Elem() StorageBucketServerSideEncryptionConfigurationRuleOutput {
	return o.ApplyT(func(v *StorageBucketServerSideEncryptionConfigurationRule) StorageBucketServerSideEncryptionConfigurationRule {
		return *v
	}).(StorageBucketServerSideEncryptionConfigurationRuleOutput)
}

// A single object for setting server-side encryption by default. (documented below)
func (o StorageBucketServerSideEncryptionConfigurationRulePtrOutput) ApplyServerSideEncryptionByDefault() StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput {
	return o.ApplyT(func(v *StorageBucketServerSideEncryptionConfigurationRule) *StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault {
		if v == nil {
			return nil
		}
		return &v.ApplyServerSideEncryptionByDefault
	}).(StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput)
}

type StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault struct {
	// The KMS master key ID used for the SSE-KMS encryption.
	KmsMasterKeyId string `pulumi:"kmsMasterKeyId"`
	// The server-side encryption algorithm to use. Single valid value is `aws:kms`
	SseAlgorithm string `pulumi:"sseAlgorithm"`
}

// StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultInput is an input type that accepts StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs and StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput values.
// You can construct a concrete instance of `StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultInput` via:
//
//          StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs{...}
type StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultInput interface {
	pulumi.Input

	ToStorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput() StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput
	ToStorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutputWithContext(context.Context) StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput
}

type StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs struct {
	// The KMS master key ID used for the SSE-KMS encryption.
	KmsMasterKeyId pulumi.StringInput `pulumi:"kmsMasterKeyId"`
	// The server-side encryption algorithm to use. Single valid value is `aws:kms`
	SseAlgorithm pulumi.StringInput `pulumi:"sseAlgorithm"`
}

func (StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault)(nil)).Elem()
}

func (i StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs) ToStorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput() StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput {
	return i.ToStorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutputWithContext(context.Background())
}

func (i StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs) ToStorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutputWithContext(ctx context.Context) StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput)
}

func (i StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs) ToStorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput() StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput {
	return i.ToStorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutputWithContext(context.Background())
}

func (i StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs) ToStorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutputWithContext(ctx context.Context) StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput).ToStorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutputWithContext(ctx)
}

// StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrInput is an input type that accepts StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs, StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtr and StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput values.
// You can construct a concrete instance of `StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrInput` via:
//
//          StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs{...}
//
//  or:
//
//          nil
type StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrInput interface {
	pulumi.Input

	ToStorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput() StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput
	ToStorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutputWithContext(context.Context) StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput
}

type storageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrType StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs

func StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtr(v *StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs) StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrInput {
	return (*storageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrType)(v)
}

func (*storageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault)(nil)).Elem()
}

func (i *storageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrType) ToStorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput() StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput {
	return i.ToStorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutputWithContext(context.Background())
}

func (i *storageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrType) ToStorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutputWithContext(ctx context.Context) StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput)
}

type StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput struct{ *pulumi.OutputState }

func (StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault)(nil)).Elem()
}

func (o StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput) ToStorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput() StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput {
	return o
}

func (o StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput) ToStorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutputWithContext(ctx context.Context) StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput {
	return o
}

func (o StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput) ToStorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput() StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput {
	return o.ToStorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutputWithContext(context.Background())
}

func (o StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput) ToStorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutputWithContext(ctx context.Context) StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput {
	return o.ApplyT(func(v StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault) *StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault {
		return &v
	}).(StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput)
}

// The KMS master key ID used for the SSE-KMS encryption.
func (o StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput) KmsMasterKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault) string {
		return v.KmsMasterKeyId
	}).(pulumi.StringOutput)
}

// The server-side encryption algorithm to use. Single valid value is `aws:kms`
func (o StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput) SseAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault) string {
		return v.SseAlgorithm
	}).(pulumi.StringOutput)
}

type StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput struct{ *pulumi.OutputState }

func (StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault)(nil)).Elem()
}

func (o StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput) ToStorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput() StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput {
	return o
}

func (o StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput) ToStorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutputWithContext(ctx context.Context) StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput {
	return o
}

func (o StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput) Elem() StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput {
	return o.ApplyT(func(v *StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault) StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault {
		return *v
	}).(StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput)
}

// The KMS master key ID used for the SSE-KMS encryption.
func (o StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput) KmsMasterKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault) *string {
		if v == nil {
			return nil
		}
		return &v.KmsMasterKeyId
	}).(pulumi.StringPtrOutput)
}

// The server-side encryption algorithm to use. Single valid value is `aws:kms`
func (o StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput) SseAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault) *string {
		if v == nil {
			return nil
		}
		return &v.SseAlgorithm
	}).(pulumi.StringPtrOutput)
}

type StorageBucketVersioning struct {
	// Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket.
	Enabled *bool `pulumi:"enabled"`
}

// StorageBucketVersioningInput is an input type that accepts StorageBucketVersioningArgs and StorageBucketVersioningOutput values.
// You can construct a concrete instance of `StorageBucketVersioningInput` via:
//
//          StorageBucketVersioningArgs{...}
type StorageBucketVersioningInput interface {
	pulumi.Input

	ToStorageBucketVersioningOutput() StorageBucketVersioningOutput
	ToStorageBucketVersioningOutputWithContext(context.Context) StorageBucketVersioningOutput
}

type StorageBucketVersioningArgs struct {
	// Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (StorageBucketVersioningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBucketVersioning)(nil)).Elem()
}

func (i StorageBucketVersioningArgs) ToStorageBucketVersioningOutput() StorageBucketVersioningOutput {
	return i.ToStorageBucketVersioningOutputWithContext(context.Background())
}

func (i StorageBucketVersioningArgs) ToStorageBucketVersioningOutputWithContext(ctx context.Context) StorageBucketVersioningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketVersioningOutput)
}

func (i StorageBucketVersioningArgs) ToStorageBucketVersioningPtrOutput() StorageBucketVersioningPtrOutput {
	return i.ToStorageBucketVersioningPtrOutputWithContext(context.Background())
}

func (i StorageBucketVersioningArgs) ToStorageBucketVersioningPtrOutputWithContext(ctx context.Context) StorageBucketVersioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketVersioningOutput).ToStorageBucketVersioningPtrOutputWithContext(ctx)
}

// StorageBucketVersioningPtrInput is an input type that accepts StorageBucketVersioningArgs, StorageBucketVersioningPtr and StorageBucketVersioningPtrOutput values.
// You can construct a concrete instance of `StorageBucketVersioningPtrInput` via:
//
//          StorageBucketVersioningArgs{...}
//
//  or:
//
//          nil
type StorageBucketVersioningPtrInput interface {
	pulumi.Input

	ToStorageBucketVersioningPtrOutput() StorageBucketVersioningPtrOutput
	ToStorageBucketVersioningPtrOutputWithContext(context.Context) StorageBucketVersioningPtrOutput
}

type storageBucketVersioningPtrType StorageBucketVersioningArgs

func StorageBucketVersioningPtr(v *StorageBucketVersioningArgs) StorageBucketVersioningPtrInput {
	return (*storageBucketVersioningPtrType)(v)
}

func (*storageBucketVersioningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageBucketVersioning)(nil)).Elem()
}

func (i *storageBucketVersioningPtrType) ToStorageBucketVersioningPtrOutput() StorageBucketVersioningPtrOutput {
	return i.ToStorageBucketVersioningPtrOutputWithContext(context.Background())
}

func (i *storageBucketVersioningPtrType) ToStorageBucketVersioningPtrOutputWithContext(ctx context.Context) StorageBucketVersioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketVersioningPtrOutput)
}

type StorageBucketVersioningOutput struct{ *pulumi.OutputState }

func (StorageBucketVersioningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBucketVersioning)(nil)).Elem()
}

func (o StorageBucketVersioningOutput) ToStorageBucketVersioningOutput() StorageBucketVersioningOutput {
	return o
}

func (o StorageBucketVersioningOutput) ToStorageBucketVersioningOutputWithContext(ctx context.Context) StorageBucketVersioningOutput {
	return o
}

func (o StorageBucketVersioningOutput) ToStorageBucketVersioningPtrOutput() StorageBucketVersioningPtrOutput {
	return o.ToStorageBucketVersioningPtrOutputWithContext(context.Background())
}

func (o StorageBucketVersioningOutput) ToStorageBucketVersioningPtrOutputWithContext(ctx context.Context) StorageBucketVersioningPtrOutput {
	return o.ApplyT(func(v StorageBucketVersioning) *StorageBucketVersioning {
		return &v
	}).(StorageBucketVersioningPtrOutput)
}

// Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket.
func (o StorageBucketVersioningOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageBucketVersioning) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type StorageBucketVersioningPtrOutput struct{ *pulumi.OutputState }

func (StorageBucketVersioningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageBucketVersioning)(nil)).Elem()
}

func (o StorageBucketVersioningPtrOutput) ToStorageBucketVersioningPtrOutput() StorageBucketVersioningPtrOutput {
	return o
}

func (o StorageBucketVersioningPtrOutput) ToStorageBucketVersioningPtrOutputWithContext(ctx context.Context) StorageBucketVersioningPtrOutput {
	return o
}

func (o StorageBucketVersioningPtrOutput) Elem() StorageBucketVersioningOutput {
	return o.ApplyT(func(v *StorageBucketVersioning) StorageBucketVersioning { return *v }).(StorageBucketVersioningOutput)
}

// Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket.
func (o StorageBucketVersioningPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageBucketVersioning) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type StorageBucketWebsite struct {
	// An absolute path to the document to return in case of a 4XX error.
	ErrorDocument *string `pulumi:"errorDocument"`
	// Storage returns this index document when requests are made to the root domain or any of the subfolders.
	IndexDocument *string `pulumi:"indexDocument"`
}

// StorageBucketWebsiteInput is an input type that accepts StorageBucketWebsiteArgs and StorageBucketWebsiteOutput values.
// You can construct a concrete instance of `StorageBucketWebsiteInput` via:
//
//          StorageBucketWebsiteArgs{...}
type StorageBucketWebsiteInput interface {
	pulumi.Input

	ToStorageBucketWebsiteOutput() StorageBucketWebsiteOutput
	ToStorageBucketWebsiteOutputWithContext(context.Context) StorageBucketWebsiteOutput
}

type StorageBucketWebsiteArgs struct {
	// An absolute path to the document to return in case of a 4XX error.
	ErrorDocument pulumi.StringPtrInput `pulumi:"errorDocument"`
	// Storage returns this index document when requests are made to the root domain or any of the subfolders.
	IndexDocument pulumi.StringPtrInput `pulumi:"indexDocument"`
}

func (StorageBucketWebsiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBucketWebsite)(nil)).Elem()
}

func (i StorageBucketWebsiteArgs) ToStorageBucketWebsiteOutput() StorageBucketWebsiteOutput {
	return i.ToStorageBucketWebsiteOutputWithContext(context.Background())
}

func (i StorageBucketWebsiteArgs) ToStorageBucketWebsiteOutputWithContext(ctx context.Context) StorageBucketWebsiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketWebsiteOutput)
}

func (i StorageBucketWebsiteArgs) ToStorageBucketWebsitePtrOutput() StorageBucketWebsitePtrOutput {
	return i.ToStorageBucketWebsitePtrOutputWithContext(context.Background())
}

func (i StorageBucketWebsiteArgs) ToStorageBucketWebsitePtrOutputWithContext(ctx context.Context) StorageBucketWebsitePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketWebsiteOutput).ToStorageBucketWebsitePtrOutputWithContext(ctx)
}

// StorageBucketWebsitePtrInput is an input type that accepts StorageBucketWebsiteArgs, StorageBucketWebsitePtr and StorageBucketWebsitePtrOutput values.
// You can construct a concrete instance of `StorageBucketWebsitePtrInput` via:
//
//          StorageBucketWebsiteArgs{...}
//
//  or:
//
//          nil
type StorageBucketWebsitePtrInput interface {
	pulumi.Input

	ToStorageBucketWebsitePtrOutput() StorageBucketWebsitePtrOutput
	ToStorageBucketWebsitePtrOutputWithContext(context.Context) StorageBucketWebsitePtrOutput
}

type storageBucketWebsitePtrType StorageBucketWebsiteArgs

func StorageBucketWebsitePtr(v *StorageBucketWebsiteArgs) StorageBucketWebsitePtrInput {
	return (*storageBucketWebsitePtrType)(v)
}

func (*storageBucketWebsitePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageBucketWebsite)(nil)).Elem()
}

func (i *storageBucketWebsitePtrType) ToStorageBucketWebsitePtrOutput() StorageBucketWebsitePtrOutput {
	return i.ToStorageBucketWebsitePtrOutputWithContext(context.Background())
}

func (i *storageBucketWebsitePtrType) ToStorageBucketWebsitePtrOutputWithContext(ctx context.Context) StorageBucketWebsitePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketWebsitePtrOutput)
}

type StorageBucketWebsiteOutput struct{ *pulumi.OutputState }

func (StorageBucketWebsiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBucketWebsite)(nil)).Elem()
}

func (o StorageBucketWebsiteOutput) ToStorageBucketWebsiteOutput() StorageBucketWebsiteOutput {
	return o
}

func (o StorageBucketWebsiteOutput) ToStorageBucketWebsiteOutputWithContext(ctx context.Context) StorageBucketWebsiteOutput {
	return o
}

func (o StorageBucketWebsiteOutput) ToStorageBucketWebsitePtrOutput() StorageBucketWebsitePtrOutput {
	return o.ToStorageBucketWebsitePtrOutputWithContext(context.Background())
}

func (o StorageBucketWebsiteOutput) ToStorageBucketWebsitePtrOutputWithContext(ctx context.Context) StorageBucketWebsitePtrOutput {
	return o.ApplyT(func(v StorageBucketWebsite) *StorageBucketWebsite {
		return &v
	}).(StorageBucketWebsitePtrOutput)
}

// An absolute path to the document to return in case of a 4XX error.
func (o StorageBucketWebsiteOutput) ErrorDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageBucketWebsite) *string { return v.ErrorDocument }).(pulumi.StringPtrOutput)
}

// Storage returns this index document when requests are made to the root domain or any of the subfolders.
func (o StorageBucketWebsiteOutput) IndexDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageBucketWebsite) *string { return v.IndexDocument }).(pulumi.StringPtrOutput)
}

type StorageBucketWebsitePtrOutput struct{ *pulumi.OutputState }

func (StorageBucketWebsitePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageBucketWebsite)(nil)).Elem()
}

func (o StorageBucketWebsitePtrOutput) ToStorageBucketWebsitePtrOutput() StorageBucketWebsitePtrOutput {
	return o
}

func (o StorageBucketWebsitePtrOutput) ToStorageBucketWebsitePtrOutputWithContext(ctx context.Context) StorageBucketWebsitePtrOutput {
	return o
}

func (o StorageBucketWebsitePtrOutput) Elem() StorageBucketWebsiteOutput {
	return o.ApplyT(func(v *StorageBucketWebsite) StorageBucketWebsite { return *v }).(StorageBucketWebsiteOutput)
}

// An absolute path to the document to return in case of a 4XX error.
func (o StorageBucketWebsitePtrOutput) ErrorDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageBucketWebsite) *string {
		if v == nil {
			return nil
		}
		return v.ErrorDocument
	}).(pulumi.StringPtrOutput)
}

// Storage returns this index document when requests are made to the root domain or any of the subfolders.
func (o StorageBucketWebsitePtrOutput) IndexDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageBucketWebsite) *string {
		if v == nil {
			return nil
		}
		return v.IndexDocument
	}).(pulumi.StringPtrOutput)
}

type VpcAddressExternalIpv4Address struct {
	// - Desired IP.
	Address *string `pulumi:"address"`
	// Enable DDOS protection. Possible values are: "qrator"
	DdosProtectionProvider *string `pulumi:"ddosProtectionProvider"`
	// Wanted outgoing smtp capability.
	OutgoingSmtpCapability *string `pulumi:"outgoingSmtpCapability"`
	// - Zone for allocating address.
	ZoneId *string `pulumi:"zoneId"`
}

// VpcAddressExternalIpv4AddressInput is an input type that accepts VpcAddressExternalIpv4AddressArgs and VpcAddressExternalIpv4AddressOutput values.
// You can construct a concrete instance of `VpcAddressExternalIpv4AddressInput` via:
//
//          VpcAddressExternalIpv4AddressArgs{...}
type VpcAddressExternalIpv4AddressInput interface {
	pulumi.Input

	ToVpcAddressExternalIpv4AddressOutput() VpcAddressExternalIpv4AddressOutput
	ToVpcAddressExternalIpv4AddressOutputWithContext(context.Context) VpcAddressExternalIpv4AddressOutput
}

type VpcAddressExternalIpv4AddressArgs struct {
	// - Desired IP.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Enable DDOS protection. Possible values are: "qrator"
	DdosProtectionProvider pulumi.StringPtrInput `pulumi:"ddosProtectionProvider"`
	// Wanted outgoing smtp capability.
	OutgoingSmtpCapability pulumi.StringPtrInput `pulumi:"outgoingSmtpCapability"`
	// - Zone for allocating address.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (VpcAddressExternalIpv4AddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAddressExternalIpv4Address)(nil)).Elem()
}

func (i VpcAddressExternalIpv4AddressArgs) ToVpcAddressExternalIpv4AddressOutput() VpcAddressExternalIpv4AddressOutput {
	return i.ToVpcAddressExternalIpv4AddressOutputWithContext(context.Background())
}

func (i VpcAddressExternalIpv4AddressArgs) ToVpcAddressExternalIpv4AddressOutputWithContext(ctx context.Context) VpcAddressExternalIpv4AddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAddressExternalIpv4AddressOutput)
}

func (i VpcAddressExternalIpv4AddressArgs) ToVpcAddressExternalIpv4AddressPtrOutput() VpcAddressExternalIpv4AddressPtrOutput {
	return i.ToVpcAddressExternalIpv4AddressPtrOutputWithContext(context.Background())
}

func (i VpcAddressExternalIpv4AddressArgs) ToVpcAddressExternalIpv4AddressPtrOutputWithContext(ctx context.Context) VpcAddressExternalIpv4AddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAddressExternalIpv4AddressOutput).ToVpcAddressExternalIpv4AddressPtrOutputWithContext(ctx)
}

// VpcAddressExternalIpv4AddressPtrInput is an input type that accepts VpcAddressExternalIpv4AddressArgs, VpcAddressExternalIpv4AddressPtr and VpcAddressExternalIpv4AddressPtrOutput values.
// You can construct a concrete instance of `VpcAddressExternalIpv4AddressPtrInput` via:
//
//          VpcAddressExternalIpv4AddressArgs{...}
//
//  or:
//
//          nil
type VpcAddressExternalIpv4AddressPtrInput interface {
	pulumi.Input

	ToVpcAddressExternalIpv4AddressPtrOutput() VpcAddressExternalIpv4AddressPtrOutput
	ToVpcAddressExternalIpv4AddressPtrOutputWithContext(context.Context) VpcAddressExternalIpv4AddressPtrOutput
}

type vpcAddressExternalIpv4AddressPtrType VpcAddressExternalIpv4AddressArgs

func VpcAddressExternalIpv4AddressPtr(v *VpcAddressExternalIpv4AddressArgs) VpcAddressExternalIpv4AddressPtrInput {
	return (*vpcAddressExternalIpv4AddressPtrType)(v)
}

func (*vpcAddressExternalIpv4AddressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcAddressExternalIpv4Address)(nil)).Elem()
}

func (i *vpcAddressExternalIpv4AddressPtrType) ToVpcAddressExternalIpv4AddressPtrOutput() VpcAddressExternalIpv4AddressPtrOutput {
	return i.ToVpcAddressExternalIpv4AddressPtrOutputWithContext(context.Background())
}

func (i *vpcAddressExternalIpv4AddressPtrType) ToVpcAddressExternalIpv4AddressPtrOutputWithContext(ctx context.Context) VpcAddressExternalIpv4AddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAddressExternalIpv4AddressPtrOutput)
}

type VpcAddressExternalIpv4AddressOutput struct{ *pulumi.OutputState }

func (VpcAddressExternalIpv4AddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAddressExternalIpv4Address)(nil)).Elem()
}

func (o VpcAddressExternalIpv4AddressOutput) ToVpcAddressExternalIpv4AddressOutput() VpcAddressExternalIpv4AddressOutput {
	return o
}

func (o VpcAddressExternalIpv4AddressOutput) ToVpcAddressExternalIpv4AddressOutputWithContext(ctx context.Context) VpcAddressExternalIpv4AddressOutput {
	return o
}

func (o VpcAddressExternalIpv4AddressOutput) ToVpcAddressExternalIpv4AddressPtrOutput() VpcAddressExternalIpv4AddressPtrOutput {
	return o.ToVpcAddressExternalIpv4AddressPtrOutputWithContext(context.Background())
}

func (o VpcAddressExternalIpv4AddressOutput) ToVpcAddressExternalIpv4AddressPtrOutputWithContext(ctx context.Context) VpcAddressExternalIpv4AddressPtrOutput {
	return o.ApplyT(func(v VpcAddressExternalIpv4Address) *VpcAddressExternalIpv4Address {
		return &v
	}).(VpcAddressExternalIpv4AddressPtrOutput)
}

// - Desired IP.
func (o VpcAddressExternalIpv4AddressOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcAddressExternalIpv4Address) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Enable DDOS protection. Possible values are: "qrator"
func (o VpcAddressExternalIpv4AddressOutput) DdosProtectionProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcAddressExternalIpv4Address) *string { return v.DdosProtectionProvider }).(pulumi.StringPtrOutput)
}

// Wanted outgoing smtp capability.
func (o VpcAddressExternalIpv4AddressOutput) OutgoingSmtpCapability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcAddressExternalIpv4Address) *string { return v.OutgoingSmtpCapability }).(pulumi.StringPtrOutput)
}

// - Zone for allocating address.
func (o VpcAddressExternalIpv4AddressOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcAddressExternalIpv4Address) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

type VpcAddressExternalIpv4AddressPtrOutput struct{ *pulumi.OutputState }

func (VpcAddressExternalIpv4AddressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcAddressExternalIpv4Address)(nil)).Elem()
}

func (o VpcAddressExternalIpv4AddressPtrOutput) ToVpcAddressExternalIpv4AddressPtrOutput() VpcAddressExternalIpv4AddressPtrOutput {
	return o
}

func (o VpcAddressExternalIpv4AddressPtrOutput) ToVpcAddressExternalIpv4AddressPtrOutputWithContext(ctx context.Context) VpcAddressExternalIpv4AddressPtrOutput {
	return o
}

func (o VpcAddressExternalIpv4AddressPtrOutput) Elem() VpcAddressExternalIpv4AddressOutput {
	return o.ApplyT(func(v *VpcAddressExternalIpv4Address) VpcAddressExternalIpv4Address { return *v }).(VpcAddressExternalIpv4AddressOutput)
}

// - Desired IP.
func (o VpcAddressExternalIpv4AddressPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcAddressExternalIpv4Address) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Enable DDOS protection. Possible values are: "qrator"
func (o VpcAddressExternalIpv4AddressPtrOutput) DdosProtectionProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcAddressExternalIpv4Address) *string {
		if v == nil {
			return nil
		}
		return v.DdosProtectionProvider
	}).(pulumi.StringPtrOutput)
}

// Wanted outgoing smtp capability.
func (o VpcAddressExternalIpv4AddressPtrOutput) OutgoingSmtpCapability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcAddressExternalIpv4Address) *string {
		if v == nil {
			return nil
		}
		return v.OutgoingSmtpCapability
	}).(pulumi.StringPtrOutput)
}

// - Zone for allocating address.
func (o VpcAddressExternalIpv4AddressPtrOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcAddressExternalIpv4Address) *string {
		if v == nil {
			return nil
		}
		return v.ZoneId
	}).(pulumi.StringPtrOutput)
}

type VpcRouteTableStaticRoute struct {
	// Route prefix in CIDR notation.
	DestinationPrefix *string `pulumi:"destinationPrefix"`
	// Address of the next hop.
	NextHopAddress *string `pulumi:"nextHopAddress"`
}

// VpcRouteTableStaticRouteInput is an input type that accepts VpcRouteTableStaticRouteArgs and VpcRouteTableStaticRouteOutput values.
// You can construct a concrete instance of `VpcRouteTableStaticRouteInput` via:
//
//          VpcRouteTableStaticRouteArgs{...}
type VpcRouteTableStaticRouteInput interface {
	pulumi.Input

	ToVpcRouteTableStaticRouteOutput() VpcRouteTableStaticRouteOutput
	ToVpcRouteTableStaticRouteOutputWithContext(context.Context) VpcRouteTableStaticRouteOutput
}

type VpcRouteTableStaticRouteArgs struct {
	// Route prefix in CIDR notation.
	DestinationPrefix pulumi.StringPtrInput `pulumi:"destinationPrefix"`
	// Address of the next hop.
	NextHopAddress pulumi.StringPtrInput `pulumi:"nextHopAddress"`
}

func (VpcRouteTableStaticRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcRouteTableStaticRoute)(nil)).Elem()
}

func (i VpcRouteTableStaticRouteArgs) ToVpcRouteTableStaticRouteOutput() VpcRouteTableStaticRouteOutput {
	return i.ToVpcRouteTableStaticRouteOutputWithContext(context.Background())
}

func (i VpcRouteTableStaticRouteArgs) ToVpcRouteTableStaticRouteOutputWithContext(ctx context.Context) VpcRouteTableStaticRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcRouteTableStaticRouteOutput)
}

// VpcRouteTableStaticRouteArrayInput is an input type that accepts VpcRouteTableStaticRouteArray and VpcRouteTableStaticRouteArrayOutput values.
// You can construct a concrete instance of `VpcRouteTableStaticRouteArrayInput` via:
//
//          VpcRouteTableStaticRouteArray{ VpcRouteTableStaticRouteArgs{...} }
type VpcRouteTableStaticRouteArrayInput interface {
	pulumi.Input

	ToVpcRouteTableStaticRouteArrayOutput() VpcRouteTableStaticRouteArrayOutput
	ToVpcRouteTableStaticRouteArrayOutputWithContext(context.Context) VpcRouteTableStaticRouteArrayOutput
}

type VpcRouteTableStaticRouteArray []VpcRouteTableStaticRouteInput

func (VpcRouteTableStaticRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcRouteTableStaticRoute)(nil)).Elem()
}

func (i VpcRouteTableStaticRouteArray) ToVpcRouteTableStaticRouteArrayOutput() VpcRouteTableStaticRouteArrayOutput {
	return i.ToVpcRouteTableStaticRouteArrayOutputWithContext(context.Background())
}

func (i VpcRouteTableStaticRouteArray) ToVpcRouteTableStaticRouteArrayOutputWithContext(ctx context.Context) VpcRouteTableStaticRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcRouteTableStaticRouteArrayOutput)
}

type VpcRouteTableStaticRouteOutput struct{ *pulumi.OutputState }

func (VpcRouteTableStaticRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcRouteTableStaticRoute)(nil)).Elem()
}

func (o VpcRouteTableStaticRouteOutput) ToVpcRouteTableStaticRouteOutput() VpcRouteTableStaticRouteOutput {
	return o
}

func (o VpcRouteTableStaticRouteOutput) ToVpcRouteTableStaticRouteOutputWithContext(ctx context.Context) VpcRouteTableStaticRouteOutput {
	return o
}

// Route prefix in CIDR notation.
func (o VpcRouteTableStaticRouteOutput) DestinationPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcRouteTableStaticRoute) *string { return v.DestinationPrefix }).(pulumi.StringPtrOutput)
}

// Address of the next hop.
func (o VpcRouteTableStaticRouteOutput) NextHopAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcRouteTableStaticRoute) *string { return v.NextHopAddress }).(pulumi.StringPtrOutput)
}

type VpcRouteTableStaticRouteArrayOutput struct{ *pulumi.OutputState }

func (VpcRouteTableStaticRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcRouteTableStaticRoute)(nil)).Elem()
}

func (o VpcRouteTableStaticRouteArrayOutput) ToVpcRouteTableStaticRouteArrayOutput() VpcRouteTableStaticRouteArrayOutput {
	return o
}

func (o VpcRouteTableStaticRouteArrayOutput) ToVpcRouteTableStaticRouteArrayOutputWithContext(ctx context.Context) VpcRouteTableStaticRouteArrayOutput {
	return o
}

func (o VpcRouteTableStaticRouteArrayOutput) Index(i pulumi.IntInput) VpcRouteTableStaticRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcRouteTableStaticRoute {
		return vs[0].([]VpcRouteTableStaticRoute)[vs[1].(int)]
	}).(VpcRouteTableStaticRouteOutput)
}

type VpcSecurityGroupEgress struct {
	// Description of the security group.
	Description *string `pulumi:"description"`
	FromPort    *int    `pulumi:"fromPort"`
	// Id of the rule.
	Id *string `pulumi:"id"`
	// Labels to assign to this security group.
	Labels           map[string]string `pulumi:"labels"`
	Port             *int              `pulumi:"port"`
	PredefinedTarget *string           `pulumi:"predefinedTarget"`
	Protocol         string            `pulumi:"protocol"`
	SecurityGroupId  *string           `pulumi:"securityGroupId"`
	ToPort           *int              `pulumi:"toPort"`
	V4CidrBlocks     []string          `pulumi:"v4CidrBlocks"`
	V6CidrBlocks     []string          `pulumi:"v6CidrBlocks"`
}

// VpcSecurityGroupEgressInput is an input type that accepts VpcSecurityGroupEgressArgs and VpcSecurityGroupEgressOutput values.
// You can construct a concrete instance of `VpcSecurityGroupEgressInput` via:
//
//          VpcSecurityGroupEgressArgs{...}
type VpcSecurityGroupEgressInput interface {
	pulumi.Input

	ToVpcSecurityGroupEgressOutput() VpcSecurityGroupEgressOutput
	ToVpcSecurityGroupEgressOutputWithContext(context.Context) VpcSecurityGroupEgressOutput
}

type VpcSecurityGroupEgressArgs struct {
	// Description of the security group.
	Description pulumi.StringPtrInput `pulumi:"description"`
	FromPort    pulumi.IntPtrInput    `pulumi:"fromPort"`
	// Id of the rule.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Labels to assign to this security group.
	Labels           pulumi.StringMapInput   `pulumi:"labels"`
	Port             pulumi.IntPtrInput      `pulumi:"port"`
	PredefinedTarget pulumi.StringPtrInput   `pulumi:"predefinedTarget"`
	Protocol         pulumi.StringInput      `pulumi:"protocol"`
	SecurityGroupId  pulumi.StringPtrInput   `pulumi:"securityGroupId"`
	ToPort           pulumi.IntPtrInput      `pulumi:"toPort"`
	V4CidrBlocks     pulumi.StringArrayInput `pulumi:"v4CidrBlocks"`
	V6CidrBlocks     pulumi.StringArrayInput `pulumi:"v6CidrBlocks"`
}

func (VpcSecurityGroupEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcSecurityGroupEgress)(nil)).Elem()
}

func (i VpcSecurityGroupEgressArgs) ToVpcSecurityGroupEgressOutput() VpcSecurityGroupEgressOutput {
	return i.ToVpcSecurityGroupEgressOutputWithContext(context.Background())
}

func (i VpcSecurityGroupEgressArgs) ToVpcSecurityGroupEgressOutputWithContext(ctx context.Context) VpcSecurityGroupEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcSecurityGroupEgressOutput)
}

// VpcSecurityGroupEgressArrayInput is an input type that accepts VpcSecurityGroupEgressArray and VpcSecurityGroupEgressArrayOutput values.
// You can construct a concrete instance of `VpcSecurityGroupEgressArrayInput` via:
//
//          VpcSecurityGroupEgressArray{ VpcSecurityGroupEgressArgs{...} }
type VpcSecurityGroupEgressArrayInput interface {
	pulumi.Input

	ToVpcSecurityGroupEgressArrayOutput() VpcSecurityGroupEgressArrayOutput
	ToVpcSecurityGroupEgressArrayOutputWithContext(context.Context) VpcSecurityGroupEgressArrayOutput
}

type VpcSecurityGroupEgressArray []VpcSecurityGroupEgressInput

func (VpcSecurityGroupEgressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcSecurityGroupEgress)(nil)).Elem()
}

func (i VpcSecurityGroupEgressArray) ToVpcSecurityGroupEgressArrayOutput() VpcSecurityGroupEgressArrayOutput {
	return i.ToVpcSecurityGroupEgressArrayOutputWithContext(context.Background())
}

func (i VpcSecurityGroupEgressArray) ToVpcSecurityGroupEgressArrayOutputWithContext(ctx context.Context) VpcSecurityGroupEgressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcSecurityGroupEgressArrayOutput)
}

type VpcSecurityGroupEgressOutput struct{ *pulumi.OutputState }

func (VpcSecurityGroupEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcSecurityGroupEgress)(nil)).Elem()
}

func (o VpcSecurityGroupEgressOutput) ToVpcSecurityGroupEgressOutput() VpcSecurityGroupEgressOutput {
	return o
}

func (o VpcSecurityGroupEgressOutput) ToVpcSecurityGroupEgressOutputWithContext(ctx context.Context) VpcSecurityGroupEgressOutput {
	return o
}

// Description of the security group.
func (o VpcSecurityGroupEgressOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcSecurityGroupEgress) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o VpcSecurityGroupEgressOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpcSecurityGroupEgress) *int { return v.FromPort }).(pulumi.IntPtrOutput)
}

// Id of the rule.
func (o VpcSecurityGroupEgressOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcSecurityGroupEgress) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Labels to assign to this security group.
func (o VpcSecurityGroupEgressOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v VpcSecurityGroupEgress) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o VpcSecurityGroupEgressOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpcSecurityGroupEgress) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o VpcSecurityGroupEgressOutput) PredefinedTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcSecurityGroupEgress) *string { return v.PredefinedTarget }).(pulumi.StringPtrOutput)
}

func (o VpcSecurityGroupEgressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v VpcSecurityGroupEgress) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o VpcSecurityGroupEgressOutput) SecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcSecurityGroupEgress) *string { return v.SecurityGroupId }).(pulumi.StringPtrOutput)
}

func (o VpcSecurityGroupEgressOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpcSecurityGroupEgress) *int { return v.ToPort }).(pulumi.IntPtrOutput)
}

func (o VpcSecurityGroupEgressOutput) V4CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcSecurityGroupEgress) []string { return v.V4CidrBlocks }).(pulumi.StringArrayOutput)
}

func (o VpcSecurityGroupEgressOutput) V6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcSecurityGroupEgress) []string { return v.V6CidrBlocks }).(pulumi.StringArrayOutput)
}

type VpcSecurityGroupEgressArrayOutput struct{ *pulumi.OutputState }

func (VpcSecurityGroupEgressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcSecurityGroupEgress)(nil)).Elem()
}

func (o VpcSecurityGroupEgressArrayOutput) ToVpcSecurityGroupEgressArrayOutput() VpcSecurityGroupEgressArrayOutput {
	return o
}

func (o VpcSecurityGroupEgressArrayOutput) ToVpcSecurityGroupEgressArrayOutputWithContext(ctx context.Context) VpcSecurityGroupEgressArrayOutput {
	return o
}

func (o VpcSecurityGroupEgressArrayOutput) Index(i pulumi.IntInput) VpcSecurityGroupEgressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcSecurityGroupEgress {
		return vs[0].([]VpcSecurityGroupEgress)[vs[1].(int)]
	}).(VpcSecurityGroupEgressOutput)
}

type VpcSecurityGroupIngress struct {
	// Description of the security group.
	Description *string `pulumi:"description"`
	FromPort    *int    `pulumi:"fromPort"`
	// Id of the rule.
	Id *string `pulumi:"id"`
	// Labels to assign to this security group.
	Labels           map[string]string `pulumi:"labels"`
	Port             *int              `pulumi:"port"`
	PredefinedTarget *string           `pulumi:"predefinedTarget"`
	Protocol         string            `pulumi:"protocol"`
	SecurityGroupId  *string           `pulumi:"securityGroupId"`
	ToPort           *int              `pulumi:"toPort"`
	V4CidrBlocks     []string          `pulumi:"v4CidrBlocks"`
	V6CidrBlocks     []string          `pulumi:"v6CidrBlocks"`
}

// VpcSecurityGroupIngressInput is an input type that accepts VpcSecurityGroupIngressArgs and VpcSecurityGroupIngressOutput values.
// You can construct a concrete instance of `VpcSecurityGroupIngressInput` via:
//
//          VpcSecurityGroupIngressArgs{...}
type VpcSecurityGroupIngressInput interface {
	pulumi.Input

	ToVpcSecurityGroupIngressOutput() VpcSecurityGroupIngressOutput
	ToVpcSecurityGroupIngressOutputWithContext(context.Context) VpcSecurityGroupIngressOutput
}

type VpcSecurityGroupIngressArgs struct {
	// Description of the security group.
	Description pulumi.StringPtrInput `pulumi:"description"`
	FromPort    pulumi.IntPtrInput    `pulumi:"fromPort"`
	// Id of the rule.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Labels to assign to this security group.
	Labels           pulumi.StringMapInput   `pulumi:"labels"`
	Port             pulumi.IntPtrInput      `pulumi:"port"`
	PredefinedTarget pulumi.StringPtrInput   `pulumi:"predefinedTarget"`
	Protocol         pulumi.StringInput      `pulumi:"protocol"`
	SecurityGroupId  pulumi.StringPtrInput   `pulumi:"securityGroupId"`
	ToPort           pulumi.IntPtrInput      `pulumi:"toPort"`
	V4CidrBlocks     pulumi.StringArrayInput `pulumi:"v4CidrBlocks"`
	V6CidrBlocks     pulumi.StringArrayInput `pulumi:"v6CidrBlocks"`
}

func (VpcSecurityGroupIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcSecurityGroupIngress)(nil)).Elem()
}

func (i VpcSecurityGroupIngressArgs) ToVpcSecurityGroupIngressOutput() VpcSecurityGroupIngressOutput {
	return i.ToVpcSecurityGroupIngressOutputWithContext(context.Background())
}

func (i VpcSecurityGroupIngressArgs) ToVpcSecurityGroupIngressOutputWithContext(ctx context.Context) VpcSecurityGroupIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcSecurityGroupIngressOutput)
}

// VpcSecurityGroupIngressArrayInput is an input type that accepts VpcSecurityGroupIngressArray and VpcSecurityGroupIngressArrayOutput values.
// You can construct a concrete instance of `VpcSecurityGroupIngressArrayInput` via:
//
//          VpcSecurityGroupIngressArray{ VpcSecurityGroupIngressArgs{...} }
type VpcSecurityGroupIngressArrayInput interface {
	pulumi.Input

	ToVpcSecurityGroupIngressArrayOutput() VpcSecurityGroupIngressArrayOutput
	ToVpcSecurityGroupIngressArrayOutputWithContext(context.Context) VpcSecurityGroupIngressArrayOutput
}

type VpcSecurityGroupIngressArray []VpcSecurityGroupIngressInput

func (VpcSecurityGroupIngressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcSecurityGroupIngress)(nil)).Elem()
}

func (i VpcSecurityGroupIngressArray) ToVpcSecurityGroupIngressArrayOutput() VpcSecurityGroupIngressArrayOutput {
	return i.ToVpcSecurityGroupIngressArrayOutputWithContext(context.Background())
}

func (i VpcSecurityGroupIngressArray) ToVpcSecurityGroupIngressArrayOutputWithContext(ctx context.Context) VpcSecurityGroupIngressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcSecurityGroupIngressArrayOutput)
}

type VpcSecurityGroupIngressOutput struct{ *pulumi.OutputState }

func (VpcSecurityGroupIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcSecurityGroupIngress)(nil)).Elem()
}

func (o VpcSecurityGroupIngressOutput) ToVpcSecurityGroupIngressOutput() VpcSecurityGroupIngressOutput {
	return o
}

func (o VpcSecurityGroupIngressOutput) ToVpcSecurityGroupIngressOutputWithContext(ctx context.Context) VpcSecurityGroupIngressOutput {
	return o
}

// Description of the security group.
func (o VpcSecurityGroupIngressOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcSecurityGroupIngress) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o VpcSecurityGroupIngressOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpcSecurityGroupIngress) *int { return v.FromPort }).(pulumi.IntPtrOutput)
}

// Id of the rule.
func (o VpcSecurityGroupIngressOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcSecurityGroupIngress) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Labels to assign to this security group.
func (o VpcSecurityGroupIngressOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v VpcSecurityGroupIngress) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o VpcSecurityGroupIngressOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpcSecurityGroupIngress) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o VpcSecurityGroupIngressOutput) PredefinedTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcSecurityGroupIngress) *string { return v.PredefinedTarget }).(pulumi.StringPtrOutput)
}

func (o VpcSecurityGroupIngressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v VpcSecurityGroupIngress) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o VpcSecurityGroupIngressOutput) SecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcSecurityGroupIngress) *string { return v.SecurityGroupId }).(pulumi.StringPtrOutput)
}

func (o VpcSecurityGroupIngressOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpcSecurityGroupIngress) *int { return v.ToPort }).(pulumi.IntPtrOutput)
}

func (o VpcSecurityGroupIngressOutput) V4CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcSecurityGroupIngress) []string { return v.V4CidrBlocks }).(pulumi.StringArrayOutput)
}

func (o VpcSecurityGroupIngressOutput) V6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcSecurityGroupIngress) []string { return v.V6CidrBlocks }).(pulumi.StringArrayOutput)
}

type VpcSecurityGroupIngressArrayOutput struct{ *pulumi.OutputState }

func (VpcSecurityGroupIngressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcSecurityGroupIngress)(nil)).Elem()
}

func (o VpcSecurityGroupIngressArrayOutput) ToVpcSecurityGroupIngressArrayOutput() VpcSecurityGroupIngressArrayOutput {
	return o
}

func (o VpcSecurityGroupIngressArrayOutput) ToVpcSecurityGroupIngressArrayOutputWithContext(ctx context.Context) VpcSecurityGroupIngressArrayOutput {
	return o
}

func (o VpcSecurityGroupIngressArrayOutput) Index(i pulumi.IntInput) VpcSecurityGroupIngressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcSecurityGroupIngress {
		return vs[0].([]VpcSecurityGroupIngress)[vs[1].(int)]
	}).(VpcSecurityGroupIngressOutput)
}

type VpcSubnetDhcpOptions struct {
	// Domain name.
	DomainName *string `pulumi:"domainName"`
	// Domain name server IP addresses.
	DomainNameServers []string `pulumi:"domainNameServers"`
	// NTP server IP addresses.
	NtpServers []string `pulumi:"ntpServers"`
}

// VpcSubnetDhcpOptionsInput is an input type that accepts VpcSubnetDhcpOptionsArgs and VpcSubnetDhcpOptionsOutput values.
// You can construct a concrete instance of `VpcSubnetDhcpOptionsInput` via:
//
//          VpcSubnetDhcpOptionsArgs{...}
type VpcSubnetDhcpOptionsInput interface {
	pulumi.Input

	ToVpcSubnetDhcpOptionsOutput() VpcSubnetDhcpOptionsOutput
	ToVpcSubnetDhcpOptionsOutputWithContext(context.Context) VpcSubnetDhcpOptionsOutput
}

type VpcSubnetDhcpOptionsArgs struct {
	// Domain name.
	DomainName pulumi.StringPtrInput `pulumi:"domainName"`
	// Domain name server IP addresses.
	DomainNameServers pulumi.StringArrayInput `pulumi:"domainNameServers"`
	// NTP server IP addresses.
	NtpServers pulumi.StringArrayInput `pulumi:"ntpServers"`
}

func (VpcSubnetDhcpOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcSubnetDhcpOptions)(nil)).Elem()
}

func (i VpcSubnetDhcpOptionsArgs) ToVpcSubnetDhcpOptionsOutput() VpcSubnetDhcpOptionsOutput {
	return i.ToVpcSubnetDhcpOptionsOutputWithContext(context.Background())
}

func (i VpcSubnetDhcpOptionsArgs) ToVpcSubnetDhcpOptionsOutputWithContext(ctx context.Context) VpcSubnetDhcpOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcSubnetDhcpOptionsOutput)
}

func (i VpcSubnetDhcpOptionsArgs) ToVpcSubnetDhcpOptionsPtrOutput() VpcSubnetDhcpOptionsPtrOutput {
	return i.ToVpcSubnetDhcpOptionsPtrOutputWithContext(context.Background())
}

func (i VpcSubnetDhcpOptionsArgs) ToVpcSubnetDhcpOptionsPtrOutputWithContext(ctx context.Context) VpcSubnetDhcpOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcSubnetDhcpOptionsOutput).ToVpcSubnetDhcpOptionsPtrOutputWithContext(ctx)
}

// VpcSubnetDhcpOptionsPtrInput is an input type that accepts VpcSubnetDhcpOptionsArgs, VpcSubnetDhcpOptionsPtr and VpcSubnetDhcpOptionsPtrOutput values.
// You can construct a concrete instance of `VpcSubnetDhcpOptionsPtrInput` via:
//
//          VpcSubnetDhcpOptionsArgs{...}
//
//  or:
//
//          nil
type VpcSubnetDhcpOptionsPtrInput interface {
	pulumi.Input

	ToVpcSubnetDhcpOptionsPtrOutput() VpcSubnetDhcpOptionsPtrOutput
	ToVpcSubnetDhcpOptionsPtrOutputWithContext(context.Context) VpcSubnetDhcpOptionsPtrOutput
}

type vpcSubnetDhcpOptionsPtrType VpcSubnetDhcpOptionsArgs

func VpcSubnetDhcpOptionsPtr(v *VpcSubnetDhcpOptionsArgs) VpcSubnetDhcpOptionsPtrInput {
	return (*vpcSubnetDhcpOptionsPtrType)(v)
}

func (*vpcSubnetDhcpOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcSubnetDhcpOptions)(nil)).Elem()
}

func (i *vpcSubnetDhcpOptionsPtrType) ToVpcSubnetDhcpOptionsPtrOutput() VpcSubnetDhcpOptionsPtrOutput {
	return i.ToVpcSubnetDhcpOptionsPtrOutputWithContext(context.Background())
}

func (i *vpcSubnetDhcpOptionsPtrType) ToVpcSubnetDhcpOptionsPtrOutputWithContext(ctx context.Context) VpcSubnetDhcpOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcSubnetDhcpOptionsPtrOutput)
}

type VpcSubnetDhcpOptionsOutput struct{ *pulumi.OutputState }

func (VpcSubnetDhcpOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcSubnetDhcpOptions)(nil)).Elem()
}

func (o VpcSubnetDhcpOptionsOutput) ToVpcSubnetDhcpOptionsOutput() VpcSubnetDhcpOptionsOutput {
	return o
}

func (o VpcSubnetDhcpOptionsOutput) ToVpcSubnetDhcpOptionsOutputWithContext(ctx context.Context) VpcSubnetDhcpOptionsOutput {
	return o
}

func (o VpcSubnetDhcpOptionsOutput) ToVpcSubnetDhcpOptionsPtrOutput() VpcSubnetDhcpOptionsPtrOutput {
	return o.ToVpcSubnetDhcpOptionsPtrOutputWithContext(context.Background())
}

func (o VpcSubnetDhcpOptionsOutput) ToVpcSubnetDhcpOptionsPtrOutputWithContext(ctx context.Context) VpcSubnetDhcpOptionsPtrOutput {
	return o.ApplyT(func(v VpcSubnetDhcpOptions) *VpcSubnetDhcpOptions {
		return &v
	}).(VpcSubnetDhcpOptionsPtrOutput)
}

// Domain name.
func (o VpcSubnetDhcpOptionsOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcSubnetDhcpOptions) *string { return v.DomainName }).(pulumi.StringPtrOutput)
}

// Domain name server IP addresses.
func (o VpcSubnetDhcpOptionsOutput) DomainNameServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcSubnetDhcpOptions) []string { return v.DomainNameServers }).(pulumi.StringArrayOutput)
}

// NTP server IP addresses.
func (o VpcSubnetDhcpOptionsOutput) NtpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcSubnetDhcpOptions) []string { return v.NtpServers }).(pulumi.StringArrayOutput)
}

type VpcSubnetDhcpOptionsPtrOutput struct{ *pulumi.OutputState }

func (VpcSubnetDhcpOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcSubnetDhcpOptions)(nil)).Elem()
}

func (o VpcSubnetDhcpOptionsPtrOutput) ToVpcSubnetDhcpOptionsPtrOutput() VpcSubnetDhcpOptionsPtrOutput {
	return o
}

func (o VpcSubnetDhcpOptionsPtrOutput) ToVpcSubnetDhcpOptionsPtrOutputWithContext(ctx context.Context) VpcSubnetDhcpOptionsPtrOutput {
	return o
}

func (o VpcSubnetDhcpOptionsPtrOutput) Elem() VpcSubnetDhcpOptionsOutput {
	return o.ApplyT(func(v *VpcSubnetDhcpOptions) VpcSubnetDhcpOptions { return *v }).(VpcSubnetDhcpOptionsOutput)
}

// Domain name.
func (o VpcSubnetDhcpOptionsPtrOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcSubnetDhcpOptions) *string {
		if v == nil {
			return nil
		}
		return v.DomainName
	}).(pulumi.StringPtrOutput)
}

// Domain name server IP addresses.
func (o VpcSubnetDhcpOptionsPtrOutput) DomainNameServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcSubnetDhcpOptions) []string {
		if v == nil {
			return nil
		}
		return v.DomainNameServers
	}).(pulumi.StringArrayOutput)
}

// NTP server IP addresses.
func (o VpcSubnetDhcpOptionsPtrOutput) NtpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcSubnetDhcpOptions) []string {
		if v == nil {
			return nil
		}
		return v.NtpServers
	}).(pulumi.StringArrayOutput)
}

type YdbDatabaseDedicatedLocation struct {
	// Region for the Yandex Database cluster.
	// The structure is documented below.
	Region *YdbDatabaseDedicatedLocationRegion `pulumi:"region"`
}

// YdbDatabaseDedicatedLocationInput is an input type that accepts YdbDatabaseDedicatedLocationArgs and YdbDatabaseDedicatedLocationOutput values.
// You can construct a concrete instance of `YdbDatabaseDedicatedLocationInput` via:
//
//          YdbDatabaseDedicatedLocationArgs{...}
type YdbDatabaseDedicatedLocationInput interface {
	pulumi.Input

	ToYdbDatabaseDedicatedLocationOutput() YdbDatabaseDedicatedLocationOutput
	ToYdbDatabaseDedicatedLocationOutputWithContext(context.Context) YdbDatabaseDedicatedLocationOutput
}

type YdbDatabaseDedicatedLocationArgs struct {
	// Region for the Yandex Database cluster.
	// The structure is documented below.
	Region YdbDatabaseDedicatedLocationRegionPtrInput `pulumi:"region"`
}

func (YdbDatabaseDedicatedLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*YdbDatabaseDedicatedLocation)(nil)).Elem()
}

func (i YdbDatabaseDedicatedLocationArgs) ToYdbDatabaseDedicatedLocationOutput() YdbDatabaseDedicatedLocationOutput {
	return i.ToYdbDatabaseDedicatedLocationOutputWithContext(context.Background())
}

func (i YdbDatabaseDedicatedLocationArgs) ToYdbDatabaseDedicatedLocationOutputWithContext(ctx context.Context) YdbDatabaseDedicatedLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YdbDatabaseDedicatedLocationOutput)
}

func (i YdbDatabaseDedicatedLocationArgs) ToYdbDatabaseDedicatedLocationPtrOutput() YdbDatabaseDedicatedLocationPtrOutput {
	return i.ToYdbDatabaseDedicatedLocationPtrOutputWithContext(context.Background())
}

func (i YdbDatabaseDedicatedLocationArgs) ToYdbDatabaseDedicatedLocationPtrOutputWithContext(ctx context.Context) YdbDatabaseDedicatedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YdbDatabaseDedicatedLocationOutput).ToYdbDatabaseDedicatedLocationPtrOutputWithContext(ctx)
}

// YdbDatabaseDedicatedLocationPtrInput is an input type that accepts YdbDatabaseDedicatedLocationArgs, YdbDatabaseDedicatedLocationPtr and YdbDatabaseDedicatedLocationPtrOutput values.
// You can construct a concrete instance of `YdbDatabaseDedicatedLocationPtrInput` via:
//
//          YdbDatabaseDedicatedLocationArgs{...}
//
//  or:
//
//          nil
type YdbDatabaseDedicatedLocationPtrInput interface {
	pulumi.Input

	ToYdbDatabaseDedicatedLocationPtrOutput() YdbDatabaseDedicatedLocationPtrOutput
	ToYdbDatabaseDedicatedLocationPtrOutputWithContext(context.Context) YdbDatabaseDedicatedLocationPtrOutput
}

type ydbDatabaseDedicatedLocationPtrType YdbDatabaseDedicatedLocationArgs

func YdbDatabaseDedicatedLocationPtr(v *YdbDatabaseDedicatedLocationArgs) YdbDatabaseDedicatedLocationPtrInput {
	return (*ydbDatabaseDedicatedLocationPtrType)(v)
}

func (*ydbDatabaseDedicatedLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**YdbDatabaseDedicatedLocation)(nil)).Elem()
}

func (i *ydbDatabaseDedicatedLocationPtrType) ToYdbDatabaseDedicatedLocationPtrOutput() YdbDatabaseDedicatedLocationPtrOutput {
	return i.ToYdbDatabaseDedicatedLocationPtrOutputWithContext(context.Background())
}

func (i *ydbDatabaseDedicatedLocationPtrType) ToYdbDatabaseDedicatedLocationPtrOutputWithContext(ctx context.Context) YdbDatabaseDedicatedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YdbDatabaseDedicatedLocationPtrOutput)
}

type YdbDatabaseDedicatedLocationOutput struct{ *pulumi.OutputState }

func (YdbDatabaseDedicatedLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*YdbDatabaseDedicatedLocation)(nil)).Elem()
}

func (o YdbDatabaseDedicatedLocationOutput) ToYdbDatabaseDedicatedLocationOutput() YdbDatabaseDedicatedLocationOutput {
	return o
}

func (o YdbDatabaseDedicatedLocationOutput) ToYdbDatabaseDedicatedLocationOutputWithContext(ctx context.Context) YdbDatabaseDedicatedLocationOutput {
	return o
}

func (o YdbDatabaseDedicatedLocationOutput) ToYdbDatabaseDedicatedLocationPtrOutput() YdbDatabaseDedicatedLocationPtrOutput {
	return o.ToYdbDatabaseDedicatedLocationPtrOutputWithContext(context.Background())
}

func (o YdbDatabaseDedicatedLocationOutput) ToYdbDatabaseDedicatedLocationPtrOutputWithContext(ctx context.Context) YdbDatabaseDedicatedLocationPtrOutput {
	return o.ApplyT(func(v YdbDatabaseDedicatedLocation) *YdbDatabaseDedicatedLocation {
		return &v
	}).(YdbDatabaseDedicatedLocationPtrOutput)
}

// Region for the Yandex Database cluster.
// The structure is documented below.
func (o YdbDatabaseDedicatedLocationOutput) Region() YdbDatabaseDedicatedLocationRegionPtrOutput {
	return o.ApplyT(func(v YdbDatabaseDedicatedLocation) *YdbDatabaseDedicatedLocationRegion { return v.Region }).(YdbDatabaseDedicatedLocationRegionPtrOutput)
}

type YdbDatabaseDedicatedLocationPtrOutput struct{ *pulumi.OutputState }

func (YdbDatabaseDedicatedLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**YdbDatabaseDedicatedLocation)(nil)).Elem()
}

func (o YdbDatabaseDedicatedLocationPtrOutput) ToYdbDatabaseDedicatedLocationPtrOutput() YdbDatabaseDedicatedLocationPtrOutput {
	return o
}

func (o YdbDatabaseDedicatedLocationPtrOutput) ToYdbDatabaseDedicatedLocationPtrOutputWithContext(ctx context.Context) YdbDatabaseDedicatedLocationPtrOutput {
	return o
}

func (o YdbDatabaseDedicatedLocationPtrOutput) Elem() YdbDatabaseDedicatedLocationOutput {
	return o.ApplyT(func(v *YdbDatabaseDedicatedLocation) YdbDatabaseDedicatedLocation { return *v }).(YdbDatabaseDedicatedLocationOutput)
}

// Region for the Yandex Database cluster.
// The structure is documented below.
func (o YdbDatabaseDedicatedLocationPtrOutput) Region() YdbDatabaseDedicatedLocationRegionPtrOutput {
	return o.ApplyT(func(v *YdbDatabaseDedicatedLocation) *YdbDatabaseDedicatedLocationRegion {
		if v == nil {
			return nil
		}
		return v.Region
	}).(YdbDatabaseDedicatedLocationRegionPtrOutput)
}

type YdbDatabaseDedicatedLocationRegion struct {
	// Region ID for the Yandex Database cluster.
	Id string `pulumi:"id"`
}

// YdbDatabaseDedicatedLocationRegionInput is an input type that accepts YdbDatabaseDedicatedLocationRegionArgs and YdbDatabaseDedicatedLocationRegionOutput values.
// You can construct a concrete instance of `YdbDatabaseDedicatedLocationRegionInput` via:
//
//          YdbDatabaseDedicatedLocationRegionArgs{...}
type YdbDatabaseDedicatedLocationRegionInput interface {
	pulumi.Input

	ToYdbDatabaseDedicatedLocationRegionOutput() YdbDatabaseDedicatedLocationRegionOutput
	ToYdbDatabaseDedicatedLocationRegionOutputWithContext(context.Context) YdbDatabaseDedicatedLocationRegionOutput
}

type YdbDatabaseDedicatedLocationRegionArgs struct {
	// Region ID for the Yandex Database cluster.
	Id pulumi.StringInput `pulumi:"id"`
}

func (YdbDatabaseDedicatedLocationRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*YdbDatabaseDedicatedLocationRegion)(nil)).Elem()
}

func (i YdbDatabaseDedicatedLocationRegionArgs) ToYdbDatabaseDedicatedLocationRegionOutput() YdbDatabaseDedicatedLocationRegionOutput {
	return i.ToYdbDatabaseDedicatedLocationRegionOutputWithContext(context.Background())
}

func (i YdbDatabaseDedicatedLocationRegionArgs) ToYdbDatabaseDedicatedLocationRegionOutputWithContext(ctx context.Context) YdbDatabaseDedicatedLocationRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YdbDatabaseDedicatedLocationRegionOutput)
}

func (i YdbDatabaseDedicatedLocationRegionArgs) ToYdbDatabaseDedicatedLocationRegionPtrOutput() YdbDatabaseDedicatedLocationRegionPtrOutput {
	return i.ToYdbDatabaseDedicatedLocationRegionPtrOutputWithContext(context.Background())
}

func (i YdbDatabaseDedicatedLocationRegionArgs) ToYdbDatabaseDedicatedLocationRegionPtrOutputWithContext(ctx context.Context) YdbDatabaseDedicatedLocationRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YdbDatabaseDedicatedLocationRegionOutput).ToYdbDatabaseDedicatedLocationRegionPtrOutputWithContext(ctx)
}

// YdbDatabaseDedicatedLocationRegionPtrInput is an input type that accepts YdbDatabaseDedicatedLocationRegionArgs, YdbDatabaseDedicatedLocationRegionPtr and YdbDatabaseDedicatedLocationRegionPtrOutput values.
// You can construct a concrete instance of `YdbDatabaseDedicatedLocationRegionPtrInput` via:
//
//          YdbDatabaseDedicatedLocationRegionArgs{...}
//
//  or:
//
//          nil
type YdbDatabaseDedicatedLocationRegionPtrInput interface {
	pulumi.Input

	ToYdbDatabaseDedicatedLocationRegionPtrOutput() YdbDatabaseDedicatedLocationRegionPtrOutput
	ToYdbDatabaseDedicatedLocationRegionPtrOutputWithContext(context.Context) YdbDatabaseDedicatedLocationRegionPtrOutput
}

type ydbDatabaseDedicatedLocationRegionPtrType YdbDatabaseDedicatedLocationRegionArgs

func YdbDatabaseDedicatedLocationRegionPtr(v *YdbDatabaseDedicatedLocationRegionArgs) YdbDatabaseDedicatedLocationRegionPtrInput {
	return (*ydbDatabaseDedicatedLocationRegionPtrType)(v)
}

func (*ydbDatabaseDedicatedLocationRegionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**YdbDatabaseDedicatedLocationRegion)(nil)).Elem()
}

func (i *ydbDatabaseDedicatedLocationRegionPtrType) ToYdbDatabaseDedicatedLocationRegionPtrOutput() YdbDatabaseDedicatedLocationRegionPtrOutput {
	return i.ToYdbDatabaseDedicatedLocationRegionPtrOutputWithContext(context.Background())
}

func (i *ydbDatabaseDedicatedLocationRegionPtrType) ToYdbDatabaseDedicatedLocationRegionPtrOutputWithContext(ctx context.Context) YdbDatabaseDedicatedLocationRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YdbDatabaseDedicatedLocationRegionPtrOutput)
}

type YdbDatabaseDedicatedLocationRegionOutput struct{ *pulumi.OutputState }

func (YdbDatabaseDedicatedLocationRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*YdbDatabaseDedicatedLocationRegion)(nil)).Elem()
}

func (o YdbDatabaseDedicatedLocationRegionOutput) ToYdbDatabaseDedicatedLocationRegionOutput() YdbDatabaseDedicatedLocationRegionOutput {
	return o
}

func (o YdbDatabaseDedicatedLocationRegionOutput) ToYdbDatabaseDedicatedLocationRegionOutputWithContext(ctx context.Context) YdbDatabaseDedicatedLocationRegionOutput {
	return o
}

func (o YdbDatabaseDedicatedLocationRegionOutput) ToYdbDatabaseDedicatedLocationRegionPtrOutput() YdbDatabaseDedicatedLocationRegionPtrOutput {
	return o.ToYdbDatabaseDedicatedLocationRegionPtrOutputWithContext(context.Background())
}

func (o YdbDatabaseDedicatedLocationRegionOutput) ToYdbDatabaseDedicatedLocationRegionPtrOutputWithContext(ctx context.Context) YdbDatabaseDedicatedLocationRegionPtrOutput {
	return o.ApplyT(func(v YdbDatabaseDedicatedLocationRegion) *YdbDatabaseDedicatedLocationRegion {
		return &v
	}).(YdbDatabaseDedicatedLocationRegionPtrOutput)
}

// Region ID for the Yandex Database cluster.
func (o YdbDatabaseDedicatedLocationRegionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v YdbDatabaseDedicatedLocationRegion) string { return v.Id }).(pulumi.StringOutput)
}

type YdbDatabaseDedicatedLocationRegionPtrOutput struct{ *pulumi.OutputState }

func (YdbDatabaseDedicatedLocationRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**YdbDatabaseDedicatedLocationRegion)(nil)).Elem()
}

func (o YdbDatabaseDedicatedLocationRegionPtrOutput) ToYdbDatabaseDedicatedLocationRegionPtrOutput() YdbDatabaseDedicatedLocationRegionPtrOutput {
	return o
}

func (o YdbDatabaseDedicatedLocationRegionPtrOutput) ToYdbDatabaseDedicatedLocationRegionPtrOutputWithContext(ctx context.Context) YdbDatabaseDedicatedLocationRegionPtrOutput {
	return o
}

func (o YdbDatabaseDedicatedLocationRegionPtrOutput) Elem() YdbDatabaseDedicatedLocationRegionOutput {
	return o.ApplyT(func(v *YdbDatabaseDedicatedLocationRegion) YdbDatabaseDedicatedLocationRegion { return *v }).(YdbDatabaseDedicatedLocationRegionOutput)
}

// Region ID for the Yandex Database cluster.
func (o YdbDatabaseDedicatedLocationRegionPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *YdbDatabaseDedicatedLocationRegion) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type YdbDatabaseDedicatedScalePolicy struct {
	// Fixed scaling policy for the Yandex Database cluster.
	// The structure is documented below.
	FixedScale YdbDatabaseDedicatedScalePolicyFixedScale `pulumi:"fixedScale"`
}

// YdbDatabaseDedicatedScalePolicyInput is an input type that accepts YdbDatabaseDedicatedScalePolicyArgs and YdbDatabaseDedicatedScalePolicyOutput values.
// You can construct a concrete instance of `YdbDatabaseDedicatedScalePolicyInput` via:
//
//          YdbDatabaseDedicatedScalePolicyArgs{...}
type YdbDatabaseDedicatedScalePolicyInput interface {
	pulumi.Input

	ToYdbDatabaseDedicatedScalePolicyOutput() YdbDatabaseDedicatedScalePolicyOutput
	ToYdbDatabaseDedicatedScalePolicyOutputWithContext(context.Context) YdbDatabaseDedicatedScalePolicyOutput
}

type YdbDatabaseDedicatedScalePolicyArgs struct {
	// Fixed scaling policy for the Yandex Database cluster.
	// The structure is documented below.
	FixedScale YdbDatabaseDedicatedScalePolicyFixedScaleInput `pulumi:"fixedScale"`
}

func (YdbDatabaseDedicatedScalePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*YdbDatabaseDedicatedScalePolicy)(nil)).Elem()
}

func (i YdbDatabaseDedicatedScalePolicyArgs) ToYdbDatabaseDedicatedScalePolicyOutput() YdbDatabaseDedicatedScalePolicyOutput {
	return i.ToYdbDatabaseDedicatedScalePolicyOutputWithContext(context.Background())
}

func (i YdbDatabaseDedicatedScalePolicyArgs) ToYdbDatabaseDedicatedScalePolicyOutputWithContext(ctx context.Context) YdbDatabaseDedicatedScalePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YdbDatabaseDedicatedScalePolicyOutput)
}

func (i YdbDatabaseDedicatedScalePolicyArgs) ToYdbDatabaseDedicatedScalePolicyPtrOutput() YdbDatabaseDedicatedScalePolicyPtrOutput {
	return i.ToYdbDatabaseDedicatedScalePolicyPtrOutputWithContext(context.Background())
}

func (i YdbDatabaseDedicatedScalePolicyArgs) ToYdbDatabaseDedicatedScalePolicyPtrOutputWithContext(ctx context.Context) YdbDatabaseDedicatedScalePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YdbDatabaseDedicatedScalePolicyOutput).ToYdbDatabaseDedicatedScalePolicyPtrOutputWithContext(ctx)
}

// YdbDatabaseDedicatedScalePolicyPtrInput is an input type that accepts YdbDatabaseDedicatedScalePolicyArgs, YdbDatabaseDedicatedScalePolicyPtr and YdbDatabaseDedicatedScalePolicyPtrOutput values.
// You can construct a concrete instance of `YdbDatabaseDedicatedScalePolicyPtrInput` via:
//
//          YdbDatabaseDedicatedScalePolicyArgs{...}
//
//  or:
//
//          nil
type YdbDatabaseDedicatedScalePolicyPtrInput interface {
	pulumi.Input

	ToYdbDatabaseDedicatedScalePolicyPtrOutput() YdbDatabaseDedicatedScalePolicyPtrOutput
	ToYdbDatabaseDedicatedScalePolicyPtrOutputWithContext(context.Context) YdbDatabaseDedicatedScalePolicyPtrOutput
}

type ydbDatabaseDedicatedScalePolicyPtrType YdbDatabaseDedicatedScalePolicyArgs

func YdbDatabaseDedicatedScalePolicyPtr(v *YdbDatabaseDedicatedScalePolicyArgs) YdbDatabaseDedicatedScalePolicyPtrInput {
	return (*ydbDatabaseDedicatedScalePolicyPtrType)(v)
}

func (*ydbDatabaseDedicatedScalePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**YdbDatabaseDedicatedScalePolicy)(nil)).Elem()
}

func (i *ydbDatabaseDedicatedScalePolicyPtrType) ToYdbDatabaseDedicatedScalePolicyPtrOutput() YdbDatabaseDedicatedScalePolicyPtrOutput {
	return i.ToYdbDatabaseDedicatedScalePolicyPtrOutputWithContext(context.Background())
}

func (i *ydbDatabaseDedicatedScalePolicyPtrType) ToYdbDatabaseDedicatedScalePolicyPtrOutputWithContext(ctx context.Context) YdbDatabaseDedicatedScalePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YdbDatabaseDedicatedScalePolicyPtrOutput)
}

type YdbDatabaseDedicatedScalePolicyOutput struct{ *pulumi.OutputState }

func (YdbDatabaseDedicatedScalePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*YdbDatabaseDedicatedScalePolicy)(nil)).Elem()
}

func (o YdbDatabaseDedicatedScalePolicyOutput) ToYdbDatabaseDedicatedScalePolicyOutput() YdbDatabaseDedicatedScalePolicyOutput {
	return o
}

func (o YdbDatabaseDedicatedScalePolicyOutput) ToYdbDatabaseDedicatedScalePolicyOutputWithContext(ctx context.Context) YdbDatabaseDedicatedScalePolicyOutput {
	return o
}

func (o YdbDatabaseDedicatedScalePolicyOutput) ToYdbDatabaseDedicatedScalePolicyPtrOutput() YdbDatabaseDedicatedScalePolicyPtrOutput {
	return o.ToYdbDatabaseDedicatedScalePolicyPtrOutputWithContext(context.Background())
}

func (o YdbDatabaseDedicatedScalePolicyOutput) ToYdbDatabaseDedicatedScalePolicyPtrOutputWithContext(ctx context.Context) YdbDatabaseDedicatedScalePolicyPtrOutput {
	return o.ApplyT(func(v YdbDatabaseDedicatedScalePolicy) *YdbDatabaseDedicatedScalePolicy {
		return &v
	}).(YdbDatabaseDedicatedScalePolicyPtrOutput)
}

// Fixed scaling policy for the Yandex Database cluster.
// The structure is documented below.
func (o YdbDatabaseDedicatedScalePolicyOutput) FixedScale() YdbDatabaseDedicatedScalePolicyFixedScaleOutput {
	return o.ApplyT(func(v YdbDatabaseDedicatedScalePolicy) YdbDatabaseDedicatedScalePolicyFixedScale { return v.FixedScale }).(YdbDatabaseDedicatedScalePolicyFixedScaleOutput)
}

type YdbDatabaseDedicatedScalePolicyPtrOutput struct{ *pulumi.OutputState }

func (YdbDatabaseDedicatedScalePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**YdbDatabaseDedicatedScalePolicy)(nil)).Elem()
}

func (o YdbDatabaseDedicatedScalePolicyPtrOutput) ToYdbDatabaseDedicatedScalePolicyPtrOutput() YdbDatabaseDedicatedScalePolicyPtrOutput {
	return o
}

func (o YdbDatabaseDedicatedScalePolicyPtrOutput) ToYdbDatabaseDedicatedScalePolicyPtrOutputWithContext(ctx context.Context) YdbDatabaseDedicatedScalePolicyPtrOutput {
	return o
}

func (o YdbDatabaseDedicatedScalePolicyPtrOutput) Elem() YdbDatabaseDedicatedScalePolicyOutput {
	return o.ApplyT(func(v *YdbDatabaseDedicatedScalePolicy) YdbDatabaseDedicatedScalePolicy { return *v }).(YdbDatabaseDedicatedScalePolicyOutput)
}

// Fixed scaling policy for the Yandex Database cluster.
// The structure is documented below.
func (o YdbDatabaseDedicatedScalePolicyPtrOutput) FixedScale() YdbDatabaseDedicatedScalePolicyFixedScalePtrOutput {
	return o.ApplyT(func(v *YdbDatabaseDedicatedScalePolicy) *YdbDatabaseDedicatedScalePolicyFixedScale {
		if v == nil {
			return nil
		}
		return &v.FixedScale
	}).(YdbDatabaseDedicatedScalePolicyFixedScalePtrOutput)
}

type YdbDatabaseDedicatedScalePolicyFixedScale struct {
	// Number of instances for the Yandex Database cluster.
	Size int `pulumi:"size"`
}

// YdbDatabaseDedicatedScalePolicyFixedScaleInput is an input type that accepts YdbDatabaseDedicatedScalePolicyFixedScaleArgs and YdbDatabaseDedicatedScalePolicyFixedScaleOutput values.
// You can construct a concrete instance of `YdbDatabaseDedicatedScalePolicyFixedScaleInput` via:
//
//          YdbDatabaseDedicatedScalePolicyFixedScaleArgs{...}
type YdbDatabaseDedicatedScalePolicyFixedScaleInput interface {
	pulumi.Input

	ToYdbDatabaseDedicatedScalePolicyFixedScaleOutput() YdbDatabaseDedicatedScalePolicyFixedScaleOutput
	ToYdbDatabaseDedicatedScalePolicyFixedScaleOutputWithContext(context.Context) YdbDatabaseDedicatedScalePolicyFixedScaleOutput
}

type YdbDatabaseDedicatedScalePolicyFixedScaleArgs struct {
	// Number of instances for the Yandex Database cluster.
	Size pulumi.IntInput `pulumi:"size"`
}

func (YdbDatabaseDedicatedScalePolicyFixedScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*YdbDatabaseDedicatedScalePolicyFixedScale)(nil)).Elem()
}

func (i YdbDatabaseDedicatedScalePolicyFixedScaleArgs) ToYdbDatabaseDedicatedScalePolicyFixedScaleOutput() YdbDatabaseDedicatedScalePolicyFixedScaleOutput {
	return i.ToYdbDatabaseDedicatedScalePolicyFixedScaleOutputWithContext(context.Background())
}

func (i YdbDatabaseDedicatedScalePolicyFixedScaleArgs) ToYdbDatabaseDedicatedScalePolicyFixedScaleOutputWithContext(ctx context.Context) YdbDatabaseDedicatedScalePolicyFixedScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YdbDatabaseDedicatedScalePolicyFixedScaleOutput)
}

func (i YdbDatabaseDedicatedScalePolicyFixedScaleArgs) ToYdbDatabaseDedicatedScalePolicyFixedScalePtrOutput() YdbDatabaseDedicatedScalePolicyFixedScalePtrOutput {
	return i.ToYdbDatabaseDedicatedScalePolicyFixedScalePtrOutputWithContext(context.Background())
}

func (i YdbDatabaseDedicatedScalePolicyFixedScaleArgs) ToYdbDatabaseDedicatedScalePolicyFixedScalePtrOutputWithContext(ctx context.Context) YdbDatabaseDedicatedScalePolicyFixedScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YdbDatabaseDedicatedScalePolicyFixedScaleOutput).ToYdbDatabaseDedicatedScalePolicyFixedScalePtrOutputWithContext(ctx)
}

// YdbDatabaseDedicatedScalePolicyFixedScalePtrInput is an input type that accepts YdbDatabaseDedicatedScalePolicyFixedScaleArgs, YdbDatabaseDedicatedScalePolicyFixedScalePtr and YdbDatabaseDedicatedScalePolicyFixedScalePtrOutput values.
// You can construct a concrete instance of `YdbDatabaseDedicatedScalePolicyFixedScalePtrInput` via:
//
//          YdbDatabaseDedicatedScalePolicyFixedScaleArgs{...}
//
//  or:
//
//          nil
type YdbDatabaseDedicatedScalePolicyFixedScalePtrInput interface {
	pulumi.Input

	ToYdbDatabaseDedicatedScalePolicyFixedScalePtrOutput() YdbDatabaseDedicatedScalePolicyFixedScalePtrOutput
	ToYdbDatabaseDedicatedScalePolicyFixedScalePtrOutputWithContext(context.Context) YdbDatabaseDedicatedScalePolicyFixedScalePtrOutput
}

type ydbDatabaseDedicatedScalePolicyFixedScalePtrType YdbDatabaseDedicatedScalePolicyFixedScaleArgs

func YdbDatabaseDedicatedScalePolicyFixedScalePtr(v *YdbDatabaseDedicatedScalePolicyFixedScaleArgs) YdbDatabaseDedicatedScalePolicyFixedScalePtrInput {
	return (*ydbDatabaseDedicatedScalePolicyFixedScalePtrType)(v)
}

func (*ydbDatabaseDedicatedScalePolicyFixedScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**YdbDatabaseDedicatedScalePolicyFixedScale)(nil)).Elem()
}

func (i *ydbDatabaseDedicatedScalePolicyFixedScalePtrType) ToYdbDatabaseDedicatedScalePolicyFixedScalePtrOutput() YdbDatabaseDedicatedScalePolicyFixedScalePtrOutput {
	return i.ToYdbDatabaseDedicatedScalePolicyFixedScalePtrOutputWithContext(context.Background())
}

func (i *ydbDatabaseDedicatedScalePolicyFixedScalePtrType) ToYdbDatabaseDedicatedScalePolicyFixedScalePtrOutputWithContext(ctx context.Context) YdbDatabaseDedicatedScalePolicyFixedScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YdbDatabaseDedicatedScalePolicyFixedScalePtrOutput)
}

type YdbDatabaseDedicatedScalePolicyFixedScaleOutput struct{ *pulumi.OutputState }

func (YdbDatabaseDedicatedScalePolicyFixedScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*YdbDatabaseDedicatedScalePolicyFixedScale)(nil)).Elem()
}

func (o YdbDatabaseDedicatedScalePolicyFixedScaleOutput) ToYdbDatabaseDedicatedScalePolicyFixedScaleOutput() YdbDatabaseDedicatedScalePolicyFixedScaleOutput {
	return o
}

func (o YdbDatabaseDedicatedScalePolicyFixedScaleOutput) ToYdbDatabaseDedicatedScalePolicyFixedScaleOutputWithContext(ctx context.Context) YdbDatabaseDedicatedScalePolicyFixedScaleOutput {
	return o
}

func (o YdbDatabaseDedicatedScalePolicyFixedScaleOutput) ToYdbDatabaseDedicatedScalePolicyFixedScalePtrOutput() YdbDatabaseDedicatedScalePolicyFixedScalePtrOutput {
	return o.ToYdbDatabaseDedicatedScalePolicyFixedScalePtrOutputWithContext(context.Background())
}

func (o YdbDatabaseDedicatedScalePolicyFixedScaleOutput) ToYdbDatabaseDedicatedScalePolicyFixedScalePtrOutputWithContext(ctx context.Context) YdbDatabaseDedicatedScalePolicyFixedScalePtrOutput {
	return o.ApplyT(func(v YdbDatabaseDedicatedScalePolicyFixedScale) *YdbDatabaseDedicatedScalePolicyFixedScale {
		return &v
	}).(YdbDatabaseDedicatedScalePolicyFixedScalePtrOutput)
}

// Number of instances for the Yandex Database cluster.
func (o YdbDatabaseDedicatedScalePolicyFixedScaleOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v YdbDatabaseDedicatedScalePolicyFixedScale) int { return v.Size }).(pulumi.IntOutput)
}

type YdbDatabaseDedicatedScalePolicyFixedScalePtrOutput struct{ *pulumi.OutputState }

func (YdbDatabaseDedicatedScalePolicyFixedScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**YdbDatabaseDedicatedScalePolicyFixedScale)(nil)).Elem()
}

func (o YdbDatabaseDedicatedScalePolicyFixedScalePtrOutput) ToYdbDatabaseDedicatedScalePolicyFixedScalePtrOutput() YdbDatabaseDedicatedScalePolicyFixedScalePtrOutput {
	return o
}

func (o YdbDatabaseDedicatedScalePolicyFixedScalePtrOutput) ToYdbDatabaseDedicatedScalePolicyFixedScalePtrOutputWithContext(ctx context.Context) YdbDatabaseDedicatedScalePolicyFixedScalePtrOutput {
	return o
}

func (o YdbDatabaseDedicatedScalePolicyFixedScalePtrOutput) Elem() YdbDatabaseDedicatedScalePolicyFixedScaleOutput {
	return o.ApplyT(func(v *YdbDatabaseDedicatedScalePolicyFixedScale) YdbDatabaseDedicatedScalePolicyFixedScale {
		return *v
	}).(YdbDatabaseDedicatedScalePolicyFixedScaleOutput)
}

// Number of instances for the Yandex Database cluster.
func (o YdbDatabaseDedicatedScalePolicyFixedScalePtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *YdbDatabaseDedicatedScalePolicyFixedScale) *int {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.IntPtrOutput)
}

type YdbDatabaseDedicatedStorageConfig struct {
	// Amount of storage groups of selected type for the Yandex Database cluster.
	GroupCount int `pulumi:"groupCount"`
	// Storage type ID for the Yandex Database cluster.
	// Available presets can be obtained via `yc ydb storage-type list` command.
	StorageTypeId string `pulumi:"storageTypeId"`
}

// YdbDatabaseDedicatedStorageConfigInput is an input type that accepts YdbDatabaseDedicatedStorageConfigArgs and YdbDatabaseDedicatedStorageConfigOutput values.
// You can construct a concrete instance of `YdbDatabaseDedicatedStorageConfigInput` via:
//
//          YdbDatabaseDedicatedStorageConfigArgs{...}
type YdbDatabaseDedicatedStorageConfigInput interface {
	pulumi.Input

	ToYdbDatabaseDedicatedStorageConfigOutput() YdbDatabaseDedicatedStorageConfigOutput
	ToYdbDatabaseDedicatedStorageConfigOutputWithContext(context.Context) YdbDatabaseDedicatedStorageConfigOutput
}

type YdbDatabaseDedicatedStorageConfigArgs struct {
	// Amount of storage groups of selected type for the Yandex Database cluster.
	GroupCount pulumi.IntInput `pulumi:"groupCount"`
	// Storage type ID for the Yandex Database cluster.
	// Available presets can be obtained via `yc ydb storage-type list` command.
	StorageTypeId pulumi.StringInput `pulumi:"storageTypeId"`
}

func (YdbDatabaseDedicatedStorageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*YdbDatabaseDedicatedStorageConfig)(nil)).Elem()
}

func (i YdbDatabaseDedicatedStorageConfigArgs) ToYdbDatabaseDedicatedStorageConfigOutput() YdbDatabaseDedicatedStorageConfigOutput {
	return i.ToYdbDatabaseDedicatedStorageConfigOutputWithContext(context.Background())
}

func (i YdbDatabaseDedicatedStorageConfigArgs) ToYdbDatabaseDedicatedStorageConfigOutputWithContext(ctx context.Context) YdbDatabaseDedicatedStorageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YdbDatabaseDedicatedStorageConfigOutput)
}

func (i YdbDatabaseDedicatedStorageConfigArgs) ToYdbDatabaseDedicatedStorageConfigPtrOutput() YdbDatabaseDedicatedStorageConfigPtrOutput {
	return i.ToYdbDatabaseDedicatedStorageConfigPtrOutputWithContext(context.Background())
}

func (i YdbDatabaseDedicatedStorageConfigArgs) ToYdbDatabaseDedicatedStorageConfigPtrOutputWithContext(ctx context.Context) YdbDatabaseDedicatedStorageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YdbDatabaseDedicatedStorageConfigOutput).ToYdbDatabaseDedicatedStorageConfigPtrOutputWithContext(ctx)
}

// YdbDatabaseDedicatedStorageConfigPtrInput is an input type that accepts YdbDatabaseDedicatedStorageConfigArgs, YdbDatabaseDedicatedStorageConfigPtr and YdbDatabaseDedicatedStorageConfigPtrOutput values.
// You can construct a concrete instance of `YdbDatabaseDedicatedStorageConfigPtrInput` via:
//
//          YdbDatabaseDedicatedStorageConfigArgs{...}
//
//  or:
//
//          nil
type YdbDatabaseDedicatedStorageConfigPtrInput interface {
	pulumi.Input

	ToYdbDatabaseDedicatedStorageConfigPtrOutput() YdbDatabaseDedicatedStorageConfigPtrOutput
	ToYdbDatabaseDedicatedStorageConfigPtrOutputWithContext(context.Context) YdbDatabaseDedicatedStorageConfigPtrOutput
}

type ydbDatabaseDedicatedStorageConfigPtrType YdbDatabaseDedicatedStorageConfigArgs

func YdbDatabaseDedicatedStorageConfigPtr(v *YdbDatabaseDedicatedStorageConfigArgs) YdbDatabaseDedicatedStorageConfigPtrInput {
	return (*ydbDatabaseDedicatedStorageConfigPtrType)(v)
}

func (*ydbDatabaseDedicatedStorageConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**YdbDatabaseDedicatedStorageConfig)(nil)).Elem()
}

func (i *ydbDatabaseDedicatedStorageConfigPtrType) ToYdbDatabaseDedicatedStorageConfigPtrOutput() YdbDatabaseDedicatedStorageConfigPtrOutput {
	return i.ToYdbDatabaseDedicatedStorageConfigPtrOutputWithContext(context.Background())
}

func (i *ydbDatabaseDedicatedStorageConfigPtrType) ToYdbDatabaseDedicatedStorageConfigPtrOutputWithContext(ctx context.Context) YdbDatabaseDedicatedStorageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YdbDatabaseDedicatedStorageConfigPtrOutput)
}

type YdbDatabaseDedicatedStorageConfigOutput struct{ *pulumi.OutputState }

func (YdbDatabaseDedicatedStorageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*YdbDatabaseDedicatedStorageConfig)(nil)).Elem()
}

func (o YdbDatabaseDedicatedStorageConfigOutput) ToYdbDatabaseDedicatedStorageConfigOutput() YdbDatabaseDedicatedStorageConfigOutput {
	return o
}

func (o YdbDatabaseDedicatedStorageConfigOutput) ToYdbDatabaseDedicatedStorageConfigOutputWithContext(ctx context.Context) YdbDatabaseDedicatedStorageConfigOutput {
	return o
}

func (o YdbDatabaseDedicatedStorageConfigOutput) ToYdbDatabaseDedicatedStorageConfigPtrOutput() YdbDatabaseDedicatedStorageConfigPtrOutput {
	return o.ToYdbDatabaseDedicatedStorageConfigPtrOutputWithContext(context.Background())
}

func (o YdbDatabaseDedicatedStorageConfigOutput) ToYdbDatabaseDedicatedStorageConfigPtrOutputWithContext(ctx context.Context) YdbDatabaseDedicatedStorageConfigPtrOutput {
	return o.ApplyT(func(v YdbDatabaseDedicatedStorageConfig) *YdbDatabaseDedicatedStorageConfig {
		return &v
	}).(YdbDatabaseDedicatedStorageConfigPtrOutput)
}

// Amount of storage groups of selected type for the Yandex Database cluster.
func (o YdbDatabaseDedicatedStorageConfigOutput) GroupCount() pulumi.IntOutput {
	return o.ApplyT(func(v YdbDatabaseDedicatedStorageConfig) int { return v.GroupCount }).(pulumi.IntOutput)
}

// Storage type ID for the Yandex Database cluster.
// Available presets can be obtained via `yc ydb storage-type list` command.
func (o YdbDatabaseDedicatedStorageConfigOutput) StorageTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v YdbDatabaseDedicatedStorageConfig) string { return v.StorageTypeId }).(pulumi.StringOutput)
}

type YdbDatabaseDedicatedStorageConfigPtrOutput struct{ *pulumi.OutputState }

func (YdbDatabaseDedicatedStorageConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**YdbDatabaseDedicatedStorageConfig)(nil)).Elem()
}

func (o YdbDatabaseDedicatedStorageConfigPtrOutput) ToYdbDatabaseDedicatedStorageConfigPtrOutput() YdbDatabaseDedicatedStorageConfigPtrOutput {
	return o
}

func (o YdbDatabaseDedicatedStorageConfigPtrOutput) ToYdbDatabaseDedicatedStorageConfigPtrOutputWithContext(ctx context.Context) YdbDatabaseDedicatedStorageConfigPtrOutput {
	return o
}

func (o YdbDatabaseDedicatedStorageConfigPtrOutput) Elem() YdbDatabaseDedicatedStorageConfigOutput {
	return o.ApplyT(func(v *YdbDatabaseDedicatedStorageConfig) YdbDatabaseDedicatedStorageConfig { return *v }).(YdbDatabaseDedicatedStorageConfigOutput)
}

// Amount of storage groups of selected type for the Yandex Database cluster.
func (o YdbDatabaseDedicatedStorageConfigPtrOutput) GroupCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *YdbDatabaseDedicatedStorageConfig) *int {
		if v == nil {
			return nil
		}
		return &v.GroupCount
	}).(pulumi.IntPtrOutput)
}

// Storage type ID for the Yandex Database cluster.
// Available presets can be obtained via `yc ydb storage-type list` command.
func (o YdbDatabaseDedicatedStorageConfigPtrOutput) StorageTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *YdbDatabaseDedicatedStorageConfig) *string {
		if v == nil {
			return nil
		}
		return &v.StorageTypeId
	}).(pulumi.StringPtrOutput)
}

type GetComputeDiskDiskPlacementPolicy struct {
	DiskPlacementGroupId string `pulumi:"diskPlacementGroupId"`
}

// GetComputeDiskDiskPlacementPolicyInput is an input type that accepts GetComputeDiskDiskPlacementPolicyArgs and GetComputeDiskDiskPlacementPolicyOutput values.
// You can construct a concrete instance of `GetComputeDiskDiskPlacementPolicyInput` via:
//
//          GetComputeDiskDiskPlacementPolicyArgs{...}
type GetComputeDiskDiskPlacementPolicyInput interface {
	pulumi.Input

	ToGetComputeDiskDiskPlacementPolicyOutput() GetComputeDiskDiskPlacementPolicyOutput
	ToGetComputeDiskDiskPlacementPolicyOutputWithContext(context.Context) GetComputeDiskDiskPlacementPolicyOutput
}

type GetComputeDiskDiskPlacementPolicyArgs struct {
	DiskPlacementGroupId pulumi.StringInput `pulumi:"diskPlacementGroupId"`
}

func (GetComputeDiskDiskPlacementPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeDiskDiskPlacementPolicy)(nil)).Elem()
}

func (i GetComputeDiskDiskPlacementPolicyArgs) ToGetComputeDiskDiskPlacementPolicyOutput() GetComputeDiskDiskPlacementPolicyOutput {
	return i.ToGetComputeDiskDiskPlacementPolicyOutputWithContext(context.Background())
}

func (i GetComputeDiskDiskPlacementPolicyArgs) ToGetComputeDiskDiskPlacementPolicyOutputWithContext(ctx context.Context) GetComputeDiskDiskPlacementPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeDiskDiskPlacementPolicyOutput)
}

type GetComputeDiskDiskPlacementPolicyOutput struct{ *pulumi.OutputState }

func (GetComputeDiskDiskPlacementPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeDiskDiskPlacementPolicy)(nil)).Elem()
}

func (o GetComputeDiskDiskPlacementPolicyOutput) ToGetComputeDiskDiskPlacementPolicyOutput() GetComputeDiskDiskPlacementPolicyOutput {
	return o
}

func (o GetComputeDiskDiskPlacementPolicyOutput) ToGetComputeDiskDiskPlacementPolicyOutputWithContext(ctx context.Context) GetComputeDiskDiskPlacementPolicyOutput {
	return o
}

func (o GetComputeDiskDiskPlacementPolicyOutput) DiskPlacementGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeDiskDiskPlacementPolicy) string { return v.DiskPlacementGroupId }).(pulumi.StringOutput)
}

type GetComputeInstanceBootDisk struct {
	// Specifies whether the disk is auto-deleted when the instance is deleted.
	AutoDelete bool `pulumi:"autoDelete"`
	// This value can be used to reference the device from within the instance for mounting, resizing, and so on.
	DeviceName string `pulumi:"deviceName"`
	// ID of the disk that is attached to the instance.
	DiskId string `pulumi:"diskId"`
	// Parameters used for creating a disk alongside the instance. The structure is documented below.
	InitializeParams []GetComputeInstanceBootDiskInitializeParam `pulumi:"initializeParams"`
	// Access to the Disk resource. By default, a disk is attached in `READ_WRITE` mode.
	Mode string `pulumi:"mode"`
}

// GetComputeInstanceBootDiskInput is an input type that accepts GetComputeInstanceBootDiskArgs and GetComputeInstanceBootDiskOutput values.
// You can construct a concrete instance of `GetComputeInstanceBootDiskInput` via:
//
//          GetComputeInstanceBootDiskArgs{...}
type GetComputeInstanceBootDiskInput interface {
	pulumi.Input

	ToGetComputeInstanceBootDiskOutput() GetComputeInstanceBootDiskOutput
	ToGetComputeInstanceBootDiskOutputWithContext(context.Context) GetComputeInstanceBootDiskOutput
}

type GetComputeInstanceBootDiskArgs struct {
	// Specifies whether the disk is auto-deleted when the instance is deleted.
	AutoDelete pulumi.BoolInput `pulumi:"autoDelete"`
	// This value can be used to reference the device from within the instance for mounting, resizing, and so on.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// ID of the disk that is attached to the instance.
	DiskId pulumi.StringInput `pulumi:"diskId"`
	// Parameters used for creating a disk alongside the instance. The structure is documented below.
	InitializeParams GetComputeInstanceBootDiskInitializeParamArrayInput `pulumi:"initializeParams"`
	// Access to the Disk resource. By default, a disk is attached in `READ_WRITE` mode.
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetComputeInstanceBootDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceBootDisk)(nil)).Elem()
}

func (i GetComputeInstanceBootDiskArgs) ToGetComputeInstanceBootDiskOutput() GetComputeInstanceBootDiskOutput {
	return i.ToGetComputeInstanceBootDiskOutputWithContext(context.Background())
}

func (i GetComputeInstanceBootDiskArgs) ToGetComputeInstanceBootDiskOutputWithContext(ctx context.Context) GetComputeInstanceBootDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceBootDiskOutput)
}

type GetComputeInstanceBootDiskOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceBootDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceBootDisk)(nil)).Elem()
}

func (o GetComputeInstanceBootDiskOutput) ToGetComputeInstanceBootDiskOutput() GetComputeInstanceBootDiskOutput {
	return o
}

func (o GetComputeInstanceBootDiskOutput) ToGetComputeInstanceBootDiskOutputWithContext(ctx context.Context) GetComputeInstanceBootDiskOutput {
	return o
}

// Specifies whether the disk is auto-deleted when the instance is deleted.
func (o GetComputeInstanceBootDiskOutput) AutoDelete() pulumi.BoolOutput {
	return o.ApplyT(func(v GetComputeInstanceBootDisk) bool { return v.AutoDelete }).(pulumi.BoolOutput)
}

// This value can be used to reference the device from within the instance for mounting, resizing, and so on.
func (o GetComputeInstanceBootDiskOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceBootDisk) string { return v.DeviceName }).(pulumi.StringOutput)
}

// ID of the disk that is attached to the instance.
func (o GetComputeInstanceBootDiskOutput) DiskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceBootDisk) string { return v.DiskId }).(pulumi.StringOutput)
}

// Parameters used for creating a disk alongside the instance. The structure is documented below.
func (o GetComputeInstanceBootDiskOutput) InitializeParams() GetComputeInstanceBootDiskInitializeParamArrayOutput {
	return o.ApplyT(func(v GetComputeInstanceBootDisk) []GetComputeInstanceBootDiskInitializeParam {
		return v.InitializeParams
	}).(GetComputeInstanceBootDiskInitializeParamArrayOutput)
}

// Access to the Disk resource. By default, a disk is attached in `READ_WRITE` mode.
func (o GetComputeInstanceBootDiskOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceBootDisk) string { return v.Mode }).(pulumi.StringOutput)
}

type GetComputeInstanceBootDiskInitializeParam struct {
	// Description of the boot disk.
	Description string `pulumi:"description"`
	// A disk image to initialize this disk from.
	ImageId string `pulumi:"imageId"`
	// Name of the instance.
	Name string `pulumi:"name"`
	// Size of the disk in GB.
	Size int `pulumi:"size"`
	// A snapshot to initialize this disk from.
	SnapshotId string `pulumi:"snapshotId"`
	// Disk type.
	Type string `pulumi:"type"`
}

// GetComputeInstanceBootDiskInitializeParamInput is an input type that accepts GetComputeInstanceBootDiskInitializeParamArgs and GetComputeInstanceBootDiskInitializeParamOutput values.
// You can construct a concrete instance of `GetComputeInstanceBootDiskInitializeParamInput` via:
//
//          GetComputeInstanceBootDiskInitializeParamArgs{...}
type GetComputeInstanceBootDiskInitializeParamInput interface {
	pulumi.Input

	ToGetComputeInstanceBootDiskInitializeParamOutput() GetComputeInstanceBootDiskInitializeParamOutput
	ToGetComputeInstanceBootDiskInitializeParamOutputWithContext(context.Context) GetComputeInstanceBootDiskInitializeParamOutput
}

type GetComputeInstanceBootDiskInitializeParamArgs struct {
	// Description of the boot disk.
	Description pulumi.StringInput `pulumi:"description"`
	// A disk image to initialize this disk from.
	ImageId pulumi.StringInput `pulumi:"imageId"`
	// Name of the instance.
	Name pulumi.StringInput `pulumi:"name"`
	// Size of the disk in GB.
	Size pulumi.IntInput `pulumi:"size"`
	// A snapshot to initialize this disk from.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// Disk type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetComputeInstanceBootDiskInitializeParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceBootDiskInitializeParam)(nil)).Elem()
}

func (i GetComputeInstanceBootDiskInitializeParamArgs) ToGetComputeInstanceBootDiskInitializeParamOutput() GetComputeInstanceBootDiskInitializeParamOutput {
	return i.ToGetComputeInstanceBootDiskInitializeParamOutputWithContext(context.Background())
}

func (i GetComputeInstanceBootDiskInitializeParamArgs) ToGetComputeInstanceBootDiskInitializeParamOutputWithContext(ctx context.Context) GetComputeInstanceBootDiskInitializeParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceBootDiskInitializeParamOutput)
}

// GetComputeInstanceBootDiskInitializeParamArrayInput is an input type that accepts GetComputeInstanceBootDiskInitializeParamArray and GetComputeInstanceBootDiskInitializeParamArrayOutput values.
// You can construct a concrete instance of `GetComputeInstanceBootDiskInitializeParamArrayInput` via:
//
//          GetComputeInstanceBootDiskInitializeParamArray{ GetComputeInstanceBootDiskInitializeParamArgs{...} }
type GetComputeInstanceBootDiskInitializeParamArrayInput interface {
	pulumi.Input

	ToGetComputeInstanceBootDiskInitializeParamArrayOutput() GetComputeInstanceBootDiskInitializeParamArrayOutput
	ToGetComputeInstanceBootDiskInitializeParamArrayOutputWithContext(context.Context) GetComputeInstanceBootDiskInitializeParamArrayOutput
}

type GetComputeInstanceBootDiskInitializeParamArray []GetComputeInstanceBootDiskInitializeParamInput

func (GetComputeInstanceBootDiskInitializeParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceBootDiskInitializeParam)(nil)).Elem()
}

func (i GetComputeInstanceBootDiskInitializeParamArray) ToGetComputeInstanceBootDiskInitializeParamArrayOutput() GetComputeInstanceBootDiskInitializeParamArrayOutput {
	return i.ToGetComputeInstanceBootDiskInitializeParamArrayOutputWithContext(context.Background())
}

func (i GetComputeInstanceBootDiskInitializeParamArray) ToGetComputeInstanceBootDiskInitializeParamArrayOutputWithContext(ctx context.Context) GetComputeInstanceBootDiskInitializeParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceBootDiskInitializeParamArrayOutput)
}

type GetComputeInstanceBootDiskInitializeParamOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceBootDiskInitializeParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceBootDiskInitializeParam)(nil)).Elem()
}

func (o GetComputeInstanceBootDiskInitializeParamOutput) ToGetComputeInstanceBootDiskInitializeParamOutput() GetComputeInstanceBootDiskInitializeParamOutput {
	return o
}

func (o GetComputeInstanceBootDiskInitializeParamOutput) ToGetComputeInstanceBootDiskInitializeParamOutputWithContext(ctx context.Context) GetComputeInstanceBootDiskInitializeParamOutput {
	return o
}

// Description of the boot disk.
func (o GetComputeInstanceBootDiskInitializeParamOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceBootDiskInitializeParam) string { return v.Description }).(pulumi.StringOutput)
}

// A disk image to initialize this disk from.
func (o GetComputeInstanceBootDiskInitializeParamOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceBootDiskInitializeParam) string { return v.ImageId }).(pulumi.StringOutput)
}

// Name of the instance.
func (o GetComputeInstanceBootDiskInitializeParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceBootDiskInitializeParam) string { return v.Name }).(pulumi.StringOutput)
}

// Size of the disk in GB.
func (o GetComputeInstanceBootDiskInitializeParamOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceBootDiskInitializeParam) int { return v.Size }).(pulumi.IntOutput)
}

// A snapshot to initialize this disk from.
func (o GetComputeInstanceBootDiskInitializeParamOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceBootDiskInitializeParam) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// Disk type.
func (o GetComputeInstanceBootDiskInitializeParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceBootDiskInitializeParam) string { return v.Type }).(pulumi.StringOutput)
}

type GetComputeInstanceBootDiskInitializeParamArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceBootDiskInitializeParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceBootDiskInitializeParam)(nil)).Elem()
}

func (o GetComputeInstanceBootDiskInitializeParamArrayOutput) ToGetComputeInstanceBootDiskInitializeParamArrayOutput() GetComputeInstanceBootDiskInitializeParamArrayOutput {
	return o
}

func (o GetComputeInstanceBootDiskInitializeParamArrayOutput) ToGetComputeInstanceBootDiskInitializeParamArrayOutputWithContext(ctx context.Context) GetComputeInstanceBootDiskInitializeParamArrayOutput {
	return o
}

func (o GetComputeInstanceBootDiskInitializeParamArrayOutput) Index(i pulumi.IntInput) GetComputeInstanceBootDiskInitializeParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstanceBootDiskInitializeParam {
		return vs[0].([]GetComputeInstanceBootDiskInitializeParam)[vs[1].(int)]
	}).(GetComputeInstanceBootDiskInitializeParamOutput)
}

type GetComputeInstanceGroupAllocationPolicy struct {
	// A list of availability zones.
	Zones []string `pulumi:"zones"`
}

// GetComputeInstanceGroupAllocationPolicyInput is an input type that accepts GetComputeInstanceGroupAllocationPolicyArgs and GetComputeInstanceGroupAllocationPolicyOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupAllocationPolicyInput` via:
//
//          GetComputeInstanceGroupAllocationPolicyArgs{...}
type GetComputeInstanceGroupAllocationPolicyInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupAllocationPolicyOutput() GetComputeInstanceGroupAllocationPolicyOutput
	ToGetComputeInstanceGroupAllocationPolicyOutputWithContext(context.Context) GetComputeInstanceGroupAllocationPolicyOutput
}

type GetComputeInstanceGroupAllocationPolicyArgs struct {
	// A list of availability zones.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (GetComputeInstanceGroupAllocationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupAllocationPolicy)(nil)).Elem()
}

func (i GetComputeInstanceGroupAllocationPolicyArgs) ToGetComputeInstanceGroupAllocationPolicyOutput() GetComputeInstanceGroupAllocationPolicyOutput {
	return i.ToGetComputeInstanceGroupAllocationPolicyOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupAllocationPolicyArgs) ToGetComputeInstanceGroupAllocationPolicyOutputWithContext(ctx context.Context) GetComputeInstanceGroupAllocationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupAllocationPolicyOutput)
}

type GetComputeInstanceGroupAllocationPolicyOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupAllocationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupAllocationPolicy)(nil)).Elem()
}

func (o GetComputeInstanceGroupAllocationPolicyOutput) ToGetComputeInstanceGroupAllocationPolicyOutput() GetComputeInstanceGroupAllocationPolicyOutput {
	return o
}

func (o GetComputeInstanceGroupAllocationPolicyOutput) ToGetComputeInstanceGroupAllocationPolicyOutputWithContext(ctx context.Context) GetComputeInstanceGroupAllocationPolicyOutput {
	return o
}

// A list of availability zones.
func (o GetComputeInstanceGroupAllocationPolicyOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupAllocationPolicy) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type GetComputeInstanceGroupDeployPolicy struct {
	// The maximum number of instances that can be created at the same time.
	MaxCreating int `pulumi:"maxCreating"`
	// The maximum number of instances that can be deleted at the same time.
	MaxDeleting int `pulumi:"maxDeleting"`
	// The maximum number of instances that can be temporarily allocated above the group's target size during the update process.
	MaxExpansion int `pulumi:"maxExpansion"`
	// The maximum number of running instances that can be taken offline (stopped or deleted) at the same time
	// during the update process.
	MaxUnavailable int `pulumi:"maxUnavailable"`
	// The amount of time in seconds to allow for an instance to start.
	StartupDuration int `pulumi:"startupDuration"`
	// Affects the lifecycle of the instance during deployment. If set to `proactive` (default), Instance Groups
	// can forcefully stop a running instance. If `opportunistic`, Instance Groups does not stop a running instance. Instead,
	// it will wait until the instance stops itself or becomes unhealthy.
	Strategy string `pulumi:"strategy"`
}

// GetComputeInstanceGroupDeployPolicyInput is an input type that accepts GetComputeInstanceGroupDeployPolicyArgs and GetComputeInstanceGroupDeployPolicyOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupDeployPolicyInput` via:
//
//          GetComputeInstanceGroupDeployPolicyArgs{...}
type GetComputeInstanceGroupDeployPolicyInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupDeployPolicyOutput() GetComputeInstanceGroupDeployPolicyOutput
	ToGetComputeInstanceGroupDeployPolicyOutputWithContext(context.Context) GetComputeInstanceGroupDeployPolicyOutput
}

type GetComputeInstanceGroupDeployPolicyArgs struct {
	// The maximum number of instances that can be created at the same time.
	MaxCreating pulumi.IntInput `pulumi:"maxCreating"`
	// The maximum number of instances that can be deleted at the same time.
	MaxDeleting pulumi.IntInput `pulumi:"maxDeleting"`
	// The maximum number of instances that can be temporarily allocated above the group's target size during the update process.
	MaxExpansion pulumi.IntInput `pulumi:"maxExpansion"`
	// The maximum number of running instances that can be taken offline (stopped or deleted) at the same time
	// during the update process.
	MaxUnavailable pulumi.IntInput `pulumi:"maxUnavailable"`
	// The amount of time in seconds to allow for an instance to start.
	StartupDuration pulumi.IntInput `pulumi:"startupDuration"`
	// Affects the lifecycle of the instance during deployment. If set to `proactive` (default), Instance Groups
	// can forcefully stop a running instance. If `opportunistic`, Instance Groups does not stop a running instance. Instead,
	// it will wait until the instance stops itself or becomes unhealthy.
	Strategy pulumi.StringInput `pulumi:"strategy"`
}

func (GetComputeInstanceGroupDeployPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupDeployPolicy)(nil)).Elem()
}

func (i GetComputeInstanceGroupDeployPolicyArgs) ToGetComputeInstanceGroupDeployPolicyOutput() GetComputeInstanceGroupDeployPolicyOutput {
	return i.ToGetComputeInstanceGroupDeployPolicyOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupDeployPolicyArgs) ToGetComputeInstanceGroupDeployPolicyOutputWithContext(ctx context.Context) GetComputeInstanceGroupDeployPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupDeployPolicyOutput)
}

type GetComputeInstanceGroupDeployPolicyOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupDeployPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupDeployPolicy)(nil)).Elem()
}

func (o GetComputeInstanceGroupDeployPolicyOutput) ToGetComputeInstanceGroupDeployPolicyOutput() GetComputeInstanceGroupDeployPolicyOutput {
	return o
}

func (o GetComputeInstanceGroupDeployPolicyOutput) ToGetComputeInstanceGroupDeployPolicyOutputWithContext(ctx context.Context) GetComputeInstanceGroupDeployPolicyOutput {
	return o
}

// The maximum number of instances that can be created at the same time.
func (o GetComputeInstanceGroupDeployPolicyOutput) MaxCreating() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupDeployPolicy) int { return v.MaxCreating }).(pulumi.IntOutput)
}

// The maximum number of instances that can be deleted at the same time.
func (o GetComputeInstanceGroupDeployPolicyOutput) MaxDeleting() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupDeployPolicy) int { return v.MaxDeleting }).(pulumi.IntOutput)
}

// The maximum number of instances that can be temporarily allocated above the group's target size during the update process.
func (o GetComputeInstanceGroupDeployPolicyOutput) MaxExpansion() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupDeployPolicy) int { return v.MaxExpansion }).(pulumi.IntOutput)
}

// The maximum number of running instances that can be taken offline (stopped or deleted) at the same time
// during the update process.
func (o GetComputeInstanceGroupDeployPolicyOutput) MaxUnavailable() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupDeployPolicy) int { return v.MaxUnavailable }).(pulumi.IntOutput)
}

// The amount of time in seconds to allow for an instance to start.
func (o GetComputeInstanceGroupDeployPolicyOutput) StartupDuration() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupDeployPolicy) int { return v.StartupDuration }).(pulumi.IntOutput)
}

// Affects the lifecycle of the instance during deployment. If set to `proactive` (default), Instance Groups
// can forcefully stop a running instance. If `opportunistic`, Instance Groups does not stop a running instance. Instead,
// it will wait until the instance stops itself or becomes unhealthy.
func (o GetComputeInstanceGroupDeployPolicyOutput) Strategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupDeployPolicy) string { return v.Strategy }).(pulumi.StringOutput)
}

type GetComputeInstanceGroupHealthCheck struct {
	// The number of successful health checks before the managed instance is declared healthy.
	HealthyThreshold int `pulumi:"healthyThreshold"`
	// HTTP check options. The structure is documented below.
	HttpOptions []GetComputeInstanceGroupHealthCheckHttpOption `pulumi:"httpOptions"`
	// The interval between health checks in seconds.
	Interval int `pulumi:"interval"`
	// TCP check options. The structure is documented below.
	TcpOptions []GetComputeInstanceGroupHealthCheckTcpOption `pulumi:"tcpOptions"`
	// Timeout for the managed instance to return a response for the health check in seconds.
	Timeout int `pulumi:"timeout"`
	// The number of failed health checks before the managed instance is declared unhealthy.
	UnhealthyThreshold int `pulumi:"unhealthyThreshold"`
}

// GetComputeInstanceGroupHealthCheckInput is an input type that accepts GetComputeInstanceGroupHealthCheckArgs and GetComputeInstanceGroupHealthCheckOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupHealthCheckInput` via:
//
//          GetComputeInstanceGroupHealthCheckArgs{...}
type GetComputeInstanceGroupHealthCheckInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupHealthCheckOutput() GetComputeInstanceGroupHealthCheckOutput
	ToGetComputeInstanceGroupHealthCheckOutputWithContext(context.Context) GetComputeInstanceGroupHealthCheckOutput
}

type GetComputeInstanceGroupHealthCheckArgs struct {
	// The number of successful health checks before the managed instance is declared healthy.
	HealthyThreshold pulumi.IntInput `pulumi:"healthyThreshold"`
	// HTTP check options. The structure is documented below.
	HttpOptions GetComputeInstanceGroupHealthCheckHttpOptionArrayInput `pulumi:"httpOptions"`
	// The interval between health checks in seconds.
	Interval pulumi.IntInput `pulumi:"interval"`
	// TCP check options. The structure is documented below.
	TcpOptions GetComputeInstanceGroupHealthCheckTcpOptionArrayInput `pulumi:"tcpOptions"`
	// Timeout for the managed instance to return a response for the health check in seconds.
	Timeout pulumi.IntInput `pulumi:"timeout"`
	// The number of failed health checks before the managed instance is declared unhealthy.
	UnhealthyThreshold pulumi.IntInput `pulumi:"unhealthyThreshold"`
}

func (GetComputeInstanceGroupHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupHealthCheck)(nil)).Elem()
}

func (i GetComputeInstanceGroupHealthCheckArgs) ToGetComputeInstanceGroupHealthCheckOutput() GetComputeInstanceGroupHealthCheckOutput {
	return i.ToGetComputeInstanceGroupHealthCheckOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupHealthCheckArgs) ToGetComputeInstanceGroupHealthCheckOutputWithContext(ctx context.Context) GetComputeInstanceGroupHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupHealthCheckOutput)
}

// GetComputeInstanceGroupHealthCheckArrayInput is an input type that accepts GetComputeInstanceGroupHealthCheckArray and GetComputeInstanceGroupHealthCheckArrayOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupHealthCheckArrayInput` via:
//
//          GetComputeInstanceGroupHealthCheckArray{ GetComputeInstanceGroupHealthCheckArgs{...} }
type GetComputeInstanceGroupHealthCheckArrayInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupHealthCheckArrayOutput() GetComputeInstanceGroupHealthCheckArrayOutput
	ToGetComputeInstanceGroupHealthCheckArrayOutputWithContext(context.Context) GetComputeInstanceGroupHealthCheckArrayOutput
}

type GetComputeInstanceGroupHealthCheckArray []GetComputeInstanceGroupHealthCheckInput

func (GetComputeInstanceGroupHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupHealthCheck)(nil)).Elem()
}

func (i GetComputeInstanceGroupHealthCheckArray) ToGetComputeInstanceGroupHealthCheckArrayOutput() GetComputeInstanceGroupHealthCheckArrayOutput {
	return i.ToGetComputeInstanceGroupHealthCheckArrayOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupHealthCheckArray) ToGetComputeInstanceGroupHealthCheckArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupHealthCheckArrayOutput)
}

type GetComputeInstanceGroupHealthCheckOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupHealthCheck)(nil)).Elem()
}

func (o GetComputeInstanceGroupHealthCheckOutput) ToGetComputeInstanceGroupHealthCheckOutput() GetComputeInstanceGroupHealthCheckOutput {
	return o
}

func (o GetComputeInstanceGroupHealthCheckOutput) ToGetComputeInstanceGroupHealthCheckOutputWithContext(ctx context.Context) GetComputeInstanceGroupHealthCheckOutput {
	return o
}

// The number of successful health checks before the managed instance is declared healthy.
func (o GetComputeInstanceGroupHealthCheckOutput) HealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupHealthCheck) int { return v.HealthyThreshold }).(pulumi.IntOutput)
}

// HTTP check options. The structure is documented below.
func (o GetComputeInstanceGroupHealthCheckOutput) HttpOptions() GetComputeInstanceGroupHealthCheckHttpOptionArrayOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupHealthCheck) []GetComputeInstanceGroupHealthCheckHttpOption {
		return v.HttpOptions
	}).(GetComputeInstanceGroupHealthCheckHttpOptionArrayOutput)
}

// The interval between health checks in seconds.
func (o GetComputeInstanceGroupHealthCheckOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupHealthCheck) int { return v.Interval }).(pulumi.IntOutput)
}

// TCP check options. The structure is documented below.
func (o GetComputeInstanceGroupHealthCheckOutput) TcpOptions() GetComputeInstanceGroupHealthCheckTcpOptionArrayOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupHealthCheck) []GetComputeInstanceGroupHealthCheckTcpOption {
		return v.TcpOptions
	}).(GetComputeInstanceGroupHealthCheckTcpOptionArrayOutput)
}

// Timeout for the managed instance to return a response for the health check in seconds.
func (o GetComputeInstanceGroupHealthCheckOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupHealthCheck) int { return v.Timeout }).(pulumi.IntOutput)
}

// The number of failed health checks before the managed instance is declared unhealthy.
func (o GetComputeInstanceGroupHealthCheckOutput) UnhealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupHealthCheck) int { return v.UnhealthyThreshold }).(pulumi.IntOutput)
}

type GetComputeInstanceGroupHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupHealthCheck)(nil)).Elem()
}

func (o GetComputeInstanceGroupHealthCheckArrayOutput) ToGetComputeInstanceGroupHealthCheckArrayOutput() GetComputeInstanceGroupHealthCheckArrayOutput {
	return o
}

func (o GetComputeInstanceGroupHealthCheckArrayOutput) ToGetComputeInstanceGroupHealthCheckArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupHealthCheckArrayOutput {
	return o
}

func (o GetComputeInstanceGroupHealthCheckArrayOutput) Index(i pulumi.IntInput) GetComputeInstanceGroupHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstanceGroupHealthCheck {
		return vs[0].([]GetComputeInstanceGroupHealthCheck)[vs[1].(int)]
	}).(GetComputeInstanceGroupHealthCheckOutput)
}

type GetComputeInstanceGroupHealthCheckHttpOption struct {
	// The URL path used for health check requests.
	Path string `pulumi:"path"`
	// The port to use for TCP health checks.
	Port int `pulumi:"port"`
}

// GetComputeInstanceGroupHealthCheckHttpOptionInput is an input type that accepts GetComputeInstanceGroupHealthCheckHttpOptionArgs and GetComputeInstanceGroupHealthCheckHttpOptionOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupHealthCheckHttpOptionInput` via:
//
//          GetComputeInstanceGroupHealthCheckHttpOptionArgs{...}
type GetComputeInstanceGroupHealthCheckHttpOptionInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupHealthCheckHttpOptionOutput() GetComputeInstanceGroupHealthCheckHttpOptionOutput
	ToGetComputeInstanceGroupHealthCheckHttpOptionOutputWithContext(context.Context) GetComputeInstanceGroupHealthCheckHttpOptionOutput
}

type GetComputeInstanceGroupHealthCheckHttpOptionArgs struct {
	// The URL path used for health check requests.
	Path pulumi.StringInput `pulumi:"path"`
	// The port to use for TCP health checks.
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetComputeInstanceGroupHealthCheckHttpOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupHealthCheckHttpOption)(nil)).Elem()
}

func (i GetComputeInstanceGroupHealthCheckHttpOptionArgs) ToGetComputeInstanceGroupHealthCheckHttpOptionOutput() GetComputeInstanceGroupHealthCheckHttpOptionOutput {
	return i.ToGetComputeInstanceGroupHealthCheckHttpOptionOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupHealthCheckHttpOptionArgs) ToGetComputeInstanceGroupHealthCheckHttpOptionOutputWithContext(ctx context.Context) GetComputeInstanceGroupHealthCheckHttpOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupHealthCheckHttpOptionOutput)
}

// GetComputeInstanceGroupHealthCheckHttpOptionArrayInput is an input type that accepts GetComputeInstanceGroupHealthCheckHttpOptionArray and GetComputeInstanceGroupHealthCheckHttpOptionArrayOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupHealthCheckHttpOptionArrayInput` via:
//
//          GetComputeInstanceGroupHealthCheckHttpOptionArray{ GetComputeInstanceGroupHealthCheckHttpOptionArgs{...} }
type GetComputeInstanceGroupHealthCheckHttpOptionArrayInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupHealthCheckHttpOptionArrayOutput() GetComputeInstanceGroupHealthCheckHttpOptionArrayOutput
	ToGetComputeInstanceGroupHealthCheckHttpOptionArrayOutputWithContext(context.Context) GetComputeInstanceGroupHealthCheckHttpOptionArrayOutput
}

type GetComputeInstanceGroupHealthCheckHttpOptionArray []GetComputeInstanceGroupHealthCheckHttpOptionInput

func (GetComputeInstanceGroupHealthCheckHttpOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupHealthCheckHttpOption)(nil)).Elem()
}

func (i GetComputeInstanceGroupHealthCheckHttpOptionArray) ToGetComputeInstanceGroupHealthCheckHttpOptionArrayOutput() GetComputeInstanceGroupHealthCheckHttpOptionArrayOutput {
	return i.ToGetComputeInstanceGroupHealthCheckHttpOptionArrayOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupHealthCheckHttpOptionArray) ToGetComputeInstanceGroupHealthCheckHttpOptionArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupHealthCheckHttpOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupHealthCheckHttpOptionArrayOutput)
}

type GetComputeInstanceGroupHealthCheckHttpOptionOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupHealthCheckHttpOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupHealthCheckHttpOption)(nil)).Elem()
}

func (o GetComputeInstanceGroupHealthCheckHttpOptionOutput) ToGetComputeInstanceGroupHealthCheckHttpOptionOutput() GetComputeInstanceGroupHealthCheckHttpOptionOutput {
	return o
}

func (o GetComputeInstanceGroupHealthCheckHttpOptionOutput) ToGetComputeInstanceGroupHealthCheckHttpOptionOutputWithContext(ctx context.Context) GetComputeInstanceGroupHealthCheckHttpOptionOutput {
	return o
}

// The URL path used for health check requests.
func (o GetComputeInstanceGroupHealthCheckHttpOptionOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupHealthCheckHttpOption) string { return v.Path }).(pulumi.StringOutput)
}

// The port to use for TCP health checks.
func (o GetComputeInstanceGroupHealthCheckHttpOptionOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupHealthCheckHttpOption) int { return v.Port }).(pulumi.IntOutput)
}

type GetComputeInstanceGroupHealthCheckHttpOptionArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupHealthCheckHttpOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupHealthCheckHttpOption)(nil)).Elem()
}

func (o GetComputeInstanceGroupHealthCheckHttpOptionArrayOutput) ToGetComputeInstanceGroupHealthCheckHttpOptionArrayOutput() GetComputeInstanceGroupHealthCheckHttpOptionArrayOutput {
	return o
}

func (o GetComputeInstanceGroupHealthCheckHttpOptionArrayOutput) ToGetComputeInstanceGroupHealthCheckHttpOptionArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupHealthCheckHttpOptionArrayOutput {
	return o
}

func (o GetComputeInstanceGroupHealthCheckHttpOptionArrayOutput) Index(i pulumi.IntInput) GetComputeInstanceGroupHealthCheckHttpOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstanceGroupHealthCheckHttpOption {
		return vs[0].([]GetComputeInstanceGroupHealthCheckHttpOption)[vs[1].(int)]
	}).(GetComputeInstanceGroupHealthCheckHttpOptionOutput)
}

type GetComputeInstanceGroupHealthCheckTcpOption struct {
	// The port to use for TCP health checks.
	Port int `pulumi:"port"`
}

// GetComputeInstanceGroupHealthCheckTcpOptionInput is an input type that accepts GetComputeInstanceGroupHealthCheckTcpOptionArgs and GetComputeInstanceGroupHealthCheckTcpOptionOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupHealthCheckTcpOptionInput` via:
//
//          GetComputeInstanceGroupHealthCheckTcpOptionArgs{...}
type GetComputeInstanceGroupHealthCheckTcpOptionInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupHealthCheckTcpOptionOutput() GetComputeInstanceGroupHealthCheckTcpOptionOutput
	ToGetComputeInstanceGroupHealthCheckTcpOptionOutputWithContext(context.Context) GetComputeInstanceGroupHealthCheckTcpOptionOutput
}

type GetComputeInstanceGroupHealthCheckTcpOptionArgs struct {
	// The port to use for TCP health checks.
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetComputeInstanceGroupHealthCheckTcpOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupHealthCheckTcpOption)(nil)).Elem()
}

func (i GetComputeInstanceGroupHealthCheckTcpOptionArgs) ToGetComputeInstanceGroupHealthCheckTcpOptionOutput() GetComputeInstanceGroupHealthCheckTcpOptionOutput {
	return i.ToGetComputeInstanceGroupHealthCheckTcpOptionOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupHealthCheckTcpOptionArgs) ToGetComputeInstanceGroupHealthCheckTcpOptionOutputWithContext(ctx context.Context) GetComputeInstanceGroupHealthCheckTcpOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupHealthCheckTcpOptionOutput)
}

// GetComputeInstanceGroupHealthCheckTcpOptionArrayInput is an input type that accepts GetComputeInstanceGroupHealthCheckTcpOptionArray and GetComputeInstanceGroupHealthCheckTcpOptionArrayOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupHealthCheckTcpOptionArrayInput` via:
//
//          GetComputeInstanceGroupHealthCheckTcpOptionArray{ GetComputeInstanceGroupHealthCheckTcpOptionArgs{...} }
type GetComputeInstanceGroupHealthCheckTcpOptionArrayInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupHealthCheckTcpOptionArrayOutput() GetComputeInstanceGroupHealthCheckTcpOptionArrayOutput
	ToGetComputeInstanceGroupHealthCheckTcpOptionArrayOutputWithContext(context.Context) GetComputeInstanceGroupHealthCheckTcpOptionArrayOutput
}

type GetComputeInstanceGroupHealthCheckTcpOptionArray []GetComputeInstanceGroupHealthCheckTcpOptionInput

func (GetComputeInstanceGroupHealthCheckTcpOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupHealthCheckTcpOption)(nil)).Elem()
}

func (i GetComputeInstanceGroupHealthCheckTcpOptionArray) ToGetComputeInstanceGroupHealthCheckTcpOptionArrayOutput() GetComputeInstanceGroupHealthCheckTcpOptionArrayOutput {
	return i.ToGetComputeInstanceGroupHealthCheckTcpOptionArrayOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupHealthCheckTcpOptionArray) ToGetComputeInstanceGroupHealthCheckTcpOptionArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupHealthCheckTcpOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupHealthCheckTcpOptionArrayOutput)
}

type GetComputeInstanceGroupHealthCheckTcpOptionOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupHealthCheckTcpOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupHealthCheckTcpOption)(nil)).Elem()
}

func (o GetComputeInstanceGroupHealthCheckTcpOptionOutput) ToGetComputeInstanceGroupHealthCheckTcpOptionOutput() GetComputeInstanceGroupHealthCheckTcpOptionOutput {
	return o
}

func (o GetComputeInstanceGroupHealthCheckTcpOptionOutput) ToGetComputeInstanceGroupHealthCheckTcpOptionOutputWithContext(ctx context.Context) GetComputeInstanceGroupHealthCheckTcpOptionOutput {
	return o
}

// The port to use for TCP health checks.
func (o GetComputeInstanceGroupHealthCheckTcpOptionOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupHealthCheckTcpOption) int { return v.Port }).(pulumi.IntOutput)
}

type GetComputeInstanceGroupHealthCheckTcpOptionArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupHealthCheckTcpOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupHealthCheckTcpOption)(nil)).Elem()
}

func (o GetComputeInstanceGroupHealthCheckTcpOptionArrayOutput) ToGetComputeInstanceGroupHealthCheckTcpOptionArrayOutput() GetComputeInstanceGroupHealthCheckTcpOptionArrayOutput {
	return o
}

func (o GetComputeInstanceGroupHealthCheckTcpOptionArrayOutput) ToGetComputeInstanceGroupHealthCheckTcpOptionArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupHealthCheckTcpOptionArrayOutput {
	return o
}

func (o GetComputeInstanceGroupHealthCheckTcpOptionArrayOutput) Index(i pulumi.IntInput) GetComputeInstanceGroupHealthCheckTcpOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstanceGroupHealthCheckTcpOption {
		return vs[0].([]GetComputeInstanceGroupHealthCheckTcpOption)[vs[1].(int)]
	}).(GetComputeInstanceGroupHealthCheckTcpOptionOutput)
}

type GetComputeInstanceGroupInstance struct {
	// The Fully Qualified Domain Name.
	Fqdn string `pulumi:"fqdn"`
	// The ID of the instance.
	InstanceId string `pulumi:"instanceId"`
	// The name of the managed instance.
	Name string `pulumi:"name"`
	// An array with the network interfaces attached to the managed instance. The structure is documented below.
	// * `statusChangedAt` -The timestamp when the status of the managed instance was last changed.
	NetworkInterfaces []GetComputeInstanceGroupInstanceNetworkInterface `pulumi:"networkInterfaces"`
	// The status of the instance.
	Status          string `pulumi:"status"`
	StatusChangedAt string `pulumi:"statusChangedAt"`
	// The status message of the target group.
	StatusMessage string `pulumi:"statusMessage"`
	// The ID of the availability zone where the instance resides.
	ZoneId string `pulumi:"zoneId"`
}

// GetComputeInstanceGroupInstanceInput is an input type that accepts GetComputeInstanceGroupInstanceArgs and GetComputeInstanceGroupInstanceOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupInstanceInput` via:
//
//          GetComputeInstanceGroupInstanceArgs{...}
type GetComputeInstanceGroupInstanceInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupInstanceOutput() GetComputeInstanceGroupInstanceOutput
	ToGetComputeInstanceGroupInstanceOutputWithContext(context.Context) GetComputeInstanceGroupInstanceOutput
}

type GetComputeInstanceGroupInstanceArgs struct {
	// The Fully Qualified Domain Name.
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// The ID of the instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The name of the managed instance.
	Name pulumi.StringInput `pulumi:"name"`
	// An array with the network interfaces attached to the managed instance. The structure is documented below.
	// * `statusChangedAt` -The timestamp when the status of the managed instance was last changed.
	NetworkInterfaces GetComputeInstanceGroupInstanceNetworkInterfaceArrayInput `pulumi:"networkInterfaces"`
	// The status of the instance.
	Status          pulumi.StringInput `pulumi:"status"`
	StatusChangedAt pulumi.StringInput `pulumi:"statusChangedAt"`
	// The status message of the target group.
	StatusMessage pulumi.StringInput `pulumi:"statusMessage"`
	// The ID of the availability zone where the instance resides.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetComputeInstanceGroupInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstance)(nil)).Elem()
}

func (i GetComputeInstanceGroupInstanceArgs) ToGetComputeInstanceGroupInstanceOutput() GetComputeInstanceGroupInstanceOutput {
	return i.ToGetComputeInstanceGroupInstanceOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupInstanceArgs) ToGetComputeInstanceGroupInstanceOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupInstanceOutput)
}

// GetComputeInstanceGroupInstanceArrayInput is an input type that accepts GetComputeInstanceGroupInstanceArray and GetComputeInstanceGroupInstanceArrayOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupInstanceArrayInput` via:
//
//          GetComputeInstanceGroupInstanceArray{ GetComputeInstanceGroupInstanceArgs{...} }
type GetComputeInstanceGroupInstanceArrayInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupInstanceArrayOutput() GetComputeInstanceGroupInstanceArrayOutput
	ToGetComputeInstanceGroupInstanceArrayOutputWithContext(context.Context) GetComputeInstanceGroupInstanceArrayOutput
}

type GetComputeInstanceGroupInstanceArray []GetComputeInstanceGroupInstanceInput

func (GetComputeInstanceGroupInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupInstance)(nil)).Elem()
}

func (i GetComputeInstanceGroupInstanceArray) ToGetComputeInstanceGroupInstanceArrayOutput() GetComputeInstanceGroupInstanceArrayOutput {
	return i.ToGetComputeInstanceGroupInstanceArrayOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupInstanceArray) ToGetComputeInstanceGroupInstanceArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupInstanceArrayOutput)
}

type GetComputeInstanceGroupInstanceOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstance)(nil)).Elem()
}

func (o GetComputeInstanceGroupInstanceOutput) ToGetComputeInstanceGroupInstanceOutput() GetComputeInstanceGroupInstanceOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceOutput) ToGetComputeInstanceGroupInstanceOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceOutput {
	return o
}

// The Fully Qualified Domain Name.
func (o GetComputeInstanceGroupInstanceOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstance) string { return v.Fqdn }).(pulumi.StringOutput)
}

// The ID of the instance.
func (o GetComputeInstanceGroupInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of the managed instance.
func (o GetComputeInstanceGroupInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstance) string { return v.Name }).(pulumi.StringOutput)
}

// An array with the network interfaces attached to the managed instance. The structure is documented below.
// * `statusChangedAt` -The timestamp when the status of the managed instance was last changed.
func (o GetComputeInstanceGroupInstanceOutput) NetworkInterfaces() GetComputeInstanceGroupInstanceNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstance) []GetComputeInstanceGroupInstanceNetworkInterface {
		return v.NetworkInterfaces
	}).(GetComputeInstanceGroupInstanceNetworkInterfaceArrayOutput)
}

// The status of the instance.
func (o GetComputeInstanceGroupInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstance) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetComputeInstanceGroupInstanceOutput) StatusChangedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstance) string { return v.StatusChangedAt }).(pulumi.StringOutput)
}

// The status message of the target group.
func (o GetComputeInstanceGroupInstanceOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstance) string { return v.StatusMessage }).(pulumi.StringOutput)
}

// The ID of the availability zone where the instance resides.
func (o GetComputeInstanceGroupInstanceOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstance) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetComputeInstanceGroupInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupInstance)(nil)).Elem()
}

func (o GetComputeInstanceGroupInstanceArrayOutput) ToGetComputeInstanceGroupInstanceArrayOutput() GetComputeInstanceGroupInstanceArrayOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceArrayOutput) ToGetComputeInstanceGroupInstanceArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceArrayOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceArrayOutput) Index(i pulumi.IntInput) GetComputeInstanceGroupInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstanceGroupInstance {
		return vs[0].([]GetComputeInstanceGroupInstance)[vs[1].(int)]
	}).(GetComputeInstanceGroupInstanceOutput)
}

type GetComputeInstanceGroupInstanceNetworkInterface struct {
	// The index of the network interface as generated by the server.
	Index int `pulumi:"index"`
	// The private IP address to assign to the instance. If empty, the address is automatically assigned from the specified subnet.
	IpAddress string `pulumi:"ipAddress"`
	// Is IPv4 address assigned.
	Ipv4        bool   `pulumi:"ipv4"`
	Ipv6        bool   `pulumi:"ipv6"`
	Ipv6Address string `pulumi:"ipv6Address"`
	// The MAC address assigned to the network interface.
	MacAddress string `pulumi:"macAddress"`
	// The instance's public address for accessing the internet over NAT.
	Nat bool `pulumi:"nat"`
	// The public IP address of the instance.
	NatIpAddress string `pulumi:"natIpAddress"`
	// The IP version for the public address.
	NatIpVersion string `pulumi:"natIpVersion"`
	// The ID of the subnet to attach this interface to. The subnet must reside in the same zone where this instance was created.
	SubnetId string `pulumi:"subnetId"`
}

// GetComputeInstanceGroupInstanceNetworkInterfaceInput is an input type that accepts GetComputeInstanceGroupInstanceNetworkInterfaceArgs and GetComputeInstanceGroupInstanceNetworkInterfaceOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupInstanceNetworkInterfaceInput` via:
//
//          GetComputeInstanceGroupInstanceNetworkInterfaceArgs{...}
type GetComputeInstanceGroupInstanceNetworkInterfaceInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupInstanceNetworkInterfaceOutput() GetComputeInstanceGroupInstanceNetworkInterfaceOutput
	ToGetComputeInstanceGroupInstanceNetworkInterfaceOutputWithContext(context.Context) GetComputeInstanceGroupInstanceNetworkInterfaceOutput
}

type GetComputeInstanceGroupInstanceNetworkInterfaceArgs struct {
	// The index of the network interface as generated by the server.
	Index pulumi.IntInput `pulumi:"index"`
	// The private IP address to assign to the instance. If empty, the address is automatically assigned from the specified subnet.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// Is IPv4 address assigned.
	Ipv4        pulumi.BoolInput   `pulumi:"ipv4"`
	Ipv6        pulumi.BoolInput   `pulumi:"ipv6"`
	Ipv6Address pulumi.StringInput `pulumi:"ipv6Address"`
	// The MAC address assigned to the network interface.
	MacAddress pulumi.StringInput `pulumi:"macAddress"`
	// The instance's public address for accessing the internet over NAT.
	Nat pulumi.BoolInput `pulumi:"nat"`
	// The public IP address of the instance.
	NatIpAddress pulumi.StringInput `pulumi:"natIpAddress"`
	// The IP version for the public address.
	NatIpVersion pulumi.StringInput `pulumi:"natIpVersion"`
	// The ID of the subnet to attach this interface to. The subnet must reside in the same zone where this instance was created.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetComputeInstanceGroupInstanceNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceNetworkInterface)(nil)).Elem()
}

func (i GetComputeInstanceGroupInstanceNetworkInterfaceArgs) ToGetComputeInstanceGroupInstanceNetworkInterfaceOutput() GetComputeInstanceGroupInstanceNetworkInterfaceOutput {
	return i.ToGetComputeInstanceGroupInstanceNetworkInterfaceOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupInstanceNetworkInterfaceArgs) ToGetComputeInstanceGroupInstanceNetworkInterfaceOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupInstanceNetworkInterfaceOutput)
}

// GetComputeInstanceGroupInstanceNetworkInterfaceArrayInput is an input type that accepts GetComputeInstanceGroupInstanceNetworkInterfaceArray and GetComputeInstanceGroupInstanceNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupInstanceNetworkInterfaceArrayInput` via:
//
//          GetComputeInstanceGroupInstanceNetworkInterfaceArray{ GetComputeInstanceGroupInstanceNetworkInterfaceArgs{...} }
type GetComputeInstanceGroupInstanceNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupInstanceNetworkInterfaceArrayOutput() GetComputeInstanceGroupInstanceNetworkInterfaceArrayOutput
	ToGetComputeInstanceGroupInstanceNetworkInterfaceArrayOutputWithContext(context.Context) GetComputeInstanceGroupInstanceNetworkInterfaceArrayOutput
}

type GetComputeInstanceGroupInstanceNetworkInterfaceArray []GetComputeInstanceGroupInstanceNetworkInterfaceInput

func (GetComputeInstanceGroupInstanceNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupInstanceNetworkInterface)(nil)).Elem()
}

func (i GetComputeInstanceGroupInstanceNetworkInterfaceArray) ToGetComputeInstanceGroupInstanceNetworkInterfaceArrayOutput() GetComputeInstanceGroupInstanceNetworkInterfaceArrayOutput {
	return i.ToGetComputeInstanceGroupInstanceNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupInstanceNetworkInterfaceArray) ToGetComputeInstanceGroupInstanceNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupInstanceNetworkInterfaceArrayOutput)
}

type GetComputeInstanceGroupInstanceNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupInstanceNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceNetworkInterface)(nil)).Elem()
}

func (o GetComputeInstanceGroupInstanceNetworkInterfaceOutput) ToGetComputeInstanceGroupInstanceNetworkInterfaceOutput() GetComputeInstanceGroupInstanceNetworkInterfaceOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceNetworkInterfaceOutput) ToGetComputeInstanceGroupInstanceNetworkInterfaceOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceNetworkInterfaceOutput {
	return o
}

// The index of the network interface as generated by the server.
func (o GetComputeInstanceGroupInstanceNetworkInterfaceOutput) Index() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceNetworkInterface) int { return v.Index }).(pulumi.IntOutput)
}

// The private IP address to assign to the instance. If empty, the address is automatically assigned from the specified subnet.
func (o GetComputeInstanceGroupInstanceNetworkInterfaceOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceNetworkInterface) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Is IPv4 address assigned.
func (o GetComputeInstanceGroupInstanceNetworkInterfaceOutput) Ipv4() pulumi.BoolOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceNetworkInterface) bool { return v.Ipv4 }).(pulumi.BoolOutput)
}

func (o GetComputeInstanceGroupInstanceNetworkInterfaceOutput) Ipv6() pulumi.BoolOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceNetworkInterface) bool { return v.Ipv6 }).(pulumi.BoolOutput)
}

func (o GetComputeInstanceGroupInstanceNetworkInterfaceOutput) Ipv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceNetworkInterface) string { return v.Ipv6Address }).(pulumi.StringOutput)
}

// The MAC address assigned to the network interface.
func (o GetComputeInstanceGroupInstanceNetworkInterfaceOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceNetworkInterface) string { return v.MacAddress }).(pulumi.StringOutput)
}

// The instance's public address for accessing the internet over NAT.
func (o GetComputeInstanceGroupInstanceNetworkInterfaceOutput) Nat() pulumi.BoolOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceNetworkInterface) bool { return v.Nat }).(pulumi.BoolOutput)
}

// The public IP address of the instance.
func (o GetComputeInstanceGroupInstanceNetworkInterfaceOutput) NatIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceNetworkInterface) string { return v.NatIpAddress }).(pulumi.StringOutput)
}

// The IP version for the public address.
func (o GetComputeInstanceGroupInstanceNetworkInterfaceOutput) NatIpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceNetworkInterface) string { return v.NatIpVersion }).(pulumi.StringOutput)
}

// The ID of the subnet to attach this interface to. The subnet must reside in the same zone where this instance was created.
func (o GetComputeInstanceGroupInstanceNetworkInterfaceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceNetworkInterface) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetComputeInstanceGroupInstanceNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupInstanceNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupInstanceNetworkInterface)(nil)).Elem()
}

func (o GetComputeInstanceGroupInstanceNetworkInterfaceArrayOutput) ToGetComputeInstanceGroupInstanceNetworkInterfaceArrayOutput() GetComputeInstanceGroupInstanceNetworkInterfaceArrayOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceNetworkInterfaceArrayOutput) ToGetComputeInstanceGroupInstanceNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceNetworkInterfaceArrayOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) GetComputeInstanceGroupInstanceNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstanceGroupInstanceNetworkInterface {
		return vs[0].([]GetComputeInstanceGroupInstanceNetworkInterface)[vs[1].(int)]
	}).(GetComputeInstanceGroupInstanceNetworkInterfaceOutput)
}

type GetComputeInstanceGroupInstanceTemplate struct {
	// The specifications for boot disk that will be attached to the instance. The structure is documented below.
	BootDisk GetComputeInstanceGroupInstanceTemplateBootDisk `pulumi:"bootDisk"`
	// A description of the boot disk.
	Description string `pulumi:"description"`
	// Hostname temaplate for the instance.
	Hostname string `pulumi:"hostname"`
	// A map of labels applied to this instance.
	// * `resources.0.memory` - The memory size allocated to the instance.
	// * `resources.0.cores` - Number of CPU cores allocated to the instance.
	// * `resources.0.core_fraction` - Baseline core performance as a percent.
	// * `resources.0.gpus` - Number of GPU cores allocated to the instance.
	Labels map[string]string `pulumi:"labels"`
	// The set of metadata `key:value` pairs assigned to this instance template. This includes custom metadata and predefined keys.
	Metadata map[string]string `pulumi:"metadata"`
	// The name of the managed instance.
	Name string `pulumi:"name"`
	// An array with the network interfaces attached to the managed instance. The structure is documented below.
	// * `statusChangedAt` -The timestamp when the status of the managed instance was last changed.
	NetworkInterfaces []GetComputeInstanceGroupInstanceTemplateNetworkInterface `pulumi:"networkInterfaces"`
	// Network acceleration settings. The structure is documented below.
	NetworkSettings []GetComputeInstanceGroupInstanceTemplateNetworkSetting `pulumi:"networkSettings"`
	PlacementPolicy *GetComputeInstanceGroupInstanceTemplatePlacementPolicy `pulumi:"placementPolicy"`
	// The ID of the hardware platform configuration for the instance.
	PlatformId string                                           `pulumi:"platformId"`
	Resources  GetComputeInstanceGroupInstanceTemplateResources `pulumi:"resources"`
	// The scheduling policy for the instance. The structure is documented below.
	SchedulingPolicy GetComputeInstanceGroupInstanceTemplateSchedulingPolicy `pulumi:"schedulingPolicy"`
	// An array with the secondary disks that will be attached to the instance. The structure is documented below.
	SecondaryDisks []GetComputeInstanceGroupInstanceTemplateSecondaryDisk `pulumi:"secondaryDisks"`
	// The service account ID for the instance.
	ServiceAccountId string `pulumi:"serviceAccountId"`
}

// GetComputeInstanceGroupInstanceTemplateInput is an input type that accepts GetComputeInstanceGroupInstanceTemplateArgs and GetComputeInstanceGroupInstanceTemplateOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupInstanceTemplateInput` via:
//
//          GetComputeInstanceGroupInstanceTemplateArgs{...}
type GetComputeInstanceGroupInstanceTemplateInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupInstanceTemplateOutput() GetComputeInstanceGroupInstanceTemplateOutput
	ToGetComputeInstanceGroupInstanceTemplateOutputWithContext(context.Context) GetComputeInstanceGroupInstanceTemplateOutput
}

type GetComputeInstanceGroupInstanceTemplateArgs struct {
	// The specifications for boot disk that will be attached to the instance. The structure is documented below.
	BootDisk GetComputeInstanceGroupInstanceTemplateBootDiskInput `pulumi:"bootDisk"`
	// A description of the boot disk.
	Description pulumi.StringInput `pulumi:"description"`
	// Hostname temaplate for the instance.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// A map of labels applied to this instance.
	// * `resources.0.memory` - The memory size allocated to the instance.
	// * `resources.0.cores` - Number of CPU cores allocated to the instance.
	// * `resources.0.core_fraction` - Baseline core performance as a percent.
	// * `resources.0.gpus` - Number of GPU cores allocated to the instance.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The set of metadata `key:value` pairs assigned to this instance template. This includes custom metadata and predefined keys.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// The name of the managed instance.
	Name pulumi.StringInput `pulumi:"name"`
	// An array with the network interfaces attached to the managed instance. The structure is documented below.
	// * `statusChangedAt` -The timestamp when the status of the managed instance was last changed.
	NetworkInterfaces GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayInput `pulumi:"networkInterfaces"`
	// Network acceleration settings. The structure is documented below.
	NetworkSettings GetComputeInstanceGroupInstanceTemplateNetworkSettingArrayInput `pulumi:"networkSettings"`
	PlacementPolicy GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrInput  `pulumi:"placementPolicy"`
	// The ID of the hardware platform configuration for the instance.
	PlatformId pulumi.StringInput                                    `pulumi:"platformId"`
	Resources  GetComputeInstanceGroupInstanceTemplateResourcesInput `pulumi:"resources"`
	// The scheduling policy for the instance. The structure is documented below.
	SchedulingPolicy GetComputeInstanceGroupInstanceTemplateSchedulingPolicyInput `pulumi:"schedulingPolicy"`
	// An array with the secondary disks that will be attached to the instance. The structure is documented below.
	SecondaryDisks GetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayInput `pulumi:"secondaryDisks"`
	// The service account ID for the instance.
	ServiceAccountId pulumi.StringInput `pulumi:"serviceAccountId"`
}

func (GetComputeInstanceGroupInstanceTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceTemplate)(nil)).Elem()
}

func (i GetComputeInstanceGroupInstanceTemplateArgs) ToGetComputeInstanceGroupInstanceTemplateOutput() GetComputeInstanceGroupInstanceTemplateOutput {
	return i.ToGetComputeInstanceGroupInstanceTemplateOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupInstanceTemplateArgs) ToGetComputeInstanceGroupInstanceTemplateOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupInstanceTemplateOutput)
}

type GetComputeInstanceGroupInstanceTemplateOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupInstanceTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceTemplate)(nil)).Elem()
}

func (o GetComputeInstanceGroupInstanceTemplateOutput) ToGetComputeInstanceGroupInstanceTemplateOutput() GetComputeInstanceGroupInstanceTemplateOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateOutput) ToGetComputeInstanceGroupInstanceTemplateOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateOutput {
	return o
}

// The specifications for boot disk that will be attached to the instance. The structure is documented below.
func (o GetComputeInstanceGroupInstanceTemplateOutput) BootDisk() GetComputeInstanceGroupInstanceTemplateBootDiskOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplate) GetComputeInstanceGroupInstanceTemplateBootDisk {
		return v.BootDisk
	}).(GetComputeInstanceGroupInstanceTemplateBootDiskOutput)
}

// A description of the boot disk.
func (o GetComputeInstanceGroupInstanceTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplate) string { return v.Description }).(pulumi.StringOutput)
}

// Hostname temaplate for the instance.
func (o GetComputeInstanceGroupInstanceTemplateOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplate) string { return v.Hostname }).(pulumi.StringOutput)
}

// A map of labels applied to this instance.
// * `resources.0.memory` - The memory size allocated to the instance.
// * `resources.0.cores` - Number of CPU cores allocated to the instance.
// * `resources.0.core_fraction` - Baseline core performance as a percent.
// * `resources.0.gpus` - Number of GPU cores allocated to the instance.
func (o GetComputeInstanceGroupInstanceTemplateOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplate) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The set of metadata `key:value` pairs assigned to this instance template. This includes custom metadata and predefined keys.
func (o GetComputeInstanceGroupInstanceTemplateOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplate) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// The name of the managed instance.
func (o GetComputeInstanceGroupInstanceTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplate) string { return v.Name }).(pulumi.StringOutput)
}

// An array with the network interfaces attached to the managed instance. The structure is documented below.
// * `statusChangedAt` -The timestamp when the status of the managed instance was last changed.
func (o GetComputeInstanceGroupInstanceTemplateOutput) NetworkInterfaces() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplate) []GetComputeInstanceGroupInstanceTemplateNetworkInterface {
		return v.NetworkInterfaces
	}).(GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput)
}

// Network acceleration settings. The structure is documented below.
func (o GetComputeInstanceGroupInstanceTemplateOutput) NetworkSettings() GetComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplate) []GetComputeInstanceGroupInstanceTemplateNetworkSetting {
		return v.NetworkSettings
	}).(GetComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput)
}

func (o GetComputeInstanceGroupInstanceTemplateOutput) PlacementPolicy() GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplate) *GetComputeInstanceGroupInstanceTemplatePlacementPolicy {
		return v.PlacementPolicy
	}).(GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput)
}

// The ID of the hardware platform configuration for the instance.
func (o GetComputeInstanceGroupInstanceTemplateOutput) PlatformId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplate) string { return v.PlatformId }).(pulumi.StringOutput)
}

func (o GetComputeInstanceGroupInstanceTemplateOutput) Resources() GetComputeInstanceGroupInstanceTemplateResourcesOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplate) GetComputeInstanceGroupInstanceTemplateResources {
		return v.Resources
	}).(GetComputeInstanceGroupInstanceTemplateResourcesOutput)
}

// The scheduling policy for the instance. The structure is documented below.
func (o GetComputeInstanceGroupInstanceTemplateOutput) SchedulingPolicy() GetComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplate) GetComputeInstanceGroupInstanceTemplateSchedulingPolicy {
		return v.SchedulingPolicy
	}).(GetComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput)
}

// An array with the secondary disks that will be attached to the instance. The structure is documented below.
func (o GetComputeInstanceGroupInstanceTemplateOutput) SecondaryDisks() GetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplate) []GetComputeInstanceGroupInstanceTemplateSecondaryDisk {
		return v.SecondaryDisks
	}).(GetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput)
}

// The service account ID for the instance.
func (o GetComputeInstanceGroupInstanceTemplateOutput) ServiceAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplate) string { return v.ServiceAccountId }).(pulumi.StringOutput)
}

type GetComputeInstanceGroupInstanceTemplateBootDisk struct {
	// This value can be used to reference the device under `/dev/disk/by-id/`.
	DeviceName string `pulumi:"deviceName"`
	// The parameters used for creating a disk alongside the instance. The structure is documented below.
	InitializeParams GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParams `pulumi:"initializeParams"`
	// The access mode to the disk resource. By default a disk is attached in `READ_WRITE` mode.
	Mode string `pulumi:"mode"`
}

// GetComputeInstanceGroupInstanceTemplateBootDiskInput is an input type that accepts GetComputeInstanceGroupInstanceTemplateBootDiskArgs and GetComputeInstanceGroupInstanceTemplateBootDiskOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupInstanceTemplateBootDiskInput` via:
//
//          GetComputeInstanceGroupInstanceTemplateBootDiskArgs{...}
type GetComputeInstanceGroupInstanceTemplateBootDiskInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupInstanceTemplateBootDiskOutput() GetComputeInstanceGroupInstanceTemplateBootDiskOutput
	ToGetComputeInstanceGroupInstanceTemplateBootDiskOutputWithContext(context.Context) GetComputeInstanceGroupInstanceTemplateBootDiskOutput
}

type GetComputeInstanceGroupInstanceTemplateBootDiskArgs struct {
	// This value can be used to reference the device under `/dev/disk/by-id/`.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// The parameters used for creating a disk alongside the instance. The structure is documented below.
	InitializeParams GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsInput `pulumi:"initializeParams"`
	// The access mode to the disk resource. By default a disk is attached in `READ_WRITE` mode.
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetComputeInstanceGroupInstanceTemplateBootDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceTemplateBootDisk)(nil)).Elem()
}

func (i GetComputeInstanceGroupInstanceTemplateBootDiskArgs) ToGetComputeInstanceGroupInstanceTemplateBootDiskOutput() GetComputeInstanceGroupInstanceTemplateBootDiskOutput {
	return i.ToGetComputeInstanceGroupInstanceTemplateBootDiskOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupInstanceTemplateBootDiskArgs) ToGetComputeInstanceGroupInstanceTemplateBootDiskOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateBootDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupInstanceTemplateBootDiskOutput)
}

type GetComputeInstanceGroupInstanceTemplateBootDiskOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupInstanceTemplateBootDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceTemplateBootDisk)(nil)).Elem()
}

func (o GetComputeInstanceGroupInstanceTemplateBootDiskOutput) ToGetComputeInstanceGroupInstanceTemplateBootDiskOutput() GetComputeInstanceGroupInstanceTemplateBootDiskOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateBootDiskOutput) ToGetComputeInstanceGroupInstanceTemplateBootDiskOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateBootDiskOutput {
	return o
}

// This value can be used to reference the device under `/dev/disk/by-id/`.
func (o GetComputeInstanceGroupInstanceTemplateBootDiskOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateBootDisk) string { return v.DeviceName }).(pulumi.StringOutput)
}

// The parameters used for creating a disk alongside the instance. The structure is documented below.
func (o GetComputeInstanceGroupInstanceTemplateBootDiskOutput) InitializeParams() GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateBootDisk) GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParams {
		return v.InitializeParams
	}).(GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput)
}

// The access mode to the disk resource. By default a disk is attached in `READ_WRITE` mode.
func (o GetComputeInstanceGroupInstanceTemplateBootDiskOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateBootDisk) string { return v.Mode }).(pulumi.StringOutput)
}

type GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParams struct {
	// A description of the boot disk.
	Description string `pulumi:"description"`
	// The disk image to initialize this disk from.
	ImageId string `pulumi:"imageId"`
	// The size of the disk in GB.
	Size int `pulumi:"size"`
	// The snapshot to initialize this disk from.
	SnapshotId string `pulumi:"snapshotId"`
	// Network acceleration type. By default a network is in `STANDARD` mode.
	Type string `pulumi:"type"`
}

// GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsInput is an input type that accepts GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsArgs and GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsInput` via:
//
//          GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsArgs{...}
type GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput() GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput
	ToGetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutputWithContext(context.Context) GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput
}

type GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsArgs struct {
	// A description of the boot disk.
	Description pulumi.StringInput `pulumi:"description"`
	// The disk image to initialize this disk from.
	ImageId pulumi.StringInput `pulumi:"imageId"`
	// The size of the disk in GB.
	Size pulumi.IntInput `pulumi:"size"`
	// The snapshot to initialize this disk from.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// Network acceleration type. By default a network is in `STANDARD` mode.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParams)(nil)).Elem()
}

func (i GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsArgs) ToGetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput() GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput {
	return i.ToGetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsArgs) ToGetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput)
}

type GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParams)(nil)).Elem()
}

func (o GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput) ToGetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput() GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput) ToGetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput {
	return o
}

// A description of the boot disk.
func (o GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParams) string { return v.Description }).(pulumi.StringOutput)
}

// The disk image to initialize this disk from.
func (o GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParams) string { return v.ImageId }).(pulumi.StringOutput)
}

// The size of the disk in GB.
func (o GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParams) int { return v.Size }).(pulumi.IntOutput)
}

// The snapshot to initialize this disk from.
func (o GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParams) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// Network acceleration type. By default a network is in `STANDARD` mode.
func (o GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParams) string { return v.Type }).(pulumi.StringOutput)
}

type GetComputeInstanceGroupInstanceTemplateNetworkInterface struct {
	// List of dns records.  The structure is documented below.
	DnsRecords []GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord `pulumi:"dnsRecords"`
	// Is IPv4 address assigned.
	Ipv4 bool `pulumi:"ipv4"`
	Ipv6 bool `pulumi:"ipv6"`
	// List of ipv6 dns records.  The structure is documented below.
	Ipv6DnsRecords []GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord `pulumi:"ipv6DnsRecords"`
	// The instance's public address for accessing the internet over NAT.
	Nat bool `pulumi:"nat"`
	// List of nat dns records.  The structure is documented below.
	NatDnsRecords []GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord `pulumi:"natDnsRecords"`
	// The ID of the network.
	NetworkId string `pulumi:"networkId"`
	// Security group ids for network interface.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The IDs of the subnets.
	SubnetIds []string `pulumi:"subnetIds"`
}

// GetComputeInstanceGroupInstanceTemplateNetworkInterfaceInput is an input type that accepts GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArgs and GetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupInstanceTemplateNetworkInterfaceInput` via:
//
//          GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArgs{...}
type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput
	ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutputWithContext(context.Context) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput
}

type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArgs struct {
	// List of dns records.  The structure is documented below.
	DnsRecords GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayInput `pulumi:"dnsRecords"`
	// Is IPv4 address assigned.
	Ipv4 pulumi.BoolInput `pulumi:"ipv4"`
	Ipv6 pulumi.BoolInput `pulumi:"ipv6"`
	// List of ipv6 dns records.  The structure is documented below.
	Ipv6DnsRecords GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayInput `pulumi:"ipv6DnsRecords"`
	// The instance's public address for accessing the internet over NAT.
	Nat pulumi.BoolInput `pulumi:"nat"`
	// List of nat dns records.  The structure is documented below.
	NatDnsRecords GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayInput `pulumi:"natDnsRecords"`
	// The ID of the network.
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	// Security group ids for network interface.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The IDs of the subnets.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
}

func (GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceTemplateNetworkInterface)(nil)).Elem()
}

func (i GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArgs) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput {
	return i.ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArgs) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput)
}

// GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayInput is an input type that accepts GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArray and GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayInput` via:
//
//          GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArray{ GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArgs{...} }
type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput
	ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutputWithContext(context.Context) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput
}

type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArray []GetComputeInstanceGroupInstanceTemplateNetworkInterfaceInput

func (GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupInstanceTemplateNetworkInterface)(nil)).Elem()
}

func (i GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArray) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput {
	return i.ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArray) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput)
}

type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceTemplateNetworkInterface)(nil)).Elem()
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput {
	return o
}

// List of dns records.  The structure is documented below.
func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput) DnsRecords() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateNetworkInterface) []GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord {
		return v.DnsRecords
	}).(GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput)
}

// Is IPv4 address assigned.
func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput) Ipv4() pulumi.BoolOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateNetworkInterface) bool { return v.Ipv4 }).(pulumi.BoolOutput)
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput) Ipv6() pulumi.BoolOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateNetworkInterface) bool { return v.Ipv6 }).(pulumi.BoolOutput)
}

// List of ipv6 dns records.  The structure is documented below.
func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput) Ipv6DnsRecords() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateNetworkInterface) []GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord {
		return v.Ipv6DnsRecords
	}).(GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput)
}

// The instance's public address for accessing the internet over NAT.
func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput) Nat() pulumi.BoolOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateNetworkInterface) bool { return v.Nat }).(pulumi.BoolOutput)
}

// List of nat dns records.  The structure is documented below.
func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput) NatDnsRecords() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateNetworkInterface) []GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord {
		return v.NatDnsRecords
	}).(GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput)
}

// The ID of the network.
func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateNetworkInterface) string { return v.NetworkId }).(pulumi.StringOutput)
}

// Security group ids for network interface.
func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateNetworkInterface) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The IDs of the subnets.
func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateNetworkInterface) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupInstanceTemplateNetworkInterface)(nil)).Elem()
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstanceGroupInstanceTemplateNetworkInterface {
		return vs[0].([]GetComputeInstanceGroupInstanceTemplateNetworkInterface)[vs[1].(int)]
	}).(GetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput)
}

type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord struct {
	DnsZone string `pulumi:"dnsZone"`
	// The Fully Qualified Domain Name.
	Fqdn string `pulumi:"fqdn"`
	// When set to true, also create PTR DNS record.
	Ptr bool `pulumi:"ptr"`
	// DNS record TTL.
	Ttl int `pulumi:"ttl"`
}

// GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordInput is an input type that accepts GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArgs and GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordInput` via:
//
//          GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArgs{...}
type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput
	ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutputWithContext(context.Context) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput
}

type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArgs struct {
	DnsZone pulumi.StringInput `pulumi:"dnsZone"`
	// The Fully Qualified Domain Name.
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// When set to true, also create PTR DNS record.
	Ptr pulumi.BoolInput `pulumi:"ptr"`
	// DNS record TTL.
	Ttl pulumi.IntInput `pulumi:"ttl"`
}

func (GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord)(nil)).Elem()
}

func (i GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArgs) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput {
	return i.ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArgs) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput)
}

// GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayInput is an input type that accepts GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArray and GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayInput` via:
//
//          GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArray{ GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArgs{...} }
type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput
	ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutputWithContext(context.Context) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput
}

type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArray []GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordInput

func (GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord)(nil)).Elem()
}

func (i GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArray) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput {
	return i.ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArray) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput)
}

type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord)(nil)).Elem()
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput) DnsZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord) string { return v.DnsZone }).(pulumi.StringOutput)
}

// The Fully Qualified Domain Name.
func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord) string { return v.Fqdn }).(pulumi.StringOutput)
}

// When set to true, also create PTR DNS record.
func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput) Ptr() pulumi.BoolOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord) bool { return v.Ptr }).(pulumi.BoolOutput)
}

// DNS record TTL.
func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord) int { return v.Ttl }).(pulumi.IntOutput)
}

type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord)(nil)).Elem()
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput) Index(i pulumi.IntInput) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord {
		return vs[0].([]GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord)[vs[1].(int)]
	}).(GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput)
}

type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord struct {
	DnsZone string `pulumi:"dnsZone"`
	// The Fully Qualified Domain Name.
	Fqdn string `pulumi:"fqdn"`
	// When set to true, also create PTR DNS record.
	Ptr bool `pulumi:"ptr"`
	// DNS record TTL.
	Ttl int `pulumi:"ttl"`
}

// GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordInput is an input type that accepts GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArgs and GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordInput` via:
//
//          GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArgs{...}
type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput
	ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutputWithContext(context.Context) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput
}

type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArgs struct {
	DnsZone pulumi.StringInput `pulumi:"dnsZone"`
	// The Fully Qualified Domain Name.
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// When set to true, also create PTR DNS record.
	Ptr pulumi.BoolInput `pulumi:"ptr"`
	// DNS record TTL.
	Ttl pulumi.IntInput `pulumi:"ttl"`
}

func (GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord)(nil)).Elem()
}

func (i GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArgs) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput {
	return i.ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArgs) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput)
}

// GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayInput is an input type that accepts GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArray and GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayInput` via:
//
//          GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArray{ GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArgs{...} }
type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput
	ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutputWithContext(context.Context) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput
}

type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArray []GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordInput

func (GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord)(nil)).Elem()
}

func (i GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArray) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput {
	return i.ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArray) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput)
}

type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord)(nil)).Elem()
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput) DnsZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord) string { return v.DnsZone }).(pulumi.StringOutput)
}

// The Fully Qualified Domain Name.
func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord) string { return v.Fqdn }).(pulumi.StringOutput)
}

// When set to true, also create PTR DNS record.
func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput) Ptr() pulumi.BoolOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord) bool { return v.Ptr }).(pulumi.BoolOutput)
}

// DNS record TTL.
func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord) int { return v.Ttl }).(pulumi.IntOutput)
}

type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord)(nil)).Elem()
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput) Index(i pulumi.IntInput) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord {
		return vs[0].([]GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord)[vs[1].(int)]
	}).(GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput)
}

type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord struct {
	DnsZone string `pulumi:"dnsZone"`
	// The Fully Qualified Domain Name.
	Fqdn string `pulumi:"fqdn"`
	// When set to true, also create PTR DNS record.
	Ptr bool `pulumi:"ptr"`
	// DNS record TTL.
	Ttl int `pulumi:"ttl"`
}

// GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordInput is an input type that accepts GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArgs and GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordInput` via:
//
//          GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArgs{...}
type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput
	ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutputWithContext(context.Context) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput
}

type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArgs struct {
	DnsZone pulumi.StringInput `pulumi:"dnsZone"`
	// The Fully Qualified Domain Name.
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// When set to true, also create PTR DNS record.
	Ptr pulumi.BoolInput `pulumi:"ptr"`
	// DNS record TTL.
	Ttl pulumi.IntInput `pulumi:"ttl"`
}

func (GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord)(nil)).Elem()
}

func (i GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArgs) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput {
	return i.ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArgs) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput)
}

// GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayInput is an input type that accepts GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArray and GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayInput` via:
//
//          GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArray{ GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArgs{...} }
type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput
	ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutputWithContext(context.Context) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput
}

type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArray []GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordInput

func (GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord)(nil)).Elem()
}

func (i GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArray) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput {
	return i.ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArray) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput)
}

type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord)(nil)).Elem()
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput) DnsZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord) string { return v.DnsZone }).(pulumi.StringOutput)
}

// The Fully Qualified Domain Name.
func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord) string { return v.Fqdn }).(pulumi.StringOutput)
}

// When set to true, also create PTR DNS record.
func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput) Ptr() pulumi.BoolOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord) bool { return v.Ptr }).(pulumi.BoolOutput)
}

// DNS record TTL.
func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord) int { return v.Ttl }).(pulumi.IntOutput)
}

type GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord)(nil)).Elem()
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput() GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput) ToGetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput) Index(i pulumi.IntInput) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord {
		return vs[0].([]GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord)[vs[1].(int)]
	}).(GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput)
}

type GetComputeInstanceGroupInstanceTemplateNetworkSetting struct {
	// Network acceleration type. By default a network is in `STANDARD` mode.
	Type string `pulumi:"type"`
}

// GetComputeInstanceGroupInstanceTemplateNetworkSettingInput is an input type that accepts GetComputeInstanceGroupInstanceTemplateNetworkSettingArgs and GetComputeInstanceGroupInstanceTemplateNetworkSettingOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupInstanceTemplateNetworkSettingInput` via:
//
//          GetComputeInstanceGroupInstanceTemplateNetworkSettingArgs{...}
type GetComputeInstanceGroupInstanceTemplateNetworkSettingInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupInstanceTemplateNetworkSettingOutput() GetComputeInstanceGroupInstanceTemplateNetworkSettingOutput
	ToGetComputeInstanceGroupInstanceTemplateNetworkSettingOutputWithContext(context.Context) GetComputeInstanceGroupInstanceTemplateNetworkSettingOutput
}

type GetComputeInstanceGroupInstanceTemplateNetworkSettingArgs struct {
	// Network acceleration type. By default a network is in `STANDARD` mode.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetComputeInstanceGroupInstanceTemplateNetworkSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceTemplateNetworkSetting)(nil)).Elem()
}

func (i GetComputeInstanceGroupInstanceTemplateNetworkSettingArgs) ToGetComputeInstanceGroupInstanceTemplateNetworkSettingOutput() GetComputeInstanceGroupInstanceTemplateNetworkSettingOutput {
	return i.ToGetComputeInstanceGroupInstanceTemplateNetworkSettingOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupInstanceTemplateNetworkSettingArgs) ToGetComputeInstanceGroupInstanceTemplateNetworkSettingOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateNetworkSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupInstanceTemplateNetworkSettingOutput)
}

// GetComputeInstanceGroupInstanceTemplateNetworkSettingArrayInput is an input type that accepts GetComputeInstanceGroupInstanceTemplateNetworkSettingArray and GetComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupInstanceTemplateNetworkSettingArrayInput` via:
//
//          GetComputeInstanceGroupInstanceTemplateNetworkSettingArray{ GetComputeInstanceGroupInstanceTemplateNetworkSettingArgs{...} }
type GetComputeInstanceGroupInstanceTemplateNetworkSettingArrayInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput() GetComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput
	ToGetComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutputWithContext(context.Context) GetComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput
}

type GetComputeInstanceGroupInstanceTemplateNetworkSettingArray []GetComputeInstanceGroupInstanceTemplateNetworkSettingInput

func (GetComputeInstanceGroupInstanceTemplateNetworkSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupInstanceTemplateNetworkSetting)(nil)).Elem()
}

func (i GetComputeInstanceGroupInstanceTemplateNetworkSettingArray) ToGetComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput() GetComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput {
	return i.ToGetComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupInstanceTemplateNetworkSettingArray) ToGetComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput)
}

type GetComputeInstanceGroupInstanceTemplateNetworkSettingOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupInstanceTemplateNetworkSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceTemplateNetworkSetting)(nil)).Elem()
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkSettingOutput) ToGetComputeInstanceGroupInstanceTemplateNetworkSettingOutput() GetComputeInstanceGroupInstanceTemplateNetworkSettingOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkSettingOutput) ToGetComputeInstanceGroupInstanceTemplateNetworkSettingOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateNetworkSettingOutput {
	return o
}

// Network acceleration type. By default a network is in `STANDARD` mode.
func (o GetComputeInstanceGroupInstanceTemplateNetworkSettingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateNetworkSetting) string { return v.Type }).(pulumi.StringOutput)
}

type GetComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupInstanceTemplateNetworkSetting)(nil)).Elem()
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput) ToGetComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput() GetComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput) ToGetComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput) Index(i pulumi.IntInput) GetComputeInstanceGroupInstanceTemplateNetworkSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstanceGroupInstanceTemplateNetworkSetting {
		return vs[0].([]GetComputeInstanceGroupInstanceTemplateNetworkSetting)[vs[1].(int)]
	}).(GetComputeInstanceGroupInstanceTemplateNetworkSettingOutput)
}

type GetComputeInstanceGroupInstanceTemplatePlacementPolicy struct {
	PlacementGroupId string `pulumi:"placementGroupId"`
}

// GetComputeInstanceGroupInstanceTemplatePlacementPolicyInput is an input type that accepts GetComputeInstanceGroupInstanceTemplatePlacementPolicyArgs and GetComputeInstanceGroupInstanceTemplatePlacementPolicyOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupInstanceTemplatePlacementPolicyInput` via:
//
//          GetComputeInstanceGroupInstanceTemplatePlacementPolicyArgs{...}
type GetComputeInstanceGroupInstanceTemplatePlacementPolicyInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupInstanceTemplatePlacementPolicyOutput() GetComputeInstanceGroupInstanceTemplatePlacementPolicyOutput
	ToGetComputeInstanceGroupInstanceTemplatePlacementPolicyOutputWithContext(context.Context) GetComputeInstanceGroupInstanceTemplatePlacementPolicyOutput
}

type GetComputeInstanceGroupInstanceTemplatePlacementPolicyArgs struct {
	PlacementGroupId pulumi.StringInput `pulumi:"placementGroupId"`
}

func (GetComputeInstanceGroupInstanceTemplatePlacementPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceTemplatePlacementPolicy)(nil)).Elem()
}

func (i GetComputeInstanceGroupInstanceTemplatePlacementPolicyArgs) ToGetComputeInstanceGroupInstanceTemplatePlacementPolicyOutput() GetComputeInstanceGroupInstanceTemplatePlacementPolicyOutput {
	return i.ToGetComputeInstanceGroupInstanceTemplatePlacementPolicyOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupInstanceTemplatePlacementPolicyArgs) ToGetComputeInstanceGroupInstanceTemplatePlacementPolicyOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplatePlacementPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupInstanceTemplatePlacementPolicyOutput)
}

func (i GetComputeInstanceGroupInstanceTemplatePlacementPolicyArgs) ToGetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput() GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput {
	return i.ToGetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupInstanceTemplatePlacementPolicyArgs) ToGetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupInstanceTemplatePlacementPolicyOutput).ToGetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutputWithContext(ctx)
}

// GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrInput is an input type that accepts GetComputeInstanceGroupInstanceTemplatePlacementPolicyArgs, GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtr and GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrInput` via:
//
//          GetComputeInstanceGroupInstanceTemplatePlacementPolicyArgs{...}
//
//  or:
//
//          nil
type GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput() GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput
	ToGetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutputWithContext(context.Context) GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput
}

type getComputeInstanceGroupInstanceTemplatePlacementPolicyPtrType GetComputeInstanceGroupInstanceTemplatePlacementPolicyArgs

func GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtr(v *GetComputeInstanceGroupInstanceTemplatePlacementPolicyArgs) GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrInput {
	return (*getComputeInstanceGroupInstanceTemplatePlacementPolicyPtrType)(v)
}

func (*getComputeInstanceGroupInstanceTemplatePlacementPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetComputeInstanceGroupInstanceTemplatePlacementPolicy)(nil)).Elem()
}

func (i *getComputeInstanceGroupInstanceTemplatePlacementPolicyPtrType) ToGetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput() GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput {
	return i.ToGetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutputWithContext(context.Background())
}

func (i *getComputeInstanceGroupInstanceTemplatePlacementPolicyPtrType) ToGetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput)
}

type GetComputeInstanceGroupInstanceTemplatePlacementPolicyOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupInstanceTemplatePlacementPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceTemplatePlacementPolicy)(nil)).Elem()
}

func (o GetComputeInstanceGroupInstanceTemplatePlacementPolicyOutput) ToGetComputeInstanceGroupInstanceTemplatePlacementPolicyOutput() GetComputeInstanceGroupInstanceTemplatePlacementPolicyOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplatePlacementPolicyOutput) ToGetComputeInstanceGroupInstanceTemplatePlacementPolicyOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplatePlacementPolicyOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplatePlacementPolicyOutput) ToGetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput() GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput {
	return o.ToGetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutputWithContext(context.Background())
}

func (o GetComputeInstanceGroupInstanceTemplatePlacementPolicyOutput) ToGetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplatePlacementPolicy) *GetComputeInstanceGroupInstanceTemplatePlacementPolicy {
		return &v
	}).(GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput)
}
func (o GetComputeInstanceGroupInstanceTemplatePlacementPolicyOutput) PlacementGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplatePlacementPolicy) string { return v.PlacementGroupId }).(pulumi.StringOutput)
}

type GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetComputeInstanceGroupInstanceTemplatePlacementPolicy)(nil)).Elem()
}

func (o GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput) ToGetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput() GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput) ToGetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput) Elem() GetComputeInstanceGroupInstanceTemplatePlacementPolicyOutput {
	return o.ApplyT(func(v *GetComputeInstanceGroupInstanceTemplatePlacementPolicy) GetComputeInstanceGroupInstanceTemplatePlacementPolicy {
		return *v
	}).(GetComputeInstanceGroupInstanceTemplatePlacementPolicyOutput)
}

func (o GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput) PlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetComputeInstanceGroupInstanceTemplatePlacementPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.PlacementGroupId
	}).(pulumi.StringPtrOutput)
}

type GetComputeInstanceGroupInstanceTemplateResources struct {
	CoreFraction int     `pulumi:"coreFraction"`
	Cores        int     `pulumi:"cores"`
	Gpus         int     `pulumi:"gpus"`
	Memory       float64 `pulumi:"memory"`
}

// GetComputeInstanceGroupInstanceTemplateResourcesInput is an input type that accepts GetComputeInstanceGroupInstanceTemplateResourcesArgs and GetComputeInstanceGroupInstanceTemplateResourcesOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupInstanceTemplateResourcesInput` via:
//
//          GetComputeInstanceGroupInstanceTemplateResourcesArgs{...}
type GetComputeInstanceGroupInstanceTemplateResourcesInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupInstanceTemplateResourcesOutput() GetComputeInstanceGroupInstanceTemplateResourcesOutput
	ToGetComputeInstanceGroupInstanceTemplateResourcesOutputWithContext(context.Context) GetComputeInstanceGroupInstanceTemplateResourcesOutput
}

type GetComputeInstanceGroupInstanceTemplateResourcesArgs struct {
	CoreFraction pulumi.IntInput     `pulumi:"coreFraction"`
	Cores        pulumi.IntInput     `pulumi:"cores"`
	Gpus         pulumi.IntInput     `pulumi:"gpus"`
	Memory       pulumi.Float64Input `pulumi:"memory"`
}

func (GetComputeInstanceGroupInstanceTemplateResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceTemplateResources)(nil)).Elem()
}

func (i GetComputeInstanceGroupInstanceTemplateResourcesArgs) ToGetComputeInstanceGroupInstanceTemplateResourcesOutput() GetComputeInstanceGroupInstanceTemplateResourcesOutput {
	return i.ToGetComputeInstanceGroupInstanceTemplateResourcesOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupInstanceTemplateResourcesArgs) ToGetComputeInstanceGroupInstanceTemplateResourcesOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupInstanceTemplateResourcesOutput)
}

type GetComputeInstanceGroupInstanceTemplateResourcesOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupInstanceTemplateResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceTemplateResources)(nil)).Elem()
}

func (o GetComputeInstanceGroupInstanceTemplateResourcesOutput) ToGetComputeInstanceGroupInstanceTemplateResourcesOutput() GetComputeInstanceGroupInstanceTemplateResourcesOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateResourcesOutput) ToGetComputeInstanceGroupInstanceTemplateResourcesOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateResourcesOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateResourcesOutput) CoreFraction() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateResources) int { return v.CoreFraction }).(pulumi.IntOutput)
}

func (o GetComputeInstanceGroupInstanceTemplateResourcesOutput) Cores() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateResources) int { return v.Cores }).(pulumi.IntOutput)
}

func (o GetComputeInstanceGroupInstanceTemplateResourcesOutput) Gpus() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateResources) int { return v.Gpus }).(pulumi.IntOutput)
}

func (o GetComputeInstanceGroupInstanceTemplateResourcesOutput) Memory() pulumi.Float64Output {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateResources) float64 { return v.Memory }).(pulumi.Float64Output)
}

type GetComputeInstanceGroupInstanceTemplateSchedulingPolicy struct {
	// Specifies if the instance is preemptible. Defaults to false.
	Preemptible bool `pulumi:"preemptible"`
}

// GetComputeInstanceGroupInstanceTemplateSchedulingPolicyInput is an input type that accepts GetComputeInstanceGroupInstanceTemplateSchedulingPolicyArgs and GetComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupInstanceTemplateSchedulingPolicyInput` via:
//
//          GetComputeInstanceGroupInstanceTemplateSchedulingPolicyArgs{...}
type GetComputeInstanceGroupInstanceTemplateSchedulingPolicyInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput() GetComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput
	ToGetComputeInstanceGroupInstanceTemplateSchedulingPolicyOutputWithContext(context.Context) GetComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput
}

type GetComputeInstanceGroupInstanceTemplateSchedulingPolicyArgs struct {
	// Specifies if the instance is preemptible. Defaults to false.
	Preemptible pulumi.BoolInput `pulumi:"preemptible"`
}

func (GetComputeInstanceGroupInstanceTemplateSchedulingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceTemplateSchedulingPolicy)(nil)).Elem()
}

func (i GetComputeInstanceGroupInstanceTemplateSchedulingPolicyArgs) ToGetComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput() GetComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput {
	return i.ToGetComputeInstanceGroupInstanceTemplateSchedulingPolicyOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupInstanceTemplateSchedulingPolicyArgs) ToGetComputeInstanceGroupInstanceTemplateSchedulingPolicyOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput)
}

type GetComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceTemplateSchedulingPolicy)(nil)).Elem()
}

func (o GetComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput) ToGetComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput() GetComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput) ToGetComputeInstanceGroupInstanceTemplateSchedulingPolicyOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput {
	return o
}

// Specifies if the instance is preemptible. Defaults to false.
func (o GetComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput) Preemptible() pulumi.BoolOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateSchedulingPolicy) bool { return v.Preemptible }).(pulumi.BoolOutput)
}

type GetComputeInstanceGroupInstanceTemplateSecondaryDisk struct {
	// This value can be used to reference the device under `/dev/disk/by-id/`.
	DeviceName string `pulumi:"deviceName"`
	// The parameters used for creating a disk alongside the instance. The structure is documented below.
	InitializeParams GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParams `pulumi:"initializeParams"`
	// The access mode to the disk resource. By default a disk is attached in `READ_WRITE` mode.
	Mode string `pulumi:"mode"`
}

// GetComputeInstanceGroupInstanceTemplateSecondaryDiskInput is an input type that accepts GetComputeInstanceGroupInstanceTemplateSecondaryDiskArgs and GetComputeInstanceGroupInstanceTemplateSecondaryDiskOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupInstanceTemplateSecondaryDiskInput` via:
//
//          GetComputeInstanceGroupInstanceTemplateSecondaryDiskArgs{...}
type GetComputeInstanceGroupInstanceTemplateSecondaryDiskInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupInstanceTemplateSecondaryDiskOutput() GetComputeInstanceGroupInstanceTemplateSecondaryDiskOutput
	ToGetComputeInstanceGroupInstanceTemplateSecondaryDiskOutputWithContext(context.Context) GetComputeInstanceGroupInstanceTemplateSecondaryDiskOutput
}

type GetComputeInstanceGroupInstanceTemplateSecondaryDiskArgs struct {
	// This value can be used to reference the device under `/dev/disk/by-id/`.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// The parameters used for creating a disk alongside the instance. The structure is documented below.
	InitializeParams GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsInput `pulumi:"initializeParams"`
	// The access mode to the disk resource. By default a disk is attached in `READ_WRITE` mode.
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetComputeInstanceGroupInstanceTemplateSecondaryDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceTemplateSecondaryDisk)(nil)).Elem()
}

func (i GetComputeInstanceGroupInstanceTemplateSecondaryDiskArgs) ToGetComputeInstanceGroupInstanceTemplateSecondaryDiskOutput() GetComputeInstanceGroupInstanceTemplateSecondaryDiskOutput {
	return i.ToGetComputeInstanceGroupInstanceTemplateSecondaryDiskOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupInstanceTemplateSecondaryDiskArgs) ToGetComputeInstanceGroupInstanceTemplateSecondaryDiskOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateSecondaryDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupInstanceTemplateSecondaryDiskOutput)
}

// GetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayInput is an input type that accepts GetComputeInstanceGroupInstanceTemplateSecondaryDiskArray and GetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayInput` via:
//
//          GetComputeInstanceGroupInstanceTemplateSecondaryDiskArray{ GetComputeInstanceGroupInstanceTemplateSecondaryDiskArgs{...} }
type GetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput() GetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput
	ToGetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutputWithContext(context.Context) GetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput
}

type GetComputeInstanceGroupInstanceTemplateSecondaryDiskArray []GetComputeInstanceGroupInstanceTemplateSecondaryDiskInput

func (GetComputeInstanceGroupInstanceTemplateSecondaryDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupInstanceTemplateSecondaryDisk)(nil)).Elem()
}

func (i GetComputeInstanceGroupInstanceTemplateSecondaryDiskArray) ToGetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput() GetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput {
	return i.ToGetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupInstanceTemplateSecondaryDiskArray) ToGetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput)
}

type GetComputeInstanceGroupInstanceTemplateSecondaryDiskOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupInstanceTemplateSecondaryDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceTemplateSecondaryDisk)(nil)).Elem()
}

func (o GetComputeInstanceGroupInstanceTemplateSecondaryDiskOutput) ToGetComputeInstanceGroupInstanceTemplateSecondaryDiskOutput() GetComputeInstanceGroupInstanceTemplateSecondaryDiskOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateSecondaryDiskOutput) ToGetComputeInstanceGroupInstanceTemplateSecondaryDiskOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateSecondaryDiskOutput {
	return o
}

// This value can be used to reference the device under `/dev/disk/by-id/`.
func (o GetComputeInstanceGroupInstanceTemplateSecondaryDiskOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateSecondaryDisk) string { return v.DeviceName }).(pulumi.StringOutput)
}

// The parameters used for creating a disk alongside the instance. The structure is documented below.
func (o GetComputeInstanceGroupInstanceTemplateSecondaryDiskOutput) InitializeParams() GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateSecondaryDisk) GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParams {
		return v.InitializeParams
	}).(GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput)
}

// The access mode to the disk resource. By default a disk is attached in `READ_WRITE` mode.
func (o GetComputeInstanceGroupInstanceTemplateSecondaryDiskOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateSecondaryDisk) string { return v.Mode }).(pulumi.StringOutput)
}

type GetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupInstanceTemplateSecondaryDisk)(nil)).Elem()
}

func (o GetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput) ToGetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput() GetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput) ToGetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput) Index(i pulumi.IntInput) GetComputeInstanceGroupInstanceTemplateSecondaryDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstanceGroupInstanceTemplateSecondaryDisk {
		return vs[0].([]GetComputeInstanceGroupInstanceTemplateSecondaryDisk)[vs[1].(int)]
	}).(GetComputeInstanceGroupInstanceTemplateSecondaryDiskOutput)
}

type GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParams struct {
	// A description of the boot disk.
	Description string `pulumi:"description"`
	// The disk image to initialize this disk from.
	ImageId string `pulumi:"imageId"`
	// The size of the disk in GB.
	Size int `pulumi:"size"`
	// The snapshot to initialize this disk from.
	SnapshotId string `pulumi:"snapshotId"`
	// Network acceleration type. By default a network is in `STANDARD` mode.
	Type string `pulumi:"type"`
}

// GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsInput is an input type that accepts GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsArgs and GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsInput` via:
//
//          GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsArgs{...}
type GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput() GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput
	ToGetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutputWithContext(context.Context) GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput
}

type GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsArgs struct {
	// A description of the boot disk.
	Description pulumi.StringInput `pulumi:"description"`
	// The disk image to initialize this disk from.
	ImageId pulumi.StringInput `pulumi:"imageId"`
	// The size of the disk in GB.
	Size pulumi.IntInput `pulumi:"size"`
	// The snapshot to initialize this disk from.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// Network acceleration type. By default a network is in `STANDARD` mode.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParams)(nil)).Elem()
}

func (i GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsArgs) ToGetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput() GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput {
	return i.ToGetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsArgs) ToGetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput)
}

type GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParams)(nil)).Elem()
}

func (o GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput) ToGetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput() GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput {
	return o
}

func (o GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput) ToGetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutputWithContext(ctx context.Context) GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput {
	return o
}

// A description of the boot disk.
func (o GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParams) string {
		return v.Description
	}).(pulumi.StringOutput)
}

// The disk image to initialize this disk from.
func (o GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParams) string { return v.ImageId }).(pulumi.StringOutput)
}

// The size of the disk in GB.
func (o GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParams) int { return v.Size }).(pulumi.IntOutput)
}

// The snapshot to initialize this disk from.
func (o GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParams) string {
		return v.SnapshotId
	}).(pulumi.StringOutput)
}

// Network acceleration type. By default a network is in `STANDARD` mode.
func (o GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParams) string { return v.Type }).(pulumi.StringOutput)
}

type GetComputeInstanceGroupLoadBalancer struct {
	// The status message of the target group.
	StatusMessage string `pulumi:"statusMessage"`
	// A description of the target group.
	TargetGroupDescription string `pulumi:"targetGroupDescription"`
	// The ID of the target group.
	TargetGroupId string `pulumi:"targetGroupId"`
	// A set of key/value label pairs.
	TargetGroupLabels map[string]string `pulumi:"targetGroupLabels"`
	// The name of the target group.
	TargetGroupName string `pulumi:"targetGroupName"`
}

// GetComputeInstanceGroupLoadBalancerInput is an input type that accepts GetComputeInstanceGroupLoadBalancerArgs and GetComputeInstanceGroupLoadBalancerOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupLoadBalancerInput` via:
//
//          GetComputeInstanceGroupLoadBalancerArgs{...}
type GetComputeInstanceGroupLoadBalancerInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupLoadBalancerOutput() GetComputeInstanceGroupLoadBalancerOutput
	ToGetComputeInstanceGroupLoadBalancerOutputWithContext(context.Context) GetComputeInstanceGroupLoadBalancerOutput
}

type GetComputeInstanceGroupLoadBalancerArgs struct {
	// The status message of the target group.
	StatusMessage pulumi.StringInput `pulumi:"statusMessage"`
	// A description of the target group.
	TargetGroupDescription pulumi.StringInput `pulumi:"targetGroupDescription"`
	// The ID of the target group.
	TargetGroupId pulumi.StringInput `pulumi:"targetGroupId"`
	// A set of key/value label pairs.
	TargetGroupLabels pulumi.StringMapInput `pulumi:"targetGroupLabels"`
	// The name of the target group.
	TargetGroupName pulumi.StringInput `pulumi:"targetGroupName"`
}

func (GetComputeInstanceGroupLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupLoadBalancer)(nil)).Elem()
}

func (i GetComputeInstanceGroupLoadBalancerArgs) ToGetComputeInstanceGroupLoadBalancerOutput() GetComputeInstanceGroupLoadBalancerOutput {
	return i.ToGetComputeInstanceGroupLoadBalancerOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupLoadBalancerArgs) ToGetComputeInstanceGroupLoadBalancerOutputWithContext(ctx context.Context) GetComputeInstanceGroupLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupLoadBalancerOutput)
}

type GetComputeInstanceGroupLoadBalancerOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupLoadBalancer)(nil)).Elem()
}

func (o GetComputeInstanceGroupLoadBalancerOutput) ToGetComputeInstanceGroupLoadBalancerOutput() GetComputeInstanceGroupLoadBalancerOutput {
	return o
}

func (o GetComputeInstanceGroupLoadBalancerOutput) ToGetComputeInstanceGroupLoadBalancerOutputWithContext(ctx context.Context) GetComputeInstanceGroupLoadBalancerOutput {
	return o
}

// The status message of the target group.
func (o GetComputeInstanceGroupLoadBalancerOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupLoadBalancer) string { return v.StatusMessage }).(pulumi.StringOutput)
}

// A description of the target group.
func (o GetComputeInstanceGroupLoadBalancerOutput) TargetGroupDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupLoadBalancer) string { return v.TargetGroupDescription }).(pulumi.StringOutput)
}

// The ID of the target group.
func (o GetComputeInstanceGroupLoadBalancerOutput) TargetGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupLoadBalancer) string { return v.TargetGroupId }).(pulumi.StringOutput)
}

// A set of key/value label pairs.
func (o GetComputeInstanceGroupLoadBalancerOutput) TargetGroupLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupLoadBalancer) map[string]string { return v.TargetGroupLabels }).(pulumi.StringMapOutput)
}

// The name of the target group.
func (o GetComputeInstanceGroupLoadBalancerOutput) TargetGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupLoadBalancer) string { return v.TargetGroupName }).(pulumi.StringOutput)
}

type GetComputeInstanceGroupLoadBalancerState struct {
	// The status message of the target group.
	StatusMessage string `pulumi:"statusMessage"`
	// The ID of the target group.
	TargetGroupId string `pulumi:"targetGroupId"`
}

// GetComputeInstanceGroupLoadBalancerStateInput is an input type that accepts GetComputeInstanceGroupLoadBalancerStateArgs and GetComputeInstanceGroupLoadBalancerStateOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupLoadBalancerStateInput` via:
//
//          GetComputeInstanceGroupLoadBalancerStateArgs{...}
type GetComputeInstanceGroupLoadBalancerStateInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupLoadBalancerStateOutput() GetComputeInstanceGroupLoadBalancerStateOutput
	ToGetComputeInstanceGroupLoadBalancerStateOutputWithContext(context.Context) GetComputeInstanceGroupLoadBalancerStateOutput
}

type GetComputeInstanceGroupLoadBalancerStateArgs struct {
	// The status message of the target group.
	StatusMessage pulumi.StringInput `pulumi:"statusMessage"`
	// The ID of the target group.
	TargetGroupId pulumi.StringInput `pulumi:"targetGroupId"`
}

func (GetComputeInstanceGroupLoadBalancerStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupLoadBalancerState)(nil)).Elem()
}

func (i GetComputeInstanceGroupLoadBalancerStateArgs) ToGetComputeInstanceGroupLoadBalancerStateOutput() GetComputeInstanceGroupLoadBalancerStateOutput {
	return i.ToGetComputeInstanceGroupLoadBalancerStateOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupLoadBalancerStateArgs) ToGetComputeInstanceGroupLoadBalancerStateOutputWithContext(ctx context.Context) GetComputeInstanceGroupLoadBalancerStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupLoadBalancerStateOutput)
}

type GetComputeInstanceGroupLoadBalancerStateOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupLoadBalancerStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupLoadBalancerState)(nil)).Elem()
}

func (o GetComputeInstanceGroupLoadBalancerStateOutput) ToGetComputeInstanceGroupLoadBalancerStateOutput() GetComputeInstanceGroupLoadBalancerStateOutput {
	return o
}

func (o GetComputeInstanceGroupLoadBalancerStateOutput) ToGetComputeInstanceGroupLoadBalancerStateOutputWithContext(ctx context.Context) GetComputeInstanceGroupLoadBalancerStateOutput {
	return o
}

// The status message of the target group.
func (o GetComputeInstanceGroupLoadBalancerStateOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupLoadBalancerState) string { return v.StatusMessage }).(pulumi.StringOutput)
}

// The ID of the target group.
func (o GetComputeInstanceGroupLoadBalancerStateOutput) TargetGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupLoadBalancerState) string { return v.TargetGroupId }).(pulumi.StringOutput)
}

type GetComputeInstanceGroupScalePolicy struct {
	// The auto scaling policy of the instance group. The structure is documented below.
	AutoScales []GetComputeInstanceGroupScalePolicyAutoScale `pulumi:"autoScales"`
	// The fixed scaling policy of the instance group. The structure is documented below.
	FixedScales []GetComputeInstanceGroupScalePolicyFixedScale `pulumi:"fixedScales"`
	// The test auto scaling policy of the instance group. Use it to test how the auto scale works.
	// The structure is documented below.
	// ---
	TestAutoScales []GetComputeInstanceGroupScalePolicyTestAutoScale `pulumi:"testAutoScales"`
}

// GetComputeInstanceGroupScalePolicyInput is an input type that accepts GetComputeInstanceGroupScalePolicyArgs and GetComputeInstanceGroupScalePolicyOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupScalePolicyInput` via:
//
//          GetComputeInstanceGroupScalePolicyArgs{...}
type GetComputeInstanceGroupScalePolicyInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupScalePolicyOutput() GetComputeInstanceGroupScalePolicyOutput
	ToGetComputeInstanceGroupScalePolicyOutputWithContext(context.Context) GetComputeInstanceGroupScalePolicyOutput
}

type GetComputeInstanceGroupScalePolicyArgs struct {
	// The auto scaling policy of the instance group. The structure is documented below.
	AutoScales GetComputeInstanceGroupScalePolicyAutoScaleArrayInput `pulumi:"autoScales"`
	// The fixed scaling policy of the instance group. The structure is documented below.
	FixedScales GetComputeInstanceGroupScalePolicyFixedScaleArrayInput `pulumi:"fixedScales"`
	// The test auto scaling policy of the instance group. Use it to test how the auto scale works.
	// The structure is documented below.
	// ---
	TestAutoScales GetComputeInstanceGroupScalePolicyTestAutoScaleArrayInput `pulumi:"testAutoScales"`
}

func (GetComputeInstanceGroupScalePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupScalePolicy)(nil)).Elem()
}

func (i GetComputeInstanceGroupScalePolicyArgs) ToGetComputeInstanceGroupScalePolicyOutput() GetComputeInstanceGroupScalePolicyOutput {
	return i.ToGetComputeInstanceGroupScalePolicyOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupScalePolicyArgs) ToGetComputeInstanceGroupScalePolicyOutputWithContext(ctx context.Context) GetComputeInstanceGroupScalePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupScalePolicyOutput)
}

type GetComputeInstanceGroupScalePolicyOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupScalePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupScalePolicy)(nil)).Elem()
}

func (o GetComputeInstanceGroupScalePolicyOutput) ToGetComputeInstanceGroupScalePolicyOutput() GetComputeInstanceGroupScalePolicyOutput {
	return o
}

func (o GetComputeInstanceGroupScalePolicyOutput) ToGetComputeInstanceGroupScalePolicyOutputWithContext(ctx context.Context) GetComputeInstanceGroupScalePolicyOutput {
	return o
}

// The auto scaling policy of the instance group. The structure is documented below.
func (o GetComputeInstanceGroupScalePolicyOutput) AutoScales() GetComputeInstanceGroupScalePolicyAutoScaleArrayOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicy) []GetComputeInstanceGroupScalePolicyAutoScale {
		return v.AutoScales
	}).(GetComputeInstanceGroupScalePolicyAutoScaleArrayOutput)
}

// The fixed scaling policy of the instance group. The structure is documented below.
func (o GetComputeInstanceGroupScalePolicyOutput) FixedScales() GetComputeInstanceGroupScalePolicyFixedScaleArrayOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicy) []GetComputeInstanceGroupScalePolicyFixedScale {
		return v.FixedScales
	}).(GetComputeInstanceGroupScalePolicyFixedScaleArrayOutput)
}

// The test auto scaling policy of the instance group. Use it to test how the auto scale works.
// The structure is documented below.
// ---
func (o GetComputeInstanceGroupScalePolicyOutput) TestAutoScales() GetComputeInstanceGroupScalePolicyTestAutoScaleArrayOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicy) []GetComputeInstanceGroupScalePolicyTestAutoScale {
		return v.TestAutoScales
	}).(GetComputeInstanceGroupScalePolicyTestAutoScaleArrayOutput)
}

type GetComputeInstanceGroupScalePolicyAutoScale struct {
	// Target CPU load level.
	CpuUtilizationTarget float64 `pulumi:"cpuUtilizationTarget"`
	// A list of custom rules. The structure is documented below.
	CustomRules []GetComputeInstanceGroupScalePolicyAutoScaleCustomRule `pulumi:"customRules"`
	// The initial number of instances in the instance group.
	InitialSize int `pulumi:"initialSize"`
	// The maximum number of virtual machines in the group.
	MaxSize int `pulumi:"maxSize"`
	// The amount of time, in seconds, that metrics are averaged for.
	// If the average value at the end of the interval is higher than the `cpuUtilizationTarget`,
	// the instance group will increase the number of virtual machines in the group.
	MeasurementDuration int `pulumi:"measurementDuration"`
	// The minimum number of virtual machines in a single availability zone.
	MinZoneSize int `pulumi:"minZoneSize"`
	// The minimum time interval, in seconds, to monitor the load before
	// an instance group can reduce the number of virtual machines in the group. During this time, the group
	// will not decrease even if the average load falls below the value of `cpuUtilizationTarget`.
	StabilizationDuration int `pulumi:"stabilizationDuration"`
	// The warm-up time of the virtual machine, in seconds. During this time,
	// traffic is fed to the virtual machine, but load metrics are not taken into account.
	WarmupDuration int `pulumi:"warmupDuration"`
}

// GetComputeInstanceGroupScalePolicyAutoScaleInput is an input type that accepts GetComputeInstanceGroupScalePolicyAutoScaleArgs and GetComputeInstanceGroupScalePolicyAutoScaleOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupScalePolicyAutoScaleInput` via:
//
//          GetComputeInstanceGroupScalePolicyAutoScaleArgs{...}
type GetComputeInstanceGroupScalePolicyAutoScaleInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupScalePolicyAutoScaleOutput() GetComputeInstanceGroupScalePolicyAutoScaleOutput
	ToGetComputeInstanceGroupScalePolicyAutoScaleOutputWithContext(context.Context) GetComputeInstanceGroupScalePolicyAutoScaleOutput
}

type GetComputeInstanceGroupScalePolicyAutoScaleArgs struct {
	// Target CPU load level.
	CpuUtilizationTarget pulumi.Float64Input `pulumi:"cpuUtilizationTarget"`
	// A list of custom rules. The structure is documented below.
	CustomRules GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayInput `pulumi:"customRules"`
	// The initial number of instances in the instance group.
	InitialSize pulumi.IntInput `pulumi:"initialSize"`
	// The maximum number of virtual machines in the group.
	MaxSize pulumi.IntInput `pulumi:"maxSize"`
	// The amount of time, in seconds, that metrics are averaged for.
	// If the average value at the end of the interval is higher than the `cpuUtilizationTarget`,
	// the instance group will increase the number of virtual machines in the group.
	MeasurementDuration pulumi.IntInput `pulumi:"measurementDuration"`
	// The minimum number of virtual machines in a single availability zone.
	MinZoneSize pulumi.IntInput `pulumi:"minZoneSize"`
	// The minimum time interval, in seconds, to monitor the load before
	// an instance group can reduce the number of virtual machines in the group. During this time, the group
	// will not decrease even if the average load falls below the value of `cpuUtilizationTarget`.
	StabilizationDuration pulumi.IntInput `pulumi:"stabilizationDuration"`
	// The warm-up time of the virtual machine, in seconds. During this time,
	// traffic is fed to the virtual machine, but load metrics are not taken into account.
	WarmupDuration pulumi.IntInput `pulumi:"warmupDuration"`
}

func (GetComputeInstanceGroupScalePolicyAutoScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupScalePolicyAutoScale)(nil)).Elem()
}

func (i GetComputeInstanceGroupScalePolicyAutoScaleArgs) ToGetComputeInstanceGroupScalePolicyAutoScaleOutput() GetComputeInstanceGroupScalePolicyAutoScaleOutput {
	return i.ToGetComputeInstanceGroupScalePolicyAutoScaleOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupScalePolicyAutoScaleArgs) ToGetComputeInstanceGroupScalePolicyAutoScaleOutputWithContext(ctx context.Context) GetComputeInstanceGroupScalePolicyAutoScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupScalePolicyAutoScaleOutput)
}

// GetComputeInstanceGroupScalePolicyAutoScaleArrayInput is an input type that accepts GetComputeInstanceGroupScalePolicyAutoScaleArray and GetComputeInstanceGroupScalePolicyAutoScaleArrayOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupScalePolicyAutoScaleArrayInput` via:
//
//          GetComputeInstanceGroupScalePolicyAutoScaleArray{ GetComputeInstanceGroupScalePolicyAutoScaleArgs{...} }
type GetComputeInstanceGroupScalePolicyAutoScaleArrayInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupScalePolicyAutoScaleArrayOutput() GetComputeInstanceGroupScalePolicyAutoScaleArrayOutput
	ToGetComputeInstanceGroupScalePolicyAutoScaleArrayOutputWithContext(context.Context) GetComputeInstanceGroupScalePolicyAutoScaleArrayOutput
}

type GetComputeInstanceGroupScalePolicyAutoScaleArray []GetComputeInstanceGroupScalePolicyAutoScaleInput

func (GetComputeInstanceGroupScalePolicyAutoScaleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupScalePolicyAutoScale)(nil)).Elem()
}

func (i GetComputeInstanceGroupScalePolicyAutoScaleArray) ToGetComputeInstanceGroupScalePolicyAutoScaleArrayOutput() GetComputeInstanceGroupScalePolicyAutoScaleArrayOutput {
	return i.ToGetComputeInstanceGroupScalePolicyAutoScaleArrayOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupScalePolicyAutoScaleArray) ToGetComputeInstanceGroupScalePolicyAutoScaleArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupScalePolicyAutoScaleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupScalePolicyAutoScaleArrayOutput)
}

type GetComputeInstanceGroupScalePolicyAutoScaleOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupScalePolicyAutoScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupScalePolicyAutoScale)(nil)).Elem()
}

func (o GetComputeInstanceGroupScalePolicyAutoScaleOutput) ToGetComputeInstanceGroupScalePolicyAutoScaleOutput() GetComputeInstanceGroupScalePolicyAutoScaleOutput {
	return o
}

func (o GetComputeInstanceGroupScalePolicyAutoScaleOutput) ToGetComputeInstanceGroupScalePolicyAutoScaleOutputWithContext(ctx context.Context) GetComputeInstanceGroupScalePolicyAutoScaleOutput {
	return o
}

// Target CPU load level.
func (o GetComputeInstanceGroupScalePolicyAutoScaleOutput) CpuUtilizationTarget() pulumi.Float64Output {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyAutoScale) float64 { return v.CpuUtilizationTarget }).(pulumi.Float64Output)
}

// A list of custom rules. The structure is documented below.
func (o GetComputeInstanceGroupScalePolicyAutoScaleOutput) CustomRules() GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyAutoScale) []GetComputeInstanceGroupScalePolicyAutoScaleCustomRule {
		return v.CustomRules
	}).(GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput)
}

// The initial number of instances in the instance group.
func (o GetComputeInstanceGroupScalePolicyAutoScaleOutput) InitialSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyAutoScale) int { return v.InitialSize }).(pulumi.IntOutput)
}

// The maximum number of virtual machines in the group.
func (o GetComputeInstanceGroupScalePolicyAutoScaleOutput) MaxSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyAutoScale) int { return v.MaxSize }).(pulumi.IntOutput)
}

// The amount of time, in seconds, that metrics are averaged for.
// If the average value at the end of the interval is higher than the `cpuUtilizationTarget`,
// the instance group will increase the number of virtual machines in the group.
func (o GetComputeInstanceGroupScalePolicyAutoScaleOutput) MeasurementDuration() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyAutoScale) int { return v.MeasurementDuration }).(pulumi.IntOutput)
}

// The minimum number of virtual machines in a single availability zone.
func (o GetComputeInstanceGroupScalePolicyAutoScaleOutput) MinZoneSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyAutoScale) int { return v.MinZoneSize }).(pulumi.IntOutput)
}

// The minimum time interval, in seconds, to monitor the load before
// an instance group can reduce the number of virtual machines in the group. During this time, the group
// will not decrease even if the average load falls below the value of `cpuUtilizationTarget`.
func (o GetComputeInstanceGroupScalePolicyAutoScaleOutput) StabilizationDuration() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyAutoScale) int { return v.StabilizationDuration }).(pulumi.IntOutput)
}

// The warm-up time of the virtual machine, in seconds. During this time,
// traffic is fed to the virtual machine, but load metrics are not taken into account.
func (o GetComputeInstanceGroupScalePolicyAutoScaleOutput) WarmupDuration() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyAutoScale) int { return v.WarmupDuration }).(pulumi.IntOutput)
}

type GetComputeInstanceGroupScalePolicyAutoScaleArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupScalePolicyAutoScaleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupScalePolicyAutoScale)(nil)).Elem()
}

func (o GetComputeInstanceGroupScalePolicyAutoScaleArrayOutput) ToGetComputeInstanceGroupScalePolicyAutoScaleArrayOutput() GetComputeInstanceGroupScalePolicyAutoScaleArrayOutput {
	return o
}

func (o GetComputeInstanceGroupScalePolicyAutoScaleArrayOutput) ToGetComputeInstanceGroupScalePolicyAutoScaleArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupScalePolicyAutoScaleArrayOutput {
	return o
}

func (o GetComputeInstanceGroupScalePolicyAutoScaleArrayOutput) Index(i pulumi.IntInput) GetComputeInstanceGroupScalePolicyAutoScaleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstanceGroupScalePolicyAutoScale {
		return vs[0].([]GetComputeInstanceGroupScalePolicyAutoScale)[vs[1].(int)]
	}).(GetComputeInstanceGroupScalePolicyAutoScaleOutput)
}

type GetComputeInstanceGroupScalePolicyAutoScaleCustomRule struct {
	// A map of labels applied to this instance.
	// * `resources.0.memory` - The memory size allocated to the instance.
	// * `resources.0.cores` - Number of CPU cores allocated to the instance.
	// * `resources.0.core_fraction` - Baseline core performance as a percent.
	// * `resources.0.gpus` - Number of GPU cores allocated to the instance.
	Labels map[string]string `pulumi:"labels"`
	// The name of metric.
	MetricName string `pulumi:"metricName"`
	// Metric type, `GAUGE` or `COUNTER`.
	MetricType string `pulumi:"metricType"`
	// Rule type: `UTILIZATION` - This type means that the metric applies to one instance.
	// First, Instance Groups calculates the average metric value for each instance,
	// then averages the values for instances in one availability zone.
	// This type of metric must have the `instanceId` label. `WORKLOAD` - This type means that the metric applies to instances in one availability zone.
	// This type of metric must have the `zoneId` label.
	RuleType string `pulumi:"ruleType"`
	// Target metric value level.
	Target float64 `pulumi:"target"`
}

// GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleInput is an input type that accepts GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArgs and GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleInput` via:
//
//          GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArgs{...}
type GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput() GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput
	ToGetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutputWithContext(context.Context) GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput
}

type GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArgs struct {
	// A map of labels applied to this instance.
	// * `resources.0.memory` - The memory size allocated to the instance.
	// * `resources.0.cores` - Number of CPU cores allocated to the instance.
	// * `resources.0.core_fraction` - Baseline core performance as a percent.
	// * `resources.0.gpus` - Number of GPU cores allocated to the instance.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The name of metric.
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// Metric type, `GAUGE` or `COUNTER`.
	MetricType pulumi.StringInput `pulumi:"metricType"`
	// Rule type: `UTILIZATION` - This type means that the metric applies to one instance.
	// First, Instance Groups calculates the average metric value for each instance,
	// then averages the values for instances in one availability zone.
	// This type of metric must have the `instanceId` label. `WORKLOAD` - This type means that the metric applies to instances in one availability zone.
	// This type of metric must have the `zoneId` label.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
	// Target metric value level.
	Target pulumi.Float64Input `pulumi:"target"`
}

func (GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupScalePolicyAutoScaleCustomRule)(nil)).Elem()
}

func (i GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArgs) ToGetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput() GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput {
	return i.ToGetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArgs) ToGetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutputWithContext(ctx context.Context) GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput)
}

// GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayInput is an input type that accepts GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArray and GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayInput` via:
//
//          GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArray{ GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArgs{...} }
type GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput() GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput
	ToGetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutputWithContext(context.Context) GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput
}

type GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArray []GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleInput

func (GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupScalePolicyAutoScaleCustomRule)(nil)).Elem()
}

func (i GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArray) ToGetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput() GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput {
	return i.ToGetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArray) ToGetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput)
}

type GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupScalePolicyAutoScaleCustomRule)(nil)).Elem()
}

func (o GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput) ToGetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput() GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput {
	return o
}

func (o GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput) ToGetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutputWithContext(ctx context.Context) GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput {
	return o
}

// A map of labels applied to this instance.
// * `resources.0.memory` - The memory size allocated to the instance.
// * `resources.0.cores` - Number of CPU cores allocated to the instance.
// * `resources.0.core_fraction` - Baseline core performance as a percent.
// * `resources.0.gpus` - Number of GPU cores allocated to the instance.
func (o GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyAutoScaleCustomRule) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The name of metric.
func (o GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyAutoScaleCustomRule) string { return v.MetricName }).(pulumi.StringOutput)
}

// Metric type, `GAUGE` or `COUNTER`.
func (o GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput) MetricType() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyAutoScaleCustomRule) string { return v.MetricType }).(pulumi.StringOutput)
}

// Rule type: `UTILIZATION` - This type means that the metric applies to one instance.
// First, Instance Groups calculates the average metric value for each instance,
// then averages the values for instances in one availability zone.
// This type of metric must have the `instanceId` label. `WORKLOAD` - This type means that the metric applies to instances in one availability zone.
// This type of metric must have the `zoneId` label.
func (o GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyAutoScaleCustomRule) string { return v.RuleType }).(pulumi.StringOutput)
}

// Target metric value level.
func (o GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput) Target() pulumi.Float64Output {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyAutoScaleCustomRule) float64 { return v.Target }).(pulumi.Float64Output)
}

type GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupScalePolicyAutoScaleCustomRule)(nil)).Elem()
}

func (o GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput) ToGetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput() GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput {
	return o
}

func (o GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput) ToGetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput {
	return o
}

func (o GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput) Index(i pulumi.IntInput) GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstanceGroupScalePolicyAutoScaleCustomRule {
		return vs[0].([]GetComputeInstanceGroupScalePolicyAutoScaleCustomRule)[vs[1].(int)]
	}).(GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput)
}

type GetComputeInstanceGroupScalePolicyFixedScale struct {
	// The size of the disk in GB.
	Size int `pulumi:"size"`
}

// GetComputeInstanceGroupScalePolicyFixedScaleInput is an input type that accepts GetComputeInstanceGroupScalePolicyFixedScaleArgs and GetComputeInstanceGroupScalePolicyFixedScaleOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupScalePolicyFixedScaleInput` via:
//
//          GetComputeInstanceGroupScalePolicyFixedScaleArgs{...}
type GetComputeInstanceGroupScalePolicyFixedScaleInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupScalePolicyFixedScaleOutput() GetComputeInstanceGroupScalePolicyFixedScaleOutput
	ToGetComputeInstanceGroupScalePolicyFixedScaleOutputWithContext(context.Context) GetComputeInstanceGroupScalePolicyFixedScaleOutput
}

type GetComputeInstanceGroupScalePolicyFixedScaleArgs struct {
	// The size of the disk in GB.
	Size pulumi.IntInput `pulumi:"size"`
}

func (GetComputeInstanceGroupScalePolicyFixedScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupScalePolicyFixedScale)(nil)).Elem()
}

func (i GetComputeInstanceGroupScalePolicyFixedScaleArgs) ToGetComputeInstanceGroupScalePolicyFixedScaleOutput() GetComputeInstanceGroupScalePolicyFixedScaleOutput {
	return i.ToGetComputeInstanceGroupScalePolicyFixedScaleOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupScalePolicyFixedScaleArgs) ToGetComputeInstanceGroupScalePolicyFixedScaleOutputWithContext(ctx context.Context) GetComputeInstanceGroupScalePolicyFixedScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupScalePolicyFixedScaleOutput)
}

// GetComputeInstanceGroupScalePolicyFixedScaleArrayInput is an input type that accepts GetComputeInstanceGroupScalePolicyFixedScaleArray and GetComputeInstanceGroupScalePolicyFixedScaleArrayOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupScalePolicyFixedScaleArrayInput` via:
//
//          GetComputeInstanceGroupScalePolicyFixedScaleArray{ GetComputeInstanceGroupScalePolicyFixedScaleArgs{...} }
type GetComputeInstanceGroupScalePolicyFixedScaleArrayInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupScalePolicyFixedScaleArrayOutput() GetComputeInstanceGroupScalePolicyFixedScaleArrayOutput
	ToGetComputeInstanceGroupScalePolicyFixedScaleArrayOutputWithContext(context.Context) GetComputeInstanceGroupScalePolicyFixedScaleArrayOutput
}

type GetComputeInstanceGroupScalePolicyFixedScaleArray []GetComputeInstanceGroupScalePolicyFixedScaleInput

func (GetComputeInstanceGroupScalePolicyFixedScaleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupScalePolicyFixedScale)(nil)).Elem()
}

func (i GetComputeInstanceGroupScalePolicyFixedScaleArray) ToGetComputeInstanceGroupScalePolicyFixedScaleArrayOutput() GetComputeInstanceGroupScalePolicyFixedScaleArrayOutput {
	return i.ToGetComputeInstanceGroupScalePolicyFixedScaleArrayOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupScalePolicyFixedScaleArray) ToGetComputeInstanceGroupScalePolicyFixedScaleArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupScalePolicyFixedScaleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupScalePolicyFixedScaleArrayOutput)
}

type GetComputeInstanceGroupScalePolicyFixedScaleOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupScalePolicyFixedScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupScalePolicyFixedScale)(nil)).Elem()
}

func (o GetComputeInstanceGroupScalePolicyFixedScaleOutput) ToGetComputeInstanceGroupScalePolicyFixedScaleOutput() GetComputeInstanceGroupScalePolicyFixedScaleOutput {
	return o
}

func (o GetComputeInstanceGroupScalePolicyFixedScaleOutput) ToGetComputeInstanceGroupScalePolicyFixedScaleOutputWithContext(ctx context.Context) GetComputeInstanceGroupScalePolicyFixedScaleOutput {
	return o
}

// The size of the disk in GB.
func (o GetComputeInstanceGroupScalePolicyFixedScaleOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyFixedScale) int { return v.Size }).(pulumi.IntOutput)
}

type GetComputeInstanceGroupScalePolicyFixedScaleArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupScalePolicyFixedScaleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupScalePolicyFixedScale)(nil)).Elem()
}

func (o GetComputeInstanceGroupScalePolicyFixedScaleArrayOutput) ToGetComputeInstanceGroupScalePolicyFixedScaleArrayOutput() GetComputeInstanceGroupScalePolicyFixedScaleArrayOutput {
	return o
}

func (o GetComputeInstanceGroupScalePolicyFixedScaleArrayOutput) ToGetComputeInstanceGroupScalePolicyFixedScaleArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupScalePolicyFixedScaleArrayOutput {
	return o
}

func (o GetComputeInstanceGroupScalePolicyFixedScaleArrayOutput) Index(i pulumi.IntInput) GetComputeInstanceGroupScalePolicyFixedScaleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstanceGroupScalePolicyFixedScale {
		return vs[0].([]GetComputeInstanceGroupScalePolicyFixedScale)[vs[1].(int)]
	}).(GetComputeInstanceGroupScalePolicyFixedScaleOutput)
}

type GetComputeInstanceGroupScalePolicyTestAutoScale struct {
	// Target CPU load level.
	CpuUtilizationTarget float64 `pulumi:"cpuUtilizationTarget"`
	// A list of custom rules. The structure is documented below.
	CustomRules []GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRule `pulumi:"customRules"`
	// The initial number of instances in the instance group.
	InitialSize int `pulumi:"initialSize"`
	// The maximum number of virtual machines in the group.
	MaxSize int `pulumi:"maxSize"`
	// The amount of time, in seconds, that metrics are averaged for.
	// If the average value at the end of the interval is higher than the `cpuUtilizationTarget`,
	// the instance group will increase the number of virtual machines in the group.
	MeasurementDuration int `pulumi:"measurementDuration"`
	// The minimum number of virtual machines in a single availability zone.
	MinZoneSize int `pulumi:"minZoneSize"`
	// The minimum time interval, in seconds, to monitor the load before
	// an instance group can reduce the number of virtual machines in the group. During this time, the group
	// will not decrease even if the average load falls below the value of `cpuUtilizationTarget`.
	StabilizationDuration int `pulumi:"stabilizationDuration"`
	// The warm-up time of the virtual machine, in seconds. During this time,
	// traffic is fed to the virtual machine, but load metrics are not taken into account.
	WarmupDuration int `pulumi:"warmupDuration"`
}

// GetComputeInstanceGroupScalePolicyTestAutoScaleInput is an input type that accepts GetComputeInstanceGroupScalePolicyTestAutoScaleArgs and GetComputeInstanceGroupScalePolicyTestAutoScaleOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupScalePolicyTestAutoScaleInput` via:
//
//          GetComputeInstanceGroupScalePolicyTestAutoScaleArgs{...}
type GetComputeInstanceGroupScalePolicyTestAutoScaleInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupScalePolicyTestAutoScaleOutput() GetComputeInstanceGroupScalePolicyTestAutoScaleOutput
	ToGetComputeInstanceGroupScalePolicyTestAutoScaleOutputWithContext(context.Context) GetComputeInstanceGroupScalePolicyTestAutoScaleOutput
}

type GetComputeInstanceGroupScalePolicyTestAutoScaleArgs struct {
	// Target CPU load level.
	CpuUtilizationTarget pulumi.Float64Input `pulumi:"cpuUtilizationTarget"`
	// A list of custom rules. The structure is documented below.
	CustomRules GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayInput `pulumi:"customRules"`
	// The initial number of instances in the instance group.
	InitialSize pulumi.IntInput `pulumi:"initialSize"`
	// The maximum number of virtual machines in the group.
	MaxSize pulumi.IntInput `pulumi:"maxSize"`
	// The amount of time, in seconds, that metrics are averaged for.
	// If the average value at the end of the interval is higher than the `cpuUtilizationTarget`,
	// the instance group will increase the number of virtual machines in the group.
	MeasurementDuration pulumi.IntInput `pulumi:"measurementDuration"`
	// The minimum number of virtual machines in a single availability zone.
	MinZoneSize pulumi.IntInput `pulumi:"minZoneSize"`
	// The minimum time interval, in seconds, to monitor the load before
	// an instance group can reduce the number of virtual machines in the group. During this time, the group
	// will not decrease even if the average load falls below the value of `cpuUtilizationTarget`.
	StabilizationDuration pulumi.IntInput `pulumi:"stabilizationDuration"`
	// The warm-up time of the virtual machine, in seconds. During this time,
	// traffic is fed to the virtual machine, but load metrics are not taken into account.
	WarmupDuration pulumi.IntInput `pulumi:"warmupDuration"`
}

func (GetComputeInstanceGroupScalePolicyTestAutoScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupScalePolicyTestAutoScale)(nil)).Elem()
}

func (i GetComputeInstanceGroupScalePolicyTestAutoScaleArgs) ToGetComputeInstanceGroupScalePolicyTestAutoScaleOutput() GetComputeInstanceGroupScalePolicyTestAutoScaleOutput {
	return i.ToGetComputeInstanceGroupScalePolicyTestAutoScaleOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupScalePolicyTestAutoScaleArgs) ToGetComputeInstanceGroupScalePolicyTestAutoScaleOutputWithContext(ctx context.Context) GetComputeInstanceGroupScalePolicyTestAutoScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupScalePolicyTestAutoScaleOutput)
}

// GetComputeInstanceGroupScalePolicyTestAutoScaleArrayInput is an input type that accepts GetComputeInstanceGroupScalePolicyTestAutoScaleArray and GetComputeInstanceGroupScalePolicyTestAutoScaleArrayOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupScalePolicyTestAutoScaleArrayInput` via:
//
//          GetComputeInstanceGroupScalePolicyTestAutoScaleArray{ GetComputeInstanceGroupScalePolicyTestAutoScaleArgs{...} }
type GetComputeInstanceGroupScalePolicyTestAutoScaleArrayInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupScalePolicyTestAutoScaleArrayOutput() GetComputeInstanceGroupScalePolicyTestAutoScaleArrayOutput
	ToGetComputeInstanceGroupScalePolicyTestAutoScaleArrayOutputWithContext(context.Context) GetComputeInstanceGroupScalePolicyTestAutoScaleArrayOutput
}

type GetComputeInstanceGroupScalePolicyTestAutoScaleArray []GetComputeInstanceGroupScalePolicyTestAutoScaleInput

func (GetComputeInstanceGroupScalePolicyTestAutoScaleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupScalePolicyTestAutoScale)(nil)).Elem()
}

func (i GetComputeInstanceGroupScalePolicyTestAutoScaleArray) ToGetComputeInstanceGroupScalePolicyTestAutoScaleArrayOutput() GetComputeInstanceGroupScalePolicyTestAutoScaleArrayOutput {
	return i.ToGetComputeInstanceGroupScalePolicyTestAutoScaleArrayOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupScalePolicyTestAutoScaleArray) ToGetComputeInstanceGroupScalePolicyTestAutoScaleArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupScalePolicyTestAutoScaleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupScalePolicyTestAutoScaleArrayOutput)
}

type GetComputeInstanceGroupScalePolicyTestAutoScaleOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupScalePolicyTestAutoScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupScalePolicyTestAutoScale)(nil)).Elem()
}

func (o GetComputeInstanceGroupScalePolicyTestAutoScaleOutput) ToGetComputeInstanceGroupScalePolicyTestAutoScaleOutput() GetComputeInstanceGroupScalePolicyTestAutoScaleOutput {
	return o
}

func (o GetComputeInstanceGroupScalePolicyTestAutoScaleOutput) ToGetComputeInstanceGroupScalePolicyTestAutoScaleOutputWithContext(ctx context.Context) GetComputeInstanceGroupScalePolicyTestAutoScaleOutput {
	return o
}

// Target CPU load level.
func (o GetComputeInstanceGroupScalePolicyTestAutoScaleOutput) CpuUtilizationTarget() pulumi.Float64Output {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyTestAutoScale) float64 { return v.CpuUtilizationTarget }).(pulumi.Float64Output)
}

// A list of custom rules. The structure is documented below.
func (o GetComputeInstanceGroupScalePolicyTestAutoScaleOutput) CustomRules() GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyTestAutoScale) []GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRule {
		return v.CustomRules
	}).(GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput)
}

// The initial number of instances in the instance group.
func (o GetComputeInstanceGroupScalePolicyTestAutoScaleOutput) InitialSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyTestAutoScale) int { return v.InitialSize }).(pulumi.IntOutput)
}

// The maximum number of virtual machines in the group.
func (o GetComputeInstanceGroupScalePolicyTestAutoScaleOutput) MaxSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyTestAutoScale) int { return v.MaxSize }).(pulumi.IntOutput)
}

// The amount of time, in seconds, that metrics are averaged for.
// If the average value at the end of the interval is higher than the `cpuUtilizationTarget`,
// the instance group will increase the number of virtual machines in the group.
func (o GetComputeInstanceGroupScalePolicyTestAutoScaleOutput) MeasurementDuration() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyTestAutoScale) int { return v.MeasurementDuration }).(pulumi.IntOutput)
}

// The minimum number of virtual machines in a single availability zone.
func (o GetComputeInstanceGroupScalePolicyTestAutoScaleOutput) MinZoneSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyTestAutoScale) int { return v.MinZoneSize }).(pulumi.IntOutput)
}

// The minimum time interval, in seconds, to monitor the load before
// an instance group can reduce the number of virtual machines in the group. During this time, the group
// will not decrease even if the average load falls below the value of `cpuUtilizationTarget`.
func (o GetComputeInstanceGroupScalePolicyTestAutoScaleOutput) StabilizationDuration() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyTestAutoScale) int { return v.StabilizationDuration }).(pulumi.IntOutput)
}

// The warm-up time of the virtual machine, in seconds. During this time,
// traffic is fed to the virtual machine, but load metrics are not taken into account.
func (o GetComputeInstanceGroupScalePolicyTestAutoScaleOutput) WarmupDuration() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyTestAutoScale) int { return v.WarmupDuration }).(pulumi.IntOutput)
}

type GetComputeInstanceGroupScalePolicyTestAutoScaleArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupScalePolicyTestAutoScaleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupScalePolicyTestAutoScale)(nil)).Elem()
}

func (o GetComputeInstanceGroupScalePolicyTestAutoScaleArrayOutput) ToGetComputeInstanceGroupScalePolicyTestAutoScaleArrayOutput() GetComputeInstanceGroupScalePolicyTestAutoScaleArrayOutput {
	return o
}

func (o GetComputeInstanceGroupScalePolicyTestAutoScaleArrayOutput) ToGetComputeInstanceGroupScalePolicyTestAutoScaleArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupScalePolicyTestAutoScaleArrayOutput {
	return o
}

func (o GetComputeInstanceGroupScalePolicyTestAutoScaleArrayOutput) Index(i pulumi.IntInput) GetComputeInstanceGroupScalePolicyTestAutoScaleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstanceGroupScalePolicyTestAutoScale {
		return vs[0].([]GetComputeInstanceGroupScalePolicyTestAutoScale)[vs[1].(int)]
	}).(GetComputeInstanceGroupScalePolicyTestAutoScaleOutput)
}

type GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRule struct {
	// A map of labels applied to this instance.
	// * `resources.0.memory` - The memory size allocated to the instance.
	// * `resources.0.cores` - Number of CPU cores allocated to the instance.
	// * `resources.0.core_fraction` - Baseline core performance as a percent.
	// * `resources.0.gpus` - Number of GPU cores allocated to the instance.
	Labels map[string]string `pulumi:"labels"`
	// The name of metric.
	MetricName string `pulumi:"metricName"`
	// Metric type, `GAUGE` or `COUNTER`.
	MetricType string `pulumi:"metricType"`
	// Rule type: `UTILIZATION` - This type means that the metric applies to one instance.
	// First, Instance Groups calculates the average metric value for each instance,
	// then averages the values for instances in one availability zone.
	// This type of metric must have the `instanceId` label. `WORKLOAD` - This type means that the metric applies to instances in one availability zone.
	// This type of metric must have the `zoneId` label.
	RuleType string `pulumi:"ruleType"`
	// Target metric value level.
	Target float64 `pulumi:"target"`
}

// GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleInput is an input type that accepts GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArgs and GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleInput` via:
//
//          GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArgs{...}
type GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput() GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput
	ToGetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutputWithContext(context.Context) GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput
}

type GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArgs struct {
	// A map of labels applied to this instance.
	// * `resources.0.memory` - The memory size allocated to the instance.
	// * `resources.0.cores` - Number of CPU cores allocated to the instance.
	// * `resources.0.core_fraction` - Baseline core performance as a percent.
	// * `resources.0.gpus` - Number of GPU cores allocated to the instance.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The name of metric.
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// Metric type, `GAUGE` or `COUNTER`.
	MetricType pulumi.StringInput `pulumi:"metricType"`
	// Rule type: `UTILIZATION` - This type means that the metric applies to one instance.
	// First, Instance Groups calculates the average metric value for each instance,
	// then averages the values for instances in one availability zone.
	// This type of metric must have the `instanceId` label. `WORKLOAD` - This type means that the metric applies to instances in one availability zone.
	// This type of metric must have the `zoneId` label.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
	// Target metric value level.
	Target pulumi.Float64Input `pulumi:"target"`
}

func (GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRule)(nil)).Elem()
}

func (i GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArgs) ToGetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput() GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput {
	return i.ToGetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArgs) ToGetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutputWithContext(ctx context.Context) GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput)
}

// GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayInput is an input type that accepts GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArray and GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput values.
// You can construct a concrete instance of `GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayInput` via:
//
//          GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArray{ GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArgs{...} }
type GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayInput interface {
	pulumi.Input

	ToGetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput() GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput
	ToGetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutputWithContext(context.Context) GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput
}

type GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArray []GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleInput

func (GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRule)(nil)).Elem()
}

func (i GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArray) ToGetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput() GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput {
	return i.ToGetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutputWithContext(context.Background())
}

func (i GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArray) ToGetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput)
}

type GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRule)(nil)).Elem()
}

func (o GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput) ToGetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput() GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput {
	return o
}

func (o GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput) ToGetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutputWithContext(ctx context.Context) GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput {
	return o
}

// A map of labels applied to this instance.
// * `resources.0.memory` - The memory size allocated to the instance.
// * `resources.0.cores` - Number of CPU cores allocated to the instance.
// * `resources.0.core_fraction` - Baseline core performance as a percent.
// * `resources.0.gpus` - Number of GPU cores allocated to the instance.
func (o GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRule) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The name of metric.
func (o GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRule) string { return v.MetricName }).(pulumi.StringOutput)
}

// Metric type, `GAUGE` or `COUNTER`.
func (o GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput) MetricType() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRule) string { return v.MetricType }).(pulumi.StringOutput)
}

// Rule type: `UTILIZATION` - This type means that the metric applies to one instance.
// First, Instance Groups calculates the average metric value for each instance,
// then averages the values for instances in one availability zone.
// This type of metric must have the `instanceId` label. `WORKLOAD` - This type means that the metric applies to instances in one availability zone.
// This type of metric must have the `zoneId` label.
func (o GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRule) string { return v.RuleType }).(pulumi.StringOutput)
}

// Target metric value level.
func (o GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput) Target() pulumi.Float64Output {
	return o.ApplyT(func(v GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRule) float64 { return v.Target }).(pulumi.Float64Output)
}

type GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRule)(nil)).Elem()
}

func (o GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput) ToGetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput() GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput {
	return o
}

func (o GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput) ToGetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutputWithContext(ctx context.Context) GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput {
	return o
}

func (o GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput) Index(i pulumi.IntInput) GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRule {
		return vs[0].([]GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRule)[vs[1].(int)]
	}).(GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput)
}

type GetComputeInstanceNetworkInterface struct {
	// The index of the network interface, generated by the server.
	Index int `pulumi:"index"`
	// The assignd private IP address to the network interface.
	IpAddress string `pulumi:"ipAddress"`
	// Show if IPv4 address is assigned to the network interface.
	Ipv4        bool   `pulumi:"ipv4"`
	Ipv6        bool   `pulumi:"ipv6"`
	Ipv6Address string `pulumi:"ipv6Address"`
	// MAC address that is assigned to the network interface.
	MacAddress string `pulumi:"macAddress"`
	// Assigned for the instance's public address that is used to access the internet over NAT.
	Nat bool `pulumi:"nat"`
	// Public IP address of the instance.
	NatIpAddress string `pulumi:"natIpAddress"`
	// IP version for the public address.
	NatIpVersion string `pulumi:"natIpVersion"`
	// Security group ids for network interface.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// ID of the subnet to attach this interface to. The subnet must reside in the same zone where this instance was created.
	SubnetId string `pulumi:"subnetId"`
}

// GetComputeInstanceNetworkInterfaceInput is an input type that accepts GetComputeInstanceNetworkInterfaceArgs and GetComputeInstanceNetworkInterfaceOutput values.
// You can construct a concrete instance of `GetComputeInstanceNetworkInterfaceInput` via:
//
//          GetComputeInstanceNetworkInterfaceArgs{...}
type GetComputeInstanceNetworkInterfaceInput interface {
	pulumi.Input

	ToGetComputeInstanceNetworkInterfaceOutput() GetComputeInstanceNetworkInterfaceOutput
	ToGetComputeInstanceNetworkInterfaceOutputWithContext(context.Context) GetComputeInstanceNetworkInterfaceOutput
}

type GetComputeInstanceNetworkInterfaceArgs struct {
	// The index of the network interface, generated by the server.
	Index pulumi.IntInput `pulumi:"index"`
	// The assignd private IP address to the network interface.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// Show if IPv4 address is assigned to the network interface.
	Ipv4        pulumi.BoolInput   `pulumi:"ipv4"`
	Ipv6        pulumi.BoolInput   `pulumi:"ipv6"`
	Ipv6Address pulumi.StringInput `pulumi:"ipv6Address"`
	// MAC address that is assigned to the network interface.
	MacAddress pulumi.StringInput `pulumi:"macAddress"`
	// Assigned for the instance's public address that is used to access the internet over NAT.
	Nat pulumi.BoolInput `pulumi:"nat"`
	// Public IP address of the instance.
	NatIpAddress pulumi.StringInput `pulumi:"natIpAddress"`
	// IP version for the public address.
	NatIpVersion pulumi.StringInput `pulumi:"natIpVersion"`
	// Security group ids for network interface.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// ID of the subnet to attach this interface to. The subnet must reside in the same zone where this instance was created.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetComputeInstanceNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceNetworkInterface)(nil)).Elem()
}

func (i GetComputeInstanceNetworkInterfaceArgs) ToGetComputeInstanceNetworkInterfaceOutput() GetComputeInstanceNetworkInterfaceOutput {
	return i.ToGetComputeInstanceNetworkInterfaceOutputWithContext(context.Background())
}

func (i GetComputeInstanceNetworkInterfaceArgs) ToGetComputeInstanceNetworkInterfaceOutputWithContext(ctx context.Context) GetComputeInstanceNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceNetworkInterfaceOutput)
}

// GetComputeInstanceNetworkInterfaceArrayInput is an input type that accepts GetComputeInstanceNetworkInterfaceArray and GetComputeInstanceNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `GetComputeInstanceNetworkInterfaceArrayInput` via:
//
//          GetComputeInstanceNetworkInterfaceArray{ GetComputeInstanceNetworkInterfaceArgs{...} }
type GetComputeInstanceNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToGetComputeInstanceNetworkInterfaceArrayOutput() GetComputeInstanceNetworkInterfaceArrayOutput
	ToGetComputeInstanceNetworkInterfaceArrayOutputWithContext(context.Context) GetComputeInstanceNetworkInterfaceArrayOutput
}

type GetComputeInstanceNetworkInterfaceArray []GetComputeInstanceNetworkInterfaceInput

func (GetComputeInstanceNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceNetworkInterface)(nil)).Elem()
}

func (i GetComputeInstanceNetworkInterfaceArray) ToGetComputeInstanceNetworkInterfaceArrayOutput() GetComputeInstanceNetworkInterfaceArrayOutput {
	return i.ToGetComputeInstanceNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i GetComputeInstanceNetworkInterfaceArray) ToGetComputeInstanceNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetComputeInstanceNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceNetworkInterfaceArrayOutput)
}

type GetComputeInstanceNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceNetworkInterface)(nil)).Elem()
}

func (o GetComputeInstanceNetworkInterfaceOutput) ToGetComputeInstanceNetworkInterfaceOutput() GetComputeInstanceNetworkInterfaceOutput {
	return o
}

func (o GetComputeInstanceNetworkInterfaceOutput) ToGetComputeInstanceNetworkInterfaceOutputWithContext(ctx context.Context) GetComputeInstanceNetworkInterfaceOutput {
	return o
}

// The index of the network interface, generated by the server.
func (o GetComputeInstanceNetworkInterfaceOutput) Index() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceNetworkInterface) int { return v.Index }).(pulumi.IntOutput)
}

// The assignd private IP address to the network interface.
func (o GetComputeInstanceNetworkInterfaceOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceNetworkInterface) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Show if IPv4 address is assigned to the network interface.
func (o GetComputeInstanceNetworkInterfaceOutput) Ipv4() pulumi.BoolOutput {
	return o.ApplyT(func(v GetComputeInstanceNetworkInterface) bool { return v.Ipv4 }).(pulumi.BoolOutput)
}

func (o GetComputeInstanceNetworkInterfaceOutput) Ipv6() pulumi.BoolOutput {
	return o.ApplyT(func(v GetComputeInstanceNetworkInterface) bool { return v.Ipv6 }).(pulumi.BoolOutput)
}

func (o GetComputeInstanceNetworkInterfaceOutput) Ipv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceNetworkInterface) string { return v.Ipv6Address }).(pulumi.StringOutput)
}

// MAC address that is assigned to the network interface.
func (o GetComputeInstanceNetworkInterfaceOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceNetworkInterface) string { return v.MacAddress }).(pulumi.StringOutput)
}

// Assigned for the instance's public address that is used to access the internet over NAT.
func (o GetComputeInstanceNetworkInterfaceOutput) Nat() pulumi.BoolOutput {
	return o.ApplyT(func(v GetComputeInstanceNetworkInterface) bool { return v.Nat }).(pulumi.BoolOutput)
}

// Public IP address of the instance.
func (o GetComputeInstanceNetworkInterfaceOutput) NatIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceNetworkInterface) string { return v.NatIpAddress }).(pulumi.StringOutput)
}

// IP version for the public address.
func (o GetComputeInstanceNetworkInterfaceOutput) NatIpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceNetworkInterface) string { return v.NatIpVersion }).(pulumi.StringOutput)
}

// Security group ids for network interface.
func (o GetComputeInstanceNetworkInterfaceOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetComputeInstanceNetworkInterface) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// ID of the subnet to attach this interface to. The subnet must reside in the same zone where this instance was created.
func (o GetComputeInstanceNetworkInterfaceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceNetworkInterface) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetComputeInstanceNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceNetworkInterface)(nil)).Elem()
}

func (o GetComputeInstanceNetworkInterfaceArrayOutput) ToGetComputeInstanceNetworkInterfaceArrayOutput() GetComputeInstanceNetworkInterfaceArrayOutput {
	return o
}

func (o GetComputeInstanceNetworkInterfaceArrayOutput) ToGetComputeInstanceNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetComputeInstanceNetworkInterfaceArrayOutput {
	return o
}

func (o GetComputeInstanceNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) GetComputeInstanceNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstanceNetworkInterface {
		return vs[0].([]GetComputeInstanceNetworkInterface)[vs[1].(int)]
	}).(GetComputeInstanceNetworkInterfaceOutput)
}

type GetComputeInstancePlacementPolicy struct {
	PlacementGroupId string `pulumi:"placementGroupId"`
}

// GetComputeInstancePlacementPolicyInput is an input type that accepts GetComputeInstancePlacementPolicyArgs and GetComputeInstancePlacementPolicyOutput values.
// You can construct a concrete instance of `GetComputeInstancePlacementPolicyInput` via:
//
//          GetComputeInstancePlacementPolicyArgs{...}
type GetComputeInstancePlacementPolicyInput interface {
	pulumi.Input

	ToGetComputeInstancePlacementPolicyOutput() GetComputeInstancePlacementPolicyOutput
	ToGetComputeInstancePlacementPolicyOutputWithContext(context.Context) GetComputeInstancePlacementPolicyOutput
}

type GetComputeInstancePlacementPolicyArgs struct {
	PlacementGroupId pulumi.StringInput `pulumi:"placementGroupId"`
}

func (GetComputeInstancePlacementPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstancePlacementPolicy)(nil)).Elem()
}

func (i GetComputeInstancePlacementPolicyArgs) ToGetComputeInstancePlacementPolicyOutput() GetComputeInstancePlacementPolicyOutput {
	return i.ToGetComputeInstancePlacementPolicyOutputWithContext(context.Background())
}

func (i GetComputeInstancePlacementPolicyArgs) ToGetComputeInstancePlacementPolicyOutputWithContext(ctx context.Context) GetComputeInstancePlacementPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstancePlacementPolicyOutput)
}

type GetComputeInstancePlacementPolicyOutput struct{ *pulumi.OutputState }

func (GetComputeInstancePlacementPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstancePlacementPolicy)(nil)).Elem()
}

func (o GetComputeInstancePlacementPolicyOutput) ToGetComputeInstancePlacementPolicyOutput() GetComputeInstancePlacementPolicyOutput {
	return o
}

func (o GetComputeInstancePlacementPolicyOutput) ToGetComputeInstancePlacementPolicyOutputWithContext(ctx context.Context) GetComputeInstancePlacementPolicyOutput {
	return o
}

func (o GetComputeInstancePlacementPolicyOutput) PlacementGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstancePlacementPolicy) string { return v.PlacementGroupId }).(pulumi.StringOutput)
}

type GetComputeInstanceResources struct {
	CoreFraction int     `pulumi:"coreFraction"`
	Cores        int     `pulumi:"cores"`
	Gpus         int     `pulumi:"gpus"`
	Memory       float64 `pulumi:"memory"`
}

// GetComputeInstanceResourcesInput is an input type that accepts GetComputeInstanceResourcesArgs and GetComputeInstanceResourcesOutput values.
// You can construct a concrete instance of `GetComputeInstanceResourcesInput` via:
//
//          GetComputeInstanceResourcesArgs{...}
type GetComputeInstanceResourcesInput interface {
	pulumi.Input

	ToGetComputeInstanceResourcesOutput() GetComputeInstanceResourcesOutput
	ToGetComputeInstanceResourcesOutputWithContext(context.Context) GetComputeInstanceResourcesOutput
}

type GetComputeInstanceResourcesArgs struct {
	CoreFraction pulumi.IntInput     `pulumi:"coreFraction"`
	Cores        pulumi.IntInput     `pulumi:"cores"`
	Gpus         pulumi.IntInput     `pulumi:"gpus"`
	Memory       pulumi.Float64Input `pulumi:"memory"`
}

func (GetComputeInstanceResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceResources)(nil)).Elem()
}

func (i GetComputeInstanceResourcesArgs) ToGetComputeInstanceResourcesOutput() GetComputeInstanceResourcesOutput {
	return i.ToGetComputeInstanceResourcesOutputWithContext(context.Background())
}

func (i GetComputeInstanceResourcesArgs) ToGetComputeInstanceResourcesOutputWithContext(ctx context.Context) GetComputeInstanceResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceResourcesOutput)
}

type GetComputeInstanceResourcesOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceResources)(nil)).Elem()
}

func (o GetComputeInstanceResourcesOutput) ToGetComputeInstanceResourcesOutput() GetComputeInstanceResourcesOutput {
	return o
}

func (o GetComputeInstanceResourcesOutput) ToGetComputeInstanceResourcesOutputWithContext(ctx context.Context) GetComputeInstanceResourcesOutput {
	return o
}

func (o GetComputeInstanceResourcesOutput) CoreFraction() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceResources) int { return v.CoreFraction }).(pulumi.IntOutput)
}

func (o GetComputeInstanceResourcesOutput) Cores() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceResources) int { return v.Cores }).(pulumi.IntOutput)
}

func (o GetComputeInstanceResourcesOutput) Gpus() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceResources) int { return v.Gpus }).(pulumi.IntOutput)
}

func (o GetComputeInstanceResourcesOutput) Memory() pulumi.Float64Output {
	return o.ApplyT(func(v GetComputeInstanceResources) float64 { return v.Memory }).(pulumi.Float64Output)
}

type GetComputeInstanceSchedulingPolicy struct {
	// (Optional) Specifies if the instance is preemptible. Defaults to false.
	Preemptible *bool `pulumi:"preemptible"`
}

// GetComputeInstanceSchedulingPolicyInput is an input type that accepts GetComputeInstanceSchedulingPolicyArgs and GetComputeInstanceSchedulingPolicyOutput values.
// You can construct a concrete instance of `GetComputeInstanceSchedulingPolicyInput` via:
//
//          GetComputeInstanceSchedulingPolicyArgs{...}
type GetComputeInstanceSchedulingPolicyInput interface {
	pulumi.Input

	ToGetComputeInstanceSchedulingPolicyOutput() GetComputeInstanceSchedulingPolicyOutput
	ToGetComputeInstanceSchedulingPolicyOutputWithContext(context.Context) GetComputeInstanceSchedulingPolicyOutput
}

type GetComputeInstanceSchedulingPolicyArgs struct {
	// (Optional) Specifies if the instance is preemptible. Defaults to false.
	Preemptible pulumi.BoolPtrInput `pulumi:"preemptible"`
}

func (GetComputeInstanceSchedulingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceSchedulingPolicy)(nil)).Elem()
}

func (i GetComputeInstanceSchedulingPolicyArgs) ToGetComputeInstanceSchedulingPolicyOutput() GetComputeInstanceSchedulingPolicyOutput {
	return i.ToGetComputeInstanceSchedulingPolicyOutputWithContext(context.Background())
}

func (i GetComputeInstanceSchedulingPolicyArgs) ToGetComputeInstanceSchedulingPolicyOutputWithContext(ctx context.Context) GetComputeInstanceSchedulingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceSchedulingPolicyOutput)
}

type GetComputeInstanceSchedulingPolicyOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceSchedulingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceSchedulingPolicy)(nil)).Elem()
}

func (o GetComputeInstanceSchedulingPolicyOutput) ToGetComputeInstanceSchedulingPolicyOutput() GetComputeInstanceSchedulingPolicyOutput {
	return o
}

func (o GetComputeInstanceSchedulingPolicyOutput) ToGetComputeInstanceSchedulingPolicyOutputWithContext(ctx context.Context) GetComputeInstanceSchedulingPolicyOutput {
	return o
}

// (Optional) Specifies if the instance is preemptible. Defaults to false.
func (o GetComputeInstanceSchedulingPolicyOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetComputeInstanceSchedulingPolicy) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

type GetComputeInstanceSecondaryDisk struct {
	// Specifies whether the disk is auto-deleted when the instance is deleted.
	AutoDelete bool `pulumi:"autoDelete"`
	// This value can be used to reference the device from within the instance for mounting, resizing, and so on.
	DeviceName string `pulumi:"deviceName"`
	// ID of the disk that is attached to the instance.
	DiskId string `pulumi:"diskId"`
	// Access to the Disk resource. By default, a disk is attached in `READ_WRITE` mode.
	Mode string `pulumi:"mode"`
}

// GetComputeInstanceSecondaryDiskInput is an input type that accepts GetComputeInstanceSecondaryDiskArgs and GetComputeInstanceSecondaryDiskOutput values.
// You can construct a concrete instance of `GetComputeInstanceSecondaryDiskInput` via:
//
//          GetComputeInstanceSecondaryDiskArgs{...}
type GetComputeInstanceSecondaryDiskInput interface {
	pulumi.Input

	ToGetComputeInstanceSecondaryDiskOutput() GetComputeInstanceSecondaryDiskOutput
	ToGetComputeInstanceSecondaryDiskOutputWithContext(context.Context) GetComputeInstanceSecondaryDiskOutput
}

type GetComputeInstanceSecondaryDiskArgs struct {
	// Specifies whether the disk is auto-deleted when the instance is deleted.
	AutoDelete pulumi.BoolInput `pulumi:"autoDelete"`
	// This value can be used to reference the device from within the instance for mounting, resizing, and so on.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// ID of the disk that is attached to the instance.
	DiskId pulumi.StringInput `pulumi:"diskId"`
	// Access to the Disk resource. By default, a disk is attached in `READ_WRITE` mode.
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetComputeInstanceSecondaryDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceSecondaryDisk)(nil)).Elem()
}

func (i GetComputeInstanceSecondaryDiskArgs) ToGetComputeInstanceSecondaryDiskOutput() GetComputeInstanceSecondaryDiskOutput {
	return i.ToGetComputeInstanceSecondaryDiskOutputWithContext(context.Background())
}

func (i GetComputeInstanceSecondaryDiskArgs) ToGetComputeInstanceSecondaryDiskOutputWithContext(ctx context.Context) GetComputeInstanceSecondaryDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceSecondaryDiskOutput)
}

// GetComputeInstanceSecondaryDiskArrayInput is an input type that accepts GetComputeInstanceSecondaryDiskArray and GetComputeInstanceSecondaryDiskArrayOutput values.
// You can construct a concrete instance of `GetComputeInstanceSecondaryDiskArrayInput` via:
//
//          GetComputeInstanceSecondaryDiskArray{ GetComputeInstanceSecondaryDiskArgs{...} }
type GetComputeInstanceSecondaryDiskArrayInput interface {
	pulumi.Input

	ToGetComputeInstanceSecondaryDiskArrayOutput() GetComputeInstanceSecondaryDiskArrayOutput
	ToGetComputeInstanceSecondaryDiskArrayOutputWithContext(context.Context) GetComputeInstanceSecondaryDiskArrayOutput
}

type GetComputeInstanceSecondaryDiskArray []GetComputeInstanceSecondaryDiskInput

func (GetComputeInstanceSecondaryDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceSecondaryDisk)(nil)).Elem()
}

func (i GetComputeInstanceSecondaryDiskArray) ToGetComputeInstanceSecondaryDiskArrayOutput() GetComputeInstanceSecondaryDiskArrayOutput {
	return i.ToGetComputeInstanceSecondaryDiskArrayOutputWithContext(context.Background())
}

func (i GetComputeInstanceSecondaryDiskArray) ToGetComputeInstanceSecondaryDiskArrayOutputWithContext(ctx context.Context) GetComputeInstanceSecondaryDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceSecondaryDiskArrayOutput)
}

type GetComputeInstanceSecondaryDiskOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceSecondaryDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceSecondaryDisk)(nil)).Elem()
}

func (o GetComputeInstanceSecondaryDiskOutput) ToGetComputeInstanceSecondaryDiskOutput() GetComputeInstanceSecondaryDiskOutput {
	return o
}

func (o GetComputeInstanceSecondaryDiskOutput) ToGetComputeInstanceSecondaryDiskOutputWithContext(ctx context.Context) GetComputeInstanceSecondaryDiskOutput {
	return o
}

// Specifies whether the disk is auto-deleted when the instance is deleted.
func (o GetComputeInstanceSecondaryDiskOutput) AutoDelete() pulumi.BoolOutput {
	return o.ApplyT(func(v GetComputeInstanceSecondaryDisk) bool { return v.AutoDelete }).(pulumi.BoolOutput)
}

// This value can be used to reference the device from within the instance for mounting, resizing, and so on.
func (o GetComputeInstanceSecondaryDiskOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceSecondaryDisk) string { return v.DeviceName }).(pulumi.StringOutput)
}

// ID of the disk that is attached to the instance.
func (o GetComputeInstanceSecondaryDiskOutput) DiskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceSecondaryDisk) string { return v.DiskId }).(pulumi.StringOutput)
}

// Access to the Disk resource. By default, a disk is attached in `READ_WRITE` mode.
func (o GetComputeInstanceSecondaryDiskOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceSecondaryDisk) string { return v.Mode }).(pulumi.StringOutput)
}

type GetComputeInstanceSecondaryDiskArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceSecondaryDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceSecondaryDisk)(nil)).Elem()
}

func (o GetComputeInstanceSecondaryDiskArrayOutput) ToGetComputeInstanceSecondaryDiskArrayOutput() GetComputeInstanceSecondaryDiskArrayOutput {
	return o
}

func (o GetComputeInstanceSecondaryDiskArrayOutput) ToGetComputeInstanceSecondaryDiskArrayOutputWithContext(ctx context.Context) GetComputeInstanceSecondaryDiskArrayOutput {
	return o
}

func (o GetComputeInstanceSecondaryDiskArrayOutput) Index(i pulumi.IntInput) GetComputeInstanceSecondaryDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstanceSecondaryDisk {
		return vs[0].([]GetComputeInstanceSecondaryDisk)[vs[1].(int)]
	}).(GetComputeInstanceSecondaryDiskOutput)
}

type GetDataprocClusterClusterConfig struct {
	// Data Proc specific options. The structure is documented below.
	Hadoop GetDataprocClusterClusterConfigHadoop `pulumi:"hadoop"`
	// Configuration of the Data Proc subcluster. The structure is documented below.
	SubclusterSpecs []GetDataprocClusterClusterConfigSubclusterSpec `pulumi:"subclusterSpecs"`
	// Version of Data Proc image.
	VersionId string `pulumi:"versionId"`
}

// GetDataprocClusterClusterConfigInput is an input type that accepts GetDataprocClusterClusterConfigArgs and GetDataprocClusterClusterConfigOutput values.
// You can construct a concrete instance of `GetDataprocClusterClusterConfigInput` via:
//
//          GetDataprocClusterClusterConfigArgs{...}
type GetDataprocClusterClusterConfigInput interface {
	pulumi.Input

	ToGetDataprocClusterClusterConfigOutput() GetDataprocClusterClusterConfigOutput
	ToGetDataprocClusterClusterConfigOutputWithContext(context.Context) GetDataprocClusterClusterConfigOutput
}

type GetDataprocClusterClusterConfigArgs struct {
	// Data Proc specific options. The structure is documented below.
	Hadoop GetDataprocClusterClusterConfigHadoopInput `pulumi:"hadoop"`
	// Configuration of the Data Proc subcluster. The structure is documented below.
	SubclusterSpecs GetDataprocClusterClusterConfigSubclusterSpecArrayInput `pulumi:"subclusterSpecs"`
	// Version of Data Proc image.
	VersionId pulumi.StringInput `pulumi:"versionId"`
}

func (GetDataprocClusterClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataprocClusterClusterConfig)(nil)).Elem()
}

func (i GetDataprocClusterClusterConfigArgs) ToGetDataprocClusterClusterConfigOutput() GetDataprocClusterClusterConfigOutput {
	return i.ToGetDataprocClusterClusterConfigOutputWithContext(context.Background())
}

func (i GetDataprocClusterClusterConfigArgs) ToGetDataprocClusterClusterConfigOutputWithContext(ctx context.Context) GetDataprocClusterClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataprocClusterClusterConfigOutput)
}

type GetDataprocClusterClusterConfigOutput struct{ *pulumi.OutputState }

func (GetDataprocClusterClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataprocClusterClusterConfig)(nil)).Elem()
}

func (o GetDataprocClusterClusterConfigOutput) ToGetDataprocClusterClusterConfigOutput() GetDataprocClusterClusterConfigOutput {
	return o
}

func (o GetDataprocClusterClusterConfigOutput) ToGetDataprocClusterClusterConfigOutputWithContext(ctx context.Context) GetDataprocClusterClusterConfigOutput {
	return o
}

// Data Proc specific options. The structure is documented below.
func (o GetDataprocClusterClusterConfigOutput) Hadoop() GetDataprocClusterClusterConfigHadoopOutput {
	return o.ApplyT(func(v GetDataprocClusterClusterConfig) GetDataprocClusterClusterConfigHadoop { return v.Hadoop }).(GetDataprocClusterClusterConfigHadoopOutput)
}

// Configuration of the Data Proc subcluster. The structure is documented below.
func (o GetDataprocClusterClusterConfigOutput) SubclusterSpecs() GetDataprocClusterClusterConfigSubclusterSpecArrayOutput {
	return o.ApplyT(func(v GetDataprocClusterClusterConfig) []GetDataprocClusterClusterConfigSubclusterSpec {
		return v.SubclusterSpecs
	}).(GetDataprocClusterClusterConfigSubclusterSpecArrayOutput)
}

// Version of Data Proc image.
func (o GetDataprocClusterClusterConfigOutput) VersionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataprocClusterClusterConfig) string { return v.VersionId }).(pulumi.StringOutput)
}

type GetDataprocClusterClusterConfigHadoop struct {
	// A set of key/value pairs used to configure cluster services.
	Properties map[string]string `pulumi:"properties"`
	// List of services launched on Data Proc cluster.
	Services []string `pulumi:"services"`
	// List of SSH public keys distributed to the hosts of the cluster.
	SshPublicKeys []string `pulumi:"sshPublicKeys"`
}

// GetDataprocClusterClusterConfigHadoopInput is an input type that accepts GetDataprocClusterClusterConfigHadoopArgs and GetDataprocClusterClusterConfigHadoopOutput values.
// You can construct a concrete instance of `GetDataprocClusterClusterConfigHadoopInput` via:
//
//          GetDataprocClusterClusterConfigHadoopArgs{...}
type GetDataprocClusterClusterConfigHadoopInput interface {
	pulumi.Input

	ToGetDataprocClusterClusterConfigHadoopOutput() GetDataprocClusterClusterConfigHadoopOutput
	ToGetDataprocClusterClusterConfigHadoopOutputWithContext(context.Context) GetDataprocClusterClusterConfigHadoopOutput
}

type GetDataprocClusterClusterConfigHadoopArgs struct {
	// A set of key/value pairs used to configure cluster services.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// List of services launched on Data Proc cluster.
	Services pulumi.StringArrayInput `pulumi:"services"`
	// List of SSH public keys distributed to the hosts of the cluster.
	SshPublicKeys pulumi.StringArrayInput `pulumi:"sshPublicKeys"`
}

func (GetDataprocClusterClusterConfigHadoopArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataprocClusterClusterConfigHadoop)(nil)).Elem()
}

func (i GetDataprocClusterClusterConfigHadoopArgs) ToGetDataprocClusterClusterConfigHadoopOutput() GetDataprocClusterClusterConfigHadoopOutput {
	return i.ToGetDataprocClusterClusterConfigHadoopOutputWithContext(context.Background())
}

func (i GetDataprocClusterClusterConfigHadoopArgs) ToGetDataprocClusterClusterConfigHadoopOutputWithContext(ctx context.Context) GetDataprocClusterClusterConfigHadoopOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataprocClusterClusterConfigHadoopOutput)
}

type GetDataprocClusterClusterConfigHadoopOutput struct{ *pulumi.OutputState }

func (GetDataprocClusterClusterConfigHadoopOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataprocClusterClusterConfigHadoop)(nil)).Elem()
}

func (o GetDataprocClusterClusterConfigHadoopOutput) ToGetDataprocClusterClusterConfigHadoopOutput() GetDataprocClusterClusterConfigHadoopOutput {
	return o
}

func (o GetDataprocClusterClusterConfigHadoopOutput) ToGetDataprocClusterClusterConfigHadoopOutputWithContext(ctx context.Context) GetDataprocClusterClusterConfigHadoopOutput {
	return o
}

// A set of key/value pairs used to configure cluster services.
func (o GetDataprocClusterClusterConfigHadoopOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDataprocClusterClusterConfigHadoop) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// List of services launched on Data Proc cluster.
func (o GetDataprocClusterClusterConfigHadoopOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataprocClusterClusterConfigHadoop) []string { return v.Services }).(pulumi.StringArrayOutput)
}

// List of SSH public keys distributed to the hosts of the cluster.
func (o GetDataprocClusterClusterConfigHadoopOutput) SshPublicKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataprocClusterClusterConfigHadoop) []string { return v.SshPublicKeys }).(pulumi.StringArrayOutput)
}

type GetDataprocClusterClusterConfigSubclusterSpec struct {
	// Number of hosts within Data Proc subcluster.
	HostsCount int `pulumi:"hostsCount"`
	// ID of the Data Proc subcluster.
	Id string `pulumi:"id"`
	// The name of the Data Proc cluster.
	Name string `pulumi:"name"`
	// Resources allocated to each host of the Data Proc subcluster. The structure is documented below.
	Resources GetDataprocClusterClusterConfigSubclusterSpecResources `pulumi:"resources"`
	// Role of the subcluster in the Data Proc cluster.
	Role string `pulumi:"role"`
	// The ID of the subnet, to which hosts of the subcluster belong.
	SubnetId string `pulumi:"subnetId"`
}

// GetDataprocClusterClusterConfigSubclusterSpecInput is an input type that accepts GetDataprocClusterClusterConfigSubclusterSpecArgs and GetDataprocClusterClusterConfigSubclusterSpecOutput values.
// You can construct a concrete instance of `GetDataprocClusterClusterConfigSubclusterSpecInput` via:
//
//          GetDataprocClusterClusterConfigSubclusterSpecArgs{...}
type GetDataprocClusterClusterConfigSubclusterSpecInput interface {
	pulumi.Input

	ToGetDataprocClusterClusterConfigSubclusterSpecOutput() GetDataprocClusterClusterConfigSubclusterSpecOutput
	ToGetDataprocClusterClusterConfigSubclusterSpecOutputWithContext(context.Context) GetDataprocClusterClusterConfigSubclusterSpecOutput
}

type GetDataprocClusterClusterConfigSubclusterSpecArgs struct {
	// Number of hosts within Data Proc subcluster.
	HostsCount pulumi.IntInput `pulumi:"hostsCount"`
	// ID of the Data Proc subcluster.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the Data Proc cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// Resources allocated to each host of the Data Proc subcluster. The structure is documented below.
	Resources GetDataprocClusterClusterConfigSubclusterSpecResourcesInput `pulumi:"resources"`
	// Role of the subcluster in the Data Proc cluster.
	Role pulumi.StringInput `pulumi:"role"`
	// The ID of the subnet, to which hosts of the subcluster belong.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetDataprocClusterClusterConfigSubclusterSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataprocClusterClusterConfigSubclusterSpec)(nil)).Elem()
}

func (i GetDataprocClusterClusterConfigSubclusterSpecArgs) ToGetDataprocClusterClusterConfigSubclusterSpecOutput() GetDataprocClusterClusterConfigSubclusterSpecOutput {
	return i.ToGetDataprocClusterClusterConfigSubclusterSpecOutputWithContext(context.Background())
}

func (i GetDataprocClusterClusterConfigSubclusterSpecArgs) ToGetDataprocClusterClusterConfigSubclusterSpecOutputWithContext(ctx context.Context) GetDataprocClusterClusterConfigSubclusterSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataprocClusterClusterConfigSubclusterSpecOutput)
}

// GetDataprocClusterClusterConfigSubclusterSpecArrayInput is an input type that accepts GetDataprocClusterClusterConfigSubclusterSpecArray and GetDataprocClusterClusterConfigSubclusterSpecArrayOutput values.
// You can construct a concrete instance of `GetDataprocClusterClusterConfigSubclusterSpecArrayInput` via:
//
//          GetDataprocClusterClusterConfigSubclusterSpecArray{ GetDataprocClusterClusterConfigSubclusterSpecArgs{...} }
type GetDataprocClusterClusterConfigSubclusterSpecArrayInput interface {
	pulumi.Input

	ToGetDataprocClusterClusterConfigSubclusterSpecArrayOutput() GetDataprocClusterClusterConfigSubclusterSpecArrayOutput
	ToGetDataprocClusterClusterConfigSubclusterSpecArrayOutputWithContext(context.Context) GetDataprocClusterClusterConfigSubclusterSpecArrayOutput
}

type GetDataprocClusterClusterConfigSubclusterSpecArray []GetDataprocClusterClusterConfigSubclusterSpecInput

func (GetDataprocClusterClusterConfigSubclusterSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataprocClusterClusterConfigSubclusterSpec)(nil)).Elem()
}

func (i GetDataprocClusterClusterConfigSubclusterSpecArray) ToGetDataprocClusterClusterConfigSubclusterSpecArrayOutput() GetDataprocClusterClusterConfigSubclusterSpecArrayOutput {
	return i.ToGetDataprocClusterClusterConfigSubclusterSpecArrayOutputWithContext(context.Background())
}

func (i GetDataprocClusterClusterConfigSubclusterSpecArray) ToGetDataprocClusterClusterConfigSubclusterSpecArrayOutputWithContext(ctx context.Context) GetDataprocClusterClusterConfigSubclusterSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataprocClusterClusterConfigSubclusterSpecArrayOutput)
}

type GetDataprocClusterClusterConfigSubclusterSpecOutput struct{ *pulumi.OutputState }

func (GetDataprocClusterClusterConfigSubclusterSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataprocClusterClusterConfigSubclusterSpec)(nil)).Elem()
}

func (o GetDataprocClusterClusterConfigSubclusterSpecOutput) ToGetDataprocClusterClusterConfigSubclusterSpecOutput() GetDataprocClusterClusterConfigSubclusterSpecOutput {
	return o
}

func (o GetDataprocClusterClusterConfigSubclusterSpecOutput) ToGetDataprocClusterClusterConfigSubclusterSpecOutputWithContext(ctx context.Context) GetDataprocClusterClusterConfigSubclusterSpecOutput {
	return o
}

// Number of hosts within Data Proc subcluster.
func (o GetDataprocClusterClusterConfigSubclusterSpecOutput) HostsCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataprocClusterClusterConfigSubclusterSpec) int { return v.HostsCount }).(pulumi.IntOutput)
}

// ID of the Data Proc subcluster.
func (o GetDataprocClusterClusterConfigSubclusterSpecOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataprocClusterClusterConfigSubclusterSpec) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the Data Proc cluster.
func (o GetDataprocClusterClusterConfigSubclusterSpecOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataprocClusterClusterConfigSubclusterSpec) string { return v.Name }).(pulumi.StringOutput)
}

// Resources allocated to each host of the Data Proc subcluster. The structure is documented below.
func (o GetDataprocClusterClusterConfigSubclusterSpecOutput) Resources() GetDataprocClusterClusterConfigSubclusterSpecResourcesOutput {
	return o.ApplyT(func(v GetDataprocClusterClusterConfigSubclusterSpec) GetDataprocClusterClusterConfigSubclusterSpecResources {
		return v.Resources
	}).(GetDataprocClusterClusterConfigSubclusterSpecResourcesOutput)
}

// Role of the subcluster in the Data Proc cluster.
func (o GetDataprocClusterClusterConfigSubclusterSpecOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataprocClusterClusterConfigSubclusterSpec) string { return v.Role }).(pulumi.StringOutput)
}

// The ID of the subnet, to which hosts of the subcluster belong.
func (o GetDataprocClusterClusterConfigSubclusterSpecOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataprocClusterClusterConfigSubclusterSpec) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetDataprocClusterClusterConfigSubclusterSpecArrayOutput struct{ *pulumi.OutputState }

func (GetDataprocClusterClusterConfigSubclusterSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataprocClusterClusterConfigSubclusterSpec)(nil)).Elem()
}

func (o GetDataprocClusterClusterConfigSubclusterSpecArrayOutput) ToGetDataprocClusterClusterConfigSubclusterSpecArrayOutput() GetDataprocClusterClusterConfigSubclusterSpecArrayOutput {
	return o
}

func (o GetDataprocClusterClusterConfigSubclusterSpecArrayOutput) ToGetDataprocClusterClusterConfigSubclusterSpecArrayOutputWithContext(ctx context.Context) GetDataprocClusterClusterConfigSubclusterSpecArrayOutput {
	return o
}

func (o GetDataprocClusterClusterConfigSubclusterSpecArrayOutput) Index(i pulumi.IntInput) GetDataprocClusterClusterConfigSubclusterSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataprocClusterClusterConfigSubclusterSpec {
		return vs[0].([]GetDataprocClusterClusterConfigSubclusterSpec)[vs[1].(int)]
	}).(GetDataprocClusterClusterConfigSubclusterSpecOutput)
}

type GetDataprocClusterClusterConfigSubclusterSpecResources struct {
	// Volume of the storage available to a host, in gigabytes.
	DiskSize int `pulumi:"diskSize"`
	// Type of the storage of a host.
	DiskTypeId string `pulumi:"diskTypeId"`
	// The ID of the preset for computational resources available to a host. All available presets are listed in the [documentation](https://cloud.yandex.com/docs/data-proc/concepts/instance-types).
	ResourcePresetId string `pulumi:"resourcePresetId"`
}

// GetDataprocClusterClusterConfigSubclusterSpecResourcesInput is an input type that accepts GetDataprocClusterClusterConfigSubclusterSpecResourcesArgs and GetDataprocClusterClusterConfigSubclusterSpecResourcesOutput values.
// You can construct a concrete instance of `GetDataprocClusterClusterConfigSubclusterSpecResourcesInput` via:
//
//          GetDataprocClusterClusterConfigSubclusterSpecResourcesArgs{...}
type GetDataprocClusterClusterConfigSubclusterSpecResourcesInput interface {
	pulumi.Input

	ToGetDataprocClusterClusterConfigSubclusterSpecResourcesOutput() GetDataprocClusterClusterConfigSubclusterSpecResourcesOutput
	ToGetDataprocClusterClusterConfigSubclusterSpecResourcesOutputWithContext(context.Context) GetDataprocClusterClusterConfigSubclusterSpecResourcesOutput
}

type GetDataprocClusterClusterConfigSubclusterSpecResourcesArgs struct {
	// Volume of the storage available to a host, in gigabytes.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// Type of the storage of a host.
	DiskTypeId pulumi.StringInput `pulumi:"diskTypeId"`
	// The ID of the preset for computational resources available to a host. All available presets are listed in the [documentation](https://cloud.yandex.com/docs/data-proc/concepts/instance-types).
	ResourcePresetId pulumi.StringInput `pulumi:"resourcePresetId"`
}

func (GetDataprocClusterClusterConfigSubclusterSpecResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataprocClusterClusterConfigSubclusterSpecResources)(nil)).Elem()
}

func (i GetDataprocClusterClusterConfigSubclusterSpecResourcesArgs) ToGetDataprocClusterClusterConfigSubclusterSpecResourcesOutput() GetDataprocClusterClusterConfigSubclusterSpecResourcesOutput {
	return i.ToGetDataprocClusterClusterConfigSubclusterSpecResourcesOutputWithContext(context.Background())
}

func (i GetDataprocClusterClusterConfigSubclusterSpecResourcesArgs) ToGetDataprocClusterClusterConfigSubclusterSpecResourcesOutputWithContext(ctx context.Context) GetDataprocClusterClusterConfigSubclusterSpecResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataprocClusterClusterConfigSubclusterSpecResourcesOutput)
}

type GetDataprocClusterClusterConfigSubclusterSpecResourcesOutput struct{ *pulumi.OutputState }

func (GetDataprocClusterClusterConfigSubclusterSpecResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataprocClusterClusterConfigSubclusterSpecResources)(nil)).Elem()
}

func (o GetDataprocClusterClusterConfigSubclusterSpecResourcesOutput) ToGetDataprocClusterClusterConfigSubclusterSpecResourcesOutput() GetDataprocClusterClusterConfigSubclusterSpecResourcesOutput {
	return o
}

func (o GetDataprocClusterClusterConfigSubclusterSpecResourcesOutput) ToGetDataprocClusterClusterConfigSubclusterSpecResourcesOutputWithContext(ctx context.Context) GetDataprocClusterClusterConfigSubclusterSpecResourcesOutput {
	return o
}

// Volume of the storage available to a host, in gigabytes.
func (o GetDataprocClusterClusterConfigSubclusterSpecResourcesOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataprocClusterClusterConfigSubclusterSpecResources) int { return v.DiskSize }).(pulumi.IntOutput)
}

// Type of the storage of a host.
func (o GetDataprocClusterClusterConfigSubclusterSpecResourcesOutput) DiskTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataprocClusterClusterConfigSubclusterSpecResources) string { return v.DiskTypeId }).(pulumi.StringOutput)
}

// The ID of the preset for computational resources available to a host. All available presets are listed in the [documentation](https://cloud.yandex.com/docs/data-proc/concepts/instance-types).
func (o GetDataprocClusterClusterConfigSubclusterSpecResourcesOutput) ResourcePresetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataprocClusterClusterConfigSubclusterSpecResources) string { return v.ResourcePresetId }).(pulumi.StringOutput)
}

type GetFunctionTriggerDlq struct {
	QueueId          string `pulumi:"queueId"`
	ServiceAccountId string `pulumi:"serviceAccountId"`
}

// GetFunctionTriggerDlqInput is an input type that accepts GetFunctionTriggerDlqArgs and GetFunctionTriggerDlqOutput values.
// You can construct a concrete instance of `GetFunctionTriggerDlqInput` via:
//
//          GetFunctionTriggerDlqArgs{...}
type GetFunctionTriggerDlqInput interface {
	pulumi.Input

	ToGetFunctionTriggerDlqOutput() GetFunctionTriggerDlqOutput
	ToGetFunctionTriggerDlqOutputWithContext(context.Context) GetFunctionTriggerDlqOutput
}

type GetFunctionTriggerDlqArgs struct {
	QueueId          pulumi.StringInput `pulumi:"queueId"`
	ServiceAccountId pulumi.StringInput `pulumi:"serviceAccountId"`
}

func (GetFunctionTriggerDlqArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionTriggerDlq)(nil)).Elem()
}

func (i GetFunctionTriggerDlqArgs) ToGetFunctionTriggerDlqOutput() GetFunctionTriggerDlqOutput {
	return i.ToGetFunctionTriggerDlqOutputWithContext(context.Background())
}

func (i GetFunctionTriggerDlqArgs) ToGetFunctionTriggerDlqOutputWithContext(ctx context.Context) GetFunctionTriggerDlqOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionTriggerDlqOutput)
}

type GetFunctionTriggerDlqOutput struct{ *pulumi.OutputState }

func (GetFunctionTriggerDlqOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionTriggerDlq)(nil)).Elem()
}

func (o GetFunctionTriggerDlqOutput) ToGetFunctionTriggerDlqOutput() GetFunctionTriggerDlqOutput {
	return o
}

func (o GetFunctionTriggerDlqOutput) ToGetFunctionTriggerDlqOutputWithContext(ctx context.Context) GetFunctionTriggerDlqOutput {
	return o
}

func (o GetFunctionTriggerDlqOutput) QueueId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionTriggerDlq) string { return v.QueueId }).(pulumi.StringOutput)
}

func (o GetFunctionTriggerDlqOutput) ServiceAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionTriggerDlq) string { return v.ServiceAccountId }).(pulumi.StringOutput)
}

type GetFunctionTriggerFunction struct {
	Id               string `pulumi:"id"`
	RetryAttempts    string `pulumi:"retryAttempts"`
	RetryInterval    string `pulumi:"retryInterval"`
	ServiceAccountId string `pulumi:"serviceAccountId"`
	Tag              string `pulumi:"tag"`
}

// GetFunctionTriggerFunctionInput is an input type that accepts GetFunctionTriggerFunctionArgs and GetFunctionTriggerFunctionOutput values.
// You can construct a concrete instance of `GetFunctionTriggerFunctionInput` via:
//
//          GetFunctionTriggerFunctionArgs{...}
type GetFunctionTriggerFunctionInput interface {
	pulumi.Input

	ToGetFunctionTriggerFunctionOutput() GetFunctionTriggerFunctionOutput
	ToGetFunctionTriggerFunctionOutputWithContext(context.Context) GetFunctionTriggerFunctionOutput
}

type GetFunctionTriggerFunctionArgs struct {
	Id               pulumi.StringInput `pulumi:"id"`
	RetryAttempts    pulumi.StringInput `pulumi:"retryAttempts"`
	RetryInterval    pulumi.StringInput `pulumi:"retryInterval"`
	ServiceAccountId pulumi.StringInput `pulumi:"serviceAccountId"`
	Tag              pulumi.StringInput `pulumi:"tag"`
}

func (GetFunctionTriggerFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionTriggerFunction)(nil)).Elem()
}

func (i GetFunctionTriggerFunctionArgs) ToGetFunctionTriggerFunctionOutput() GetFunctionTriggerFunctionOutput {
	return i.ToGetFunctionTriggerFunctionOutputWithContext(context.Background())
}

func (i GetFunctionTriggerFunctionArgs) ToGetFunctionTriggerFunctionOutputWithContext(ctx context.Context) GetFunctionTriggerFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionTriggerFunctionOutput)
}

type GetFunctionTriggerFunctionOutput struct{ *pulumi.OutputState }

func (GetFunctionTriggerFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionTriggerFunction)(nil)).Elem()
}

func (o GetFunctionTriggerFunctionOutput) ToGetFunctionTriggerFunctionOutput() GetFunctionTriggerFunctionOutput {
	return o
}

func (o GetFunctionTriggerFunctionOutput) ToGetFunctionTriggerFunctionOutputWithContext(ctx context.Context) GetFunctionTriggerFunctionOutput {
	return o
}

func (o GetFunctionTriggerFunctionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionTriggerFunction) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetFunctionTriggerFunctionOutput) RetryAttempts() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionTriggerFunction) string { return v.RetryAttempts }).(pulumi.StringOutput)
}

func (o GetFunctionTriggerFunctionOutput) RetryInterval() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionTriggerFunction) string { return v.RetryInterval }).(pulumi.StringOutput)
}

func (o GetFunctionTriggerFunctionOutput) ServiceAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionTriggerFunction) string { return v.ServiceAccountId }).(pulumi.StringOutput)
}

func (o GetFunctionTriggerFunctionOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionTriggerFunction) string { return v.Tag }).(pulumi.StringOutput)
}

type GetFunctionTriggerIot struct {
	DeviceId   string `pulumi:"deviceId"`
	RegistryId string `pulumi:"registryId"`
	Topic      string `pulumi:"topic"`
}

// GetFunctionTriggerIotInput is an input type that accepts GetFunctionTriggerIotArgs and GetFunctionTriggerIotOutput values.
// You can construct a concrete instance of `GetFunctionTriggerIotInput` via:
//
//          GetFunctionTriggerIotArgs{...}
type GetFunctionTriggerIotInput interface {
	pulumi.Input

	ToGetFunctionTriggerIotOutput() GetFunctionTriggerIotOutput
	ToGetFunctionTriggerIotOutputWithContext(context.Context) GetFunctionTriggerIotOutput
}

type GetFunctionTriggerIotArgs struct {
	DeviceId   pulumi.StringInput `pulumi:"deviceId"`
	RegistryId pulumi.StringInput `pulumi:"registryId"`
	Topic      pulumi.StringInput `pulumi:"topic"`
}

func (GetFunctionTriggerIotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionTriggerIot)(nil)).Elem()
}

func (i GetFunctionTriggerIotArgs) ToGetFunctionTriggerIotOutput() GetFunctionTriggerIotOutput {
	return i.ToGetFunctionTriggerIotOutputWithContext(context.Background())
}

func (i GetFunctionTriggerIotArgs) ToGetFunctionTriggerIotOutputWithContext(ctx context.Context) GetFunctionTriggerIotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionTriggerIotOutput)
}

type GetFunctionTriggerIotOutput struct{ *pulumi.OutputState }

func (GetFunctionTriggerIotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionTriggerIot)(nil)).Elem()
}

func (o GetFunctionTriggerIotOutput) ToGetFunctionTriggerIotOutput() GetFunctionTriggerIotOutput {
	return o
}

func (o GetFunctionTriggerIotOutput) ToGetFunctionTriggerIotOutputWithContext(ctx context.Context) GetFunctionTriggerIotOutput {
	return o
}

func (o GetFunctionTriggerIotOutput) DeviceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionTriggerIot) string { return v.DeviceId }).(pulumi.StringOutput)
}

func (o GetFunctionTriggerIotOutput) RegistryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionTriggerIot) string { return v.RegistryId }).(pulumi.StringOutput)
}

func (o GetFunctionTriggerIotOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionTriggerIot) string { return v.Topic }).(pulumi.StringOutput)
}

type GetFunctionTriggerLogGroup struct {
	BatchCutoff string   `pulumi:"batchCutoff"`
	BatchSize   string   `pulumi:"batchSize"`
	LogGroupIds []string `pulumi:"logGroupIds"`
}

// GetFunctionTriggerLogGroupInput is an input type that accepts GetFunctionTriggerLogGroupArgs and GetFunctionTriggerLogGroupOutput values.
// You can construct a concrete instance of `GetFunctionTriggerLogGroupInput` via:
//
//          GetFunctionTriggerLogGroupArgs{...}
type GetFunctionTriggerLogGroupInput interface {
	pulumi.Input

	ToGetFunctionTriggerLogGroupOutput() GetFunctionTriggerLogGroupOutput
	ToGetFunctionTriggerLogGroupOutputWithContext(context.Context) GetFunctionTriggerLogGroupOutput
}

type GetFunctionTriggerLogGroupArgs struct {
	BatchCutoff pulumi.StringInput      `pulumi:"batchCutoff"`
	BatchSize   pulumi.StringInput      `pulumi:"batchSize"`
	LogGroupIds pulumi.StringArrayInput `pulumi:"logGroupIds"`
}

func (GetFunctionTriggerLogGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionTriggerLogGroup)(nil)).Elem()
}

func (i GetFunctionTriggerLogGroupArgs) ToGetFunctionTriggerLogGroupOutput() GetFunctionTriggerLogGroupOutput {
	return i.ToGetFunctionTriggerLogGroupOutputWithContext(context.Background())
}

func (i GetFunctionTriggerLogGroupArgs) ToGetFunctionTriggerLogGroupOutputWithContext(ctx context.Context) GetFunctionTriggerLogGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionTriggerLogGroupOutput)
}

type GetFunctionTriggerLogGroupOutput struct{ *pulumi.OutputState }

func (GetFunctionTriggerLogGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionTriggerLogGroup)(nil)).Elem()
}

func (o GetFunctionTriggerLogGroupOutput) ToGetFunctionTriggerLogGroupOutput() GetFunctionTriggerLogGroupOutput {
	return o
}

func (o GetFunctionTriggerLogGroupOutput) ToGetFunctionTriggerLogGroupOutputWithContext(ctx context.Context) GetFunctionTriggerLogGroupOutput {
	return o
}

func (o GetFunctionTriggerLogGroupOutput) BatchCutoff() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionTriggerLogGroup) string { return v.BatchCutoff }).(pulumi.StringOutput)
}

func (o GetFunctionTriggerLogGroupOutput) BatchSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionTriggerLogGroup) string { return v.BatchSize }).(pulumi.StringOutput)
}

func (o GetFunctionTriggerLogGroupOutput) LogGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFunctionTriggerLogGroup) []string { return v.LogGroupIds }).(pulumi.StringArrayOutput)
}

type GetFunctionTriggerMessageQueue struct {
	BatchCutoff       string `pulumi:"batchCutoff"`
	BatchSize         string `pulumi:"batchSize"`
	QueueId           string `pulumi:"queueId"`
	ServiceAccountId  string `pulumi:"serviceAccountId"`
	VisibilityTimeout string `pulumi:"visibilityTimeout"`
}

// GetFunctionTriggerMessageQueueInput is an input type that accepts GetFunctionTriggerMessageQueueArgs and GetFunctionTriggerMessageQueueOutput values.
// You can construct a concrete instance of `GetFunctionTriggerMessageQueueInput` via:
//
//          GetFunctionTriggerMessageQueueArgs{...}
type GetFunctionTriggerMessageQueueInput interface {
	pulumi.Input

	ToGetFunctionTriggerMessageQueueOutput() GetFunctionTriggerMessageQueueOutput
	ToGetFunctionTriggerMessageQueueOutputWithContext(context.Context) GetFunctionTriggerMessageQueueOutput
}

type GetFunctionTriggerMessageQueueArgs struct {
	BatchCutoff       pulumi.StringInput `pulumi:"batchCutoff"`
	BatchSize         pulumi.StringInput `pulumi:"batchSize"`
	QueueId           pulumi.StringInput `pulumi:"queueId"`
	ServiceAccountId  pulumi.StringInput `pulumi:"serviceAccountId"`
	VisibilityTimeout pulumi.StringInput `pulumi:"visibilityTimeout"`
}

func (GetFunctionTriggerMessageQueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionTriggerMessageQueue)(nil)).Elem()
}

func (i GetFunctionTriggerMessageQueueArgs) ToGetFunctionTriggerMessageQueueOutput() GetFunctionTriggerMessageQueueOutput {
	return i.ToGetFunctionTriggerMessageQueueOutputWithContext(context.Background())
}

func (i GetFunctionTriggerMessageQueueArgs) ToGetFunctionTriggerMessageQueueOutputWithContext(ctx context.Context) GetFunctionTriggerMessageQueueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionTriggerMessageQueueOutput)
}

type GetFunctionTriggerMessageQueueOutput struct{ *pulumi.OutputState }

func (GetFunctionTriggerMessageQueueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionTriggerMessageQueue)(nil)).Elem()
}

func (o GetFunctionTriggerMessageQueueOutput) ToGetFunctionTriggerMessageQueueOutput() GetFunctionTriggerMessageQueueOutput {
	return o
}

func (o GetFunctionTriggerMessageQueueOutput) ToGetFunctionTriggerMessageQueueOutputWithContext(ctx context.Context) GetFunctionTriggerMessageQueueOutput {
	return o
}

func (o GetFunctionTriggerMessageQueueOutput) BatchCutoff() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionTriggerMessageQueue) string { return v.BatchCutoff }).(pulumi.StringOutput)
}

func (o GetFunctionTriggerMessageQueueOutput) BatchSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionTriggerMessageQueue) string { return v.BatchSize }).(pulumi.StringOutput)
}

func (o GetFunctionTriggerMessageQueueOutput) QueueId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionTriggerMessageQueue) string { return v.QueueId }).(pulumi.StringOutput)
}

func (o GetFunctionTriggerMessageQueueOutput) ServiceAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionTriggerMessageQueue) string { return v.ServiceAccountId }).(pulumi.StringOutput)
}

func (o GetFunctionTriggerMessageQueueOutput) VisibilityTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionTriggerMessageQueue) string { return v.VisibilityTimeout }).(pulumi.StringOutput)
}

type GetFunctionTriggerObjectStorage struct {
	BucketId string `pulumi:"bucketId"`
	Create   bool   `pulumi:"create"`
	Delete   bool   `pulumi:"delete"`
	Prefix   string `pulumi:"prefix"`
	Suffix   string `pulumi:"suffix"`
	Update   bool   `pulumi:"update"`
}

// GetFunctionTriggerObjectStorageInput is an input type that accepts GetFunctionTriggerObjectStorageArgs and GetFunctionTriggerObjectStorageOutput values.
// You can construct a concrete instance of `GetFunctionTriggerObjectStorageInput` via:
//
//          GetFunctionTriggerObjectStorageArgs{...}
type GetFunctionTriggerObjectStorageInput interface {
	pulumi.Input

	ToGetFunctionTriggerObjectStorageOutput() GetFunctionTriggerObjectStorageOutput
	ToGetFunctionTriggerObjectStorageOutputWithContext(context.Context) GetFunctionTriggerObjectStorageOutput
}

type GetFunctionTriggerObjectStorageArgs struct {
	BucketId pulumi.StringInput `pulumi:"bucketId"`
	Create   pulumi.BoolInput   `pulumi:"create"`
	Delete   pulumi.BoolInput   `pulumi:"delete"`
	Prefix   pulumi.StringInput `pulumi:"prefix"`
	Suffix   pulumi.StringInput `pulumi:"suffix"`
	Update   pulumi.BoolInput   `pulumi:"update"`
}

func (GetFunctionTriggerObjectStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionTriggerObjectStorage)(nil)).Elem()
}

func (i GetFunctionTriggerObjectStorageArgs) ToGetFunctionTriggerObjectStorageOutput() GetFunctionTriggerObjectStorageOutput {
	return i.ToGetFunctionTriggerObjectStorageOutputWithContext(context.Background())
}

func (i GetFunctionTriggerObjectStorageArgs) ToGetFunctionTriggerObjectStorageOutputWithContext(ctx context.Context) GetFunctionTriggerObjectStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionTriggerObjectStorageOutput)
}

type GetFunctionTriggerObjectStorageOutput struct{ *pulumi.OutputState }

func (GetFunctionTriggerObjectStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionTriggerObjectStorage)(nil)).Elem()
}

func (o GetFunctionTriggerObjectStorageOutput) ToGetFunctionTriggerObjectStorageOutput() GetFunctionTriggerObjectStorageOutput {
	return o
}

func (o GetFunctionTriggerObjectStorageOutput) ToGetFunctionTriggerObjectStorageOutputWithContext(ctx context.Context) GetFunctionTriggerObjectStorageOutput {
	return o
}

func (o GetFunctionTriggerObjectStorageOutput) BucketId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionTriggerObjectStorage) string { return v.BucketId }).(pulumi.StringOutput)
}

func (o GetFunctionTriggerObjectStorageOutput) Create() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFunctionTriggerObjectStorage) bool { return v.Create }).(pulumi.BoolOutput)
}

func (o GetFunctionTriggerObjectStorageOutput) Delete() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFunctionTriggerObjectStorage) bool { return v.Delete }).(pulumi.BoolOutput)
}

func (o GetFunctionTriggerObjectStorageOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionTriggerObjectStorage) string { return v.Prefix }).(pulumi.StringOutput)
}

func (o GetFunctionTriggerObjectStorageOutput) Suffix() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionTriggerObjectStorage) string { return v.Suffix }).(pulumi.StringOutput)
}

func (o GetFunctionTriggerObjectStorageOutput) Update() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFunctionTriggerObjectStorage) bool { return v.Update }).(pulumi.BoolOutput)
}

type GetFunctionTriggerTimer struct {
	CronExpression string `pulumi:"cronExpression"`
}

// GetFunctionTriggerTimerInput is an input type that accepts GetFunctionTriggerTimerArgs and GetFunctionTriggerTimerOutput values.
// You can construct a concrete instance of `GetFunctionTriggerTimerInput` via:
//
//          GetFunctionTriggerTimerArgs{...}
type GetFunctionTriggerTimerInput interface {
	pulumi.Input

	ToGetFunctionTriggerTimerOutput() GetFunctionTriggerTimerOutput
	ToGetFunctionTriggerTimerOutputWithContext(context.Context) GetFunctionTriggerTimerOutput
}

type GetFunctionTriggerTimerArgs struct {
	CronExpression pulumi.StringInput `pulumi:"cronExpression"`
}

func (GetFunctionTriggerTimerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionTriggerTimer)(nil)).Elem()
}

func (i GetFunctionTriggerTimerArgs) ToGetFunctionTriggerTimerOutput() GetFunctionTriggerTimerOutput {
	return i.ToGetFunctionTriggerTimerOutputWithContext(context.Background())
}

func (i GetFunctionTriggerTimerArgs) ToGetFunctionTriggerTimerOutputWithContext(ctx context.Context) GetFunctionTriggerTimerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionTriggerTimerOutput)
}

type GetFunctionTriggerTimerOutput struct{ *pulumi.OutputState }

func (GetFunctionTriggerTimerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionTriggerTimer)(nil)).Elem()
}

func (o GetFunctionTriggerTimerOutput) ToGetFunctionTriggerTimerOutput() GetFunctionTriggerTimerOutput {
	return o
}

func (o GetFunctionTriggerTimerOutput) ToGetFunctionTriggerTimerOutputWithContext(ctx context.Context) GetFunctionTriggerTimerOutput {
	return o
}

func (o GetFunctionTriggerTimerOutput) CronExpression() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionTriggerTimer) string { return v.CronExpression }).(pulumi.StringOutput)
}

type GetIamPolicyBinding struct {
	// An array of identities that will be granted the privilege in the `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **serviceAccount:{service_account_id}**: A unique service account ID.
	Members []string `pulumi:"members"`
	// The role/permission that will be granted to the members.
	// See the [IAM Roles] documentation for a complete list of roles.
	Role string `pulumi:"role"`
}

// GetIamPolicyBindingInput is an input type that accepts GetIamPolicyBindingArgs and GetIamPolicyBindingOutput values.
// You can construct a concrete instance of `GetIamPolicyBindingInput` via:
//
//          GetIamPolicyBindingArgs{...}
type GetIamPolicyBindingInput interface {
	pulumi.Input

	ToGetIamPolicyBindingOutput() GetIamPolicyBindingOutput
	ToGetIamPolicyBindingOutputWithContext(context.Context) GetIamPolicyBindingOutput
}

type GetIamPolicyBindingArgs struct {
	// An array of identities that will be granted the privilege in the `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **serviceAccount:{service_account_id}**: A unique service account ID.
	Members pulumi.StringArrayInput `pulumi:"members"`
	// The role/permission that will be granted to the members.
	// See the [IAM Roles] documentation for a complete list of roles.
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetIamPolicyBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamPolicyBinding)(nil)).Elem()
}

func (i GetIamPolicyBindingArgs) ToGetIamPolicyBindingOutput() GetIamPolicyBindingOutput {
	return i.ToGetIamPolicyBindingOutputWithContext(context.Background())
}

func (i GetIamPolicyBindingArgs) ToGetIamPolicyBindingOutputWithContext(ctx context.Context) GetIamPolicyBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamPolicyBindingOutput)
}

// GetIamPolicyBindingArrayInput is an input type that accepts GetIamPolicyBindingArray and GetIamPolicyBindingArrayOutput values.
// You can construct a concrete instance of `GetIamPolicyBindingArrayInput` via:
//
//          GetIamPolicyBindingArray{ GetIamPolicyBindingArgs{...} }
type GetIamPolicyBindingArrayInput interface {
	pulumi.Input

	ToGetIamPolicyBindingArrayOutput() GetIamPolicyBindingArrayOutput
	ToGetIamPolicyBindingArrayOutputWithContext(context.Context) GetIamPolicyBindingArrayOutput
}

type GetIamPolicyBindingArray []GetIamPolicyBindingInput

func (GetIamPolicyBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIamPolicyBinding)(nil)).Elem()
}

func (i GetIamPolicyBindingArray) ToGetIamPolicyBindingArrayOutput() GetIamPolicyBindingArrayOutput {
	return i.ToGetIamPolicyBindingArrayOutputWithContext(context.Background())
}

func (i GetIamPolicyBindingArray) ToGetIamPolicyBindingArrayOutputWithContext(ctx context.Context) GetIamPolicyBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamPolicyBindingArrayOutput)
}

type GetIamPolicyBindingOutput struct{ *pulumi.OutputState }

func (GetIamPolicyBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamPolicyBinding)(nil)).Elem()
}

func (o GetIamPolicyBindingOutput) ToGetIamPolicyBindingOutput() GetIamPolicyBindingOutput {
	return o
}

func (o GetIamPolicyBindingOutput) ToGetIamPolicyBindingOutputWithContext(ctx context.Context) GetIamPolicyBindingOutput {
	return o
}

// An array of identities that will be granted the privilege in the `role`.
// Each entry can have one of the following values:
// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
// * **serviceAccount:{service_account_id}**: A unique service account ID.
func (o GetIamPolicyBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIamPolicyBinding) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// The role/permission that will be granted to the members.
// See the [IAM Roles] documentation for a complete list of roles.
func (o GetIamPolicyBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamPolicyBinding) string { return v.Role }).(pulumi.StringOutput)
}

type GetIamPolicyBindingArrayOutput struct{ *pulumi.OutputState }

func (GetIamPolicyBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIamPolicyBinding)(nil)).Elem()
}

func (o GetIamPolicyBindingArrayOutput) ToGetIamPolicyBindingArrayOutput() GetIamPolicyBindingArrayOutput {
	return o
}

func (o GetIamPolicyBindingArrayOutput) ToGetIamPolicyBindingArrayOutputWithContext(ctx context.Context) GetIamPolicyBindingArrayOutput {
	return o
}

func (o GetIamPolicyBindingArrayOutput) Index(i pulumi.IntInput) GetIamPolicyBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIamPolicyBinding {
		return vs[0].([]GetIamPolicyBinding)[vs[1].(int)]
	}).(GetIamPolicyBindingOutput)
}

type GetKubernetesClusterKmsProvider struct {
	// KMS key ID.
	KeyId string `pulumi:"keyId"`
}

// GetKubernetesClusterKmsProviderInput is an input type that accepts GetKubernetesClusterKmsProviderArgs and GetKubernetesClusterKmsProviderOutput values.
// You can construct a concrete instance of `GetKubernetesClusterKmsProviderInput` via:
//
//          GetKubernetesClusterKmsProviderArgs{...}
type GetKubernetesClusterKmsProviderInput interface {
	pulumi.Input

	ToGetKubernetesClusterKmsProviderOutput() GetKubernetesClusterKmsProviderOutput
	ToGetKubernetesClusterKmsProviderOutputWithContext(context.Context) GetKubernetesClusterKmsProviderOutput
}

type GetKubernetesClusterKmsProviderArgs struct {
	// KMS key ID.
	KeyId pulumi.StringInput `pulumi:"keyId"`
}

func (GetKubernetesClusterKmsProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterKmsProvider)(nil)).Elem()
}

func (i GetKubernetesClusterKmsProviderArgs) ToGetKubernetesClusterKmsProviderOutput() GetKubernetesClusterKmsProviderOutput {
	return i.ToGetKubernetesClusterKmsProviderOutputWithContext(context.Background())
}

func (i GetKubernetesClusterKmsProviderArgs) ToGetKubernetesClusterKmsProviderOutputWithContext(ctx context.Context) GetKubernetesClusterKmsProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterKmsProviderOutput)
}

type GetKubernetesClusterKmsProviderOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterKmsProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterKmsProvider)(nil)).Elem()
}

func (o GetKubernetesClusterKmsProviderOutput) ToGetKubernetesClusterKmsProviderOutput() GetKubernetesClusterKmsProviderOutput {
	return o
}

func (o GetKubernetesClusterKmsProviderOutput) ToGetKubernetesClusterKmsProviderOutputWithContext(ctx context.Context) GetKubernetesClusterKmsProviderOutput {
	return o
}

// KMS key ID.
func (o GetKubernetesClusterKmsProviderOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKmsProvider) string { return v.KeyId }).(pulumi.StringOutput)
}

type GetKubernetesClusterMaster struct {
	// PEM-encoded public certificate that is the root of trust for the Kubernetes cluster.
	ClusterCaCertificate string `pulumi:"clusterCaCertificate"`
	// An IPv4 external network address that is assigned to the master.
	ExternalV4Address string `pulumi:"externalV4Address"`
	// External endpoint that can be used to access Kubernetes cluster API from the internet (outside of the cloud).
	ExternalV4Endpoint string `pulumi:"externalV4Endpoint"`
	// An IPv4 internal network address that is assigned to the master.
	InternalV4Address string `pulumi:"internalV4Address"`
	// Internal endpoint that can be used to connect to the master from cloud networks.
	InternalV4Endpoint string `pulumi:"internalV4Endpoint"`
	// Maintenance policy for Kubernetes master. The structure is documented below.
	MaintenancePolicy GetKubernetesClusterMasterMaintenancePolicy `pulumi:"maintenancePolicy"`
	// Boolean flag. When `true`, Kubernetes master have visible ipv4 address.
	PublicIp bool `pulumi:"publicIp"`
	// Information about cluster regional master. The structure is documented below.
	Regional GetKubernetesClusterMasterRegional `pulumi:"regional"`
	// A list of security groups IDs of the Kubernetes cluster.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// Version of Kubernetes master.
	Version string `pulumi:"version"`
	// Information about cluster version. The structure is documented below.
	VersionInfo GetKubernetesClusterMasterVersionInfo `pulumi:"versionInfo"`
	// Information about cluster zonal master. The structure is documented below.
	Zonal GetKubernetesClusterMasterZonal `pulumi:"zonal"`
}

// GetKubernetesClusterMasterInput is an input type that accepts GetKubernetesClusterMasterArgs and GetKubernetesClusterMasterOutput values.
// You can construct a concrete instance of `GetKubernetesClusterMasterInput` via:
//
//          GetKubernetesClusterMasterArgs{...}
type GetKubernetesClusterMasterInput interface {
	pulumi.Input

	ToGetKubernetesClusterMasterOutput() GetKubernetesClusterMasterOutput
	ToGetKubernetesClusterMasterOutputWithContext(context.Context) GetKubernetesClusterMasterOutput
}

type GetKubernetesClusterMasterArgs struct {
	// PEM-encoded public certificate that is the root of trust for the Kubernetes cluster.
	ClusterCaCertificate pulumi.StringInput `pulumi:"clusterCaCertificate"`
	// An IPv4 external network address that is assigned to the master.
	ExternalV4Address pulumi.StringInput `pulumi:"externalV4Address"`
	// External endpoint that can be used to access Kubernetes cluster API from the internet (outside of the cloud).
	ExternalV4Endpoint pulumi.StringInput `pulumi:"externalV4Endpoint"`
	// An IPv4 internal network address that is assigned to the master.
	InternalV4Address pulumi.StringInput `pulumi:"internalV4Address"`
	// Internal endpoint that can be used to connect to the master from cloud networks.
	InternalV4Endpoint pulumi.StringInput `pulumi:"internalV4Endpoint"`
	// Maintenance policy for Kubernetes master. The structure is documented below.
	MaintenancePolicy GetKubernetesClusterMasterMaintenancePolicyInput `pulumi:"maintenancePolicy"`
	// Boolean flag. When `true`, Kubernetes master have visible ipv4 address.
	PublicIp pulumi.BoolInput `pulumi:"publicIp"`
	// Information about cluster regional master. The structure is documented below.
	Regional GetKubernetesClusterMasterRegionalInput `pulumi:"regional"`
	// A list of security groups IDs of the Kubernetes cluster.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// Version of Kubernetes master.
	Version pulumi.StringInput `pulumi:"version"`
	// Information about cluster version. The structure is documented below.
	VersionInfo GetKubernetesClusterMasterVersionInfoInput `pulumi:"versionInfo"`
	// Information about cluster zonal master. The structure is documented below.
	Zonal GetKubernetesClusterMasterZonalInput `pulumi:"zonal"`
}

func (GetKubernetesClusterMasterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterMaster)(nil)).Elem()
}

func (i GetKubernetesClusterMasterArgs) ToGetKubernetesClusterMasterOutput() GetKubernetesClusterMasterOutput {
	return i.ToGetKubernetesClusterMasterOutputWithContext(context.Background())
}

func (i GetKubernetesClusterMasterArgs) ToGetKubernetesClusterMasterOutputWithContext(ctx context.Context) GetKubernetesClusterMasterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterMasterOutput)
}

type GetKubernetesClusterMasterOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterMasterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterMaster)(nil)).Elem()
}

func (o GetKubernetesClusterMasterOutput) ToGetKubernetesClusterMasterOutput() GetKubernetesClusterMasterOutput {
	return o
}

func (o GetKubernetesClusterMasterOutput) ToGetKubernetesClusterMasterOutputWithContext(ctx context.Context) GetKubernetesClusterMasterOutput {
	return o
}

// PEM-encoded public certificate that is the root of trust for the Kubernetes cluster.
func (o GetKubernetesClusterMasterOutput) ClusterCaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterMaster) string { return v.ClusterCaCertificate }).(pulumi.StringOutput)
}

// An IPv4 external network address that is assigned to the master.
func (o GetKubernetesClusterMasterOutput) ExternalV4Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterMaster) string { return v.ExternalV4Address }).(pulumi.StringOutput)
}

// External endpoint that can be used to access Kubernetes cluster API from the internet (outside of the cloud).
func (o GetKubernetesClusterMasterOutput) ExternalV4Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterMaster) string { return v.ExternalV4Endpoint }).(pulumi.StringOutput)
}

// An IPv4 internal network address that is assigned to the master.
func (o GetKubernetesClusterMasterOutput) InternalV4Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterMaster) string { return v.InternalV4Address }).(pulumi.StringOutput)
}

// Internal endpoint that can be used to connect to the master from cloud networks.
func (o GetKubernetesClusterMasterOutput) InternalV4Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterMaster) string { return v.InternalV4Endpoint }).(pulumi.StringOutput)
}

// Maintenance policy for Kubernetes master. The structure is documented below.
func (o GetKubernetesClusterMasterOutput) MaintenancePolicy() GetKubernetesClusterMasterMaintenancePolicyOutput {
	return o.ApplyT(func(v GetKubernetesClusterMaster) GetKubernetesClusterMasterMaintenancePolicy {
		return v.MaintenancePolicy
	}).(GetKubernetesClusterMasterMaintenancePolicyOutput)
}

// Boolean flag. When `true`, Kubernetes master have visible ipv4 address.
func (o GetKubernetesClusterMasterOutput) PublicIp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterMaster) bool { return v.PublicIp }).(pulumi.BoolOutput)
}

// Information about cluster regional master. The structure is documented below.
func (o GetKubernetesClusterMasterOutput) Regional() GetKubernetesClusterMasterRegionalOutput {
	return o.ApplyT(func(v GetKubernetesClusterMaster) GetKubernetesClusterMasterRegional { return v.Regional }).(GetKubernetesClusterMasterRegionalOutput)
}

// A list of security groups IDs of the Kubernetes cluster.
func (o GetKubernetesClusterMasterOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterMaster) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// Version of Kubernetes master.
func (o GetKubernetesClusterMasterOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterMaster) string { return v.Version }).(pulumi.StringOutput)
}

// Information about cluster version. The structure is documented below.
func (o GetKubernetesClusterMasterOutput) VersionInfo() GetKubernetesClusterMasterVersionInfoOutput {
	return o.ApplyT(func(v GetKubernetesClusterMaster) GetKubernetesClusterMasterVersionInfo { return v.VersionInfo }).(GetKubernetesClusterMasterVersionInfoOutput)
}

// Information about cluster zonal master. The structure is documented below.
func (o GetKubernetesClusterMasterOutput) Zonal() GetKubernetesClusterMasterZonalOutput {
	return o.ApplyT(func(v GetKubernetesClusterMaster) GetKubernetesClusterMasterZonal { return v.Zonal }).(GetKubernetesClusterMasterZonalOutput)
}

type GetKubernetesClusterMasterMaintenancePolicy struct {
	// Boolean flag that specifies if master can be upgraded automatically.
	AutoUpgrade bool `pulumi:"autoUpgrade"`
	// Set of day intervals, when maintenance is allowed, when update for master is allowed.
	// When omitted, it defaults to any time.
	MaintenanceWindows []GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindow `pulumi:"maintenanceWindows"`
}

// GetKubernetesClusterMasterMaintenancePolicyInput is an input type that accepts GetKubernetesClusterMasterMaintenancePolicyArgs and GetKubernetesClusterMasterMaintenancePolicyOutput values.
// You can construct a concrete instance of `GetKubernetesClusterMasterMaintenancePolicyInput` via:
//
//          GetKubernetesClusterMasterMaintenancePolicyArgs{...}
type GetKubernetesClusterMasterMaintenancePolicyInput interface {
	pulumi.Input

	ToGetKubernetesClusterMasterMaintenancePolicyOutput() GetKubernetesClusterMasterMaintenancePolicyOutput
	ToGetKubernetesClusterMasterMaintenancePolicyOutputWithContext(context.Context) GetKubernetesClusterMasterMaintenancePolicyOutput
}

type GetKubernetesClusterMasterMaintenancePolicyArgs struct {
	// Boolean flag that specifies if master can be upgraded automatically.
	AutoUpgrade pulumi.BoolInput `pulumi:"autoUpgrade"`
	// Set of day intervals, when maintenance is allowed, when update for master is allowed.
	// When omitted, it defaults to any time.
	MaintenanceWindows GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayInput `pulumi:"maintenanceWindows"`
}

func (GetKubernetesClusterMasterMaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterMasterMaintenancePolicy)(nil)).Elem()
}

func (i GetKubernetesClusterMasterMaintenancePolicyArgs) ToGetKubernetesClusterMasterMaintenancePolicyOutput() GetKubernetesClusterMasterMaintenancePolicyOutput {
	return i.ToGetKubernetesClusterMasterMaintenancePolicyOutputWithContext(context.Background())
}

func (i GetKubernetesClusterMasterMaintenancePolicyArgs) ToGetKubernetesClusterMasterMaintenancePolicyOutputWithContext(ctx context.Context) GetKubernetesClusterMasterMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterMasterMaintenancePolicyOutput)
}

type GetKubernetesClusterMasterMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterMasterMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterMasterMaintenancePolicy)(nil)).Elem()
}

func (o GetKubernetesClusterMasterMaintenancePolicyOutput) ToGetKubernetesClusterMasterMaintenancePolicyOutput() GetKubernetesClusterMasterMaintenancePolicyOutput {
	return o
}

func (o GetKubernetesClusterMasterMaintenancePolicyOutput) ToGetKubernetesClusterMasterMaintenancePolicyOutputWithContext(ctx context.Context) GetKubernetesClusterMasterMaintenancePolicyOutput {
	return o
}

// Boolean flag that specifies if master can be upgraded automatically.
func (o GetKubernetesClusterMasterMaintenancePolicyOutput) AutoUpgrade() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterMasterMaintenancePolicy) bool { return v.AutoUpgrade }).(pulumi.BoolOutput)
}

// Set of day intervals, when maintenance is allowed, when update for master is allowed.
// When omitted, it defaults to any time.
func (o GetKubernetesClusterMasterMaintenancePolicyOutput) MaintenanceWindows() GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterMasterMaintenancePolicy) []GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindow {
		return v.MaintenanceWindows
	}).(GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput)
}

type GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindow struct {
	Day       string `pulumi:"day"`
	Duration  string `pulumi:"duration"`
	StartTime string `pulumi:"startTime"`
}

// GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowInput is an input type that accepts GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArgs and GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowInput` via:
//
//          GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArgs{...}
type GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowInput interface {
	pulumi.Input

	ToGetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput() GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput
	ToGetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutputWithContext(context.Context) GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput
}

type GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArgs struct {
	Day       pulumi.StringInput `pulumi:"day"`
	Duration  pulumi.StringInput `pulumi:"duration"`
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindow)(nil)).Elem()
}

func (i GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArgs) ToGetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput() GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput {
	return i.ToGetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArgs) ToGetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutputWithContext(ctx context.Context) GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput)
}

// GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayInput is an input type that accepts GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArray and GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayInput` via:
//
//          GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArray{ GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArgs{...} }
type GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput() GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput
	ToGetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutputWithContext(context.Context) GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput
}

type GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArray []GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowInput

func (GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindow)(nil)).Elem()
}

func (i GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArray) ToGetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput() GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput {
	return i.ToGetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArray) ToGetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput)
}

type GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindow)(nil)).Elem()
}

func (o GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput) ToGetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput() GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput {
	return o
}

func (o GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput) ToGetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutputWithContext(ctx context.Context) GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput {
	return o
}

func (o GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindow) string { return v.Day }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindow) string { return v.Duration }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindow) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindow)(nil)).Elem()
}

func (o GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput) ToGetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput() GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput {
	return o
}

func (o GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput) ToGetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput {
	return o
}

func (o GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindow {
		return vs[0].([]GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindow)[vs[1].(int)]
	}).(GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput)
}

type GetKubernetesClusterMasterRegional struct {
	// ID of the availability region where the master compute instances resides.
	Region string `pulumi:"region"`
}

// GetKubernetesClusterMasterRegionalInput is an input type that accepts GetKubernetesClusterMasterRegionalArgs and GetKubernetesClusterMasterRegionalOutput values.
// You can construct a concrete instance of `GetKubernetesClusterMasterRegionalInput` via:
//
//          GetKubernetesClusterMasterRegionalArgs{...}
type GetKubernetesClusterMasterRegionalInput interface {
	pulumi.Input

	ToGetKubernetesClusterMasterRegionalOutput() GetKubernetesClusterMasterRegionalOutput
	ToGetKubernetesClusterMasterRegionalOutputWithContext(context.Context) GetKubernetesClusterMasterRegionalOutput
}

type GetKubernetesClusterMasterRegionalArgs struct {
	// ID of the availability region where the master compute instances resides.
	Region pulumi.StringInput `pulumi:"region"`
}

func (GetKubernetesClusterMasterRegionalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterMasterRegional)(nil)).Elem()
}

func (i GetKubernetesClusterMasterRegionalArgs) ToGetKubernetesClusterMasterRegionalOutput() GetKubernetesClusterMasterRegionalOutput {
	return i.ToGetKubernetesClusterMasterRegionalOutputWithContext(context.Background())
}

func (i GetKubernetesClusterMasterRegionalArgs) ToGetKubernetesClusterMasterRegionalOutputWithContext(ctx context.Context) GetKubernetesClusterMasterRegionalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterMasterRegionalOutput)
}

type GetKubernetesClusterMasterRegionalOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterMasterRegionalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterMasterRegional)(nil)).Elem()
}

func (o GetKubernetesClusterMasterRegionalOutput) ToGetKubernetesClusterMasterRegionalOutput() GetKubernetesClusterMasterRegionalOutput {
	return o
}

func (o GetKubernetesClusterMasterRegionalOutput) ToGetKubernetesClusterMasterRegionalOutputWithContext(ctx context.Context) GetKubernetesClusterMasterRegionalOutput {
	return o
}

// ID of the availability region where the master compute instances resides.
func (o GetKubernetesClusterMasterRegionalOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterMasterRegional) string { return v.Region }).(pulumi.StringOutput)
}

type GetKubernetesClusterMasterVersionInfo struct {
	// Current Kubernetes version, major.minor (e.g. 1.15).
	CurrentVersion string `pulumi:"currentVersion"`
	// True/false flag.
	// Newer revisions may include Kubernetes patches (e.g 1.15.1 > 1.15.2) as well
	// as some internal component updates - new features or bug fixes in yandex-specific
	// components either on the master or nodes.
	NewRevisionAvailable bool `pulumi:"newRevisionAvailable"`
	// Human readable description of the changes to be applied
	// when updating to the latest revision. Empty if newRevisionAvailable is false.
	NewRevisionSummary string `pulumi:"newRevisionSummary"`
	// True/false flag. The current version is on the deprecation schedule,
	// component (master or node group) should be upgraded.
	VersionDeprecated bool `pulumi:"versionDeprecated"`
}

// GetKubernetesClusterMasterVersionInfoInput is an input type that accepts GetKubernetesClusterMasterVersionInfoArgs and GetKubernetesClusterMasterVersionInfoOutput values.
// You can construct a concrete instance of `GetKubernetesClusterMasterVersionInfoInput` via:
//
//          GetKubernetesClusterMasterVersionInfoArgs{...}
type GetKubernetesClusterMasterVersionInfoInput interface {
	pulumi.Input

	ToGetKubernetesClusterMasterVersionInfoOutput() GetKubernetesClusterMasterVersionInfoOutput
	ToGetKubernetesClusterMasterVersionInfoOutputWithContext(context.Context) GetKubernetesClusterMasterVersionInfoOutput
}

type GetKubernetesClusterMasterVersionInfoArgs struct {
	// Current Kubernetes version, major.minor (e.g. 1.15).
	CurrentVersion pulumi.StringInput `pulumi:"currentVersion"`
	// True/false flag.
	// Newer revisions may include Kubernetes patches (e.g 1.15.1 > 1.15.2) as well
	// as some internal component updates - new features or bug fixes in yandex-specific
	// components either on the master or nodes.
	NewRevisionAvailable pulumi.BoolInput `pulumi:"newRevisionAvailable"`
	// Human readable description of the changes to be applied
	// when updating to the latest revision. Empty if newRevisionAvailable is false.
	NewRevisionSummary pulumi.StringInput `pulumi:"newRevisionSummary"`
	// True/false flag. The current version is on the deprecation schedule,
	// component (master or node group) should be upgraded.
	VersionDeprecated pulumi.BoolInput `pulumi:"versionDeprecated"`
}

func (GetKubernetesClusterMasterVersionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterMasterVersionInfo)(nil)).Elem()
}

func (i GetKubernetesClusterMasterVersionInfoArgs) ToGetKubernetesClusterMasterVersionInfoOutput() GetKubernetesClusterMasterVersionInfoOutput {
	return i.ToGetKubernetesClusterMasterVersionInfoOutputWithContext(context.Background())
}

func (i GetKubernetesClusterMasterVersionInfoArgs) ToGetKubernetesClusterMasterVersionInfoOutputWithContext(ctx context.Context) GetKubernetesClusterMasterVersionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterMasterVersionInfoOutput)
}

type GetKubernetesClusterMasterVersionInfoOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterMasterVersionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterMasterVersionInfo)(nil)).Elem()
}

func (o GetKubernetesClusterMasterVersionInfoOutput) ToGetKubernetesClusterMasterVersionInfoOutput() GetKubernetesClusterMasterVersionInfoOutput {
	return o
}

func (o GetKubernetesClusterMasterVersionInfoOutput) ToGetKubernetesClusterMasterVersionInfoOutputWithContext(ctx context.Context) GetKubernetesClusterMasterVersionInfoOutput {
	return o
}

// Current Kubernetes version, major.minor (e.g. 1.15).
func (o GetKubernetesClusterMasterVersionInfoOutput) CurrentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterMasterVersionInfo) string { return v.CurrentVersion }).(pulumi.StringOutput)
}

// True/false flag.
// Newer revisions may include Kubernetes patches (e.g 1.15.1 > 1.15.2) as well
// as some internal component updates - new features or bug fixes in yandex-specific
// components either on the master or nodes.
func (o GetKubernetesClusterMasterVersionInfoOutput) NewRevisionAvailable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterMasterVersionInfo) bool { return v.NewRevisionAvailable }).(pulumi.BoolOutput)
}

// Human readable description of the changes to be applied
// when updating to the latest revision. Empty if newRevisionAvailable is false.
func (o GetKubernetesClusterMasterVersionInfoOutput) NewRevisionSummary() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterMasterVersionInfo) string { return v.NewRevisionSummary }).(pulumi.StringOutput)
}

// True/false flag. The current version is on the deprecation schedule,
// component (master or node group) should be upgraded.
func (o GetKubernetesClusterMasterVersionInfoOutput) VersionDeprecated() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterMasterVersionInfo) bool { return v.VersionDeprecated }).(pulumi.BoolOutput)
}

type GetKubernetesClusterMasterZonal struct {
	// ID of the availability zone where the master compute instance resides.
	Zone string `pulumi:"zone"`
}

// GetKubernetesClusterMasterZonalInput is an input type that accepts GetKubernetesClusterMasterZonalArgs and GetKubernetesClusterMasterZonalOutput values.
// You can construct a concrete instance of `GetKubernetesClusterMasterZonalInput` via:
//
//          GetKubernetesClusterMasterZonalArgs{...}
type GetKubernetesClusterMasterZonalInput interface {
	pulumi.Input

	ToGetKubernetesClusterMasterZonalOutput() GetKubernetesClusterMasterZonalOutput
	ToGetKubernetesClusterMasterZonalOutputWithContext(context.Context) GetKubernetesClusterMasterZonalOutput
}

type GetKubernetesClusterMasterZonalArgs struct {
	// ID of the availability zone where the master compute instance resides.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetKubernetesClusterMasterZonalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterMasterZonal)(nil)).Elem()
}

func (i GetKubernetesClusterMasterZonalArgs) ToGetKubernetesClusterMasterZonalOutput() GetKubernetesClusterMasterZonalOutput {
	return i.ToGetKubernetesClusterMasterZonalOutputWithContext(context.Background())
}

func (i GetKubernetesClusterMasterZonalArgs) ToGetKubernetesClusterMasterZonalOutputWithContext(ctx context.Context) GetKubernetesClusterMasterZonalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterMasterZonalOutput)
}

type GetKubernetesClusterMasterZonalOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterMasterZonalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterMasterZonal)(nil)).Elem()
}

func (o GetKubernetesClusterMasterZonalOutput) ToGetKubernetesClusterMasterZonalOutput() GetKubernetesClusterMasterZonalOutput {
	return o
}

func (o GetKubernetesClusterMasterZonalOutput) ToGetKubernetesClusterMasterZonalOutputWithContext(ctx context.Context) GetKubernetesClusterMasterZonalOutput {
	return o
}

// ID of the availability zone where the master compute instance resides.
func (o GetKubernetesClusterMasterZonalOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterMasterZonal) string { return v.Zone }).(pulumi.StringOutput)
}

type GetKubernetesNodeGroupAllocationPolicy struct {
	// Repeated field, that specify subnets (zones), that will be used by node group compute instances. The structure is documented below.
	Locations []GetKubernetesNodeGroupAllocationPolicyLocation `pulumi:"locations"`
}

// GetKubernetesNodeGroupAllocationPolicyInput is an input type that accepts GetKubernetesNodeGroupAllocationPolicyArgs and GetKubernetesNodeGroupAllocationPolicyOutput values.
// You can construct a concrete instance of `GetKubernetesNodeGroupAllocationPolicyInput` via:
//
//          GetKubernetesNodeGroupAllocationPolicyArgs{...}
type GetKubernetesNodeGroupAllocationPolicyInput interface {
	pulumi.Input

	ToGetKubernetesNodeGroupAllocationPolicyOutput() GetKubernetesNodeGroupAllocationPolicyOutput
	ToGetKubernetesNodeGroupAllocationPolicyOutputWithContext(context.Context) GetKubernetesNodeGroupAllocationPolicyOutput
}

type GetKubernetesNodeGroupAllocationPolicyArgs struct {
	// Repeated field, that specify subnets (zones), that will be used by node group compute instances. The structure is documented below.
	Locations GetKubernetesNodeGroupAllocationPolicyLocationArrayInput `pulumi:"locations"`
}

func (GetKubernetesNodeGroupAllocationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupAllocationPolicy)(nil)).Elem()
}

func (i GetKubernetesNodeGroupAllocationPolicyArgs) ToGetKubernetesNodeGroupAllocationPolicyOutput() GetKubernetesNodeGroupAllocationPolicyOutput {
	return i.ToGetKubernetesNodeGroupAllocationPolicyOutputWithContext(context.Background())
}

func (i GetKubernetesNodeGroupAllocationPolicyArgs) ToGetKubernetesNodeGroupAllocationPolicyOutputWithContext(ctx context.Context) GetKubernetesNodeGroupAllocationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesNodeGroupAllocationPolicyOutput)
}

type GetKubernetesNodeGroupAllocationPolicyOutput struct{ *pulumi.OutputState }

func (GetKubernetesNodeGroupAllocationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupAllocationPolicy)(nil)).Elem()
}

func (o GetKubernetesNodeGroupAllocationPolicyOutput) ToGetKubernetesNodeGroupAllocationPolicyOutput() GetKubernetesNodeGroupAllocationPolicyOutput {
	return o
}

func (o GetKubernetesNodeGroupAllocationPolicyOutput) ToGetKubernetesNodeGroupAllocationPolicyOutputWithContext(ctx context.Context) GetKubernetesNodeGroupAllocationPolicyOutput {
	return o
}

// Repeated field, that specify subnets (zones), that will be used by node group compute instances. The structure is documented below.
func (o GetKubernetesNodeGroupAllocationPolicyOutput) Locations() GetKubernetesNodeGroupAllocationPolicyLocationArrayOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupAllocationPolicy) []GetKubernetesNodeGroupAllocationPolicyLocation {
		return v.Locations
	}).(GetKubernetesNodeGroupAllocationPolicyLocationArrayOutput)
}

type GetKubernetesNodeGroupAllocationPolicyLocation struct {
	// ID of the subnet, that will be used by one compute instance in node group.
	SubnetId string `pulumi:"subnetId"`
	// ID of the availability zone where for one compute instance in node group.
	Zone string `pulumi:"zone"`
}

// GetKubernetesNodeGroupAllocationPolicyLocationInput is an input type that accepts GetKubernetesNodeGroupAllocationPolicyLocationArgs and GetKubernetesNodeGroupAllocationPolicyLocationOutput values.
// You can construct a concrete instance of `GetKubernetesNodeGroupAllocationPolicyLocationInput` via:
//
//          GetKubernetesNodeGroupAllocationPolicyLocationArgs{...}
type GetKubernetesNodeGroupAllocationPolicyLocationInput interface {
	pulumi.Input

	ToGetKubernetesNodeGroupAllocationPolicyLocationOutput() GetKubernetesNodeGroupAllocationPolicyLocationOutput
	ToGetKubernetesNodeGroupAllocationPolicyLocationOutputWithContext(context.Context) GetKubernetesNodeGroupAllocationPolicyLocationOutput
}

type GetKubernetesNodeGroupAllocationPolicyLocationArgs struct {
	// ID of the subnet, that will be used by one compute instance in node group.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// ID of the availability zone where for one compute instance in node group.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetKubernetesNodeGroupAllocationPolicyLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupAllocationPolicyLocation)(nil)).Elem()
}

func (i GetKubernetesNodeGroupAllocationPolicyLocationArgs) ToGetKubernetesNodeGroupAllocationPolicyLocationOutput() GetKubernetesNodeGroupAllocationPolicyLocationOutput {
	return i.ToGetKubernetesNodeGroupAllocationPolicyLocationOutputWithContext(context.Background())
}

func (i GetKubernetesNodeGroupAllocationPolicyLocationArgs) ToGetKubernetesNodeGroupAllocationPolicyLocationOutputWithContext(ctx context.Context) GetKubernetesNodeGroupAllocationPolicyLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesNodeGroupAllocationPolicyLocationOutput)
}

// GetKubernetesNodeGroupAllocationPolicyLocationArrayInput is an input type that accepts GetKubernetesNodeGroupAllocationPolicyLocationArray and GetKubernetesNodeGroupAllocationPolicyLocationArrayOutput values.
// You can construct a concrete instance of `GetKubernetesNodeGroupAllocationPolicyLocationArrayInput` via:
//
//          GetKubernetesNodeGroupAllocationPolicyLocationArray{ GetKubernetesNodeGroupAllocationPolicyLocationArgs{...} }
type GetKubernetesNodeGroupAllocationPolicyLocationArrayInput interface {
	pulumi.Input

	ToGetKubernetesNodeGroupAllocationPolicyLocationArrayOutput() GetKubernetesNodeGroupAllocationPolicyLocationArrayOutput
	ToGetKubernetesNodeGroupAllocationPolicyLocationArrayOutputWithContext(context.Context) GetKubernetesNodeGroupAllocationPolicyLocationArrayOutput
}

type GetKubernetesNodeGroupAllocationPolicyLocationArray []GetKubernetesNodeGroupAllocationPolicyLocationInput

func (GetKubernetesNodeGroupAllocationPolicyLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesNodeGroupAllocationPolicyLocation)(nil)).Elem()
}

func (i GetKubernetesNodeGroupAllocationPolicyLocationArray) ToGetKubernetesNodeGroupAllocationPolicyLocationArrayOutput() GetKubernetesNodeGroupAllocationPolicyLocationArrayOutput {
	return i.ToGetKubernetesNodeGroupAllocationPolicyLocationArrayOutputWithContext(context.Background())
}

func (i GetKubernetesNodeGroupAllocationPolicyLocationArray) ToGetKubernetesNodeGroupAllocationPolicyLocationArrayOutputWithContext(ctx context.Context) GetKubernetesNodeGroupAllocationPolicyLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesNodeGroupAllocationPolicyLocationArrayOutput)
}

type GetKubernetesNodeGroupAllocationPolicyLocationOutput struct{ *pulumi.OutputState }

func (GetKubernetesNodeGroupAllocationPolicyLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupAllocationPolicyLocation)(nil)).Elem()
}

func (o GetKubernetesNodeGroupAllocationPolicyLocationOutput) ToGetKubernetesNodeGroupAllocationPolicyLocationOutput() GetKubernetesNodeGroupAllocationPolicyLocationOutput {
	return o
}

func (o GetKubernetesNodeGroupAllocationPolicyLocationOutput) ToGetKubernetesNodeGroupAllocationPolicyLocationOutputWithContext(ctx context.Context) GetKubernetesNodeGroupAllocationPolicyLocationOutput {
	return o
}

// ID of the subnet, that will be used by one compute instance in node group.
func (o GetKubernetesNodeGroupAllocationPolicyLocationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupAllocationPolicyLocation) string { return v.SubnetId }).(pulumi.StringOutput)
}

// ID of the availability zone where for one compute instance in node group.
func (o GetKubernetesNodeGroupAllocationPolicyLocationOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupAllocationPolicyLocation) string { return v.Zone }).(pulumi.StringOutput)
}

type GetKubernetesNodeGroupAllocationPolicyLocationArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesNodeGroupAllocationPolicyLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesNodeGroupAllocationPolicyLocation)(nil)).Elem()
}

func (o GetKubernetesNodeGroupAllocationPolicyLocationArrayOutput) ToGetKubernetesNodeGroupAllocationPolicyLocationArrayOutput() GetKubernetesNodeGroupAllocationPolicyLocationArrayOutput {
	return o
}

func (o GetKubernetesNodeGroupAllocationPolicyLocationArrayOutput) ToGetKubernetesNodeGroupAllocationPolicyLocationArrayOutputWithContext(ctx context.Context) GetKubernetesNodeGroupAllocationPolicyLocationArrayOutput {
	return o
}

func (o GetKubernetesNodeGroupAllocationPolicyLocationArrayOutput) Index(i pulumi.IntInput) GetKubernetesNodeGroupAllocationPolicyLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesNodeGroupAllocationPolicyLocation {
		return vs[0].([]GetKubernetesNodeGroupAllocationPolicyLocation)[vs[1].(int)]
	}).(GetKubernetesNodeGroupAllocationPolicyLocationOutput)
}

type GetKubernetesNodeGroupDeployPolicy struct {
	// The maximum number of instances that can be temporarily allocated above the group's target size during the update.
	MaxExpansion int `pulumi:"maxExpansion"`
	// The maximum number of running instances that can be taken offline during update.
	MaxUnavailable int `pulumi:"maxUnavailable"`
}

// GetKubernetesNodeGroupDeployPolicyInput is an input type that accepts GetKubernetesNodeGroupDeployPolicyArgs and GetKubernetesNodeGroupDeployPolicyOutput values.
// You can construct a concrete instance of `GetKubernetesNodeGroupDeployPolicyInput` via:
//
//          GetKubernetesNodeGroupDeployPolicyArgs{...}
type GetKubernetesNodeGroupDeployPolicyInput interface {
	pulumi.Input

	ToGetKubernetesNodeGroupDeployPolicyOutput() GetKubernetesNodeGroupDeployPolicyOutput
	ToGetKubernetesNodeGroupDeployPolicyOutputWithContext(context.Context) GetKubernetesNodeGroupDeployPolicyOutput
}

type GetKubernetesNodeGroupDeployPolicyArgs struct {
	// The maximum number of instances that can be temporarily allocated above the group's target size during the update.
	MaxExpansion pulumi.IntInput `pulumi:"maxExpansion"`
	// The maximum number of running instances that can be taken offline during update.
	MaxUnavailable pulumi.IntInput `pulumi:"maxUnavailable"`
}

func (GetKubernetesNodeGroupDeployPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupDeployPolicy)(nil)).Elem()
}

func (i GetKubernetesNodeGroupDeployPolicyArgs) ToGetKubernetesNodeGroupDeployPolicyOutput() GetKubernetesNodeGroupDeployPolicyOutput {
	return i.ToGetKubernetesNodeGroupDeployPolicyOutputWithContext(context.Background())
}

func (i GetKubernetesNodeGroupDeployPolicyArgs) ToGetKubernetesNodeGroupDeployPolicyOutputWithContext(ctx context.Context) GetKubernetesNodeGroupDeployPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesNodeGroupDeployPolicyOutput)
}

type GetKubernetesNodeGroupDeployPolicyOutput struct{ *pulumi.OutputState }

func (GetKubernetesNodeGroupDeployPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupDeployPolicy)(nil)).Elem()
}

func (o GetKubernetesNodeGroupDeployPolicyOutput) ToGetKubernetesNodeGroupDeployPolicyOutput() GetKubernetesNodeGroupDeployPolicyOutput {
	return o
}

func (o GetKubernetesNodeGroupDeployPolicyOutput) ToGetKubernetesNodeGroupDeployPolicyOutputWithContext(ctx context.Context) GetKubernetesNodeGroupDeployPolicyOutput {
	return o
}

// The maximum number of instances that can be temporarily allocated above the group's target size during the update.
func (o GetKubernetesNodeGroupDeployPolicyOutput) MaxExpansion() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupDeployPolicy) int { return v.MaxExpansion }).(pulumi.IntOutput)
}

// The maximum number of running instances that can be taken offline during update.
func (o GetKubernetesNodeGroupDeployPolicyOutput) MaxUnavailable() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupDeployPolicy) int { return v.MaxUnavailable }).(pulumi.IntOutput)
}

type GetKubernetesNodeGroupInstanceTemplate struct {
	// The specifications for boot disks that will be attached to the instance. The structure is documented below.
	BootDisk GetKubernetesNodeGroupInstanceTemplateBootDisk `pulumi:"bootDisk"`
	// The set of metadata `key:value` pairs assigned to this instance template. This includes custom metadata and predefined keys.
	Metadata map[string]string `pulumi:"metadata"`
	// A public address that can be used to access the internet over NAT.
	Nat bool `pulumi:"nat"`
	// An array with the network interfaces that will be attached to the instance. The structure is documented below.
	NetworkInterfaces []GetKubernetesNodeGroupInstanceTemplateNetworkInterface `pulumi:"networkInterfaces"`
	// The ID of the hardware platform configuration for the instance.
	PlatformId string                                          `pulumi:"platformId"`
	Resources  GetKubernetesNodeGroupInstanceTemplateResources `pulumi:"resources"`
	// The scheduling policy for the instances in node group. The structure is documented below.
	SchedulingPolicy GetKubernetesNodeGroupInstanceTemplateSchedulingPolicy `pulumi:"schedulingPolicy"`
}

// GetKubernetesNodeGroupInstanceTemplateInput is an input type that accepts GetKubernetesNodeGroupInstanceTemplateArgs and GetKubernetesNodeGroupInstanceTemplateOutput values.
// You can construct a concrete instance of `GetKubernetesNodeGroupInstanceTemplateInput` via:
//
//          GetKubernetesNodeGroupInstanceTemplateArgs{...}
type GetKubernetesNodeGroupInstanceTemplateInput interface {
	pulumi.Input

	ToGetKubernetesNodeGroupInstanceTemplateOutput() GetKubernetesNodeGroupInstanceTemplateOutput
	ToGetKubernetesNodeGroupInstanceTemplateOutputWithContext(context.Context) GetKubernetesNodeGroupInstanceTemplateOutput
}

type GetKubernetesNodeGroupInstanceTemplateArgs struct {
	// The specifications for boot disks that will be attached to the instance. The structure is documented below.
	BootDisk GetKubernetesNodeGroupInstanceTemplateBootDiskInput `pulumi:"bootDisk"`
	// The set of metadata `key:value` pairs assigned to this instance template. This includes custom metadata and predefined keys.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// A public address that can be used to access the internet over NAT.
	Nat pulumi.BoolInput `pulumi:"nat"`
	// An array with the network interfaces that will be attached to the instance. The structure is documented below.
	NetworkInterfaces GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayInput `pulumi:"networkInterfaces"`
	// The ID of the hardware platform configuration for the instance.
	PlatformId pulumi.StringInput                                   `pulumi:"platformId"`
	Resources  GetKubernetesNodeGroupInstanceTemplateResourcesInput `pulumi:"resources"`
	// The scheduling policy for the instances in node group. The structure is documented below.
	SchedulingPolicy GetKubernetesNodeGroupInstanceTemplateSchedulingPolicyInput `pulumi:"schedulingPolicy"`
}

func (GetKubernetesNodeGroupInstanceTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupInstanceTemplate)(nil)).Elem()
}

func (i GetKubernetesNodeGroupInstanceTemplateArgs) ToGetKubernetesNodeGroupInstanceTemplateOutput() GetKubernetesNodeGroupInstanceTemplateOutput {
	return i.ToGetKubernetesNodeGroupInstanceTemplateOutputWithContext(context.Background())
}

func (i GetKubernetesNodeGroupInstanceTemplateArgs) ToGetKubernetesNodeGroupInstanceTemplateOutputWithContext(ctx context.Context) GetKubernetesNodeGroupInstanceTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesNodeGroupInstanceTemplateOutput)
}

type GetKubernetesNodeGroupInstanceTemplateOutput struct{ *pulumi.OutputState }

func (GetKubernetesNodeGroupInstanceTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupInstanceTemplate)(nil)).Elem()
}

func (o GetKubernetesNodeGroupInstanceTemplateOutput) ToGetKubernetesNodeGroupInstanceTemplateOutput() GetKubernetesNodeGroupInstanceTemplateOutput {
	return o
}

func (o GetKubernetesNodeGroupInstanceTemplateOutput) ToGetKubernetesNodeGroupInstanceTemplateOutputWithContext(ctx context.Context) GetKubernetesNodeGroupInstanceTemplateOutput {
	return o
}

// The specifications for boot disks that will be attached to the instance. The structure is documented below.
func (o GetKubernetesNodeGroupInstanceTemplateOutput) BootDisk() GetKubernetesNodeGroupInstanceTemplateBootDiskOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupInstanceTemplate) GetKubernetesNodeGroupInstanceTemplateBootDisk {
		return v.BootDisk
	}).(GetKubernetesNodeGroupInstanceTemplateBootDiskOutput)
}

// The set of metadata `key:value` pairs assigned to this instance template. This includes custom metadata and predefined keys.
func (o GetKubernetesNodeGroupInstanceTemplateOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupInstanceTemplate) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// A public address that can be used to access the internet over NAT.
func (o GetKubernetesNodeGroupInstanceTemplateOutput) Nat() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupInstanceTemplate) bool { return v.Nat }).(pulumi.BoolOutput)
}

// An array with the network interfaces that will be attached to the instance. The structure is documented below.
func (o GetKubernetesNodeGroupInstanceTemplateOutput) NetworkInterfaces() GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupInstanceTemplate) []GetKubernetesNodeGroupInstanceTemplateNetworkInterface {
		return v.NetworkInterfaces
	}).(GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput)
}

// The ID of the hardware platform configuration for the instance.
func (o GetKubernetesNodeGroupInstanceTemplateOutput) PlatformId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupInstanceTemplate) string { return v.PlatformId }).(pulumi.StringOutput)
}

func (o GetKubernetesNodeGroupInstanceTemplateOutput) Resources() GetKubernetesNodeGroupInstanceTemplateResourcesOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupInstanceTemplate) GetKubernetesNodeGroupInstanceTemplateResources {
		return v.Resources
	}).(GetKubernetesNodeGroupInstanceTemplateResourcesOutput)
}

// The scheduling policy for the instances in node group. The structure is documented below.
func (o GetKubernetesNodeGroupInstanceTemplateOutput) SchedulingPolicy() GetKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupInstanceTemplate) GetKubernetesNodeGroupInstanceTemplateSchedulingPolicy {
		return v.SchedulingPolicy
	}).(GetKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput)
}

type GetKubernetesNodeGroupInstanceTemplateBootDisk struct {
	// The number of instances in the node group.
	Size int `pulumi:"size"`
	// The disk type.
	Type string `pulumi:"type"`
}

// GetKubernetesNodeGroupInstanceTemplateBootDiskInput is an input type that accepts GetKubernetesNodeGroupInstanceTemplateBootDiskArgs and GetKubernetesNodeGroupInstanceTemplateBootDiskOutput values.
// You can construct a concrete instance of `GetKubernetesNodeGroupInstanceTemplateBootDiskInput` via:
//
//          GetKubernetesNodeGroupInstanceTemplateBootDiskArgs{...}
type GetKubernetesNodeGroupInstanceTemplateBootDiskInput interface {
	pulumi.Input

	ToGetKubernetesNodeGroupInstanceTemplateBootDiskOutput() GetKubernetesNodeGroupInstanceTemplateBootDiskOutput
	ToGetKubernetesNodeGroupInstanceTemplateBootDiskOutputWithContext(context.Context) GetKubernetesNodeGroupInstanceTemplateBootDiskOutput
}

type GetKubernetesNodeGroupInstanceTemplateBootDiskArgs struct {
	// The number of instances in the node group.
	Size pulumi.IntInput `pulumi:"size"`
	// The disk type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetKubernetesNodeGroupInstanceTemplateBootDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupInstanceTemplateBootDisk)(nil)).Elem()
}

func (i GetKubernetesNodeGroupInstanceTemplateBootDiskArgs) ToGetKubernetesNodeGroupInstanceTemplateBootDiskOutput() GetKubernetesNodeGroupInstanceTemplateBootDiskOutput {
	return i.ToGetKubernetesNodeGroupInstanceTemplateBootDiskOutputWithContext(context.Background())
}

func (i GetKubernetesNodeGroupInstanceTemplateBootDiskArgs) ToGetKubernetesNodeGroupInstanceTemplateBootDiskOutputWithContext(ctx context.Context) GetKubernetesNodeGroupInstanceTemplateBootDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesNodeGroupInstanceTemplateBootDiskOutput)
}

type GetKubernetesNodeGroupInstanceTemplateBootDiskOutput struct{ *pulumi.OutputState }

func (GetKubernetesNodeGroupInstanceTemplateBootDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupInstanceTemplateBootDisk)(nil)).Elem()
}

func (o GetKubernetesNodeGroupInstanceTemplateBootDiskOutput) ToGetKubernetesNodeGroupInstanceTemplateBootDiskOutput() GetKubernetesNodeGroupInstanceTemplateBootDiskOutput {
	return o
}

func (o GetKubernetesNodeGroupInstanceTemplateBootDiskOutput) ToGetKubernetesNodeGroupInstanceTemplateBootDiskOutputWithContext(ctx context.Context) GetKubernetesNodeGroupInstanceTemplateBootDiskOutput {
	return o
}

// The number of instances in the node group.
func (o GetKubernetesNodeGroupInstanceTemplateBootDiskOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupInstanceTemplateBootDisk) int { return v.Size }).(pulumi.IntOutput)
}

// The disk type.
func (o GetKubernetesNodeGroupInstanceTemplateBootDiskOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupInstanceTemplateBootDisk) string { return v.Type }).(pulumi.StringOutput)
}

type GetKubernetesNodeGroupInstanceTemplateNetworkInterface struct {
	// A public address that can be used to access the internet over NAT.
	Nat bool `pulumi:"nat"`
	// Security group ids for network interface.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The IDs of the subnets.
	SubnetIds []string `pulumi:"subnetIds"`
}

// GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceInput is an input type that accepts GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArgs and GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput values.
// You can construct a concrete instance of `GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceInput` via:
//
//          GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArgs{...}
type GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceInput interface {
	pulumi.Input

	ToGetKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput() GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput
	ToGetKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutputWithContext(context.Context) GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput
}

type GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArgs struct {
	// A public address that can be used to access the internet over NAT.
	Nat pulumi.BoolInput `pulumi:"nat"`
	// Security group ids for network interface.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The IDs of the subnets.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
}

func (GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupInstanceTemplateNetworkInterface)(nil)).Elem()
}

func (i GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArgs) ToGetKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput() GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput {
	return i.ToGetKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutputWithContext(context.Background())
}

func (i GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArgs) ToGetKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutputWithContext(ctx context.Context) GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput)
}

// GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayInput is an input type that accepts GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArray and GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayInput` via:
//
//          GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArray{ GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArgs{...} }
type GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToGetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput() GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput
	ToGetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutputWithContext(context.Context) GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput
}

type GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArray []GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceInput

func (GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesNodeGroupInstanceTemplateNetworkInterface)(nil)).Elem()
}

func (i GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArray) ToGetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput() GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput {
	return i.ToGetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArray) ToGetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput)
}

type GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupInstanceTemplateNetworkInterface)(nil)).Elem()
}

func (o GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput) ToGetKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput() GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput {
	return o
}

func (o GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput) ToGetKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutputWithContext(ctx context.Context) GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput {
	return o
}

// A public address that can be used to access the internet over NAT.
func (o GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput) Nat() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupInstanceTemplateNetworkInterface) bool { return v.Nat }).(pulumi.BoolOutput)
}

// Security group ids for network interface.
func (o GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupInstanceTemplateNetworkInterface) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The IDs of the subnets.
func (o GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupInstanceTemplateNetworkInterface) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

type GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesNodeGroupInstanceTemplateNetworkInterface)(nil)).Elem()
}

func (o GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput) ToGetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput() GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput {
	return o
}

func (o GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput) ToGetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput {
	return o
}

func (o GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesNodeGroupInstanceTemplateNetworkInterface {
		return vs[0].([]GetKubernetesNodeGroupInstanceTemplateNetworkInterface)[vs[1].(int)]
	}).(GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput)
}

type GetKubernetesNodeGroupInstanceTemplateResources struct {
	CoreFraction int     `pulumi:"coreFraction"`
	Cores        int     `pulumi:"cores"`
	Gpus         int     `pulumi:"gpus"`
	Memory       float64 `pulumi:"memory"`
}

// GetKubernetesNodeGroupInstanceTemplateResourcesInput is an input type that accepts GetKubernetesNodeGroupInstanceTemplateResourcesArgs and GetKubernetesNodeGroupInstanceTemplateResourcesOutput values.
// You can construct a concrete instance of `GetKubernetesNodeGroupInstanceTemplateResourcesInput` via:
//
//          GetKubernetesNodeGroupInstanceTemplateResourcesArgs{...}
type GetKubernetesNodeGroupInstanceTemplateResourcesInput interface {
	pulumi.Input

	ToGetKubernetesNodeGroupInstanceTemplateResourcesOutput() GetKubernetesNodeGroupInstanceTemplateResourcesOutput
	ToGetKubernetesNodeGroupInstanceTemplateResourcesOutputWithContext(context.Context) GetKubernetesNodeGroupInstanceTemplateResourcesOutput
}

type GetKubernetesNodeGroupInstanceTemplateResourcesArgs struct {
	CoreFraction pulumi.IntInput     `pulumi:"coreFraction"`
	Cores        pulumi.IntInput     `pulumi:"cores"`
	Gpus         pulumi.IntInput     `pulumi:"gpus"`
	Memory       pulumi.Float64Input `pulumi:"memory"`
}

func (GetKubernetesNodeGroupInstanceTemplateResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupInstanceTemplateResources)(nil)).Elem()
}

func (i GetKubernetesNodeGroupInstanceTemplateResourcesArgs) ToGetKubernetesNodeGroupInstanceTemplateResourcesOutput() GetKubernetesNodeGroupInstanceTemplateResourcesOutput {
	return i.ToGetKubernetesNodeGroupInstanceTemplateResourcesOutputWithContext(context.Background())
}

func (i GetKubernetesNodeGroupInstanceTemplateResourcesArgs) ToGetKubernetesNodeGroupInstanceTemplateResourcesOutputWithContext(ctx context.Context) GetKubernetesNodeGroupInstanceTemplateResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesNodeGroupInstanceTemplateResourcesOutput)
}

type GetKubernetesNodeGroupInstanceTemplateResourcesOutput struct{ *pulumi.OutputState }

func (GetKubernetesNodeGroupInstanceTemplateResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupInstanceTemplateResources)(nil)).Elem()
}

func (o GetKubernetesNodeGroupInstanceTemplateResourcesOutput) ToGetKubernetesNodeGroupInstanceTemplateResourcesOutput() GetKubernetesNodeGroupInstanceTemplateResourcesOutput {
	return o
}

func (o GetKubernetesNodeGroupInstanceTemplateResourcesOutput) ToGetKubernetesNodeGroupInstanceTemplateResourcesOutputWithContext(ctx context.Context) GetKubernetesNodeGroupInstanceTemplateResourcesOutput {
	return o
}

func (o GetKubernetesNodeGroupInstanceTemplateResourcesOutput) CoreFraction() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupInstanceTemplateResources) int { return v.CoreFraction }).(pulumi.IntOutput)
}

func (o GetKubernetesNodeGroupInstanceTemplateResourcesOutput) Cores() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupInstanceTemplateResources) int { return v.Cores }).(pulumi.IntOutput)
}

func (o GetKubernetesNodeGroupInstanceTemplateResourcesOutput) Gpus() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupInstanceTemplateResources) int { return v.Gpus }).(pulumi.IntOutput)
}

func (o GetKubernetesNodeGroupInstanceTemplateResourcesOutput) Memory() pulumi.Float64Output {
	return o.ApplyT(func(v GetKubernetesNodeGroupInstanceTemplateResources) float64 { return v.Memory }).(pulumi.Float64Output)
}

type GetKubernetesNodeGroupInstanceTemplateSchedulingPolicy struct {
	// Specifies if the instance is preemptible. Defaults to false.
	Preemptible bool `pulumi:"preemptible"`
}

// GetKubernetesNodeGroupInstanceTemplateSchedulingPolicyInput is an input type that accepts GetKubernetesNodeGroupInstanceTemplateSchedulingPolicyArgs and GetKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput values.
// You can construct a concrete instance of `GetKubernetesNodeGroupInstanceTemplateSchedulingPolicyInput` via:
//
//          GetKubernetesNodeGroupInstanceTemplateSchedulingPolicyArgs{...}
type GetKubernetesNodeGroupInstanceTemplateSchedulingPolicyInput interface {
	pulumi.Input

	ToGetKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput() GetKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput
	ToGetKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutputWithContext(context.Context) GetKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput
}

type GetKubernetesNodeGroupInstanceTemplateSchedulingPolicyArgs struct {
	// Specifies if the instance is preemptible. Defaults to false.
	Preemptible pulumi.BoolInput `pulumi:"preemptible"`
}

func (GetKubernetesNodeGroupInstanceTemplateSchedulingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupInstanceTemplateSchedulingPolicy)(nil)).Elem()
}

func (i GetKubernetesNodeGroupInstanceTemplateSchedulingPolicyArgs) ToGetKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput() GetKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput {
	return i.ToGetKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutputWithContext(context.Background())
}

func (i GetKubernetesNodeGroupInstanceTemplateSchedulingPolicyArgs) ToGetKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutputWithContext(ctx context.Context) GetKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput)
}

type GetKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput struct{ *pulumi.OutputState }

func (GetKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupInstanceTemplateSchedulingPolicy)(nil)).Elem()
}

func (o GetKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput) ToGetKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput() GetKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput {
	return o
}

func (o GetKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput) ToGetKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutputWithContext(ctx context.Context) GetKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput {
	return o
}

// Specifies if the instance is preemptible. Defaults to false.
func (o GetKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput) Preemptible() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupInstanceTemplateSchedulingPolicy) bool { return v.Preemptible }).(pulumi.BoolOutput)
}

type GetKubernetesNodeGroupMaintenancePolicy struct {
	// Boolean flag.
	AutoRepair bool `pulumi:"autoRepair"`
	// Boolean flag.
	AutoUpgrade bool `pulumi:"autoUpgrade"`
	// Set of day intervals, when maintenance is allowed for this node group.
	// When omitted, it defaults to any time.
	MaintenanceWindows []GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindow `pulumi:"maintenanceWindows"`
}

// GetKubernetesNodeGroupMaintenancePolicyInput is an input type that accepts GetKubernetesNodeGroupMaintenancePolicyArgs and GetKubernetesNodeGroupMaintenancePolicyOutput values.
// You can construct a concrete instance of `GetKubernetesNodeGroupMaintenancePolicyInput` via:
//
//          GetKubernetesNodeGroupMaintenancePolicyArgs{...}
type GetKubernetesNodeGroupMaintenancePolicyInput interface {
	pulumi.Input

	ToGetKubernetesNodeGroupMaintenancePolicyOutput() GetKubernetesNodeGroupMaintenancePolicyOutput
	ToGetKubernetesNodeGroupMaintenancePolicyOutputWithContext(context.Context) GetKubernetesNodeGroupMaintenancePolicyOutput
}

type GetKubernetesNodeGroupMaintenancePolicyArgs struct {
	// Boolean flag.
	AutoRepair pulumi.BoolInput `pulumi:"autoRepair"`
	// Boolean flag.
	AutoUpgrade pulumi.BoolInput `pulumi:"autoUpgrade"`
	// Set of day intervals, when maintenance is allowed for this node group.
	// When omitted, it defaults to any time.
	MaintenanceWindows GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayInput `pulumi:"maintenanceWindows"`
}

func (GetKubernetesNodeGroupMaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupMaintenancePolicy)(nil)).Elem()
}

func (i GetKubernetesNodeGroupMaintenancePolicyArgs) ToGetKubernetesNodeGroupMaintenancePolicyOutput() GetKubernetesNodeGroupMaintenancePolicyOutput {
	return i.ToGetKubernetesNodeGroupMaintenancePolicyOutputWithContext(context.Background())
}

func (i GetKubernetesNodeGroupMaintenancePolicyArgs) ToGetKubernetesNodeGroupMaintenancePolicyOutputWithContext(ctx context.Context) GetKubernetesNodeGroupMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesNodeGroupMaintenancePolicyOutput)
}

type GetKubernetesNodeGroupMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (GetKubernetesNodeGroupMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupMaintenancePolicy)(nil)).Elem()
}

func (o GetKubernetesNodeGroupMaintenancePolicyOutput) ToGetKubernetesNodeGroupMaintenancePolicyOutput() GetKubernetesNodeGroupMaintenancePolicyOutput {
	return o
}

func (o GetKubernetesNodeGroupMaintenancePolicyOutput) ToGetKubernetesNodeGroupMaintenancePolicyOutputWithContext(ctx context.Context) GetKubernetesNodeGroupMaintenancePolicyOutput {
	return o
}

// Boolean flag.
func (o GetKubernetesNodeGroupMaintenancePolicyOutput) AutoRepair() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupMaintenancePolicy) bool { return v.AutoRepair }).(pulumi.BoolOutput)
}

// Boolean flag.
func (o GetKubernetesNodeGroupMaintenancePolicyOutput) AutoUpgrade() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupMaintenancePolicy) bool { return v.AutoUpgrade }).(pulumi.BoolOutput)
}

// Set of day intervals, when maintenance is allowed for this node group.
// When omitted, it defaults to any time.
func (o GetKubernetesNodeGroupMaintenancePolicyOutput) MaintenanceWindows() GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupMaintenancePolicy) []GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindow {
		return v.MaintenanceWindows
	}).(GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput)
}

type GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindow struct {
	Day       string `pulumi:"day"`
	Duration  string `pulumi:"duration"`
	StartTime string `pulumi:"startTime"`
}

// GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowInput is an input type that accepts GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArgs and GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowInput` via:
//
//          GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArgs{...}
type GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowInput interface {
	pulumi.Input

	ToGetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput() GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput
	ToGetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutputWithContext(context.Context) GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput
}

type GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArgs struct {
	Day       pulumi.StringInput `pulumi:"day"`
	Duration  pulumi.StringInput `pulumi:"duration"`
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindow)(nil)).Elem()
}

func (i GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArgs) ToGetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput() GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput {
	return i.ToGetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArgs) ToGetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutputWithContext(ctx context.Context) GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput)
}

// GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayInput is an input type that accepts GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArray and GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayInput` via:
//
//          GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArray{ GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArgs{...} }
type GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput() GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput
	ToGetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutputWithContext(context.Context) GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput
}

type GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArray []GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowInput

func (GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindow)(nil)).Elem()
}

func (i GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArray) ToGetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput() GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput {
	return i.ToGetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArray) ToGetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput)
}

type GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindow)(nil)).Elem()
}

func (o GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput) ToGetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput() GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput {
	return o
}

func (o GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput) ToGetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutputWithContext(ctx context.Context) GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput {
	return o
}

func (o GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindow) string { return v.Day }).(pulumi.StringOutput)
}

func (o GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindow) string { return v.Duration }).(pulumi.StringOutput)
}

func (o GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindow) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindow)(nil)).Elem()
}

func (o GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput) ToGetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput() GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput {
	return o
}

func (o GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput) ToGetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput {
	return o
}

func (o GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindow {
		return vs[0].([]GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindow)[vs[1].(int)]
	}).(GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput)
}

type GetKubernetesNodeGroupScalePolicy struct {
	// Scale policy for an autoscaled node group. The structure is documented below.
	AutoScale GetKubernetesNodeGroupScalePolicyAutoScale `pulumi:"autoScale"`
	// Scale policy for a fixed scale node group. The structure is documented below.
	FixedScale GetKubernetesNodeGroupScalePolicyFixedScale `pulumi:"fixedScale"`
}

// GetKubernetesNodeGroupScalePolicyInput is an input type that accepts GetKubernetesNodeGroupScalePolicyArgs and GetKubernetesNodeGroupScalePolicyOutput values.
// You can construct a concrete instance of `GetKubernetesNodeGroupScalePolicyInput` via:
//
//          GetKubernetesNodeGroupScalePolicyArgs{...}
type GetKubernetesNodeGroupScalePolicyInput interface {
	pulumi.Input

	ToGetKubernetesNodeGroupScalePolicyOutput() GetKubernetesNodeGroupScalePolicyOutput
	ToGetKubernetesNodeGroupScalePolicyOutputWithContext(context.Context) GetKubernetesNodeGroupScalePolicyOutput
}

type GetKubernetesNodeGroupScalePolicyArgs struct {
	// Scale policy for an autoscaled node group. The structure is documented below.
	AutoScale GetKubernetesNodeGroupScalePolicyAutoScaleInput `pulumi:"autoScale"`
	// Scale policy for a fixed scale node group. The structure is documented below.
	FixedScale GetKubernetesNodeGroupScalePolicyFixedScaleInput `pulumi:"fixedScale"`
}

func (GetKubernetesNodeGroupScalePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupScalePolicy)(nil)).Elem()
}

func (i GetKubernetesNodeGroupScalePolicyArgs) ToGetKubernetesNodeGroupScalePolicyOutput() GetKubernetesNodeGroupScalePolicyOutput {
	return i.ToGetKubernetesNodeGroupScalePolicyOutputWithContext(context.Background())
}

func (i GetKubernetesNodeGroupScalePolicyArgs) ToGetKubernetesNodeGroupScalePolicyOutputWithContext(ctx context.Context) GetKubernetesNodeGroupScalePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesNodeGroupScalePolicyOutput)
}

type GetKubernetesNodeGroupScalePolicyOutput struct{ *pulumi.OutputState }

func (GetKubernetesNodeGroupScalePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupScalePolicy)(nil)).Elem()
}

func (o GetKubernetesNodeGroupScalePolicyOutput) ToGetKubernetesNodeGroupScalePolicyOutput() GetKubernetesNodeGroupScalePolicyOutput {
	return o
}

func (o GetKubernetesNodeGroupScalePolicyOutput) ToGetKubernetesNodeGroupScalePolicyOutputWithContext(ctx context.Context) GetKubernetesNodeGroupScalePolicyOutput {
	return o
}

// Scale policy for an autoscaled node group. The structure is documented below.
func (o GetKubernetesNodeGroupScalePolicyOutput) AutoScale() GetKubernetesNodeGroupScalePolicyAutoScaleOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupScalePolicy) GetKubernetesNodeGroupScalePolicyAutoScale {
		return v.AutoScale
	}).(GetKubernetesNodeGroupScalePolicyAutoScaleOutput)
}

// Scale policy for a fixed scale node group. The structure is documented below.
func (o GetKubernetesNodeGroupScalePolicyOutput) FixedScale() GetKubernetesNodeGroupScalePolicyFixedScaleOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupScalePolicy) GetKubernetesNodeGroupScalePolicyFixedScale {
		return v.FixedScale
	}).(GetKubernetesNodeGroupScalePolicyFixedScaleOutput)
}

type GetKubernetesNodeGroupScalePolicyAutoScale struct {
	// Initial number of instances in the node group.
	Initial int `pulumi:"initial"`
	// Maximum number of instances in the node group.
	Max int `pulumi:"max"`
	// Minimum number of instances in the node group.
	Min int `pulumi:"min"`
}

// GetKubernetesNodeGroupScalePolicyAutoScaleInput is an input type that accepts GetKubernetesNodeGroupScalePolicyAutoScaleArgs and GetKubernetesNodeGroupScalePolicyAutoScaleOutput values.
// You can construct a concrete instance of `GetKubernetesNodeGroupScalePolicyAutoScaleInput` via:
//
//          GetKubernetesNodeGroupScalePolicyAutoScaleArgs{...}
type GetKubernetesNodeGroupScalePolicyAutoScaleInput interface {
	pulumi.Input

	ToGetKubernetesNodeGroupScalePolicyAutoScaleOutput() GetKubernetesNodeGroupScalePolicyAutoScaleOutput
	ToGetKubernetesNodeGroupScalePolicyAutoScaleOutputWithContext(context.Context) GetKubernetesNodeGroupScalePolicyAutoScaleOutput
}

type GetKubernetesNodeGroupScalePolicyAutoScaleArgs struct {
	// Initial number of instances in the node group.
	Initial pulumi.IntInput `pulumi:"initial"`
	// Maximum number of instances in the node group.
	Max pulumi.IntInput `pulumi:"max"`
	// Minimum number of instances in the node group.
	Min pulumi.IntInput `pulumi:"min"`
}

func (GetKubernetesNodeGroupScalePolicyAutoScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupScalePolicyAutoScale)(nil)).Elem()
}

func (i GetKubernetesNodeGroupScalePolicyAutoScaleArgs) ToGetKubernetesNodeGroupScalePolicyAutoScaleOutput() GetKubernetesNodeGroupScalePolicyAutoScaleOutput {
	return i.ToGetKubernetesNodeGroupScalePolicyAutoScaleOutputWithContext(context.Background())
}

func (i GetKubernetesNodeGroupScalePolicyAutoScaleArgs) ToGetKubernetesNodeGroupScalePolicyAutoScaleOutputWithContext(ctx context.Context) GetKubernetesNodeGroupScalePolicyAutoScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesNodeGroupScalePolicyAutoScaleOutput)
}

type GetKubernetesNodeGroupScalePolicyAutoScaleOutput struct{ *pulumi.OutputState }

func (GetKubernetesNodeGroupScalePolicyAutoScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupScalePolicyAutoScale)(nil)).Elem()
}

func (o GetKubernetesNodeGroupScalePolicyAutoScaleOutput) ToGetKubernetesNodeGroupScalePolicyAutoScaleOutput() GetKubernetesNodeGroupScalePolicyAutoScaleOutput {
	return o
}

func (o GetKubernetesNodeGroupScalePolicyAutoScaleOutput) ToGetKubernetesNodeGroupScalePolicyAutoScaleOutputWithContext(ctx context.Context) GetKubernetesNodeGroupScalePolicyAutoScaleOutput {
	return o
}

// Initial number of instances in the node group.
func (o GetKubernetesNodeGroupScalePolicyAutoScaleOutput) Initial() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupScalePolicyAutoScale) int { return v.Initial }).(pulumi.IntOutput)
}

// Maximum number of instances in the node group.
func (o GetKubernetesNodeGroupScalePolicyAutoScaleOutput) Max() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupScalePolicyAutoScale) int { return v.Max }).(pulumi.IntOutput)
}

// Minimum number of instances in the node group.
func (o GetKubernetesNodeGroupScalePolicyAutoScaleOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupScalePolicyAutoScale) int { return v.Min }).(pulumi.IntOutput)
}

type GetKubernetesNodeGroupScalePolicyFixedScale struct {
	// The number of instances in the node group.
	Size int `pulumi:"size"`
}

// GetKubernetesNodeGroupScalePolicyFixedScaleInput is an input type that accepts GetKubernetesNodeGroupScalePolicyFixedScaleArgs and GetKubernetesNodeGroupScalePolicyFixedScaleOutput values.
// You can construct a concrete instance of `GetKubernetesNodeGroupScalePolicyFixedScaleInput` via:
//
//          GetKubernetesNodeGroupScalePolicyFixedScaleArgs{...}
type GetKubernetesNodeGroupScalePolicyFixedScaleInput interface {
	pulumi.Input

	ToGetKubernetesNodeGroupScalePolicyFixedScaleOutput() GetKubernetesNodeGroupScalePolicyFixedScaleOutput
	ToGetKubernetesNodeGroupScalePolicyFixedScaleOutputWithContext(context.Context) GetKubernetesNodeGroupScalePolicyFixedScaleOutput
}

type GetKubernetesNodeGroupScalePolicyFixedScaleArgs struct {
	// The number of instances in the node group.
	Size pulumi.IntInput `pulumi:"size"`
}

func (GetKubernetesNodeGroupScalePolicyFixedScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupScalePolicyFixedScale)(nil)).Elem()
}

func (i GetKubernetesNodeGroupScalePolicyFixedScaleArgs) ToGetKubernetesNodeGroupScalePolicyFixedScaleOutput() GetKubernetesNodeGroupScalePolicyFixedScaleOutput {
	return i.ToGetKubernetesNodeGroupScalePolicyFixedScaleOutputWithContext(context.Background())
}

func (i GetKubernetesNodeGroupScalePolicyFixedScaleArgs) ToGetKubernetesNodeGroupScalePolicyFixedScaleOutputWithContext(ctx context.Context) GetKubernetesNodeGroupScalePolicyFixedScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesNodeGroupScalePolicyFixedScaleOutput)
}

type GetKubernetesNodeGroupScalePolicyFixedScaleOutput struct{ *pulumi.OutputState }

func (GetKubernetesNodeGroupScalePolicyFixedScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupScalePolicyFixedScale)(nil)).Elem()
}

func (o GetKubernetesNodeGroupScalePolicyFixedScaleOutput) ToGetKubernetesNodeGroupScalePolicyFixedScaleOutput() GetKubernetesNodeGroupScalePolicyFixedScaleOutput {
	return o
}

func (o GetKubernetesNodeGroupScalePolicyFixedScaleOutput) ToGetKubernetesNodeGroupScalePolicyFixedScaleOutputWithContext(ctx context.Context) GetKubernetesNodeGroupScalePolicyFixedScaleOutput {
	return o
}

// The number of instances in the node group.
func (o GetKubernetesNodeGroupScalePolicyFixedScaleOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupScalePolicyFixedScale) int { return v.Size }).(pulumi.IntOutput)
}

type GetKubernetesNodeGroupVersionInfo struct {
	// Current Kubernetes version, major.minor (e.g. 1.15).
	CurrentVersion string `pulumi:"currentVersion"`
	// True/false flag.
	// Newer revisions may include Kubernetes patches (e.g 1.15.1 > 1.15.2) as well
	// as some internal component updates - new features or bug fixes in yandex-specific
	// components either on the master or nodes.
	NewRevisionAvailable bool `pulumi:"newRevisionAvailable"`
	// Human readable description of the changes to be applied
	// when updating to the latest revision. Empty if newRevisionAvailable is false.
	NewRevisionSummary string `pulumi:"newRevisionSummary"`
	// True/false flag. The current version is on the deprecation schedule,
	// component (master or node group) should be upgraded.
	VersionDeprecated bool `pulumi:"versionDeprecated"`
}

// GetKubernetesNodeGroupVersionInfoInput is an input type that accepts GetKubernetesNodeGroupVersionInfoArgs and GetKubernetesNodeGroupVersionInfoOutput values.
// You can construct a concrete instance of `GetKubernetesNodeGroupVersionInfoInput` via:
//
//          GetKubernetesNodeGroupVersionInfoArgs{...}
type GetKubernetesNodeGroupVersionInfoInput interface {
	pulumi.Input

	ToGetKubernetesNodeGroupVersionInfoOutput() GetKubernetesNodeGroupVersionInfoOutput
	ToGetKubernetesNodeGroupVersionInfoOutputWithContext(context.Context) GetKubernetesNodeGroupVersionInfoOutput
}

type GetKubernetesNodeGroupVersionInfoArgs struct {
	// Current Kubernetes version, major.minor (e.g. 1.15).
	CurrentVersion pulumi.StringInput `pulumi:"currentVersion"`
	// True/false flag.
	// Newer revisions may include Kubernetes patches (e.g 1.15.1 > 1.15.2) as well
	// as some internal component updates - new features or bug fixes in yandex-specific
	// components either on the master or nodes.
	NewRevisionAvailable pulumi.BoolInput `pulumi:"newRevisionAvailable"`
	// Human readable description of the changes to be applied
	// when updating to the latest revision. Empty if newRevisionAvailable is false.
	NewRevisionSummary pulumi.StringInput `pulumi:"newRevisionSummary"`
	// True/false flag. The current version is on the deprecation schedule,
	// component (master or node group) should be upgraded.
	VersionDeprecated pulumi.BoolInput `pulumi:"versionDeprecated"`
}

func (GetKubernetesNodeGroupVersionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupVersionInfo)(nil)).Elem()
}

func (i GetKubernetesNodeGroupVersionInfoArgs) ToGetKubernetesNodeGroupVersionInfoOutput() GetKubernetesNodeGroupVersionInfoOutput {
	return i.ToGetKubernetesNodeGroupVersionInfoOutputWithContext(context.Background())
}

func (i GetKubernetesNodeGroupVersionInfoArgs) ToGetKubernetesNodeGroupVersionInfoOutputWithContext(ctx context.Context) GetKubernetesNodeGroupVersionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesNodeGroupVersionInfoOutput)
}

type GetKubernetesNodeGroupVersionInfoOutput struct{ *pulumi.OutputState }

func (GetKubernetesNodeGroupVersionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodeGroupVersionInfo)(nil)).Elem()
}

func (o GetKubernetesNodeGroupVersionInfoOutput) ToGetKubernetesNodeGroupVersionInfoOutput() GetKubernetesNodeGroupVersionInfoOutput {
	return o
}

func (o GetKubernetesNodeGroupVersionInfoOutput) ToGetKubernetesNodeGroupVersionInfoOutputWithContext(ctx context.Context) GetKubernetesNodeGroupVersionInfoOutput {
	return o
}

// Current Kubernetes version, major.minor (e.g. 1.15).
func (o GetKubernetesNodeGroupVersionInfoOutput) CurrentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupVersionInfo) string { return v.CurrentVersion }).(pulumi.StringOutput)
}

// True/false flag.
// Newer revisions may include Kubernetes patches (e.g 1.15.1 > 1.15.2) as well
// as some internal component updates - new features or bug fixes in yandex-specific
// components either on the master or nodes.
func (o GetKubernetesNodeGroupVersionInfoOutput) NewRevisionAvailable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupVersionInfo) bool { return v.NewRevisionAvailable }).(pulumi.BoolOutput)
}

// Human readable description of the changes to be applied
// when updating to the latest revision. Empty if newRevisionAvailable is false.
func (o GetKubernetesNodeGroupVersionInfoOutput) NewRevisionSummary() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupVersionInfo) string { return v.NewRevisionSummary }).(pulumi.StringOutput)
}

// True/false flag. The current version is on the deprecation schedule,
// component (master or node group) should be upgraded.
func (o GetKubernetesNodeGroupVersionInfoOutput) VersionDeprecated() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesNodeGroupVersionInfo) bool { return v.VersionDeprecated }).(pulumi.BoolOutput)
}

type GetLbNetworkLoadBalancerAttachedTargetGroup struct {
	Healthchecks []GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheck `pulumi:"healthchecks"`
	// ID of the target group that attached to the network load balancer.
	// * `healthcheck.0.name` - Name of the health check.
	// * `healthcheck.0.interval` - The interval between health checks.
	// * `healthcheck.0.timeout` - Timeout for a target to return a response for the health check.
	// * `healthcheck.0.unhealthy_threshold` - Number of failed health checks before changing the status to `UNHEALTHY`.
	// * `healthcheck.0.healthy_threshold` - Number of successful health checks required in order to set the `HEALTHY` status for the target.
	// * `healthcheck.0.tcp_options.0.port` - Port to use for TCP health checks.
	// * `healthcheck.0.http_options.0.port` - Port to use for HTTP health checks.
	// * `healthcheck.0.http_options.0.path` - URL path to use for HTTP health checks.
	TargetGroupId string `pulumi:"targetGroupId"`
}

// GetLbNetworkLoadBalancerAttachedTargetGroupInput is an input type that accepts GetLbNetworkLoadBalancerAttachedTargetGroupArgs and GetLbNetworkLoadBalancerAttachedTargetGroupOutput values.
// You can construct a concrete instance of `GetLbNetworkLoadBalancerAttachedTargetGroupInput` via:
//
//          GetLbNetworkLoadBalancerAttachedTargetGroupArgs{...}
type GetLbNetworkLoadBalancerAttachedTargetGroupInput interface {
	pulumi.Input

	ToGetLbNetworkLoadBalancerAttachedTargetGroupOutput() GetLbNetworkLoadBalancerAttachedTargetGroupOutput
	ToGetLbNetworkLoadBalancerAttachedTargetGroupOutputWithContext(context.Context) GetLbNetworkLoadBalancerAttachedTargetGroupOutput
}

type GetLbNetworkLoadBalancerAttachedTargetGroupArgs struct {
	Healthchecks GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayInput `pulumi:"healthchecks"`
	// ID of the target group that attached to the network load balancer.
	// * `healthcheck.0.name` - Name of the health check.
	// * `healthcheck.0.interval` - The interval between health checks.
	// * `healthcheck.0.timeout` - Timeout for a target to return a response for the health check.
	// * `healthcheck.0.unhealthy_threshold` - Number of failed health checks before changing the status to `UNHEALTHY`.
	// * `healthcheck.0.healthy_threshold` - Number of successful health checks required in order to set the `HEALTHY` status for the target.
	// * `healthcheck.0.tcp_options.0.port` - Port to use for TCP health checks.
	// * `healthcheck.0.http_options.0.port` - Port to use for HTTP health checks.
	// * `healthcheck.0.http_options.0.path` - URL path to use for HTTP health checks.
	TargetGroupId pulumi.StringInput `pulumi:"targetGroupId"`
}

func (GetLbNetworkLoadBalancerAttachedTargetGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbNetworkLoadBalancerAttachedTargetGroup)(nil)).Elem()
}

func (i GetLbNetworkLoadBalancerAttachedTargetGroupArgs) ToGetLbNetworkLoadBalancerAttachedTargetGroupOutput() GetLbNetworkLoadBalancerAttachedTargetGroupOutput {
	return i.ToGetLbNetworkLoadBalancerAttachedTargetGroupOutputWithContext(context.Background())
}

func (i GetLbNetworkLoadBalancerAttachedTargetGroupArgs) ToGetLbNetworkLoadBalancerAttachedTargetGroupOutputWithContext(ctx context.Context) GetLbNetworkLoadBalancerAttachedTargetGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbNetworkLoadBalancerAttachedTargetGroupOutput)
}

// GetLbNetworkLoadBalancerAttachedTargetGroupArrayInput is an input type that accepts GetLbNetworkLoadBalancerAttachedTargetGroupArray and GetLbNetworkLoadBalancerAttachedTargetGroupArrayOutput values.
// You can construct a concrete instance of `GetLbNetworkLoadBalancerAttachedTargetGroupArrayInput` via:
//
//          GetLbNetworkLoadBalancerAttachedTargetGroupArray{ GetLbNetworkLoadBalancerAttachedTargetGroupArgs{...} }
type GetLbNetworkLoadBalancerAttachedTargetGroupArrayInput interface {
	pulumi.Input

	ToGetLbNetworkLoadBalancerAttachedTargetGroupArrayOutput() GetLbNetworkLoadBalancerAttachedTargetGroupArrayOutput
	ToGetLbNetworkLoadBalancerAttachedTargetGroupArrayOutputWithContext(context.Context) GetLbNetworkLoadBalancerAttachedTargetGroupArrayOutput
}

type GetLbNetworkLoadBalancerAttachedTargetGroupArray []GetLbNetworkLoadBalancerAttachedTargetGroupInput

func (GetLbNetworkLoadBalancerAttachedTargetGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbNetworkLoadBalancerAttachedTargetGroup)(nil)).Elem()
}

func (i GetLbNetworkLoadBalancerAttachedTargetGroupArray) ToGetLbNetworkLoadBalancerAttachedTargetGroupArrayOutput() GetLbNetworkLoadBalancerAttachedTargetGroupArrayOutput {
	return i.ToGetLbNetworkLoadBalancerAttachedTargetGroupArrayOutputWithContext(context.Background())
}

func (i GetLbNetworkLoadBalancerAttachedTargetGroupArray) ToGetLbNetworkLoadBalancerAttachedTargetGroupArrayOutputWithContext(ctx context.Context) GetLbNetworkLoadBalancerAttachedTargetGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbNetworkLoadBalancerAttachedTargetGroupArrayOutput)
}

type GetLbNetworkLoadBalancerAttachedTargetGroupOutput struct{ *pulumi.OutputState }

func (GetLbNetworkLoadBalancerAttachedTargetGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbNetworkLoadBalancerAttachedTargetGroup)(nil)).Elem()
}

func (o GetLbNetworkLoadBalancerAttachedTargetGroupOutput) ToGetLbNetworkLoadBalancerAttachedTargetGroupOutput() GetLbNetworkLoadBalancerAttachedTargetGroupOutput {
	return o
}

func (o GetLbNetworkLoadBalancerAttachedTargetGroupOutput) ToGetLbNetworkLoadBalancerAttachedTargetGroupOutputWithContext(ctx context.Context) GetLbNetworkLoadBalancerAttachedTargetGroupOutput {
	return o
}

func (o GetLbNetworkLoadBalancerAttachedTargetGroupOutput) Healthchecks() GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput {
	return o.ApplyT(func(v GetLbNetworkLoadBalancerAttachedTargetGroup) []GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheck {
		return v.Healthchecks
	}).(GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput)
}

// ID of the target group that attached to the network load balancer.
// * `healthcheck.0.name` - Name of the health check.
// * `healthcheck.0.interval` - The interval between health checks.
// * `healthcheck.0.timeout` - Timeout for a target to return a response for the health check.
// * `healthcheck.0.unhealthy_threshold` - Number of failed health checks before changing the status to `UNHEALTHY`.
// * `healthcheck.0.healthy_threshold` - Number of successful health checks required in order to set the `HEALTHY` status for the target.
// * `healthcheck.0.tcp_options.0.port` - Port to use for TCP health checks.
// * `healthcheck.0.http_options.0.port` - Port to use for HTTP health checks.
// * `healthcheck.0.http_options.0.path` - URL path to use for HTTP health checks.
func (o GetLbNetworkLoadBalancerAttachedTargetGroupOutput) TargetGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbNetworkLoadBalancerAttachedTargetGroup) string { return v.TargetGroupId }).(pulumi.StringOutput)
}

type GetLbNetworkLoadBalancerAttachedTargetGroupArrayOutput struct{ *pulumi.OutputState }

func (GetLbNetworkLoadBalancerAttachedTargetGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbNetworkLoadBalancerAttachedTargetGroup)(nil)).Elem()
}

func (o GetLbNetworkLoadBalancerAttachedTargetGroupArrayOutput) ToGetLbNetworkLoadBalancerAttachedTargetGroupArrayOutput() GetLbNetworkLoadBalancerAttachedTargetGroupArrayOutput {
	return o
}

func (o GetLbNetworkLoadBalancerAttachedTargetGroupArrayOutput) ToGetLbNetworkLoadBalancerAttachedTargetGroupArrayOutputWithContext(ctx context.Context) GetLbNetworkLoadBalancerAttachedTargetGroupArrayOutput {
	return o
}

func (o GetLbNetworkLoadBalancerAttachedTargetGroupArrayOutput) Index(i pulumi.IntInput) GetLbNetworkLoadBalancerAttachedTargetGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbNetworkLoadBalancerAttachedTargetGroup {
		return vs[0].([]GetLbNetworkLoadBalancerAttachedTargetGroup)[vs[1].(int)]
	}).(GetLbNetworkLoadBalancerAttachedTargetGroupOutput)
}

type GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheck struct {
	HealthyThreshold int                                                               `pulumi:"healthyThreshold"`
	HttpOptions      GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions `pulumi:"httpOptions"`
	Interval         int                                                               `pulumi:"interval"`
	// - Name of the network load balancer.
	Name               string                                                           `pulumi:"name"`
	TcpOptions         GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptions `pulumi:"tcpOptions"`
	Timeout            int                                                              `pulumi:"timeout"`
	UnhealthyThreshold int                                                              `pulumi:"unhealthyThreshold"`
}

// GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckInput is an input type that accepts GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArgs and GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput values.
// You can construct a concrete instance of `GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckInput` via:
//
//          GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArgs{...}
type GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckInput interface {
	pulumi.Input

	ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput() GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput
	ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutputWithContext(context.Context) GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput
}

type GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArgs struct {
	HealthyThreshold pulumi.IntInput                                                        `pulumi:"healthyThreshold"`
	HttpOptions      GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsInput `pulumi:"httpOptions"`
	Interval         pulumi.IntInput                                                        `pulumi:"interval"`
	// - Name of the network load balancer.
	Name               pulumi.StringInput                                                    `pulumi:"name"`
	TcpOptions         GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsInput `pulumi:"tcpOptions"`
	Timeout            pulumi.IntInput                                                       `pulumi:"timeout"`
	UnhealthyThreshold pulumi.IntInput                                                       `pulumi:"unhealthyThreshold"`
}

func (GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheck)(nil)).Elem()
}

func (i GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArgs) ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput() GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput {
	return i.ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutputWithContext(context.Background())
}

func (i GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArgs) ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutputWithContext(ctx context.Context) GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput)
}

// GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayInput is an input type that accepts GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArray and GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput values.
// You can construct a concrete instance of `GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayInput` via:
//
//          GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArray{ GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArgs{...} }
type GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayInput interface {
	pulumi.Input

	ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput() GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput
	ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutputWithContext(context.Context) GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput
}

type GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArray []GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckInput

func (GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheck)(nil)).Elem()
}

func (i GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArray) ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput() GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput {
	return i.ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutputWithContext(context.Background())
}

func (i GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArray) ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutputWithContext(ctx context.Context) GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput)
}

type GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput struct{ *pulumi.OutputState }

func (GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheck)(nil)).Elem()
}

func (o GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput) ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput() GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput {
	return o
}

func (o GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput) ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutputWithContext(ctx context.Context) GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput {
	return o
}

func (o GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput) HealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheck) int { return v.HealthyThreshold }).(pulumi.IntOutput)
}

func (o GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput) HttpOptions() GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput {
	return o.ApplyT(func(v GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheck) GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions {
		return v.HttpOptions
	}).(GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput)
}

func (o GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheck) int { return v.Interval }).(pulumi.IntOutput)
}

// - Name of the network load balancer.
func (o GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheck) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput) TcpOptions() GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput {
	return o.ApplyT(func(v GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheck) GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptions {
		return v.TcpOptions
	}).(GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput)
}

func (o GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheck) int { return v.Timeout }).(pulumi.IntOutput)
}

func (o GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput) UnhealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheck) int { return v.UnhealthyThreshold }).(pulumi.IntOutput)
}

type GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput struct{ *pulumi.OutputState }

func (GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheck)(nil)).Elem()
}

func (o GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput) ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput() GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput {
	return o
}

func (o GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput) ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutputWithContext(ctx context.Context) GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput {
	return o
}

func (o GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput) Index(i pulumi.IntInput) GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheck {
		return vs[0].([]GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheck)[vs[1].(int)]
	}).(GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput)
}

type GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions struct {
	Path string `pulumi:"path"`
	// Port for incoming traffic.
	Port int `pulumi:"port"`
}

// GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsInput is an input type that accepts GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsArgs and GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput values.
// You can construct a concrete instance of `GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsInput` via:
//
//          GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsArgs{...}
type GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsInput interface {
	pulumi.Input

	ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput() GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput
	ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutputWithContext(context.Context) GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput
}

type GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsArgs struct {
	Path pulumi.StringInput `pulumi:"path"`
	// Port for incoming traffic.
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions)(nil)).Elem()
}

func (i GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsArgs) ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput() GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput {
	return i.ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutputWithContext(context.Background())
}

func (i GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsArgs) ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutputWithContext(ctx context.Context) GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput)
}

type GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput struct{ *pulumi.OutputState }

func (GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions)(nil)).Elem()
}

func (o GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput) ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput() GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput {
	return o
}

func (o GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput) ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutputWithContext(ctx context.Context) GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput {
	return o
}

func (o GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions) string { return v.Path }).(pulumi.StringOutput)
}

// Port for incoming traffic.
func (o GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions) int { return v.Port }).(pulumi.IntOutput)
}

type GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptions struct {
	// Port for incoming traffic.
	Port int `pulumi:"port"`
}

// GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsInput is an input type that accepts GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsArgs and GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput values.
// You can construct a concrete instance of `GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsInput` via:
//
//          GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsArgs{...}
type GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsInput interface {
	pulumi.Input

	ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput() GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput
	ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutputWithContext(context.Context) GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput
}

type GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsArgs struct {
	// Port for incoming traffic.
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptions)(nil)).Elem()
}

func (i GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsArgs) ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput() GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput {
	return i.ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutputWithContext(context.Background())
}

func (i GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsArgs) ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutputWithContext(ctx context.Context) GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput)
}

type GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput struct{ *pulumi.OutputState }

func (GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptions)(nil)).Elem()
}

func (o GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput) ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput() GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput {
	return o
}

func (o GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput) ToGetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutputWithContext(ctx context.Context) GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput {
	return o
}

// Port for incoming traffic.
func (o GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptions) int { return v.Port }).(pulumi.IntOutput)
}

type GetLbNetworkLoadBalancerListener struct {
	ExternalAddressSpec GetLbNetworkLoadBalancerListenerExternalAddressSpec `pulumi:"externalAddressSpec"`
	InternalAddressSpec GetLbNetworkLoadBalancerListenerInternalAddressSpec `pulumi:"internalAddressSpec"`
	// - Name of the network load balancer.
	Name string `pulumi:"name"`
	// Port for incoming traffic.
	Port int `pulumi:"port"`
	// Protocol for incoming traffic.
	Protocol string `pulumi:"protocol"`
	// Port of a target.
	// * `external_address_spec.0.address` - External IP address of a listener.
	// * `external_address_spec.0.ip_version` - IP version of the external addresses.
	// * `internal_address_spec.0.subnet_id` - Subnet ID to which the internal IP address belongs
	// * `internal_address_spec.0.address` - Internal IP address of a listener.
	// * `internal_address_spec.0.ip_version` - IP version of the internal addresses.
	TargetPort int `pulumi:"targetPort"`
}

// GetLbNetworkLoadBalancerListenerInput is an input type that accepts GetLbNetworkLoadBalancerListenerArgs and GetLbNetworkLoadBalancerListenerOutput values.
// You can construct a concrete instance of `GetLbNetworkLoadBalancerListenerInput` via:
//
//          GetLbNetworkLoadBalancerListenerArgs{...}
type GetLbNetworkLoadBalancerListenerInput interface {
	pulumi.Input

	ToGetLbNetworkLoadBalancerListenerOutput() GetLbNetworkLoadBalancerListenerOutput
	ToGetLbNetworkLoadBalancerListenerOutputWithContext(context.Context) GetLbNetworkLoadBalancerListenerOutput
}

type GetLbNetworkLoadBalancerListenerArgs struct {
	ExternalAddressSpec GetLbNetworkLoadBalancerListenerExternalAddressSpecInput `pulumi:"externalAddressSpec"`
	InternalAddressSpec GetLbNetworkLoadBalancerListenerInternalAddressSpecInput `pulumi:"internalAddressSpec"`
	// - Name of the network load balancer.
	Name pulumi.StringInput `pulumi:"name"`
	// Port for incoming traffic.
	Port pulumi.IntInput `pulumi:"port"`
	// Protocol for incoming traffic.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Port of a target.
	// * `external_address_spec.0.address` - External IP address of a listener.
	// * `external_address_spec.0.ip_version` - IP version of the external addresses.
	// * `internal_address_spec.0.subnet_id` - Subnet ID to which the internal IP address belongs
	// * `internal_address_spec.0.address` - Internal IP address of a listener.
	// * `internal_address_spec.0.ip_version` - IP version of the internal addresses.
	TargetPort pulumi.IntInput `pulumi:"targetPort"`
}

func (GetLbNetworkLoadBalancerListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbNetworkLoadBalancerListener)(nil)).Elem()
}

func (i GetLbNetworkLoadBalancerListenerArgs) ToGetLbNetworkLoadBalancerListenerOutput() GetLbNetworkLoadBalancerListenerOutput {
	return i.ToGetLbNetworkLoadBalancerListenerOutputWithContext(context.Background())
}

func (i GetLbNetworkLoadBalancerListenerArgs) ToGetLbNetworkLoadBalancerListenerOutputWithContext(ctx context.Context) GetLbNetworkLoadBalancerListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbNetworkLoadBalancerListenerOutput)
}

// GetLbNetworkLoadBalancerListenerArrayInput is an input type that accepts GetLbNetworkLoadBalancerListenerArray and GetLbNetworkLoadBalancerListenerArrayOutput values.
// You can construct a concrete instance of `GetLbNetworkLoadBalancerListenerArrayInput` via:
//
//          GetLbNetworkLoadBalancerListenerArray{ GetLbNetworkLoadBalancerListenerArgs{...} }
type GetLbNetworkLoadBalancerListenerArrayInput interface {
	pulumi.Input

	ToGetLbNetworkLoadBalancerListenerArrayOutput() GetLbNetworkLoadBalancerListenerArrayOutput
	ToGetLbNetworkLoadBalancerListenerArrayOutputWithContext(context.Context) GetLbNetworkLoadBalancerListenerArrayOutput
}

type GetLbNetworkLoadBalancerListenerArray []GetLbNetworkLoadBalancerListenerInput

func (GetLbNetworkLoadBalancerListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbNetworkLoadBalancerListener)(nil)).Elem()
}

func (i GetLbNetworkLoadBalancerListenerArray) ToGetLbNetworkLoadBalancerListenerArrayOutput() GetLbNetworkLoadBalancerListenerArrayOutput {
	return i.ToGetLbNetworkLoadBalancerListenerArrayOutputWithContext(context.Background())
}

func (i GetLbNetworkLoadBalancerListenerArray) ToGetLbNetworkLoadBalancerListenerArrayOutputWithContext(ctx context.Context) GetLbNetworkLoadBalancerListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbNetworkLoadBalancerListenerArrayOutput)
}

type GetLbNetworkLoadBalancerListenerOutput struct{ *pulumi.OutputState }

func (GetLbNetworkLoadBalancerListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbNetworkLoadBalancerListener)(nil)).Elem()
}

func (o GetLbNetworkLoadBalancerListenerOutput) ToGetLbNetworkLoadBalancerListenerOutput() GetLbNetworkLoadBalancerListenerOutput {
	return o
}

func (o GetLbNetworkLoadBalancerListenerOutput) ToGetLbNetworkLoadBalancerListenerOutputWithContext(ctx context.Context) GetLbNetworkLoadBalancerListenerOutput {
	return o
}

func (o GetLbNetworkLoadBalancerListenerOutput) ExternalAddressSpec() GetLbNetworkLoadBalancerListenerExternalAddressSpecOutput {
	return o.ApplyT(func(v GetLbNetworkLoadBalancerListener) GetLbNetworkLoadBalancerListenerExternalAddressSpec {
		return v.ExternalAddressSpec
	}).(GetLbNetworkLoadBalancerListenerExternalAddressSpecOutput)
}

func (o GetLbNetworkLoadBalancerListenerOutput) InternalAddressSpec() GetLbNetworkLoadBalancerListenerInternalAddressSpecOutput {
	return o.ApplyT(func(v GetLbNetworkLoadBalancerListener) GetLbNetworkLoadBalancerListenerInternalAddressSpec {
		return v.InternalAddressSpec
	}).(GetLbNetworkLoadBalancerListenerInternalAddressSpecOutput)
}

// - Name of the network load balancer.
func (o GetLbNetworkLoadBalancerListenerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbNetworkLoadBalancerListener) string { return v.Name }).(pulumi.StringOutput)
}

// Port for incoming traffic.
func (o GetLbNetworkLoadBalancerListenerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbNetworkLoadBalancerListener) int { return v.Port }).(pulumi.IntOutput)
}

// Protocol for incoming traffic.
func (o GetLbNetworkLoadBalancerListenerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbNetworkLoadBalancerListener) string { return v.Protocol }).(pulumi.StringOutput)
}

// Port of a target.
// * `external_address_spec.0.address` - External IP address of a listener.
// * `external_address_spec.0.ip_version` - IP version of the external addresses.
// * `internal_address_spec.0.subnet_id` - Subnet ID to which the internal IP address belongs
// * `internal_address_spec.0.address` - Internal IP address of a listener.
// * `internal_address_spec.0.ip_version` - IP version of the internal addresses.
func (o GetLbNetworkLoadBalancerListenerOutput) TargetPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbNetworkLoadBalancerListener) int { return v.TargetPort }).(pulumi.IntOutput)
}

type GetLbNetworkLoadBalancerListenerArrayOutput struct{ *pulumi.OutputState }

func (GetLbNetworkLoadBalancerListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbNetworkLoadBalancerListener)(nil)).Elem()
}

func (o GetLbNetworkLoadBalancerListenerArrayOutput) ToGetLbNetworkLoadBalancerListenerArrayOutput() GetLbNetworkLoadBalancerListenerArrayOutput {
	return o
}

func (o GetLbNetworkLoadBalancerListenerArrayOutput) ToGetLbNetworkLoadBalancerListenerArrayOutputWithContext(ctx context.Context) GetLbNetworkLoadBalancerListenerArrayOutput {
	return o
}

func (o GetLbNetworkLoadBalancerListenerArrayOutput) Index(i pulumi.IntInput) GetLbNetworkLoadBalancerListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbNetworkLoadBalancerListener {
		return vs[0].([]GetLbNetworkLoadBalancerListener)[vs[1].(int)]
	}).(GetLbNetworkLoadBalancerListenerOutput)
}

type GetLbNetworkLoadBalancerListenerExternalAddressSpec struct {
	Address   string `pulumi:"address"`
	IpVersion string `pulumi:"ipVersion"`
}

// GetLbNetworkLoadBalancerListenerExternalAddressSpecInput is an input type that accepts GetLbNetworkLoadBalancerListenerExternalAddressSpecArgs and GetLbNetworkLoadBalancerListenerExternalAddressSpecOutput values.
// You can construct a concrete instance of `GetLbNetworkLoadBalancerListenerExternalAddressSpecInput` via:
//
//          GetLbNetworkLoadBalancerListenerExternalAddressSpecArgs{...}
type GetLbNetworkLoadBalancerListenerExternalAddressSpecInput interface {
	pulumi.Input

	ToGetLbNetworkLoadBalancerListenerExternalAddressSpecOutput() GetLbNetworkLoadBalancerListenerExternalAddressSpecOutput
	ToGetLbNetworkLoadBalancerListenerExternalAddressSpecOutputWithContext(context.Context) GetLbNetworkLoadBalancerListenerExternalAddressSpecOutput
}

type GetLbNetworkLoadBalancerListenerExternalAddressSpecArgs struct {
	Address   pulumi.StringInput `pulumi:"address"`
	IpVersion pulumi.StringInput `pulumi:"ipVersion"`
}

func (GetLbNetworkLoadBalancerListenerExternalAddressSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbNetworkLoadBalancerListenerExternalAddressSpec)(nil)).Elem()
}

func (i GetLbNetworkLoadBalancerListenerExternalAddressSpecArgs) ToGetLbNetworkLoadBalancerListenerExternalAddressSpecOutput() GetLbNetworkLoadBalancerListenerExternalAddressSpecOutput {
	return i.ToGetLbNetworkLoadBalancerListenerExternalAddressSpecOutputWithContext(context.Background())
}

func (i GetLbNetworkLoadBalancerListenerExternalAddressSpecArgs) ToGetLbNetworkLoadBalancerListenerExternalAddressSpecOutputWithContext(ctx context.Context) GetLbNetworkLoadBalancerListenerExternalAddressSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbNetworkLoadBalancerListenerExternalAddressSpecOutput)
}

type GetLbNetworkLoadBalancerListenerExternalAddressSpecOutput struct{ *pulumi.OutputState }

func (GetLbNetworkLoadBalancerListenerExternalAddressSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbNetworkLoadBalancerListenerExternalAddressSpec)(nil)).Elem()
}

func (o GetLbNetworkLoadBalancerListenerExternalAddressSpecOutput) ToGetLbNetworkLoadBalancerListenerExternalAddressSpecOutput() GetLbNetworkLoadBalancerListenerExternalAddressSpecOutput {
	return o
}

func (o GetLbNetworkLoadBalancerListenerExternalAddressSpecOutput) ToGetLbNetworkLoadBalancerListenerExternalAddressSpecOutputWithContext(ctx context.Context) GetLbNetworkLoadBalancerListenerExternalAddressSpecOutput {
	return o
}

func (o GetLbNetworkLoadBalancerListenerExternalAddressSpecOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbNetworkLoadBalancerListenerExternalAddressSpec) string { return v.Address }).(pulumi.StringOutput)
}

func (o GetLbNetworkLoadBalancerListenerExternalAddressSpecOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbNetworkLoadBalancerListenerExternalAddressSpec) string { return v.IpVersion }).(pulumi.StringOutput)
}

type GetLbNetworkLoadBalancerListenerInternalAddressSpec struct {
	Address   string `pulumi:"address"`
	IpVersion string `pulumi:"ipVersion"`
	SubnetId  string `pulumi:"subnetId"`
}

// GetLbNetworkLoadBalancerListenerInternalAddressSpecInput is an input type that accepts GetLbNetworkLoadBalancerListenerInternalAddressSpecArgs and GetLbNetworkLoadBalancerListenerInternalAddressSpecOutput values.
// You can construct a concrete instance of `GetLbNetworkLoadBalancerListenerInternalAddressSpecInput` via:
//
//          GetLbNetworkLoadBalancerListenerInternalAddressSpecArgs{...}
type GetLbNetworkLoadBalancerListenerInternalAddressSpecInput interface {
	pulumi.Input

	ToGetLbNetworkLoadBalancerListenerInternalAddressSpecOutput() GetLbNetworkLoadBalancerListenerInternalAddressSpecOutput
	ToGetLbNetworkLoadBalancerListenerInternalAddressSpecOutputWithContext(context.Context) GetLbNetworkLoadBalancerListenerInternalAddressSpecOutput
}

type GetLbNetworkLoadBalancerListenerInternalAddressSpecArgs struct {
	Address   pulumi.StringInput `pulumi:"address"`
	IpVersion pulumi.StringInput `pulumi:"ipVersion"`
	SubnetId  pulumi.StringInput `pulumi:"subnetId"`
}

func (GetLbNetworkLoadBalancerListenerInternalAddressSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbNetworkLoadBalancerListenerInternalAddressSpec)(nil)).Elem()
}

func (i GetLbNetworkLoadBalancerListenerInternalAddressSpecArgs) ToGetLbNetworkLoadBalancerListenerInternalAddressSpecOutput() GetLbNetworkLoadBalancerListenerInternalAddressSpecOutput {
	return i.ToGetLbNetworkLoadBalancerListenerInternalAddressSpecOutputWithContext(context.Background())
}

func (i GetLbNetworkLoadBalancerListenerInternalAddressSpecArgs) ToGetLbNetworkLoadBalancerListenerInternalAddressSpecOutputWithContext(ctx context.Context) GetLbNetworkLoadBalancerListenerInternalAddressSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbNetworkLoadBalancerListenerInternalAddressSpecOutput)
}

type GetLbNetworkLoadBalancerListenerInternalAddressSpecOutput struct{ *pulumi.OutputState }

func (GetLbNetworkLoadBalancerListenerInternalAddressSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbNetworkLoadBalancerListenerInternalAddressSpec)(nil)).Elem()
}

func (o GetLbNetworkLoadBalancerListenerInternalAddressSpecOutput) ToGetLbNetworkLoadBalancerListenerInternalAddressSpecOutput() GetLbNetworkLoadBalancerListenerInternalAddressSpecOutput {
	return o
}

func (o GetLbNetworkLoadBalancerListenerInternalAddressSpecOutput) ToGetLbNetworkLoadBalancerListenerInternalAddressSpecOutputWithContext(ctx context.Context) GetLbNetworkLoadBalancerListenerInternalAddressSpecOutput {
	return o
}

func (o GetLbNetworkLoadBalancerListenerInternalAddressSpecOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbNetworkLoadBalancerListenerInternalAddressSpec) string { return v.Address }).(pulumi.StringOutput)
}

func (o GetLbNetworkLoadBalancerListenerInternalAddressSpecOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbNetworkLoadBalancerListenerInternalAddressSpec) string { return v.IpVersion }).(pulumi.StringOutput)
}

func (o GetLbNetworkLoadBalancerListenerInternalAddressSpecOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbNetworkLoadBalancerListenerInternalAddressSpec) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetLbTargetGroupTarget struct {
	Address  string `pulumi:"address"`
	SubnetId string `pulumi:"subnetId"`
}

// GetLbTargetGroupTargetInput is an input type that accepts GetLbTargetGroupTargetArgs and GetLbTargetGroupTargetOutput values.
// You can construct a concrete instance of `GetLbTargetGroupTargetInput` via:
//
//          GetLbTargetGroupTargetArgs{...}
type GetLbTargetGroupTargetInput interface {
	pulumi.Input

	ToGetLbTargetGroupTargetOutput() GetLbTargetGroupTargetOutput
	ToGetLbTargetGroupTargetOutputWithContext(context.Context) GetLbTargetGroupTargetOutput
}

type GetLbTargetGroupTargetArgs struct {
	Address  pulumi.StringInput `pulumi:"address"`
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetLbTargetGroupTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbTargetGroupTarget)(nil)).Elem()
}

func (i GetLbTargetGroupTargetArgs) ToGetLbTargetGroupTargetOutput() GetLbTargetGroupTargetOutput {
	return i.ToGetLbTargetGroupTargetOutputWithContext(context.Background())
}

func (i GetLbTargetGroupTargetArgs) ToGetLbTargetGroupTargetOutputWithContext(ctx context.Context) GetLbTargetGroupTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbTargetGroupTargetOutput)
}

// GetLbTargetGroupTargetArrayInput is an input type that accepts GetLbTargetGroupTargetArray and GetLbTargetGroupTargetArrayOutput values.
// You can construct a concrete instance of `GetLbTargetGroupTargetArrayInput` via:
//
//          GetLbTargetGroupTargetArray{ GetLbTargetGroupTargetArgs{...} }
type GetLbTargetGroupTargetArrayInput interface {
	pulumi.Input

	ToGetLbTargetGroupTargetArrayOutput() GetLbTargetGroupTargetArrayOutput
	ToGetLbTargetGroupTargetArrayOutputWithContext(context.Context) GetLbTargetGroupTargetArrayOutput
}

type GetLbTargetGroupTargetArray []GetLbTargetGroupTargetInput

func (GetLbTargetGroupTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbTargetGroupTarget)(nil)).Elem()
}

func (i GetLbTargetGroupTargetArray) ToGetLbTargetGroupTargetArrayOutput() GetLbTargetGroupTargetArrayOutput {
	return i.ToGetLbTargetGroupTargetArrayOutputWithContext(context.Background())
}

func (i GetLbTargetGroupTargetArray) ToGetLbTargetGroupTargetArrayOutputWithContext(ctx context.Context) GetLbTargetGroupTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbTargetGroupTargetArrayOutput)
}

type GetLbTargetGroupTargetOutput struct{ *pulumi.OutputState }

func (GetLbTargetGroupTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbTargetGroupTarget)(nil)).Elem()
}

func (o GetLbTargetGroupTargetOutput) ToGetLbTargetGroupTargetOutput() GetLbTargetGroupTargetOutput {
	return o
}

func (o GetLbTargetGroupTargetOutput) ToGetLbTargetGroupTargetOutputWithContext(ctx context.Context) GetLbTargetGroupTargetOutput {
	return o
}

func (o GetLbTargetGroupTargetOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbTargetGroupTarget) string { return v.Address }).(pulumi.StringOutput)
}

func (o GetLbTargetGroupTargetOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbTargetGroupTarget) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetLbTargetGroupTargetArrayOutput struct{ *pulumi.OutputState }

func (GetLbTargetGroupTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbTargetGroupTarget)(nil)).Elem()
}

func (o GetLbTargetGroupTargetArrayOutput) ToGetLbTargetGroupTargetArrayOutput() GetLbTargetGroupTargetArrayOutput {
	return o
}

func (o GetLbTargetGroupTargetArrayOutput) ToGetLbTargetGroupTargetArrayOutputWithContext(ctx context.Context) GetLbTargetGroupTargetArrayOutput {
	return o
}

func (o GetLbTargetGroupTargetArrayOutput) Index(i pulumi.IntInput) GetLbTargetGroupTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbTargetGroupTarget {
		return vs[0].([]GetLbTargetGroupTarget)[vs[1].(int)]
	}).(GetLbTargetGroupTargetOutput)
}

type GetMdbClickhouseClusterAccess struct {
	// Allow access for Web SQL.
	DataLens bool `pulumi:"dataLens"`
	// Allow access for Yandex.Metrika.
	Metrika bool `pulumi:"metrika"`
	// Allow access for Serverless.
	Serverless bool `pulumi:"serverless"`
	// Allow access for DataLens.
	WebSql bool `pulumi:"webSql"`
}

// GetMdbClickhouseClusterAccessInput is an input type that accepts GetMdbClickhouseClusterAccessArgs and GetMdbClickhouseClusterAccessOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterAccessInput` via:
//
//          GetMdbClickhouseClusterAccessArgs{...}
type GetMdbClickhouseClusterAccessInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterAccessOutput() GetMdbClickhouseClusterAccessOutput
	ToGetMdbClickhouseClusterAccessOutputWithContext(context.Context) GetMdbClickhouseClusterAccessOutput
}

type GetMdbClickhouseClusterAccessArgs struct {
	// Allow access for Web SQL.
	DataLens pulumi.BoolInput `pulumi:"dataLens"`
	// Allow access for Yandex.Metrika.
	Metrika pulumi.BoolInput `pulumi:"metrika"`
	// Allow access for Serverless.
	Serverless pulumi.BoolInput `pulumi:"serverless"`
	// Allow access for DataLens.
	WebSql pulumi.BoolInput `pulumi:"webSql"`
}

func (GetMdbClickhouseClusterAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterAccess)(nil)).Elem()
}

func (i GetMdbClickhouseClusterAccessArgs) ToGetMdbClickhouseClusterAccessOutput() GetMdbClickhouseClusterAccessOutput {
	return i.ToGetMdbClickhouseClusterAccessOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterAccessArgs) ToGetMdbClickhouseClusterAccessOutputWithContext(ctx context.Context) GetMdbClickhouseClusterAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterAccessOutput)
}

type GetMdbClickhouseClusterAccessOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterAccess)(nil)).Elem()
}

func (o GetMdbClickhouseClusterAccessOutput) ToGetMdbClickhouseClusterAccessOutput() GetMdbClickhouseClusterAccessOutput {
	return o
}

func (o GetMdbClickhouseClusterAccessOutput) ToGetMdbClickhouseClusterAccessOutputWithContext(ctx context.Context) GetMdbClickhouseClusterAccessOutput {
	return o
}

// Allow access for Web SQL.
func (o GetMdbClickhouseClusterAccessOutput) DataLens() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterAccess) bool { return v.DataLens }).(pulumi.BoolOutput)
}

// Allow access for Yandex.Metrika.
func (o GetMdbClickhouseClusterAccessOutput) Metrika() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterAccess) bool { return v.Metrika }).(pulumi.BoolOutput)
}

// Allow access for Serverless.
func (o GetMdbClickhouseClusterAccessOutput) Serverless() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterAccess) bool { return v.Serverless }).(pulumi.BoolOutput)
}

// Allow access for DataLens.
func (o GetMdbClickhouseClusterAccessOutput) WebSql() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterAccess) bool { return v.WebSql }).(pulumi.BoolOutput)
}

type GetMdbClickhouseClusterBackupWindowStart struct {
	// The hour at which backup will be started.
	Hours int `pulumi:"hours"`
	// The minute at which backup will be started.
	Minutes int `pulumi:"minutes"`
}

// GetMdbClickhouseClusterBackupWindowStartInput is an input type that accepts GetMdbClickhouseClusterBackupWindowStartArgs and GetMdbClickhouseClusterBackupWindowStartOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterBackupWindowStartInput` via:
//
//          GetMdbClickhouseClusterBackupWindowStartArgs{...}
type GetMdbClickhouseClusterBackupWindowStartInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterBackupWindowStartOutput() GetMdbClickhouseClusterBackupWindowStartOutput
	ToGetMdbClickhouseClusterBackupWindowStartOutputWithContext(context.Context) GetMdbClickhouseClusterBackupWindowStartOutput
}

type GetMdbClickhouseClusterBackupWindowStartArgs struct {
	// The hour at which backup will be started.
	Hours pulumi.IntInput `pulumi:"hours"`
	// The minute at which backup will be started.
	Minutes pulumi.IntInput `pulumi:"minutes"`
}

func (GetMdbClickhouseClusterBackupWindowStartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterBackupWindowStart)(nil)).Elem()
}

func (i GetMdbClickhouseClusterBackupWindowStartArgs) ToGetMdbClickhouseClusterBackupWindowStartOutput() GetMdbClickhouseClusterBackupWindowStartOutput {
	return i.ToGetMdbClickhouseClusterBackupWindowStartOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterBackupWindowStartArgs) ToGetMdbClickhouseClusterBackupWindowStartOutputWithContext(ctx context.Context) GetMdbClickhouseClusterBackupWindowStartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterBackupWindowStartOutput)
}

type GetMdbClickhouseClusterBackupWindowStartOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterBackupWindowStartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterBackupWindowStart)(nil)).Elem()
}

func (o GetMdbClickhouseClusterBackupWindowStartOutput) ToGetMdbClickhouseClusterBackupWindowStartOutput() GetMdbClickhouseClusterBackupWindowStartOutput {
	return o
}

func (o GetMdbClickhouseClusterBackupWindowStartOutput) ToGetMdbClickhouseClusterBackupWindowStartOutputWithContext(ctx context.Context) GetMdbClickhouseClusterBackupWindowStartOutput {
	return o
}

// The hour at which backup will be started.
func (o GetMdbClickhouseClusterBackupWindowStartOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterBackupWindowStart) int { return v.Hours }).(pulumi.IntOutput)
}

// The minute at which backup will be started.
func (o GetMdbClickhouseClusterBackupWindowStartOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterBackupWindowStart) int { return v.Minutes }).(pulumi.IntOutput)
}

type GetMdbClickhouseClusterClickhouse struct {
	// Main ClickHouse cluster configuration. The structure is documented below.
	Config GetMdbClickhouseClusterClickhouseConfig `pulumi:"config"`
	// Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
	Resources GetMdbClickhouseClusterClickhouseResources `pulumi:"resources"`
}

// GetMdbClickhouseClusterClickhouseInput is an input type that accepts GetMdbClickhouseClusterClickhouseArgs and GetMdbClickhouseClusterClickhouseOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterClickhouseInput` via:
//
//          GetMdbClickhouseClusterClickhouseArgs{...}
type GetMdbClickhouseClusterClickhouseInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterClickhouseOutput() GetMdbClickhouseClusterClickhouseOutput
	ToGetMdbClickhouseClusterClickhouseOutputWithContext(context.Context) GetMdbClickhouseClusterClickhouseOutput
}

type GetMdbClickhouseClusterClickhouseArgs struct {
	// Main ClickHouse cluster configuration. The structure is documented below.
	Config GetMdbClickhouseClusterClickhouseConfigInput `pulumi:"config"`
	// Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
	Resources GetMdbClickhouseClusterClickhouseResourcesInput `pulumi:"resources"`
}

func (GetMdbClickhouseClusterClickhouseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterClickhouse)(nil)).Elem()
}

func (i GetMdbClickhouseClusterClickhouseArgs) ToGetMdbClickhouseClusterClickhouseOutput() GetMdbClickhouseClusterClickhouseOutput {
	return i.ToGetMdbClickhouseClusterClickhouseOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterClickhouseArgs) ToGetMdbClickhouseClusterClickhouseOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterClickhouseOutput)
}

type GetMdbClickhouseClusterClickhouseOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterClickhouseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterClickhouse)(nil)).Elem()
}

func (o GetMdbClickhouseClusterClickhouseOutput) ToGetMdbClickhouseClusterClickhouseOutput() GetMdbClickhouseClusterClickhouseOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseOutput) ToGetMdbClickhouseClusterClickhouseOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseOutput {
	return o
}

// Main ClickHouse cluster configuration. The structure is documented below.
func (o GetMdbClickhouseClusterClickhouseOutput) Config() GetMdbClickhouseClusterClickhouseConfigOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouse) GetMdbClickhouseClusterClickhouseConfig { return v.Config }).(GetMdbClickhouseClusterClickhouseConfigOutput)
}

// Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
func (o GetMdbClickhouseClusterClickhouseOutput) Resources() GetMdbClickhouseClusterClickhouseResourcesOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouse) GetMdbClickhouseClusterClickhouseResources {
		return v.Resources
	}).(GetMdbClickhouseClusterClickhouseResourcesOutput)
}

type GetMdbClickhouseClusterClickhouseConfig struct {
	BackgroundPoolSize         *int `pulumi:"backgroundPoolSize"`
	BackgroundSchedulePoolSize *int `pulumi:"backgroundSchedulePoolSize"`
	// Data compression configuration. The structure is documented below.
	Compressions []GetMdbClickhouseClusterClickhouseConfigCompression `pulumi:"compressions"`
	GeobaseUri   *string                                              `pulumi:"geobaseUri"`
	// Graphite rollup configuration. The structure is documented below.
	GraphiteRollups []GetMdbClickhouseClusterClickhouseConfigGraphiteRollup `pulumi:"graphiteRollups"`
	// Kafka topic connection configuration. The structure is documented below.
	KafkaTopics []GetMdbClickhouseClusterClickhouseConfigKafkaTopic `pulumi:"kafkaTopics"`
	// Kafka connection configuration. The structure is documented below.
	Kafkas                 []GetMdbClickhouseClusterClickhouseConfigKafka `pulumi:"kafkas"`
	KeepAliveTimeout       *int                                           `pulumi:"keepAliveTimeout"`
	LogLevel               *string                                        `pulumi:"logLevel"`
	MarkCacheSize          *int                                           `pulumi:"markCacheSize"`
	MaxConcurrentQueries   *int                                           `pulumi:"maxConcurrentQueries"`
	MaxConnections         *int                                           `pulumi:"maxConnections"`
	MaxPartitionSizeToDrop *int                                           `pulumi:"maxPartitionSizeToDrop"`
	MaxTableSizeToDrop     *int                                           `pulumi:"maxTableSizeToDrop"`
	// MergeTree engine configuration. The structure is documented below.
	MergeTree                   GetMdbClickhouseClusterClickhouseConfigMergeTree `pulumi:"mergeTree"`
	MetricLogEnabled            *bool                                            `pulumi:"metricLogEnabled"`
	MetricLogRetentionSize      *int                                             `pulumi:"metricLogRetentionSize"`
	MetricLogRetentionTime      *int                                             `pulumi:"metricLogRetentionTime"`
	PartLogRetentionSize        *int                                             `pulumi:"partLogRetentionSize"`
	PartLogRetentionTime        *int                                             `pulumi:"partLogRetentionTime"`
	QueryLogRetentionSize       *int                                             `pulumi:"queryLogRetentionSize"`
	QueryLogRetentionTime       *int                                             `pulumi:"queryLogRetentionTime"`
	QueryThreadLogEnabled       *bool                                            `pulumi:"queryThreadLogEnabled"`
	QueryThreadLogRetentionSize *int                                             `pulumi:"queryThreadLogRetentionSize"`
	QueryThreadLogRetentionTime *int                                             `pulumi:"queryThreadLogRetentionTime"`
	// RabbitMQ connection configuration. The structure is documented below.
	Rabbitmq              GetMdbClickhouseClusterClickhouseConfigRabbitmq `pulumi:"rabbitmq"`
	TextLogEnabled        *bool                                           `pulumi:"textLogEnabled"`
	TextLogLevel          *string                                         `pulumi:"textLogLevel"`
	TextLogRetentionSize  *int                                            `pulumi:"textLogRetentionSize"`
	TextLogRetentionTime  *int                                            `pulumi:"textLogRetentionTime"`
	Timezone              *string                                         `pulumi:"timezone"`
	TraceLogEnabled       *bool                                           `pulumi:"traceLogEnabled"`
	TraceLogRetentionSize *int                                            `pulumi:"traceLogRetentionSize"`
	TraceLogRetentionTime *int                                            `pulumi:"traceLogRetentionTime"`
	UncompressedCacheSize *int                                            `pulumi:"uncompressedCacheSize"`
}

// GetMdbClickhouseClusterClickhouseConfigInput is an input type that accepts GetMdbClickhouseClusterClickhouseConfigArgs and GetMdbClickhouseClusterClickhouseConfigOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterClickhouseConfigInput` via:
//
//          GetMdbClickhouseClusterClickhouseConfigArgs{...}
type GetMdbClickhouseClusterClickhouseConfigInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterClickhouseConfigOutput() GetMdbClickhouseClusterClickhouseConfigOutput
	ToGetMdbClickhouseClusterClickhouseConfigOutputWithContext(context.Context) GetMdbClickhouseClusterClickhouseConfigOutput
}

type GetMdbClickhouseClusterClickhouseConfigArgs struct {
	BackgroundPoolSize         pulumi.IntPtrInput `pulumi:"backgroundPoolSize"`
	BackgroundSchedulePoolSize pulumi.IntPtrInput `pulumi:"backgroundSchedulePoolSize"`
	// Data compression configuration. The structure is documented below.
	Compressions GetMdbClickhouseClusterClickhouseConfigCompressionArrayInput `pulumi:"compressions"`
	GeobaseUri   pulumi.StringPtrInput                                        `pulumi:"geobaseUri"`
	// Graphite rollup configuration. The structure is documented below.
	GraphiteRollups GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayInput `pulumi:"graphiteRollups"`
	// Kafka topic connection configuration. The structure is documented below.
	KafkaTopics GetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayInput `pulumi:"kafkaTopics"`
	// Kafka connection configuration. The structure is documented below.
	Kafkas                 GetMdbClickhouseClusterClickhouseConfigKafkaArrayInput `pulumi:"kafkas"`
	KeepAliveTimeout       pulumi.IntPtrInput                                     `pulumi:"keepAliveTimeout"`
	LogLevel               pulumi.StringPtrInput                                  `pulumi:"logLevel"`
	MarkCacheSize          pulumi.IntPtrInput                                     `pulumi:"markCacheSize"`
	MaxConcurrentQueries   pulumi.IntPtrInput                                     `pulumi:"maxConcurrentQueries"`
	MaxConnections         pulumi.IntPtrInput                                     `pulumi:"maxConnections"`
	MaxPartitionSizeToDrop pulumi.IntPtrInput                                     `pulumi:"maxPartitionSizeToDrop"`
	MaxTableSizeToDrop     pulumi.IntPtrInput                                     `pulumi:"maxTableSizeToDrop"`
	// MergeTree engine configuration. The structure is documented below.
	MergeTree                   GetMdbClickhouseClusterClickhouseConfigMergeTreeInput `pulumi:"mergeTree"`
	MetricLogEnabled            pulumi.BoolPtrInput                                   `pulumi:"metricLogEnabled"`
	MetricLogRetentionSize      pulumi.IntPtrInput                                    `pulumi:"metricLogRetentionSize"`
	MetricLogRetentionTime      pulumi.IntPtrInput                                    `pulumi:"metricLogRetentionTime"`
	PartLogRetentionSize        pulumi.IntPtrInput                                    `pulumi:"partLogRetentionSize"`
	PartLogRetentionTime        pulumi.IntPtrInput                                    `pulumi:"partLogRetentionTime"`
	QueryLogRetentionSize       pulumi.IntPtrInput                                    `pulumi:"queryLogRetentionSize"`
	QueryLogRetentionTime       pulumi.IntPtrInput                                    `pulumi:"queryLogRetentionTime"`
	QueryThreadLogEnabled       pulumi.BoolPtrInput                                   `pulumi:"queryThreadLogEnabled"`
	QueryThreadLogRetentionSize pulumi.IntPtrInput                                    `pulumi:"queryThreadLogRetentionSize"`
	QueryThreadLogRetentionTime pulumi.IntPtrInput                                    `pulumi:"queryThreadLogRetentionTime"`
	// RabbitMQ connection configuration. The structure is documented below.
	Rabbitmq              GetMdbClickhouseClusterClickhouseConfigRabbitmqInput `pulumi:"rabbitmq"`
	TextLogEnabled        pulumi.BoolPtrInput                                  `pulumi:"textLogEnabled"`
	TextLogLevel          pulumi.StringPtrInput                                `pulumi:"textLogLevel"`
	TextLogRetentionSize  pulumi.IntPtrInput                                   `pulumi:"textLogRetentionSize"`
	TextLogRetentionTime  pulumi.IntPtrInput                                   `pulumi:"textLogRetentionTime"`
	Timezone              pulumi.StringPtrInput                                `pulumi:"timezone"`
	TraceLogEnabled       pulumi.BoolPtrInput                                  `pulumi:"traceLogEnabled"`
	TraceLogRetentionSize pulumi.IntPtrInput                                   `pulumi:"traceLogRetentionSize"`
	TraceLogRetentionTime pulumi.IntPtrInput                                   `pulumi:"traceLogRetentionTime"`
	UncompressedCacheSize pulumi.IntPtrInput                                   `pulumi:"uncompressedCacheSize"`
}

func (GetMdbClickhouseClusterClickhouseConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterClickhouseConfig)(nil)).Elem()
}

func (i GetMdbClickhouseClusterClickhouseConfigArgs) ToGetMdbClickhouseClusterClickhouseConfigOutput() GetMdbClickhouseClusterClickhouseConfigOutput {
	return i.ToGetMdbClickhouseClusterClickhouseConfigOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterClickhouseConfigArgs) ToGetMdbClickhouseClusterClickhouseConfigOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterClickhouseConfigOutput)
}

type GetMdbClickhouseClusterClickhouseConfigOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterClickhouseConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterClickhouseConfig)(nil)).Elem()
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) ToGetMdbClickhouseClusterClickhouseConfigOutput() GetMdbClickhouseClusterClickhouseConfigOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) ToGetMdbClickhouseClusterClickhouseConfigOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) BackgroundPoolSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *int { return v.BackgroundPoolSize }).(pulumi.IntPtrOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) BackgroundSchedulePoolSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *int { return v.BackgroundSchedulePoolSize }).(pulumi.IntPtrOutput)
}

// Data compression configuration. The structure is documented below.
func (o GetMdbClickhouseClusterClickhouseConfigOutput) Compressions() GetMdbClickhouseClusterClickhouseConfigCompressionArrayOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) []GetMdbClickhouseClusterClickhouseConfigCompression {
		return v.Compressions
	}).(GetMdbClickhouseClusterClickhouseConfigCompressionArrayOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) GeobaseUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *string { return v.GeobaseUri }).(pulumi.StringPtrOutput)
}

// Graphite rollup configuration. The structure is documented below.
func (o GetMdbClickhouseClusterClickhouseConfigOutput) GraphiteRollups() GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) []GetMdbClickhouseClusterClickhouseConfigGraphiteRollup {
		return v.GraphiteRollups
	}).(GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput)
}

// Kafka topic connection configuration. The structure is documented below.
func (o GetMdbClickhouseClusterClickhouseConfigOutput) KafkaTopics() GetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) []GetMdbClickhouseClusterClickhouseConfigKafkaTopic {
		return v.KafkaTopics
	}).(GetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput)
}

// Kafka connection configuration. The structure is documented below.
func (o GetMdbClickhouseClusterClickhouseConfigOutput) Kafkas() GetMdbClickhouseClusterClickhouseConfigKafkaArrayOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) []GetMdbClickhouseClusterClickhouseConfigKafka {
		return v.Kafkas
	}).(GetMdbClickhouseClusterClickhouseConfigKafkaArrayOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) KeepAliveTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *int { return v.KeepAliveTimeout }).(pulumi.IntPtrOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) LogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *string { return v.LogLevel }).(pulumi.StringPtrOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) MarkCacheSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *int { return v.MarkCacheSize }).(pulumi.IntPtrOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) MaxConcurrentQueries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *int { return v.MaxConcurrentQueries }).(pulumi.IntPtrOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *int { return v.MaxConnections }).(pulumi.IntPtrOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) MaxPartitionSizeToDrop() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *int { return v.MaxPartitionSizeToDrop }).(pulumi.IntPtrOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) MaxTableSizeToDrop() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *int { return v.MaxTableSizeToDrop }).(pulumi.IntPtrOutput)
}

// MergeTree engine configuration. The structure is documented below.
func (o GetMdbClickhouseClusterClickhouseConfigOutput) MergeTree() GetMdbClickhouseClusterClickhouseConfigMergeTreeOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) GetMdbClickhouseClusterClickhouseConfigMergeTree {
		return v.MergeTree
	}).(GetMdbClickhouseClusterClickhouseConfigMergeTreeOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) MetricLogEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *bool { return v.MetricLogEnabled }).(pulumi.BoolPtrOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) MetricLogRetentionSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *int { return v.MetricLogRetentionSize }).(pulumi.IntPtrOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) MetricLogRetentionTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *int { return v.MetricLogRetentionTime }).(pulumi.IntPtrOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) PartLogRetentionSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *int { return v.PartLogRetentionSize }).(pulumi.IntPtrOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) PartLogRetentionTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *int { return v.PartLogRetentionTime }).(pulumi.IntPtrOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) QueryLogRetentionSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *int { return v.QueryLogRetentionSize }).(pulumi.IntPtrOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) QueryLogRetentionTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *int { return v.QueryLogRetentionTime }).(pulumi.IntPtrOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) QueryThreadLogEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *bool { return v.QueryThreadLogEnabled }).(pulumi.BoolPtrOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) QueryThreadLogRetentionSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *int { return v.QueryThreadLogRetentionSize }).(pulumi.IntPtrOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) QueryThreadLogRetentionTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *int { return v.QueryThreadLogRetentionTime }).(pulumi.IntPtrOutput)
}

// RabbitMQ connection configuration. The structure is documented below.
func (o GetMdbClickhouseClusterClickhouseConfigOutput) Rabbitmq() GetMdbClickhouseClusterClickhouseConfigRabbitmqOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) GetMdbClickhouseClusterClickhouseConfigRabbitmq {
		return v.Rabbitmq
	}).(GetMdbClickhouseClusterClickhouseConfigRabbitmqOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) TextLogEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *bool { return v.TextLogEnabled }).(pulumi.BoolPtrOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) TextLogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *string { return v.TextLogLevel }).(pulumi.StringPtrOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) TextLogRetentionSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *int { return v.TextLogRetentionSize }).(pulumi.IntPtrOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) TextLogRetentionTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *int { return v.TextLogRetentionTime }).(pulumi.IntPtrOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) TraceLogEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *bool { return v.TraceLogEnabled }).(pulumi.BoolPtrOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) TraceLogRetentionSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *int { return v.TraceLogRetentionSize }).(pulumi.IntPtrOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) TraceLogRetentionTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *int { return v.TraceLogRetentionTime }).(pulumi.IntPtrOutput)
}

func (o GetMdbClickhouseClusterClickhouseConfigOutput) UncompressedCacheSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfig) *int { return v.UncompressedCacheSize }).(pulumi.IntPtrOutput)
}

type GetMdbClickhouseClusterClickhouseConfigCompression struct {
	// Method: Compression method. Two methods are available: LZ4 and zstd.
	Method string `pulumi:"method"`
	// Min part size: Minimum size (in bytes) of a data part in a table. ClickHouse only applies the rule to tables with data parts greater than or equal to the Min part size value.
	MinPartSize int `pulumi:"minPartSize"`
	// Min part size ratio: Minimum table part size to total table size ratio. ClickHouse only applies the rule to tables in which this ratio is greater than or equal to the Min part size ratio value.
	MinPartSizeRatio float64 `pulumi:"minPartSizeRatio"`
}

// GetMdbClickhouseClusterClickhouseConfigCompressionInput is an input type that accepts GetMdbClickhouseClusterClickhouseConfigCompressionArgs and GetMdbClickhouseClusterClickhouseConfigCompressionOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterClickhouseConfigCompressionInput` via:
//
//          GetMdbClickhouseClusterClickhouseConfigCompressionArgs{...}
type GetMdbClickhouseClusterClickhouseConfigCompressionInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterClickhouseConfigCompressionOutput() GetMdbClickhouseClusterClickhouseConfigCompressionOutput
	ToGetMdbClickhouseClusterClickhouseConfigCompressionOutputWithContext(context.Context) GetMdbClickhouseClusterClickhouseConfigCompressionOutput
}

type GetMdbClickhouseClusterClickhouseConfigCompressionArgs struct {
	// Method: Compression method. Two methods are available: LZ4 and zstd.
	Method pulumi.StringInput `pulumi:"method"`
	// Min part size: Minimum size (in bytes) of a data part in a table. ClickHouse only applies the rule to tables with data parts greater than or equal to the Min part size value.
	MinPartSize pulumi.IntInput `pulumi:"minPartSize"`
	// Min part size ratio: Minimum table part size to total table size ratio. ClickHouse only applies the rule to tables in which this ratio is greater than or equal to the Min part size ratio value.
	MinPartSizeRatio pulumi.Float64Input `pulumi:"minPartSizeRatio"`
}

func (GetMdbClickhouseClusterClickhouseConfigCompressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterClickhouseConfigCompression)(nil)).Elem()
}

func (i GetMdbClickhouseClusterClickhouseConfigCompressionArgs) ToGetMdbClickhouseClusterClickhouseConfigCompressionOutput() GetMdbClickhouseClusterClickhouseConfigCompressionOutput {
	return i.ToGetMdbClickhouseClusterClickhouseConfigCompressionOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterClickhouseConfigCompressionArgs) ToGetMdbClickhouseClusterClickhouseConfigCompressionOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigCompressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterClickhouseConfigCompressionOutput)
}

// GetMdbClickhouseClusterClickhouseConfigCompressionArrayInput is an input type that accepts GetMdbClickhouseClusterClickhouseConfigCompressionArray and GetMdbClickhouseClusterClickhouseConfigCompressionArrayOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterClickhouseConfigCompressionArrayInput` via:
//
//          GetMdbClickhouseClusterClickhouseConfigCompressionArray{ GetMdbClickhouseClusterClickhouseConfigCompressionArgs{...} }
type GetMdbClickhouseClusterClickhouseConfigCompressionArrayInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterClickhouseConfigCompressionArrayOutput() GetMdbClickhouseClusterClickhouseConfigCompressionArrayOutput
	ToGetMdbClickhouseClusterClickhouseConfigCompressionArrayOutputWithContext(context.Context) GetMdbClickhouseClusterClickhouseConfigCompressionArrayOutput
}

type GetMdbClickhouseClusterClickhouseConfigCompressionArray []GetMdbClickhouseClusterClickhouseConfigCompressionInput

func (GetMdbClickhouseClusterClickhouseConfigCompressionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterClickhouseConfigCompression)(nil)).Elem()
}

func (i GetMdbClickhouseClusterClickhouseConfigCompressionArray) ToGetMdbClickhouseClusterClickhouseConfigCompressionArrayOutput() GetMdbClickhouseClusterClickhouseConfigCompressionArrayOutput {
	return i.ToGetMdbClickhouseClusterClickhouseConfigCompressionArrayOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterClickhouseConfigCompressionArray) ToGetMdbClickhouseClusterClickhouseConfigCompressionArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigCompressionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterClickhouseConfigCompressionArrayOutput)
}

type GetMdbClickhouseClusterClickhouseConfigCompressionOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterClickhouseConfigCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterClickhouseConfigCompression)(nil)).Elem()
}

func (o GetMdbClickhouseClusterClickhouseConfigCompressionOutput) ToGetMdbClickhouseClusterClickhouseConfigCompressionOutput() GetMdbClickhouseClusterClickhouseConfigCompressionOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseConfigCompressionOutput) ToGetMdbClickhouseClusterClickhouseConfigCompressionOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigCompressionOutput {
	return o
}

// Method: Compression method. Two methods are available: LZ4 and zstd.
func (o GetMdbClickhouseClusterClickhouseConfigCompressionOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigCompression) string { return v.Method }).(pulumi.StringOutput)
}

// Min part size: Minimum size (in bytes) of a data part in a table. ClickHouse only applies the rule to tables with data parts greater than or equal to the Min part size value.
func (o GetMdbClickhouseClusterClickhouseConfigCompressionOutput) MinPartSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigCompression) int { return v.MinPartSize }).(pulumi.IntOutput)
}

// Min part size ratio: Minimum table part size to total table size ratio. ClickHouse only applies the rule to tables in which this ratio is greater than or equal to the Min part size ratio value.
func (o GetMdbClickhouseClusterClickhouseConfigCompressionOutput) MinPartSizeRatio() pulumi.Float64Output {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigCompression) float64 { return v.MinPartSizeRatio }).(pulumi.Float64Output)
}

type GetMdbClickhouseClusterClickhouseConfigCompressionArrayOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterClickhouseConfigCompressionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterClickhouseConfigCompression)(nil)).Elem()
}

func (o GetMdbClickhouseClusterClickhouseConfigCompressionArrayOutput) ToGetMdbClickhouseClusterClickhouseConfigCompressionArrayOutput() GetMdbClickhouseClusterClickhouseConfigCompressionArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseConfigCompressionArrayOutput) ToGetMdbClickhouseClusterClickhouseConfigCompressionArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigCompressionArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseConfigCompressionArrayOutput) Index(i pulumi.IntInput) GetMdbClickhouseClusterClickhouseConfigCompressionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbClickhouseClusterClickhouseConfigCompression {
		return vs[0].([]GetMdbClickhouseClusterClickhouseConfigCompression)[vs[1].(int)]
	}).(GetMdbClickhouseClusterClickhouseConfigCompressionOutput)
}

type GetMdbClickhouseClusterClickhouseConfigGraphiteRollup struct {
	// The name of the ClickHouse cluster.
	Name string `pulumi:"name"`
	// Set of thinning rules.
	Patterns []GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPattern `pulumi:"patterns"`
}

// GetMdbClickhouseClusterClickhouseConfigGraphiteRollupInput is an input type that accepts GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArgs and GetMdbClickhouseClusterClickhouseConfigGraphiteRollupOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterClickhouseConfigGraphiteRollupInput` via:
//
//          GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArgs{...}
type GetMdbClickhouseClusterClickhouseConfigGraphiteRollupInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupOutput() GetMdbClickhouseClusterClickhouseConfigGraphiteRollupOutput
	ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupOutputWithContext(context.Context) GetMdbClickhouseClusterClickhouseConfigGraphiteRollupOutput
}

type GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArgs struct {
	// The name of the ClickHouse cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// Set of thinning rules.
	Patterns GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayInput `pulumi:"patterns"`
}

func (GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterClickhouseConfigGraphiteRollup)(nil)).Elem()
}

func (i GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArgs) ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupOutput() GetMdbClickhouseClusterClickhouseConfigGraphiteRollupOutput {
	return i.ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArgs) ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigGraphiteRollupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterClickhouseConfigGraphiteRollupOutput)
}

// GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayInput is an input type that accepts GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArray and GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayInput` via:
//
//          GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArray{ GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArgs{...} }
type GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput() GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput
	ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutputWithContext(context.Context) GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput
}

type GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArray []GetMdbClickhouseClusterClickhouseConfigGraphiteRollupInput

func (GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterClickhouseConfigGraphiteRollup)(nil)).Elem()
}

func (i GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArray) ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput() GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput {
	return i.ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArray) ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput)
}

type GetMdbClickhouseClusterClickhouseConfigGraphiteRollupOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterClickhouseConfigGraphiteRollupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterClickhouseConfigGraphiteRollup)(nil)).Elem()
}

func (o GetMdbClickhouseClusterClickhouseConfigGraphiteRollupOutput) ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupOutput() GetMdbClickhouseClusterClickhouseConfigGraphiteRollupOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseConfigGraphiteRollupOutput) ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigGraphiteRollupOutput {
	return o
}

// The name of the ClickHouse cluster.
func (o GetMdbClickhouseClusterClickhouseConfigGraphiteRollupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigGraphiteRollup) string { return v.Name }).(pulumi.StringOutput)
}

// Set of thinning rules.
func (o GetMdbClickhouseClusterClickhouseConfigGraphiteRollupOutput) Patterns() GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigGraphiteRollup) []GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPattern {
		return v.Patterns
	}).(GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput)
}

type GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterClickhouseConfigGraphiteRollup)(nil)).Elem()
}

func (o GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput) ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput() GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput) ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput) Index(i pulumi.IntInput) GetMdbClickhouseClusterClickhouseConfigGraphiteRollupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbClickhouseClusterClickhouseConfigGraphiteRollup {
		return vs[0].([]GetMdbClickhouseClusterClickhouseConfigGraphiteRollup)[vs[1].(int)]
	}).(GetMdbClickhouseClusterClickhouseConfigGraphiteRollupOutput)
}

type GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPattern struct {
	// Aggregation function name.
	Function string `pulumi:"function"`
	// Regular expression that the metric name must match.
	Regexp *string `pulumi:"regexp"`
	// Retain parameters.
	Retentions []GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention `pulumi:"retentions"`
}

// GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternInput is an input type that accepts GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArgs and GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternInput` via:
//
//          GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArgs{...}
type GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput() GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput
	ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutputWithContext(context.Context) GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput
}

type GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArgs struct {
	// Aggregation function name.
	Function pulumi.StringInput `pulumi:"function"`
	// Regular expression that the metric name must match.
	Regexp pulumi.StringPtrInput `pulumi:"regexp"`
	// Retain parameters.
	Retentions GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayInput `pulumi:"retentions"`
}

func (GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPattern)(nil)).Elem()
}

func (i GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArgs) ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput() GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput {
	return i.ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArgs) ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput)
}

// GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayInput is an input type that accepts GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArray and GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayInput` via:
//
//          GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArray{ GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArgs{...} }
type GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput() GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput
	ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutputWithContext(context.Context) GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput
}

type GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArray []GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternInput

func (GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPattern)(nil)).Elem()
}

func (i GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArray) ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput() GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput {
	return i.ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArray) ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput)
}

type GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPattern)(nil)).Elem()
}

func (o GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput) ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput() GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput) ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput {
	return o
}

// Aggregation function name.
func (o GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput) Function() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPattern) string { return v.Function }).(pulumi.StringOutput)
}

// Regular expression that the metric name must match.
func (o GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput) Regexp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPattern) *string { return v.Regexp }).(pulumi.StringPtrOutput)
}

// Retain parameters.
func (o GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput) Retentions() GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPattern) []GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention {
		return v.Retentions
	}).(GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput)
}

type GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPattern)(nil)).Elem()
}

func (o GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput) ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput() GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput) ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput) Index(i pulumi.IntInput) GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPattern {
		return vs[0].([]GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPattern)[vs[1].(int)]
	}).(GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput)
}

type GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention struct {
	// Minimum data age in seconds.
	Age int `pulumi:"age"`
	// Accuracy of determining the age of the data in seconds.
	Precision int `pulumi:"precision"`
}

// GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionInput is an input type that accepts GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArgs and GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionInput` via:
//
//          GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArgs{...}
type GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput() GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput
	ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutputWithContext(context.Context) GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput
}

type GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArgs struct {
	// Minimum data age in seconds.
	Age pulumi.IntInput `pulumi:"age"`
	// Accuracy of determining the age of the data in seconds.
	Precision pulumi.IntInput `pulumi:"precision"`
}

func (GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention)(nil)).Elem()
}

func (i GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArgs) ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput() GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput {
	return i.ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArgs) ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput)
}

// GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayInput is an input type that accepts GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArray and GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayInput` via:
//
//          GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArray{ GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArgs{...} }
type GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput() GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput
	ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutputWithContext(context.Context) GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput
}

type GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArray []GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionInput

func (GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention)(nil)).Elem()
}

func (i GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArray) ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput() GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput {
	return i.ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArray) ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput)
}

type GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention)(nil)).Elem()
}

func (o GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput) ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput() GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput) ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput {
	return o
}

// Minimum data age in seconds.
func (o GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput) Age() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention) int { return v.Age }).(pulumi.IntOutput)
}

// Accuracy of determining the age of the data in seconds.
func (o GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput) Precision() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention) int { return v.Precision }).(pulumi.IntOutput)
}

type GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention)(nil)).Elem()
}

func (o GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput) ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput() GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput) ToGetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput) Index(i pulumi.IntInput) GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention {
		return vs[0].([]GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention)[vs[1].(int)]
	}).(GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput)
}

type GetMdbClickhouseClusterClickhouseConfigKafka struct {
	// SASL mechanism used in kafka authentication.
	SaslMechanism *string `pulumi:"saslMechanism"`
	// User password on kafka server.
	SaslPassword *string `pulumi:"saslPassword"`
	// Username on kafka server.
	SaslUsername *string `pulumi:"saslUsername"`
	// Security protocol used to connect to kafka server.
	SecurityProtocol *string `pulumi:"securityProtocol"`
}

// GetMdbClickhouseClusterClickhouseConfigKafkaInput is an input type that accepts GetMdbClickhouseClusterClickhouseConfigKafkaArgs and GetMdbClickhouseClusterClickhouseConfigKafkaOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterClickhouseConfigKafkaInput` via:
//
//          GetMdbClickhouseClusterClickhouseConfigKafkaArgs{...}
type GetMdbClickhouseClusterClickhouseConfigKafkaInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterClickhouseConfigKafkaOutput() GetMdbClickhouseClusterClickhouseConfigKafkaOutput
	ToGetMdbClickhouseClusterClickhouseConfigKafkaOutputWithContext(context.Context) GetMdbClickhouseClusterClickhouseConfigKafkaOutput
}

type GetMdbClickhouseClusterClickhouseConfigKafkaArgs struct {
	// SASL mechanism used in kafka authentication.
	SaslMechanism pulumi.StringPtrInput `pulumi:"saslMechanism"`
	// User password on kafka server.
	SaslPassword pulumi.StringPtrInput `pulumi:"saslPassword"`
	// Username on kafka server.
	SaslUsername pulumi.StringPtrInput `pulumi:"saslUsername"`
	// Security protocol used to connect to kafka server.
	SecurityProtocol pulumi.StringPtrInput `pulumi:"securityProtocol"`
}

func (GetMdbClickhouseClusterClickhouseConfigKafkaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterClickhouseConfigKafka)(nil)).Elem()
}

func (i GetMdbClickhouseClusterClickhouseConfigKafkaArgs) ToGetMdbClickhouseClusterClickhouseConfigKafkaOutput() GetMdbClickhouseClusterClickhouseConfigKafkaOutput {
	return i.ToGetMdbClickhouseClusterClickhouseConfigKafkaOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterClickhouseConfigKafkaArgs) ToGetMdbClickhouseClusterClickhouseConfigKafkaOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigKafkaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterClickhouseConfigKafkaOutput)
}

// GetMdbClickhouseClusterClickhouseConfigKafkaArrayInput is an input type that accepts GetMdbClickhouseClusterClickhouseConfigKafkaArray and GetMdbClickhouseClusterClickhouseConfigKafkaArrayOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterClickhouseConfigKafkaArrayInput` via:
//
//          GetMdbClickhouseClusterClickhouseConfigKafkaArray{ GetMdbClickhouseClusterClickhouseConfigKafkaArgs{...} }
type GetMdbClickhouseClusterClickhouseConfigKafkaArrayInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterClickhouseConfigKafkaArrayOutput() GetMdbClickhouseClusterClickhouseConfigKafkaArrayOutput
	ToGetMdbClickhouseClusterClickhouseConfigKafkaArrayOutputWithContext(context.Context) GetMdbClickhouseClusterClickhouseConfigKafkaArrayOutput
}

type GetMdbClickhouseClusterClickhouseConfigKafkaArray []GetMdbClickhouseClusterClickhouseConfigKafkaInput

func (GetMdbClickhouseClusterClickhouseConfigKafkaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterClickhouseConfigKafka)(nil)).Elem()
}

func (i GetMdbClickhouseClusterClickhouseConfigKafkaArray) ToGetMdbClickhouseClusterClickhouseConfigKafkaArrayOutput() GetMdbClickhouseClusterClickhouseConfigKafkaArrayOutput {
	return i.ToGetMdbClickhouseClusterClickhouseConfigKafkaArrayOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterClickhouseConfigKafkaArray) ToGetMdbClickhouseClusterClickhouseConfigKafkaArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigKafkaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterClickhouseConfigKafkaArrayOutput)
}

type GetMdbClickhouseClusterClickhouseConfigKafkaOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterClickhouseConfigKafkaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterClickhouseConfigKafka)(nil)).Elem()
}

func (o GetMdbClickhouseClusterClickhouseConfigKafkaOutput) ToGetMdbClickhouseClusterClickhouseConfigKafkaOutput() GetMdbClickhouseClusterClickhouseConfigKafkaOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseConfigKafkaOutput) ToGetMdbClickhouseClusterClickhouseConfigKafkaOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigKafkaOutput {
	return o
}

// SASL mechanism used in kafka authentication.
func (o GetMdbClickhouseClusterClickhouseConfigKafkaOutput) SaslMechanism() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigKafka) *string { return v.SaslMechanism }).(pulumi.StringPtrOutput)
}

// User password on kafka server.
func (o GetMdbClickhouseClusterClickhouseConfigKafkaOutput) SaslPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigKafka) *string { return v.SaslPassword }).(pulumi.StringPtrOutput)
}

// Username on kafka server.
func (o GetMdbClickhouseClusterClickhouseConfigKafkaOutput) SaslUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigKafka) *string { return v.SaslUsername }).(pulumi.StringPtrOutput)
}

// Security protocol used to connect to kafka server.
func (o GetMdbClickhouseClusterClickhouseConfigKafkaOutput) SecurityProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigKafka) *string { return v.SecurityProtocol }).(pulumi.StringPtrOutput)
}

type GetMdbClickhouseClusterClickhouseConfigKafkaArrayOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterClickhouseConfigKafkaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterClickhouseConfigKafka)(nil)).Elem()
}

func (o GetMdbClickhouseClusterClickhouseConfigKafkaArrayOutput) ToGetMdbClickhouseClusterClickhouseConfigKafkaArrayOutput() GetMdbClickhouseClusterClickhouseConfigKafkaArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseConfigKafkaArrayOutput) ToGetMdbClickhouseClusterClickhouseConfigKafkaArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigKafkaArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseConfigKafkaArrayOutput) Index(i pulumi.IntInput) GetMdbClickhouseClusterClickhouseConfigKafkaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbClickhouseClusterClickhouseConfigKafka {
		return vs[0].([]GetMdbClickhouseClusterClickhouseConfigKafka)[vs[1].(int)]
	}).(GetMdbClickhouseClusterClickhouseConfigKafkaOutput)
}

type GetMdbClickhouseClusterClickhouseConfigKafkaTopic struct {
	// The name of the ClickHouse cluster.
	Name string `pulumi:"name"`
	// Kafka connection settngs sanem as `kafka` block.
	Settings *GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettings `pulumi:"settings"`
}

// GetMdbClickhouseClusterClickhouseConfigKafkaTopicInput is an input type that accepts GetMdbClickhouseClusterClickhouseConfigKafkaTopicArgs and GetMdbClickhouseClusterClickhouseConfigKafkaTopicOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterClickhouseConfigKafkaTopicInput` via:
//
//          GetMdbClickhouseClusterClickhouseConfigKafkaTopicArgs{...}
type GetMdbClickhouseClusterClickhouseConfigKafkaTopicInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicOutput() GetMdbClickhouseClusterClickhouseConfigKafkaTopicOutput
	ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicOutputWithContext(context.Context) GetMdbClickhouseClusterClickhouseConfigKafkaTopicOutput
}

type GetMdbClickhouseClusterClickhouseConfigKafkaTopicArgs struct {
	// The name of the ClickHouse cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// Kafka connection settngs sanem as `kafka` block.
	Settings GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrInput `pulumi:"settings"`
}

func (GetMdbClickhouseClusterClickhouseConfigKafkaTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterClickhouseConfigKafkaTopic)(nil)).Elem()
}

func (i GetMdbClickhouseClusterClickhouseConfigKafkaTopicArgs) ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicOutput() GetMdbClickhouseClusterClickhouseConfigKafkaTopicOutput {
	return i.ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterClickhouseConfigKafkaTopicArgs) ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigKafkaTopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterClickhouseConfigKafkaTopicOutput)
}

// GetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayInput is an input type that accepts GetMdbClickhouseClusterClickhouseConfigKafkaTopicArray and GetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayInput` via:
//
//          GetMdbClickhouseClusterClickhouseConfigKafkaTopicArray{ GetMdbClickhouseClusterClickhouseConfigKafkaTopicArgs{...} }
type GetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput() GetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput
	ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutputWithContext(context.Context) GetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput
}

type GetMdbClickhouseClusterClickhouseConfigKafkaTopicArray []GetMdbClickhouseClusterClickhouseConfigKafkaTopicInput

func (GetMdbClickhouseClusterClickhouseConfigKafkaTopicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterClickhouseConfigKafkaTopic)(nil)).Elem()
}

func (i GetMdbClickhouseClusterClickhouseConfigKafkaTopicArray) ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput() GetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput {
	return i.ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterClickhouseConfigKafkaTopicArray) ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput)
}

type GetMdbClickhouseClusterClickhouseConfigKafkaTopicOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterClickhouseConfigKafkaTopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterClickhouseConfigKafkaTopic)(nil)).Elem()
}

func (o GetMdbClickhouseClusterClickhouseConfigKafkaTopicOutput) ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicOutput() GetMdbClickhouseClusterClickhouseConfigKafkaTopicOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseConfigKafkaTopicOutput) ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigKafkaTopicOutput {
	return o
}

// The name of the ClickHouse cluster.
func (o GetMdbClickhouseClusterClickhouseConfigKafkaTopicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigKafkaTopic) string { return v.Name }).(pulumi.StringOutput)
}

// Kafka connection settngs sanem as `kafka` block.
func (o GetMdbClickhouseClusterClickhouseConfigKafkaTopicOutput) Settings() GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigKafkaTopic) *GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettings {
		return v.Settings
	}).(GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput)
}

type GetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterClickhouseConfigKafkaTopic)(nil)).Elem()
}

func (o GetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput) ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput() GetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput) ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput) Index(i pulumi.IntInput) GetMdbClickhouseClusterClickhouseConfigKafkaTopicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbClickhouseClusterClickhouseConfigKafkaTopic {
		return vs[0].([]GetMdbClickhouseClusterClickhouseConfigKafkaTopic)[vs[1].(int)]
	}).(GetMdbClickhouseClusterClickhouseConfigKafkaTopicOutput)
}

type GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettings struct {
	// SASL mechanism used in kafka authentication.
	SaslMechanism *string `pulumi:"saslMechanism"`
	// User password on kafka server.
	SaslPassword *string `pulumi:"saslPassword"`
	// Username on kafka server.
	SaslUsername *string `pulumi:"saslUsername"`
	// Security protocol used to connect to kafka server.
	SecurityProtocol *string `pulumi:"securityProtocol"`
}

// GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsInput is an input type that accepts GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsArgs and GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsInput` via:
//
//          GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsArgs{...}
type GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput() GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput
	ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutputWithContext(context.Context) GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput
}

type GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsArgs struct {
	// SASL mechanism used in kafka authentication.
	SaslMechanism pulumi.StringPtrInput `pulumi:"saslMechanism"`
	// User password on kafka server.
	SaslPassword pulumi.StringPtrInput `pulumi:"saslPassword"`
	// Username on kafka server.
	SaslUsername pulumi.StringPtrInput `pulumi:"saslUsername"`
	// Security protocol used to connect to kafka server.
	SecurityProtocol pulumi.StringPtrInput `pulumi:"securityProtocol"`
}

func (GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettings)(nil)).Elem()
}

func (i GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsArgs) ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput() GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput {
	return i.ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsArgs) ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput)
}

func (i GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsArgs) ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput() GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput {
	return i.ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsArgs) ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput).ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutputWithContext(ctx)
}

// GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrInput is an input type that accepts GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsArgs, GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtr and GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrInput` via:
//
//          GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsArgs{...}
//
//  or:
//
//          nil
type GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput() GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput
	ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutputWithContext(context.Context) GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput
}

type getMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrType GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsArgs

func GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtr(v *GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsArgs) GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrInput {
	return (*getMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrType)(v)
}

func (*getMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettings)(nil)).Elem()
}

func (i *getMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrType) ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput() GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput {
	return i.ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutputWithContext(context.Background())
}

func (i *getMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrType) ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput)
}

type GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettings)(nil)).Elem()
}

func (o GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput) ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput() GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput) ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput) ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput() GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput {
	return o.ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutputWithContext(context.Background())
}

func (o GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput) ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettings) *GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettings {
		return &v
	}).(GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput)
}

// SASL mechanism used in kafka authentication.
func (o GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput) SaslMechanism() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettings) *string { return v.SaslMechanism }).(pulumi.StringPtrOutput)
}

// User password on kafka server.
func (o GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput) SaslPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettings) *string { return v.SaslPassword }).(pulumi.StringPtrOutput)
}

// Username on kafka server.
func (o GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput) SaslUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettings) *string { return v.SaslUsername }).(pulumi.StringPtrOutput)
}

// Security protocol used to connect to kafka server.
func (o GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput) SecurityProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettings) *string { return v.SecurityProtocol }).(pulumi.StringPtrOutput)
}

type GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettings)(nil)).Elem()
}

func (o GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput) ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput() GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput) ToGetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput) Elem() GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput {
	return o.ApplyT(func(v *GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettings) GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettings {
		return *v
	}).(GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput)
}

// SASL mechanism used in kafka authentication.
func (o GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput) SaslMechanism() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettings) *string {
		if v == nil {
			return nil
		}
		return v.SaslMechanism
	}).(pulumi.StringPtrOutput)
}

// User password on kafka server.
func (o GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput) SaslPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettings) *string {
		if v == nil {
			return nil
		}
		return v.SaslPassword
	}).(pulumi.StringPtrOutput)
}

// Username on kafka server.
func (o GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput) SaslUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettings) *string {
		if v == nil {
			return nil
		}
		return v.SaslUsername
	}).(pulumi.StringPtrOutput)
}

// Security protocol used to connect to kafka server.
func (o GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput) SecurityProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettings) *string {
		if v == nil {
			return nil
		}
		return v.SecurityProtocol
	}).(pulumi.StringPtrOutput)
}

type GetMdbClickhouseClusterClickhouseConfigMergeTree struct {
	// Max bytes to merge at min space in pool: Maximum total size of a data part to merge when the number of free threads in the background pool is minimum.
	MaxBytesToMergeAtMinSpaceInPool *int `pulumi:"maxBytesToMergeAtMinSpaceInPool"`
	// Max replicated merges in queue: Maximum number of merge tasks that can be in the ReplicatedMergeTree queue at the same time.
	MaxReplicatedMergesInQueue *int `pulumi:"maxReplicatedMergesInQueue"`
	// Number of free entries in pool to lower max size of merge: Threshold value of free entries in the pool. If the number of entries in the pool falls below this value, ClickHouse reduces the maximum size of a data part to merge. This helps handle small merges faster, rather than filling the pool with lengthy merges.
	NumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge *int `pulumi:"numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge"`
	// Parts to delay insert: Number of active data parts in a table, on exceeding which ClickHouse starts artificially reduce the rate of inserting data into the table.
	PartsToDelayInsert *int `pulumi:"partsToDelayInsert"`
	// Parts to throw insert: Threshold value of active data parts in a table, on exceeding which ClickHouse throws the 'Too many parts ...' exception.
	PartsToThrowInsert *int `pulumi:"partsToThrowInsert"`
	// Replicated deduplication window: Number of recent hash blocks that ZooKeeper will store (the old ones will be deleted).
	ReplicatedDeduplicationWindow *int `pulumi:"replicatedDeduplicationWindow"`
	// Replicated deduplication window seconds: Time during which ZooKeeper stores the hash blocks (the old ones wil be deleted).
	ReplicatedDeduplicationWindowSeconds *int `pulumi:"replicatedDeduplicationWindowSeconds"`
}

// GetMdbClickhouseClusterClickhouseConfigMergeTreeInput is an input type that accepts GetMdbClickhouseClusterClickhouseConfigMergeTreeArgs and GetMdbClickhouseClusterClickhouseConfigMergeTreeOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterClickhouseConfigMergeTreeInput` via:
//
//          GetMdbClickhouseClusterClickhouseConfigMergeTreeArgs{...}
type GetMdbClickhouseClusterClickhouseConfigMergeTreeInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterClickhouseConfigMergeTreeOutput() GetMdbClickhouseClusterClickhouseConfigMergeTreeOutput
	ToGetMdbClickhouseClusterClickhouseConfigMergeTreeOutputWithContext(context.Context) GetMdbClickhouseClusterClickhouseConfigMergeTreeOutput
}

type GetMdbClickhouseClusterClickhouseConfigMergeTreeArgs struct {
	// Max bytes to merge at min space in pool: Maximum total size of a data part to merge when the number of free threads in the background pool is minimum.
	MaxBytesToMergeAtMinSpaceInPool pulumi.IntPtrInput `pulumi:"maxBytesToMergeAtMinSpaceInPool"`
	// Max replicated merges in queue: Maximum number of merge tasks that can be in the ReplicatedMergeTree queue at the same time.
	MaxReplicatedMergesInQueue pulumi.IntPtrInput `pulumi:"maxReplicatedMergesInQueue"`
	// Number of free entries in pool to lower max size of merge: Threshold value of free entries in the pool. If the number of entries in the pool falls below this value, ClickHouse reduces the maximum size of a data part to merge. This helps handle small merges faster, rather than filling the pool with lengthy merges.
	NumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge pulumi.IntPtrInput `pulumi:"numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge"`
	// Parts to delay insert: Number of active data parts in a table, on exceeding which ClickHouse starts artificially reduce the rate of inserting data into the table.
	PartsToDelayInsert pulumi.IntPtrInput `pulumi:"partsToDelayInsert"`
	// Parts to throw insert: Threshold value of active data parts in a table, on exceeding which ClickHouse throws the 'Too many parts ...' exception.
	PartsToThrowInsert pulumi.IntPtrInput `pulumi:"partsToThrowInsert"`
	// Replicated deduplication window: Number of recent hash blocks that ZooKeeper will store (the old ones will be deleted).
	ReplicatedDeduplicationWindow pulumi.IntPtrInput `pulumi:"replicatedDeduplicationWindow"`
	// Replicated deduplication window seconds: Time during which ZooKeeper stores the hash blocks (the old ones wil be deleted).
	ReplicatedDeduplicationWindowSeconds pulumi.IntPtrInput `pulumi:"replicatedDeduplicationWindowSeconds"`
}

func (GetMdbClickhouseClusterClickhouseConfigMergeTreeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterClickhouseConfigMergeTree)(nil)).Elem()
}

func (i GetMdbClickhouseClusterClickhouseConfigMergeTreeArgs) ToGetMdbClickhouseClusterClickhouseConfigMergeTreeOutput() GetMdbClickhouseClusterClickhouseConfigMergeTreeOutput {
	return i.ToGetMdbClickhouseClusterClickhouseConfigMergeTreeOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterClickhouseConfigMergeTreeArgs) ToGetMdbClickhouseClusterClickhouseConfigMergeTreeOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigMergeTreeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterClickhouseConfigMergeTreeOutput)
}

type GetMdbClickhouseClusterClickhouseConfigMergeTreeOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterClickhouseConfigMergeTreeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterClickhouseConfigMergeTree)(nil)).Elem()
}

func (o GetMdbClickhouseClusterClickhouseConfigMergeTreeOutput) ToGetMdbClickhouseClusterClickhouseConfigMergeTreeOutput() GetMdbClickhouseClusterClickhouseConfigMergeTreeOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseConfigMergeTreeOutput) ToGetMdbClickhouseClusterClickhouseConfigMergeTreeOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigMergeTreeOutput {
	return o
}

// Max bytes to merge at min space in pool: Maximum total size of a data part to merge when the number of free threads in the background pool is minimum.
func (o GetMdbClickhouseClusterClickhouseConfigMergeTreeOutput) MaxBytesToMergeAtMinSpaceInPool() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigMergeTree) *int {
		return v.MaxBytesToMergeAtMinSpaceInPool
	}).(pulumi.IntPtrOutput)
}

// Max replicated merges in queue: Maximum number of merge tasks that can be in the ReplicatedMergeTree queue at the same time.
func (o GetMdbClickhouseClusterClickhouseConfigMergeTreeOutput) MaxReplicatedMergesInQueue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigMergeTree) *int { return v.MaxReplicatedMergesInQueue }).(pulumi.IntPtrOutput)
}

// Number of free entries in pool to lower max size of merge: Threshold value of free entries in the pool. If the number of entries in the pool falls below this value, ClickHouse reduces the maximum size of a data part to merge. This helps handle small merges faster, rather than filling the pool with lengthy merges.
func (o GetMdbClickhouseClusterClickhouseConfigMergeTreeOutput) NumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigMergeTree) *int {
		return v.NumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge
	}).(pulumi.IntPtrOutput)
}

// Parts to delay insert: Number of active data parts in a table, on exceeding which ClickHouse starts artificially reduce the rate of inserting data into the table.
func (o GetMdbClickhouseClusterClickhouseConfigMergeTreeOutput) PartsToDelayInsert() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigMergeTree) *int { return v.PartsToDelayInsert }).(pulumi.IntPtrOutput)
}

// Parts to throw insert: Threshold value of active data parts in a table, on exceeding which ClickHouse throws the 'Too many parts ...' exception.
func (o GetMdbClickhouseClusterClickhouseConfigMergeTreeOutput) PartsToThrowInsert() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigMergeTree) *int { return v.PartsToThrowInsert }).(pulumi.IntPtrOutput)
}

// Replicated deduplication window: Number of recent hash blocks that ZooKeeper will store (the old ones will be deleted).
func (o GetMdbClickhouseClusterClickhouseConfigMergeTreeOutput) ReplicatedDeduplicationWindow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigMergeTree) *int { return v.ReplicatedDeduplicationWindow }).(pulumi.IntPtrOutput)
}

// Replicated deduplication window seconds: Time during which ZooKeeper stores the hash blocks (the old ones wil be deleted).
func (o GetMdbClickhouseClusterClickhouseConfigMergeTreeOutput) ReplicatedDeduplicationWindowSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigMergeTree) *int {
		return v.ReplicatedDeduplicationWindowSeconds
	}).(pulumi.IntPtrOutput)
}

type GetMdbClickhouseClusterClickhouseConfigRabbitmq struct {
	// RabbitMQ user password.
	Password *string `pulumi:"password"`
	// RabbitMQ username.
	Username *string `pulumi:"username"`
}

// GetMdbClickhouseClusterClickhouseConfigRabbitmqInput is an input type that accepts GetMdbClickhouseClusterClickhouseConfigRabbitmqArgs and GetMdbClickhouseClusterClickhouseConfigRabbitmqOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterClickhouseConfigRabbitmqInput` via:
//
//          GetMdbClickhouseClusterClickhouseConfigRabbitmqArgs{...}
type GetMdbClickhouseClusterClickhouseConfigRabbitmqInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterClickhouseConfigRabbitmqOutput() GetMdbClickhouseClusterClickhouseConfigRabbitmqOutput
	ToGetMdbClickhouseClusterClickhouseConfigRabbitmqOutputWithContext(context.Context) GetMdbClickhouseClusterClickhouseConfigRabbitmqOutput
}

type GetMdbClickhouseClusterClickhouseConfigRabbitmqArgs struct {
	// RabbitMQ user password.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// RabbitMQ username.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (GetMdbClickhouseClusterClickhouseConfigRabbitmqArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterClickhouseConfigRabbitmq)(nil)).Elem()
}

func (i GetMdbClickhouseClusterClickhouseConfigRabbitmqArgs) ToGetMdbClickhouseClusterClickhouseConfigRabbitmqOutput() GetMdbClickhouseClusterClickhouseConfigRabbitmqOutput {
	return i.ToGetMdbClickhouseClusterClickhouseConfigRabbitmqOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterClickhouseConfigRabbitmqArgs) ToGetMdbClickhouseClusterClickhouseConfigRabbitmqOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigRabbitmqOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterClickhouseConfigRabbitmqOutput)
}

type GetMdbClickhouseClusterClickhouseConfigRabbitmqOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterClickhouseConfigRabbitmqOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterClickhouseConfigRabbitmq)(nil)).Elem()
}

func (o GetMdbClickhouseClusterClickhouseConfigRabbitmqOutput) ToGetMdbClickhouseClusterClickhouseConfigRabbitmqOutput() GetMdbClickhouseClusterClickhouseConfigRabbitmqOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseConfigRabbitmqOutput) ToGetMdbClickhouseClusterClickhouseConfigRabbitmqOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseConfigRabbitmqOutput {
	return o
}

// RabbitMQ user password.
func (o GetMdbClickhouseClusterClickhouseConfigRabbitmqOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigRabbitmq) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// RabbitMQ username.
func (o GetMdbClickhouseClusterClickhouseConfigRabbitmqOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseConfigRabbitmq) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GetMdbClickhouseClusterClickhouseResources struct {
	// Volume of the storage available to a ClickHouse or ZooKeeper host, in gigabytes.
	DiskSize int `pulumi:"diskSize"`
	// Type of the storage of ClickHouse or ZooKeeper hosts.
	DiskTypeId       string `pulumi:"diskTypeId"`
	ResourcePresetId string `pulumi:"resourcePresetId"`
}

// GetMdbClickhouseClusterClickhouseResourcesInput is an input type that accepts GetMdbClickhouseClusterClickhouseResourcesArgs and GetMdbClickhouseClusterClickhouseResourcesOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterClickhouseResourcesInput` via:
//
//          GetMdbClickhouseClusterClickhouseResourcesArgs{...}
type GetMdbClickhouseClusterClickhouseResourcesInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterClickhouseResourcesOutput() GetMdbClickhouseClusterClickhouseResourcesOutput
	ToGetMdbClickhouseClusterClickhouseResourcesOutputWithContext(context.Context) GetMdbClickhouseClusterClickhouseResourcesOutput
}

type GetMdbClickhouseClusterClickhouseResourcesArgs struct {
	// Volume of the storage available to a ClickHouse or ZooKeeper host, in gigabytes.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// Type of the storage of ClickHouse or ZooKeeper hosts.
	DiskTypeId       pulumi.StringInput `pulumi:"diskTypeId"`
	ResourcePresetId pulumi.StringInput `pulumi:"resourcePresetId"`
}

func (GetMdbClickhouseClusterClickhouseResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterClickhouseResources)(nil)).Elem()
}

func (i GetMdbClickhouseClusterClickhouseResourcesArgs) ToGetMdbClickhouseClusterClickhouseResourcesOutput() GetMdbClickhouseClusterClickhouseResourcesOutput {
	return i.ToGetMdbClickhouseClusterClickhouseResourcesOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterClickhouseResourcesArgs) ToGetMdbClickhouseClusterClickhouseResourcesOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterClickhouseResourcesOutput)
}

type GetMdbClickhouseClusterClickhouseResourcesOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterClickhouseResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterClickhouseResources)(nil)).Elem()
}

func (o GetMdbClickhouseClusterClickhouseResourcesOutput) ToGetMdbClickhouseClusterClickhouseResourcesOutput() GetMdbClickhouseClusterClickhouseResourcesOutput {
	return o
}

func (o GetMdbClickhouseClusterClickhouseResourcesOutput) ToGetMdbClickhouseClusterClickhouseResourcesOutputWithContext(ctx context.Context) GetMdbClickhouseClusterClickhouseResourcesOutput {
	return o
}

// Volume of the storage available to a ClickHouse or ZooKeeper host, in gigabytes.
func (o GetMdbClickhouseClusterClickhouseResourcesOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseResources) int { return v.DiskSize }).(pulumi.IntOutput)
}

// Type of the storage of ClickHouse or ZooKeeper hosts.
func (o GetMdbClickhouseClusterClickhouseResourcesOutput) DiskTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseResources) string { return v.DiskTypeId }).(pulumi.StringOutput)
}

func (o GetMdbClickhouseClusterClickhouseResourcesOutput) ResourcePresetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterClickhouseResources) string { return v.ResourcePresetId }).(pulumi.StringOutput)
}

type GetMdbClickhouseClusterCloudStorage struct {
	Enabled bool `pulumi:"enabled"`
}

// GetMdbClickhouseClusterCloudStorageInput is an input type that accepts GetMdbClickhouseClusterCloudStorageArgs and GetMdbClickhouseClusterCloudStorageOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterCloudStorageInput` via:
//
//          GetMdbClickhouseClusterCloudStorageArgs{...}
type GetMdbClickhouseClusterCloudStorageInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterCloudStorageOutput() GetMdbClickhouseClusterCloudStorageOutput
	ToGetMdbClickhouseClusterCloudStorageOutputWithContext(context.Context) GetMdbClickhouseClusterCloudStorageOutput
}

type GetMdbClickhouseClusterCloudStorageArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetMdbClickhouseClusterCloudStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterCloudStorage)(nil)).Elem()
}

func (i GetMdbClickhouseClusterCloudStorageArgs) ToGetMdbClickhouseClusterCloudStorageOutput() GetMdbClickhouseClusterCloudStorageOutput {
	return i.ToGetMdbClickhouseClusterCloudStorageOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterCloudStorageArgs) ToGetMdbClickhouseClusterCloudStorageOutputWithContext(ctx context.Context) GetMdbClickhouseClusterCloudStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterCloudStorageOutput)
}

type GetMdbClickhouseClusterCloudStorageOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterCloudStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterCloudStorage)(nil)).Elem()
}

func (o GetMdbClickhouseClusterCloudStorageOutput) ToGetMdbClickhouseClusterCloudStorageOutput() GetMdbClickhouseClusterCloudStorageOutput {
	return o
}

func (o GetMdbClickhouseClusterCloudStorageOutput) ToGetMdbClickhouseClusterCloudStorageOutputWithContext(ctx context.Context) GetMdbClickhouseClusterCloudStorageOutput {
	return o
}

func (o GetMdbClickhouseClusterCloudStorageOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterCloudStorage) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetMdbClickhouseClusterDatabase struct {
	// The name of the ClickHouse cluster.
	Name string `pulumi:"name"`
}

// GetMdbClickhouseClusterDatabaseInput is an input type that accepts GetMdbClickhouseClusterDatabaseArgs and GetMdbClickhouseClusterDatabaseOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterDatabaseInput` via:
//
//          GetMdbClickhouseClusterDatabaseArgs{...}
type GetMdbClickhouseClusterDatabaseInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterDatabaseOutput() GetMdbClickhouseClusterDatabaseOutput
	ToGetMdbClickhouseClusterDatabaseOutputWithContext(context.Context) GetMdbClickhouseClusterDatabaseOutput
}

type GetMdbClickhouseClusterDatabaseArgs struct {
	// The name of the ClickHouse cluster.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetMdbClickhouseClusterDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterDatabase)(nil)).Elem()
}

func (i GetMdbClickhouseClusterDatabaseArgs) ToGetMdbClickhouseClusterDatabaseOutput() GetMdbClickhouseClusterDatabaseOutput {
	return i.ToGetMdbClickhouseClusterDatabaseOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterDatabaseArgs) ToGetMdbClickhouseClusterDatabaseOutputWithContext(ctx context.Context) GetMdbClickhouseClusterDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterDatabaseOutput)
}

// GetMdbClickhouseClusterDatabaseArrayInput is an input type that accepts GetMdbClickhouseClusterDatabaseArray and GetMdbClickhouseClusterDatabaseArrayOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterDatabaseArrayInput` via:
//
//          GetMdbClickhouseClusterDatabaseArray{ GetMdbClickhouseClusterDatabaseArgs{...} }
type GetMdbClickhouseClusterDatabaseArrayInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterDatabaseArrayOutput() GetMdbClickhouseClusterDatabaseArrayOutput
	ToGetMdbClickhouseClusterDatabaseArrayOutputWithContext(context.Context) GetMdbClickhouseClusterDatabaseArrayOutput
}

type GetMdbClickhouseClusterDatabaseArray []GetMdbClickhouseClusterDatabaseInput

func (GetMdbClickhouseClusterDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterDatabase)(nil)).Elem()
}

func (i GetMdbClickhouseClusterDatabaseArray) ToGetMdbClickhouseClusterDatabaseArrayOutput() GetMdbClickhouseClusterDatabaseArrayOutput {
	return i.ToGetMdbClickhouseClusterDatabaseArrayOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterDatabaseArray) ToGetMdbClickhouseClusterDatabaseArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterDatabaseArrayOutput)
}

type GetMdbClickhouseClusterDatabaseOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterDatabase)(nil)).Elem()
}

func (o GetMdbClickhouseClusterDatabaseOutput) ToGetMdbClickhouseClusterDatabaseOutput() GetMdbClickhouseClusterDatabaseOutput {
	return o
}

func (o GetMdbClickhouseClusterDatabaseOutput) ToGetMdbClickhouseClusterDatabaseOutputWithContext(ctx context.Context) GetMdbClickhouseClusterDatabaseOutput {
	return o
}

// The name of the ClickHouse cluster.
func (o GetMdbClickhouseClusterDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterDatabase) string { return v.Name }).(pulumi.StringOutput)
}

type GetMdbClickhouseClusterDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterDatabase)(nil)).Elem()
}

func (o GetMdbClickhouseClusterDatabaseArrayOutput) ToGetMdbClickhouseClusterDatabaseArrayOutput() GetMdbClickhouseClusterDatabaseArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterDatabaseArrayOutput) ToGetMdbClickhouseClusterDatabaseArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterDatabaseArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterDatabaseArrayOutput) Index(i pulumi.IntInput) GetMdbClickhouseClusterDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbClickhouseClusterDatabase {
		return vs[0].([]GetMdbClickhouseClusterDatabase)[vs[1].(int)]
	}).(GetMdbClickhouseClusterDatabaseOutput)
}

type GetMdbClickhouseClusterFormatSchema struct {
	// The name of the ClickHouse cluster.
	Name string `pulumi:"name"`
	// Type of the model.
	Type string `pulumi:"type"`
	// Model file URL. You can only use models stored in Yandex Object Storage.
	Uri string `pulumi:"uri"`
}

// GetMdbClickhouseClusterFormatSchemaInput is an input type that accepts GetMdbClickhouseClusterFormatSchemaArgs and GetMdbClickhouseClusterFormatSchemaOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterFormatSchemaInput` via:
//
//          GetMdbClickhouseClusterFormatSchemaArgs{...}
type GetMdbClickhouseClusterFormatSchemaInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterFormatSchemaOutput() GetMdbClickhouseClusterFormatSchemaOutput
	ToGetMdbClickhouseClusterFormatSchemaOutputWithContext(context.Context) GetMdbClickhouseClusterFormatSchemaOutput
}

type GetMdbClickhouseClusterFormatSchemaArgs struct {
	// The name of the ClickHouse cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the model.
	Type pulumi.StringInput `pulumi:"type"`
	// Model file URL. You can only use models stored in Yandex Object Storage.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (GetMdbClickhouseClusterFormatSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterFormatSchema)(nil)).Elem()
}

func (i GetMdbClickhouseClusterFormatSchemaArgs) ToGetMdbClickhouseClusterFormatSchemaOutput() GetMdbClickhouseClusterFormatSchemaOutput {
	return i.ToGetMdbClickhouseClusterFormatSchemaOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterFormatSchemaArgs) ToGetMdbClickhouseClusterFormatSchemaOutputWithContext(ctx context.Context) GetMdbClickhouseClusterFormatSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterFormatSchemaOutput)
}

// GetMdbClickhouseClusterFormatSchemaArrayInput is an input type that accepts GetMdbClickhouseClusterFormatSchemaArray and GetMdbClickhouseClusterFormatSchemaArrayOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterFormatSchemaArrayInput` via:
//
//          GetMdbClickhouseClusterFormatSchemaArray{ GetMdbClickhouseClusterFormatSchemaArgs{...} }
type GetMdbClickhouseClusterFormatSchemaArrayInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterFormatSchemaArrayOutput() GetMdbClickhouseClusterFormatSchemaArrayOutput
	ToGetMdbClickhouseClusterFormatSchemaArrayOutputWithContext(context.Context) GetMdbClickhouseClusterFormatSchemaArrayOutput
}

type GetMdbClickhouseClusterFormatSchemaArray []GetMdbClickhouseClusterFormatSchemaInput

func (GetMdbClickhouseClusterFormatSchemaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterFormatSchema)(nil)).Elem()
}

func (i GetMdbClickhouseClusterFormatSchemaArray) ToGetMdbClickhouseClusterFormatSchemaArrayOutput() GetMdbClickhouseClusterFormatSchemaArrayOutput {
	return i.ToGetMdbClickhouseClusterFormatSchemaArrayOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterFormatSchemaArray) ToGetMdbClickhouseClusterFormatSchemaArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterFormatSchemaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterFormatSchemaArrayOutput)
}

type GetMdbClickhouseClusterFormatSchemaOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterFormatSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterFormatSchema)(nil)).Elem()
}

func (o GetMdbClickhouseClusterFormatSchemaOutput) ToGetMdbClickhouseClusterFormatSchemaOutput() GetMdbClickhouseClusterFormatSchemaOutput {
	return o
}

func (o GetMdbClickhouseClusterFormatSchemaOutput) ToGetMdbClickhouseClusterFormatSchemaOutputWithContext(ctx context.Context) GetMdbClickhouseClusterFormatSchemaOutput {
	return o
}

// The name of the ClickHouse cluster.
func (o GetMdbClickhouseClusterFormatSchemaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterFormatSchema) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the model.
func (o GetMdbClickhouseClusterFormatSchemaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterFormatSchema) string { return v.Type }).(pulumi.StringOutput)
}

// Model file URL. You can only use models stored in Yandex Object Storage.
func (o GetMdbClickhouseClusterFormatSchemaOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterFormatSchema) string { return v.Uri }).(pulumi.StringOutput)
}

type GetMdbClickhouseClusterFormatSchemaArrayOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterFormatSchemaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterFormatSchema)(nil)).Elem()
}

func (o GetMdbClickhouseClusterFormatSchemaArrayOutput) ToGetMdbClickhouseClusterFormatSchemaArrayOutput() GetMdbClickhouseClusterFormatSchemaArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterFormatSchemaArrayOutput) ToGetMdbClickhouseClusterFormatSchemaArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterFormatSchemaArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterFormatSchemaArrayOutput) Index(i pulumi.IntInput) GetMdbClickhouseClusterFormatSchemaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbClickhouseClusterFormatSchema {
		return vs[0].([]GetMdbClickhouseClusterFormatSchema)[vs[1].(int)]
	}).(GetMdbClickhouseClusterFormatSchemaOutput)
}

type GetMdbClickhouseClusterHost struct {
	// Sets whether the host should get a public IP address on creation.
	AssignPublicIp bool `pulumi:"assignPublicIp"`
	// The fully qualified domain name of the host.
	Fqdn string `pulumi:"fqdn"`
	// The name of the shard to which the host belongs.
	ShardName string `pulumi:"shardName"`
	// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
	SubnetId string `pulumi:"subnetId"`
	// Type of the model.
	Type string `pulumi:"type"`
	// The availability zone where the ClickHouse host will be created.
	Zone string `pulumi:"zone"`
}

// GetMdbClickhouseClusterHostInput is an input type that accepts GetMdbClickhouseClusterHostArgs and GetMdbClickhouseClusterHostOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterHostInput` via:
//
//          GetMdbClickhouseClusterHostArgs{...}
type GetMdbClickhouseClusterHostInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterHostOutput() GetMdbClickhouseClusterHostOutput
	ToGetMdbClickhouseClusterHostOutputWithContext(context.Context) GetMdbClickhouseClusterHostOutput
}

type GetMdbClickhouseClusterHostArgs struct {
	// Sets whether the host should get a public IP address on creation.
	AssignPublicIp pulumi.BoolInput `pulumi:"assignPublicIp"`
	// The fully qualified domain name of the host.
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// The name of the shard to which the host belongs.
	ShardName pulumi.StringInput `pulumi:"shardName"`
	// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Type of the model.
	Type pulumi.StringInput `pulumi:"type"`
	// The availability zone where the ClickHouse host will be created.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetMdbClickhouseClusterHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterHost)(nil)).Elem()
}

func (i GetMdbClickhouseClusterHostArgs) ToGetMdbClickhouseClusterHostOutput() GetMdbClickhouseClusterHostOutput {
	return i.ToGetMdbClickhouseClusterHostOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterHostArgs) ToGetMdbClickhouseClusterHostOutputWithContext(ctx context.Context) GetMdbClickhouseClusterHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterHostOutput)
}

// GetMdbClickhouseClusterHostArrayInput is an input type that accepts GetMdbClickhouseClusterHostArray and GetMdbClickhouseClusterHostArrayOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterHostArrayInput` via:
//
//          GetMdbClickhouseClusterHostArray{ GetMdbClickhouseClusterHostArgs{...} }
type GetMdbClickhouseClusterHostArrayInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterHostArrayOutput() GetMdbClickhouseClusterHostArrayOutput
	ToGetMdbClickhouseClusterHostArrayOutputWithContext(context.Context) GetMdbClickhouseClusterHostArrayOutput
}

type GetMdbClickhouseClusterHostArray []GetMdbClickhouseClusterHostInput

func (GetMdbClickhouseClusterHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterHost)(nil)).Elem()
}

func (i GetMdbClickhouseClusterHostArray) ToGetMdbClickhouseClusterHostArrayOutput() GetMdbClickhouseClusterHostArrayOutput {
	return i.ToGetMdbClickhouseClusterHostArrayOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterHostArray) ToGetMdbClickhouseClusterHostArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterHostArrayOutput)
}

type GetMdbClickhouseClusterHostOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterHost)(nil)).Elem()
}

func (o GetMdbClickhouseClusterHostOutput) ToGetMdbClickhouseClusterHostOutput() GetMdbClickhouseClusterHostOutput {
	return o
}

func (o GetMdbClickhouseClusterHostOutput) ToGetMdbClickhouseClusterHostOutputWithContext(ctx context.Context) GetMdbClickhouseClusterHostOutput {
	return o
}

// Sets whether the host should get a public IP address on creation.
func (o GetMdbClickhouseClusterHostOutput) AssignPublicIp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterHost) bool { return v.AssignPublicIp }).(pulumi.BoolOutput)
}

// The fully qualified domain name of the host.
func (o GetMdbClickhouseClusterHostOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterHost) string { return v.Fqdn }).(pulumi.StringOutput)
}

// The name of the shard to which the host belongs.
func (o GetMdbClickhouseClusterHostOutput) ShardName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterHost) string { return v.ShardName }).(pulumi.StringOutput)
}

// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
func (o GetMdbClickhouseClusterHostOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterHost) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Type of the model.
func (o GetMdbClickhouseClusterHostOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterHost) string { return v.Type }).(pulumi.StringOutput)
}

// The availability zone where the ClickHouse host will be created.
func (o GetMdbClickhouseClusterHostOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterHost) string { return v.Zone }).(pulumi.StringOutput)
}

type GetMdbClickhouseClusterHostArrayOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterHost)(nil)).Elem()
}

func (o GetMdbClickhouseClusterHostArrayOutput) ToGetMdbClickhouseClusterHostArrayOutput() GetMdbClickhouseClusterHostArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterHostArrayOutput) ToGetMdbClickhouseClusterHostArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterHostArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterHostArrayOutput) Index(i pulumi.IntInput) GetMdbClickhouseClusterHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbClickhouseClusterHost {
		return vs[0].([]GetMdbClickhouseClusterHost)[vs[1].(int)]
	}).(GetMdbClickhouseClusterHostOutput)
}

type GetMdbClickhouseClusterMlModel struct {
	// The name of the ClickHouse cluster.
	Name string `pulumi:"name"`
	// Type of the model.
	Type string `pulumi:"type"`
	// Model file URL. You can only use models stored in Yandex Object Storage.
	Uri string `pulumi:"uri"`
}

// GetMdbClickhouseClusterMlModelInput is an input type that accepts GetMdbClickhouseClusterMlModelArgs and GetMdbClickhouseClusterMlModelOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterMlModelInput` via:
//
//          GetMdbClickhouseClusterMlModelArgs{...}
type GetMdbClickhouseClusterMlModelInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterMlModelOutput() GetMdbClickhouseClusterMlModelOutput
	ToGetMdbClickhouseClusterMlModelOutputWithContext(context.Context) GetMdbClickhouseClusterMlModelOutput
}

type GetMdbClickhouseClusterMlModelArgs struct {
	// The name of the ClickHouse cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the model.
	Type pulumi.StringInput `pulumi:"type"`
	// Model file URL. You can only use models stored in Yandex Object Storage.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (GetMdbClickhouseClusterMlModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterMlModel)(nil)).Elem()
}

func (i GetMdbClickhouseClusterMlModelArgs) ToGetMdbClickhouseClusterMlModelOutput() GetMdbClickhouseClusterMlModelOutput {
	return i.ToGetMdbClickhouseClusterMlModelOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterMlModelArgs) ToGetMdbClickhouseClusterMlModelOutputWithContext(ctx context.Context) GetMdbClickhouseClusterMlModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterMlModelOutput)
}

// GetMdbClickhouseClusterMlModelArrayInput is an input type that accepts GetMdbClickhouseClusterMlModelArray and GetMdbClickhouseClusterMlModelArrayOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterMlModelArrayInput` via:
//
//          GetMdbClickhouseClusterMlModelArray{ GetMdbClickhouseClusterMlModelArgs{...} }
type GetMdbClickhouseClusterMlModelArrayInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterMlModelArrayOutput() GetMdbClickhouseClusterMlModelArrayOutput
	ToGetMdbClickhouseClusterMlModelArrayOutputWithContext(context.Context) GetMdbClickhouseClusterMlModelArrayOutput
}

type GetMdbClickhouseClusterMlModelArray []GetMdbClickhouseClusterMlModelInput

func (GetMdbClickhouseClusterMlModelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterMlModel)(nil)).Elem()
}

func (i GetMdbClickhouseClusterMlModelArray) ToGetMdbClickhouseClusterMlModelArrayOutput() GetMdbClickhouseClusterMlModelArrayOutput {
	return i.ToGetMdbClickhouseClusterMlModelArrayOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterMlModelArray) ToGetMdbClickhouseClusterMlModelArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterMlModelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterMlModelArrayOutput)
}

type GetMdbClickhouseClusterMlModelOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterMlModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterMlModel)(nil)).Elem()
}

func (o GetMdbClickhouseClusterMlModelOutput) ToGetMdbClickhouseClusterMlModelOutput() GetMdbClickhouseClusterMlModelOutput {
	return o
}

func (o GetMdbClickhouseClusterMlModelOutput) ToGetMdbClickhouseClusterMlModelOutputWithContext(ctx context.Context) GetMdbClickhouseClusterMlModelOutput {
	return o
}

// The name of the ClickHouse cluster.
func (o GetMdbClickhouseClusterMlModelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterMlModel) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the model.
func (o GetMdbClickhouseClusterMlModelOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterMlModel) string { return v.Type }).(pulumi.StringOutput)
}

// Model file URL. You can only use models stored in Yandex Object Storage.
func (o GetMdbClickhouseClusterMlModelOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterMlModel) string { return v.Uri }).(pulumi.StringOutput)
}

type GetMdbClickhouseClusterMlModelArrayOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterMlModelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterMlModel)(nil)).Elem()
}

func (o GetMdbClickhouseClusterMlModelArrayOutput) ToGetMdbClickhouseClusterMlModelArrayOutput() GetMdbClickhouseClusterMlModelArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterMlModelArrayOutput) ToGetMdbClickhouseClusterMlModelArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterMlModelArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterMlModelArrayOutput) Index(i pulumi.IntInput) GetMdbClickhouseClusterMlModelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbClickhouseClusterMlModel {
		return vs[0].([]GetMdbClickhouseClusterMlModel)[vs[1].(int)]
	}).(GetMdbClickhouseClusterMlModelOutput)
}

type GetMdbClickhouseClusterShardGroup struct {
	// Description of the shard group.
	Description string `pulumi:"description"`
	// The name of the ClickHouse cluster.
	Name string `pulumi:"name"`
	// List of shards names that belong to the shard group.
	ShardNames []string `pulumi:"shardNames"`
}

// GetMdbClickhouseClusterShardGroupInput is an input type that accepts GetMdbClickhouseClusterShardGroupArgs and GetMdbClickhouseClusterShardGroupOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterShardGroupInput` via:
//
//          GetMdbClickhouseClusterShardGroupArgs{...}
type GetMdbClickhouseClusterShardGroupInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterShardGroupOutput() GetMdbClickhouseClusterShardGroupOutput
	ToGetMdbClickhouseClusterShardGroupOutputWithContext(context.Context) GetMdbClickhouseClusterShardGroupOutput
}

type GetMdbClickhouseClusterShardGroupArgs struct {
	// Description of the shard group.
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the ClickHouse cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// List of shards names that belong to the shard group.
	ShardNames pulumi.StringArrayInput `pulumi:"shardNames"`
}

func (GetMdbClickhouseClusterShardGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterShardGroup)(nil)).Elem()
}

func (i GetMdbClickhouseClusterShardGroupArgs) ToGetMdbClickhouseClusterShardGroupOutput() GetMdbClickhouseClusterShardGroupOutput {
	return i.ToGetMdbClickhouseClusterShardGroupOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterShardGroupArgs) ToGetMdbClickhouseClusterShardGroupOutputWithContext(ctx context.Context) GetMdbClickhouseClusterShardGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterShardGroupOutput)
}

// GetMdbClickhouseClusterShardGroupArrayInput is an input type that accepts GetMdbClickhouseClusterShardGroupArray and GetMdbClickhouseClusterShardGroupArrayOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterShardGroupArrayInput` via:
//
//          GetMdbClickhouseClusterShardGroupArray{ GetMdbClickhouseClusterShardGroupArgs{...} }
type GetMdbClickhouseClusterShardGroupArrayInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterShardGroupArrayOutput() GetMdbClickhouseClusterShardGroupArrayOutput
	ToGetMdbClickhouseClusterShardGroupArrayOutputWithContext(context.Context) GetMdbClickhouseClusterShardGroupArrayOutput
}

type GetMdbClickhouseClusterShardGroupArray []GetMdbClickhouseClusterShardGroupInput

func (GetMdbClickhouseClusterShardGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterShardGroup)(nil)).Elem()
}

func (i GetMdbClickhouseClusterShardGroupArray) ToGetMdbClickhouseClusterShardGroupArrayOutput() GetMdbClickhouseClusterShardGroupArrayOutput {
	return i.ToGetMdbClickhouseClusterShardGroupArrayOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterShardGroupArray) ToGetMdbClickhouseClusterShardGroupArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterShardGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterShardGroupArrayOutput)
}

type GetMdbClickhouseClusterShardGroupOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterShardGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterShardGroup)(nil)).Elem()
}

func (o GetMdbClickhouseClusterShardGroupOutput) ToGetMdbClickhouseClusterShardGroupOutput() GetMdbClickhouseClusterShardGroupOutput {
	return o
}

func (o GetMdbClickhouseClusterShardGroupOutput) ToGetMdbClickhouseClusterShardGroupOutputWithContext(ctx context.Context) GetMdbClickhouseClusterShardGroupOutput {
	return o
}

// Description of the shard group.
func (o GetMdbClickhouseClusterShardGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterShardGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The name of the ClickHouse cluster.
func (o GetMdbClickhouseClusterShardGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterShardGroup) string { return v.Name }).(pulumi.StringOutput)
}

// List of shards names that belong to the shard group.
func (o GetMdbClickhouseClusterShardGroupOutput) ShardNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterShardGroup) []string { return v.ShardNames }).(pulumi.StringArrayOutput)
}

type GetMdbClickhouseClusterShardGroupArrayOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterShardGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterShardGroup)(nil)).Elem()
}

func (o GetMdbClickhouseClusterShardGroupArrayOutput) ToGetMdbClickhouseClusterShardGroupArrayOutput() GetMdbClickhouseClusterShardGroupArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterShardGroupArrayOutput) ToGetMdbClickhouseClusterShardGroupArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterShardGroupArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterShardGroupArrayOutput) Index(i pulumi.IntInput) GetMdbClickhouseClusterShardGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbClickhouseClusterShardGroup {
		return vs[0].([]GetMdbClickhouseClusterShardGroup)[vs[1].(int)]
	}).(GetMdbClickhouseClusterShardGroupOutput)
}

type GetMdbClickhouseClusterUser struct {
	// The name of the ClickHouse cluster.
	Name string `pulumi:"name"`
	// Set of permissions granted to the user. The structure is documented below.
	Permissions []GetMdbClickhouseClusterUserPermission `pulumi:"permissions"`
	// Set of user quotas. The structure is documented below.
	Quotas []GetMdbClickhouseClusterUserQuota `pulumi:"quotas"`
	// Kafka connection settngs sanem as `kafka` block.
	Settings GetMdbClickhouseClusterUserSettings `pulumi:"settings"`
}

// GetMdbClickhouseClusterUserInput is an input type that accepts GetMdbClickhouseClusterUserArgs and GetMdbClickhouseClusterUserOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterUserInput` via:
//
//          GetMdbClickhouseClusterUserArgs{...}
type GetMdbClickhouseClusterUserInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterUserOutput() GetMdbClickhouseClusterUserOutput
	ToGetMdbClickhouseClusterUserOutputWithContext(context.Context) GetMdbClickhouseClusterUserOutput
}

type GetMdbClickhouseClusterUserArgs struct {
	// The name of the ClickHouse cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// Set of permissions granted to the user. The structure is documented below.
	Permissions GetMdbClickhouseClusterUserPermissionArrayInput `pulumi:"permissions"`
	// Set of user quotas. The structure is documented below.
	Quotas GetMdbClickhouseClusterUserQuotaArrayInput `pulumi:"quotas"`
	// Kafka connection settngs sanem as `kafka` block.
	Settings GetMdbClickhouseClusterUserSettingsInput `pulumi:"settings"`
}

func (GetMdbClickhouseClusterUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterUser)(nil)).Elem()
}

func (i GetMdbClickhouseClusterUserArgs) ToGetMdbClickhouseClusterUserOutput() GetMdbClickhouseClusterUserOutput {
	return i.ToGetMdbClickhouseClusterUserOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterUserArgs) ToGetMdbClickhouseClusterUserOutputWithContext(ctx context.Context) GetMdbClickhouseClusterUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterUserOutput)
}

// GetMdbClickhouseClusterUserArrayInput is an input type that accepts GetMdbClickhouseClusterUserArray and GetMdbClickhouseClusterUserArrayOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterUserArrayInput` via:
//
//          GetMdbClickhouseClusterUserArray{ GetMdbClickhouseClusterUserArgs{...} }
type GetMdbClickhouseClusterUserArrayInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterUserArrayOutput() GetMdbClickhouseClusterUserArrayOutput
	ToGetMdbClickhouseClusterUserArrayOutputWithContext(context.Context) GetMdbClickhouseClusterUserArrayOutput
}

type GetMdbClickhouseClusterUserArray []GetMdbClickhouseClusterUserInput

func (GetMdbClickhouseClusterUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterUser)(nil)).Elem()
}

func (i GetMdbClickhouseClusterUserArray) ToGetMdbClickhouseClusterUserArrayOutput() GetMdbClickhouseClusterUserArrayOutput {
	return i.ToGetMdbClickhouseClusterUserArrayOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterUserArray) ToGetMdbClickhouseClusterUserArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterUserArrayOutput)
}

type GetMdbClickhouseClusterUserOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterUser)(nil)).Elem()
}

func (o GetMdbClickhouseClusterUserOutput) ToGetMdbClickhouseClusterUserOutput() GetMdbClickhouseClusterUserOutput {
	return o
}

func (o GetMdbClickhouseClusterUserOutput) ToGetMdbClickhouseClusterUserOutputWithContext(ctx context.Context) GetMdbClickhouseClusterUserOutput {
	return o
}

// The name of the ClickHouse cluster.
func (o GetMdbClickhouseClusterUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUser) string { return v.Name }).(pulumi.StringOutput)
}

// Set of permissions granted to the user. The structure is documented below.
func (o GetMdbClickhouseClusterUserOutput) Permissions() GetMdbClickhouseClusterUserPermissionArrayOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUser) []GetMdbClickhouseClusterUserPermission { return v.Permissions }).(GetMdbClickhouseClusterUserPermissionArrayOutput)
}

// Set of user quotas. The structure is documented below.
func (o GetMdbClickhouseClusterUserOutput) Quotas() GetMdbClickhouseClusterUserQuotaArrayOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUser) []GetMdbClickhouseClusterUserQuota { return v.Quotas }).(GetMdbClickhouseClusterUserQuotaArrayOutput)
}

// Kafka connection settngs sanem as `kafka` block.
func (o GetMdbClickhouseClusterUserOutput) Settings() GetMdbClickhouseClusterUserSettingsOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUser) GetMdbClickhouseClusterUserSettings { return v.Settings }).(GetMdbClickhouseClusterUserSettingsOutput)
}

type GetMdbClickhouseClusterUserArrayOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterUser)(nil)).Elem()
}

func (o GetMdbClickhouseClusterUserArrayOutput) ToGetMdbClickhouseClusterUserArrayOutput() GetMdbClickhouseClusterUserArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterUserArrayOutput) ToGetMdbClickhouseClusterUserArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterUserArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterUserArrayOutput) Index(i pulumi.IntInput) GetMdbClickhouseClusterUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbClickhouseClusterUser {
		return vs[0].([]GetMdbClickhouseClusterUser)[vs[1].(int)]
	}).(GetMdbClickhouseClusterUserOutput)
}

type GetMdbClickhouseClusterUserPermission struct {
	// The name of the database that the permission grants access to.
	DatabaseName string `pulumi:"databaseName"`
}

// GetMdbClickhouseClusterUserPermissionInput is an input type that accepts GetMdbClickhouseClusterUserPermissionArgs and GetMdbClickhouseClusterUserPermissionOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterUserPermissionInput` via:
//
//          GetMdbClickhouseClusterUserPermissionArgs{...}
type GetMdbClickhouseClusterUserPermissionInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterUserPermissionOutput() GetMdbClickhouseClusterUserPermissionOutput
	ToGetMdbClickhouseClusterUserPermissionOutputWithContext(context.Context) GetMdbClickhouseClusterUserPermissionOutput
}

type GetMdbClickhouseClusterUserPermissionArgs struct {
	// The name of the database that the permission grants access to.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
}

func (GetMdbClickhouseClusterUserPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterUserPermission)(nil)).Elem()
}

func (i GetMdbClickhouseClusterUserPermissionArgs) ToGetMdbClickhouseClusterUserPermissionOutput() GetMdbClickhouseClusterUserPermissionOutput {
	return i.ToGetMdbClickhouseClusterUserPermissionOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterUserPermissionArgs) ToGetMdbClickhouseClusterUserPermissionOutputWithContext(ctx context.Context) GetMdbClickhouseClusterUserPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterUserPermissionOutput)
}

// GetMdbClickhouseClusterUserPermissionArrayInput is an input type that accepts GetMdbClickhouseClusterUserPermissionArray and GetMdbClickhouseClusterUserPermissionArrayOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterUserPermissionArrayInput` via:
//
//          GetMdbClickhouseClusterUserPermissionArray{ GetMdbClickhouseClusterUserPermissionArgs{...} }
type GetMdbClickhouseClusterUserPermissionArrayInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterUserPermissionArrayOutput() GetMdbClickhouseClusterUserPermissionArrayOutput
	ToGetMdbClickhouseClusterUserPermissionArrayOutputWithContext(context.Context) GetMdbClickhouseClusterUserPermissionArrayOutput
}

type GetMdbClickhouseClusterUserPermissionArray []GetMdbClickhouseClusterUserPermissionInput

func (GetMdbClickhouseClusterUserPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterUserPermission)(nil)).Elem()
}

func (i GetMdbClickhouseClusterUserPermissionArray) ToGetMdbClickhouseClusterUserPermissionArrayOutput() GetMdbClickhouseClusterUserPermissionArrayOutput {
	return i.ToGetMdbClickhouseClusterUserPermissionArrayOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterUserPermissionArray) ToGetMdbClickhouseClusterUserPermissionArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterUserPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterUserPermissionArrayOutput)
}

type GetMdbClickhouseClusterUserPermissionOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterUserPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterUserPermission)(nil)).Elem()
}

func (o GetMdbClickhouseClusterUserPermissionOutput) ToGetMdbClickhouseClusterUserPermissionOutput() GetMdbClickhouseClusterUserPermissionOutput {
	return o
}

func (o GetMdbClickhouseClusterUserPermissionOutput) ToGetMdbClickhouseClusterUserPermissionOutputWithContext(ctx context.Context) GetMdbClickhouseClusterUserPermissionOutput {
	return o
}

// The name of the database that the permission grants access to.
func (o GetMdbClickhouseClusterUserPermissionOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserPermission) string { return v.DatabaseName }).(pulumi.StringOutput)
}

type GetMdbClickhouseClusterUserPermissionArrayOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterUserPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterUserPermission)(nil)).Elem()
}

func (o GetMdbClickhouseClusterUserPermissionArrayOutput) ToGetMdbClickhouseClusterUserPermissionArrayOutput() GetMdbClickhouseClusterUserPermissionArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterUserPermissionArrayOutput) ToGetMdbClickhouseClusterUserPermissionArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterUserPermissionArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterUserPermissionArrayOutput) Index(i pulumi.IntInput) GetMdbClickhouseClusterUserPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbClickhouseClusterUserPermission {
		return vs[0].([]GetMdbClickhouseClusterUserPermission)[vs[1].(int)]
	}).(GetMdbClickhouseClusterUserPermissionOutput)
}

type GetMdbClickhouseClusterUserQuota struct {
	// The number of queries that threw exception.
	Errors int `pulumi:"errors"`
	// The total query execution time, in milliseconds (wall time).
	ExecutionTime int `pulumi:"executionTime"`
	// Duration of interval for quota in milliseconds.
	IntervalDuration int `pulumi:"intervalDuration"`
	// The total number of queries.
	Queries int `pulumi:"queries"`
	// The total number of source rows read from tables for running the query, on all remote servers.
	ReadRows int `pulumi:"readRows"`
	// The total number of rows given as the result.
	ResultRows int `pulumi:"resultRows"`
}

// GetMdbClickhouseClusterUserQuotaInput is an input type that accepts GetMdbClickhouseClusterUserQuotaArgs and GetMdbClickhouseClusterUserQuotaOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterUserQuotaInput` via:
//
//          GetMdbClickhouseClusterUserQuotaArgs{...}
type GetMdbClickhouseClusterUserQuotaInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterUserQuotaOutput() GetMdbClickhouseClusterUserQuotaOutput
	ToGetMdbClickhouseClusterUserQuotaOutputWithContext(context.Context) GetMdbClickhouseClusterUserQuotaOutput
}

type GetMdbClickhouseClusterUserQuotaArgs struct {
	// The number of queries that threw exception.
	Errors pulumi.IntInput `pulumi:"errors"`
	// The total query execution time, in milliseconds (wall time).
	ExecutionTime pulumi.IntInput `pulumi:"executionTime"`
	// Duration of interval for quota in milliseconds.
	IntervalDuration pulumi.IntInput `pulumi:"intervalDuration"`
	// The total number of queries.
	Queries pulumi.IntInput `pulumi:"queries"`
	// The total number of source rows read from tables for running the query, on all remote servers.
	ReadRows pulumi.IntInput `pulumi:"readRows"`
	// The total number of rows given as the result.
	ResultRows pulumi.IntInput `pulumi:"resultRows"`
}

func (GetMdbClickhouseClusterUserQuotaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterUserQuota)(nil)).Elem()
}

func (i GetMdbClickhouseClusterUserQuotaArgs) ToGetMdbClickhouseClusterUserQuotaOutput() GetMdbClickhouseClusterUserQuotaOutput {
	return i.ToGetMdbClickhouseClusterUserQuotaOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterUserQuotaArgs) ToGetMdbClickhouseClusterUserQuotaOutputWithContext(ctx context.Context) GetMdbClickhouseClusterUserQuotaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterUserQuotaOutput)
}

// GetMdbClickhouseClusterUserQuotaArrayInput is an input type that accepts GetMdbClickhouseClusterUserQuotaArray and GetMdbClickhouseClusterUserQuotaArrayOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterUserQuotaArrayInput` via:
//
//          GetMdbClickhouseClusterUserQuotaArray{ GetMdbClickhouseClusterUserQuotaArgs{...} }
type GetMdbClickhouseClusterUserQuotaArrayInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterUserQuotaArrayOutput() GetMdbClickhouseClusterUserQuotaArrayOutput
	ToGetMdbClickhouseClusterUserQuotaArrayOutputWithContext(context.Context) GetMdbClickhouseClusterUserQuotaArrayOutput
}

type GetMdbClickhouseClusterUserQuotaArray []GetMdbClickhouseClusterUserQuotaInput

func (GetMdbClickhouseClusterUserQuotaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterUserQuota)(nil)).Elem()
}

func (i GetMdbClickhouseClusterUserQuotaArray) ToGetMdbClickhouseClusterUserQuotaArrayOutput() GetMdbClickhouseClusterUserQuotaArrayOutput {
	return i.ToGetMdbClickhouseClusterUserQuotaArrayOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterUserQuotaArray) ToGetMdbClickhouseClusterUserQuotaArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterUserQuotaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterUserQuotaArrayOutput)
}

type GetMdbClickhouseClusterUserQuotaOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterUserQuotaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterUserQuota)(nil)).Elem()
}

func (o GetMdbClickhouseClusterUserQuotaOutput) ToGetMdbClickhouseClusterUserQuotaOutput() GetMdbClickhouseClusterUserQuotaOutput {
	return o
}

func (o GetMdbClickhouseClusterUserQuotaOutput) ToGetMdbClickhouseClusterUserQuotaOutputWithContext(ctx context.Context) GetMdbClickhouseClusterUserQuotaOutput {
	return o
}

// The number of queries that threw exception.
func (o GetMdbClickhouseClusterUserQuotaOutput) Errors() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserQuota) int { return v.Errors }).(pulumi.IntOutput)
}

// The total query execution time, in milliseconds (wall time).
func (o GetMdbClickhouseClusterUserQuotaOutput) ExecutionTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserQuota) int { return v.ExecutionTime }).(pulumi.IntOutput)
}

// Duration of interval for quota in milliseconds.
func (o GetMdbClickhouseClusterUserQuotaOutput) IntervalDuration() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserQuota) int { return v.IntervalDuration }).(pulumi.IntOutput)
}

// The total number of queries.
func (o GetMdbClickhouseClusterUserQuotaOutput) Queries() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserQuota) int { return v.Queries }).(pulumi.IntOutput)
}

// The total number of source rows read from tables for running the query, on all remote servers.
func (o GetMdbClickhouseClusterUserQuotaOutput) ReadRows() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserQuota) int { return v.ReadRows }).(pulumi.IntOutput)
}

// The total number of rows given as the result.
func (o GetMdbClickhouseClusterUserQuotaOutput) ResultRows() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserQuota) int { return v.ResultRows }).(pulumi.IntOutput)
}

type GetMdbClickhouseClusterUserQuotaArrayOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterUserQuotaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbClickhouseClusterUserQuota)(nil)).Elem()
}

func (o GetMdbClickhouseClusterUserQuotaArrayOutput) ToGetMdbClickhouseClusterUserQuotaArrayOutput() GetMdbClickhouseClusterUserQuotaArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterUserQuotaArrayOutput) ToGetMdbClickhouseClusterUserQuotaArrayOutputWithContext(ctx context.Context) GetMdbClickhouseClusterUserQuotaArrayOutput {
	return o
}

func (o GetMdbClickhouseClusterUserQuotaArrayOutput) Index(i pulumi.IntInput) GetMdbClickhouseClusterUserQuotaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbClickhouseClusterUserQuota {
		return vs[0].([]GetMdbClickhouseClusterUserQuota)[vs[1].(int)]
	}).(GetMdbClickhouseClusterUserQuotaOutput)
}

type GetMdbClickhouseClusterUserSettings struct {
	// Include CORS headers in HTTP responces.
	AddHttpCorsHeader bool `pulumi:"addHttpCorsHeader"`
	// Allows or denies DDL queries.
	AllowDdl bool `pulumi:"allowDdl"`
	// Enable compilation of queries.
	Compile bool `pulumi:"compile"`
	// Turn on expression compilation.
	CompileExpressions bool `pulumi:"compileExpressions"`
	// Connect timeout in milliseconds on the socket used for communicating with the client.
	ConnectTimeout int `pulumi:"connectTimeout"`
	// Specifies which of the uniq* functions should be used to perform the COUNT(DISTINCT …) construction.
	CountDistinctImplementation string `pulumi:"countDistinctImplementation"`
	// Sets behaviour on overflow when using DISTINCT. Possible values:
	DistinctOverflowMode string `pulumi:"distinctOverflowMode"`
	// Determine the behavior of distributed subqueries.
	DistributedAggregationMemoryEfficient bool `pulumi:"distributedAggregationMemoryEfficient"`
	// Timeout for DDL queries, in milliseconds.
	DistributedDdlTaskTimeout int `pulumi:"distributedDdlTaskTimeout"`
	// Changes the behaviour of distributed subqueries.
	DistributedProductMode string `pulumi:"distributedProductMode"`
	// Allows to retunr empty result.
	EmptyResultForAggregationByEmptySet bool `pulumi:"emptyResultForAggregationByEmptySet"`
	// Enables or disables data compression in the response to an HTTP request.
	EnableHttpCompression bool `pulumi:"enableHttpCompression"`
	// Forces a query to an out-of-date replica if updated data is not available.
	FallbackToStaleReplicasForDistributedQueries bool `pulumi:"fallbackToStaleReplicasForDistributedQueries"`
	// Disables query execution if the index can’t be used by date.
	ForceIndexByDate bool `pulumi:"forceIndexByDate"`
	// Disables query execution if indexing by the primary key is not possible.
	ForcePrimaryKey bool `pulumi:"forcePrimaryKey"`
	// Sets behaviour on overflow while GROUP BY operation. Possible values:
	GroupByOverflowMode string `pulumi:"groupByOverflowMode"`
	// Sets the threshold of the number of keys, after that the two-level aggregation should be used.
	GroupByTwoLevelThreshold int `pulumi:"groupByTwoLevelThreshold"`
	// Sets the threshold of the number of bytes, after that the two-level aggregation should be used.
	GroupByTwoLevelThresholdBytes int `pulumi:"groupByTwoLevelThresholdBytes"`
	// Timeout for HTTP connection in milliseconds.
	HttpConnectionTimeout int `pulumi:"httpConnectionTimeout"`
	// Sets minimal interval between notifications about request process in HTTP header X-ClickHouse-Progress.
	HttpHeadersProgressInterval int `pulumi:"httpHeadersProgressInterval"`
	// Timeout for HTTP connection in milliseconds.
	HttpReceiveTimeout int `pulumi:"httpReceiveTimeout"`
	// Timeout for HTTP connection in milliseconds.
	HttpSendTimeout int `pulumi:"httpSendTimeout"`
	// When performing INSERT queries, replace omitted input column values with default values of the respective columns.
	InputFormatDefaultsForOmittedFields bool `pulumi:"inputFormatDefaultsForOmittedFields"`
	// Enables or disables the full SQL parser if the fast stream parser can’t parse the data.
	InputFormatValuesInterpretExpressions bool `pulumi:"inputFormatValuesInterpretExpressions"`
	// Enables the quorum writes.
	InsertQuorum int `pulumi:"insertQuorum"`
	// Write to a quorum timeout in milliseconds.
	InsertQuorumTimeout int `pulumi:"insertQuorumTimeout"`
	// Sets behaviour on overflow in JOIN. Possible values:
	JoinOverflowMode string `pulumi:"joinOverflowMode"`
	// Sets the type of JOIN behaviour. When merging tables, empty cells may appear. ClickHouse fills them differently based on this setting.
	JoinUseNulls bool `pulumi:"joinUseNulls"`
	// Require aliases for subselects and table functions in FROM that more than one table is present.
	JoinedSubqueryRequiresAlias bool `pulumi:"joinedSubqueryRequiresAlias"`
	// Allows or restricts using the LowCardinality data type with the Native format.
	LowCardinalityAllowInNativeFormat bool `pulumi:"lowCardinalityAllowInNativeFormat"`
	// Maximum abstract syntax tree depth.
	MaxAstDepth int `pulumi:"maxAstDepth"`
	// Maximum abstract syntax tree elements.
	MaxAstElements int `pulumi:"maxAstElements"`
	// A recommendation for what size of the block (in a count of rows) to load from tables.
	MaxBlockSize int `pulumi:"maxBlockSize"`
	// Limit in bytes for using memoru for GROUP BY before using swap on disk.
	MaxBytesBeforeExternalGroupBy int `pulumi:"maxBytesBeforeExternalGroupBy"`
	// This setting is equivalent of the maxBytesBeforeExternalGroupBy setting, except for it is for sort operation (ORDER BY), not aggregation.
	MaxBytesBeforeExternalSort int `pulumi:"maxBytesBeforeExternalSort"`
	// Limits the maximum size of a hash table in bytes (uncompressed data) when using DISTINCT.
	MaxBytesInDistinct int `pulumi:"maxBytesInDistinct"`
	// Limit on maximum size of the hash table for JOIN, in bytes.
	MaxBytesInJoin int `pulumi:"maxBytesInJoin"`
	// Limit on the number of bytes in the set resulting from the execution of the IN section.
	MaxBytesInSet int `pulumi:"maxBytesInSet"`
	// Limits the maximum number of bytes (uncompressed data) that can be read from a table when running a query.
	MaxBytesToRead int `pulumi:"maxBytesToRead"`
	// Limits the maximum number of bytes (uncompressed data) that can be read from a table for sorting.
	MaxBytesToSort int `pulumi:"maxBytesToSort"`
	// Limits the maximum number of bytes (uncompressed data) that can be passed to a remote server or saved in a temporary table when using GLOBAL IN.
	MaxBytesToTransfer int `pulumi:"maxBytesToTransfer"`
	// Limits the maximum number of columns that can be read from a table in a single query.
	MaxColumnsToRead int `pulumi:"maxColumnsToRead"`
	// Limits the maximum query execution time in milliseconds.
	MaxExecutionTime int `pulumi:"maxExecutionTime"`
	// Maximum abstract syntax tree depth after after expansion of aliases.
	MaxExpandedAstElements int `pulumi:"maxExpandedAstElements"`
	// The size of blocks (in a count of rows) to form for insertion into a table.
	MaxInsertBlockSize int `pulumi:"maxInsertBlockSize"`
	// Limits the maximum memory usage (in bytes) for processing queries on a single server.
	MaxMemoryUsage int `pulumi:"maxMemoryUsage"`
	// Limits the maximum memory usage (in bytes) for processing of user's queries on a single server.
	MaxMemoryUsageForUser int `pulumi:"maxMemoryUsageForUser"`
	// Limits the speed of the data exchange over the network in bytes per second.
	MaxNetworkBandwidth int `pulumi:"maxNetworkBandwidth"`
	// Limits the speed of the data exchange over the network in bytes per second.
	MaxNetworkBandwidthForUser int `pulumi:"maxNetworkBandwidthForUser"`
	// The maximum part of a query that can be taken to RAM for parsing with the SQL parser.
	MaxQuerySize int `pulumi:"maxQuerySize"`
	// Disables lagging replicas for distributed queries.
	MaxReplicaDelayForDistributedQueries int `pulumi:"maxReplicaDelayForDistributedQueries"`
	// Limits the number of bytes in the result.
	MaxResultBytes int `pulumi:"maxResultBytes"`
	// Limits the number of rows in the result.
	MaxResultRows int `pulumi:"maxResultRows"`
	// Limits the maximum number of different rows when using DISTINCT.
	MaxRowsInDistinct int `pulumi:"maxRowsInDistinct"`
	// Limit on maximum size of the hash table for JOIN, in rows.
	MaxRowsInJoin int `pulumi:"maxRowsInJoin"`
	// Limit on the number of rows in the set resulting from the execution of the IN section.
	MaxRowsInSet int `pulumi:"maxRowsInSet"`
	// Limits the maximum number of unique keys received from aggregation function.
	MaxRowsToGroupBy int `pulumi:"maxRowsToGroupBy"`
	// Limits the maximum number of rows that can be read from a table when running a query.
	MaxRowsToRead int `pulumi:"maxRowsToRead"`
	// Limits the maximum number of rows that can be read from a table for sorting.
	MaxRowsToSort int `pulumi:"maxRowsToSort"`
	// Limits the maximum number of rows that can be passed to a remote server or saved in a temporary table when using GLOBAL IN.
	MaxRowsToTransfer int `pulumi:"maxRowsToTransfer"`
	// Limits the maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
	MaxTemporaryColumns int `pulumi:"maxTemporaryColumns"`
	// Limits the maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
	MaxTemporaryNonConstColumns int `pulumi:"maxTemporaryNonConstColumns"`
	// The maximum number of query processing threads, excluding threads for retrieving data from remote servers.
	MaxThreads int `pulumi:"maxThreads"`
	// If ClickHouse should read more than mergeTreeMaxBytesToUseCache bytes in one query, it doesn’t use the cache of uncompressed blocks.
	MergeTreeMaxBytesToUseCache int `pulumi:"mergeTreeMaxBytesToUseCache"`
	// If ClickHouse should read more than mergeTreeMaxRowsToUseCache rows in one query, it doesn’t use the cache of uncompressed blocks.
	MergeTreeMaxRowsToUseCache int `pulumi:"mergeTreeMaxRowsToUseCache"`
	// If the number of bytes to read from one file of a MergeTree-engine table exceeds merge_tree_min_bytes_for_concurrent_read, then ClickHouse tries to concurrently read from this file in several threads.
	MergeTreeMinBytesForConcurrentRead int `pulumi:"mergeTreeMinBytesForConcurrentRead"`
	// If the number of rows to be read from a file of a MergeTree table exceeds mergeTreeMinRowsForConcurrentRead then ClickHouse tries to perform a concurrent reading from this file on several threads.
	MergeTreeMinRowsForConcurrentRead int `pulumi:"mergeTreeMinRowsForConcurrentRead"`
	// The minimum data volume required for using direct I/O access to the storage disk.
	MinBytesToUseDirectIo int `pulumi:"minBytesToUseDirectIo"`
	// How many times to potentially use a compiled chunk of code before running compilation.
	MinCountToCompile int `pulumi:"minCountToCompile"`
	// A query waits for expression compilation process to complete prior to continuing execution.
	MinCountToCompileExpression int `pulumi:"minCountToCompileExpression"`
	// Minimal execution speed in rows per second.
	MinExecutionSpeed int `pulumi:"minExecutionSpeed"`
	// Minimal execution speed in bytes per second.
	MinExecutionSpeedBytes int `pulumi:"minExecutionSpeedBytes"`
	// Sets the minimum number of bytes in the block which can be inserted into a table by an INSERT query.
	MinInsertBlockSizeBytes int `pulumi:"minInsertBlockSizeBytes"`
	// Sets the minimum number of rows in the block which can be inserted into a table by an INSERT query.
	MinInsertBlockSizeRows int `pulumi:"minInsertBlockSizeRows"`
	// If the value is true, integers appear in quotes when using JSON* Int64 and UInt64 formats (for compatibility with most JavaScript implementations); otherwise, integers are output without the quotes.
	OutputFormatJsonQuote64bitIntegers bool `pulumi:"outputFormatJsonQuote64bitIntegers"`
	// Enables +nan, -nan, +inf, -inf outputs in JSON output format.
	OutputFormatJsonQuoteDenormals bool `pulumi:"outputFormatJsonQuoteDenormals"`
	// Query priority.
	Priority int `pulumi:"priority"`
	// Quota accounting mode.
	QuotaMode string `pulumi:"quotaMode"`
	// Sets behaviour on overflow while read. Possible values:
	ReadOverflowMode string `pulumi:"readOverflowMode"`
	// Restricts permissions for reading data, write data and change settings queries.
	Readonly int `pulumi:"readonly"`
	// Receive timeout in milliseconds on the socket used for communicating with the client.
	ReceiveTimeout int `pulumi:"receiveTimeout"`
	// For ALTER ... ATTACH|DETACH|DROP queries, you can use the replicationAlterPartitionsSync setting to set up waiting.
	ReplicationAlterPartitionsSync int `pulumi:"replicationAlterPartitionsSync"`
	// Sets behaviour on overflow in result. Possible values:
	ResultOverflowMode string `pulumi:"resultOverflowMode"`
	// Enables or disables sequential consistency for SELECT queries.
	SelectSequentialConsistency bool `pulumi:"selectSequentialConsistency"`
	// Enables or disables X-ClickHouse-Progress HTTP response headers in clickhouse-server responses.
	SendProgressInHttpHeaders bool `pulumi:"sendProgressInHttpHeaders"`
	// Send timeout in milliseconds on the socket used for communicating with the client.
	SendTimeout int `pulumi:"sendTimeout"`
	// Sets behaviour on overflow in the set resulting. Possible values:
	SetOverflowMode string `pulumi:"setOverflowMode"`
	// Enables or disables silently skipping of unavailable shards.
	SkipUnavailableShards bool `pulumi:"skipUnavailableShards"`
	// Sets behaviour on overflow while sort. Possible values:
	SortOverflowMode string `pulumi:"sortOverflowMode"`
	// Sets behaviour on overflow. Possible values:
	TimeoutOverflowMode string `pulumi:"timeoutOverflowMode"`
	// Sets behaviour on overflow. Possible values:
	TransferOverflowMode string `pulumi:"transferOverflowMode"`
	// Enables equality of NULL values for IN operator.
	TransformNullIn bool `pulumi:"transformNullIn"`
	// Whether to use a cache of uncompressed blocks.
	UseUncompressedCache bool `pulumi:"useUncompressedCache"`
}

// GetMdbClickhouseClusterUserSettingsInput is an input type that accepts GetMdbClickhouseClusterUserSettingsArgs and GetMdbClickhouseClusterUserSettingsOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterUserSettingsInput` via:
//
//          GetMdbClickhouseClusterUserSettingsArgs{...}
type GetMdbClickhouseClusterUserSettingsInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterUserSettingsOutput() GetMdbClickhouseClusterUserSettingsOutput
	ToGetMdbClickhouseClusterUserSettingsOutputWithContext(context.Context) GetMdbClickhouseClusterUserSettingsOutput
}

type GetMdbClickhouseClusterUserSettingsArgs struct {
	// Include CORS headers in HTTP responces.
	AddHttpCorsHeader pulumi.BoolInput `pulumi:"addHttpCorsHeader"`
	// Allows or denies DDL queries.
	AllowDdl pulumi.BoolInput `pulumi:"allowDdl"`
	// Enable compilation of queries.
	Compile pulumi.BoolInput `pulumi:"compile"`
	// Turn on expression compilation.
	CompileExpressions pulumi.BoolInput `pulumi:"compileExpressions"`
	// Connect timeout in milliseconds on the socket used for communicating with the client.
	ConnectTimeout pulumi.IntInput `pulumi:"connectTimeout"`
	// Specifies which of the uniq* functions should be used to perform the COUNT(DISTINCT …) construction.
	CountDistinctImplementation pulumi.StringInput `pulumi:"countDistinctImplementation"`
	// Sets behaviour on overflow when using DISTINCT. Possible values:
	DistinctOverflowMode pulumi.StringInput `pulumi:"distinctOverflowMode"`
	// Determine the behavior of distributed subqueries.
	DistributedAggregationMemoryEfficient pulumi.BoolInput `pulumi:"distributedAggregationMemoryEfficient"`
	// Timeout for DDL queries, in milliseconds.
	DistributedDdlTaskTimeout pulumi.IntInput `pulumi:"distributedDdlTaskTimeout"`
	// Changes the behaviour of distributed subqueries.
	DistributedProductMode pulumi.StringInput `pulumi:"distributedProductMode"`
	// Allows to retunr empty result.
	EmptyResultForAggregationByEmptySet pulumi.BoolInput `pulumi:"emptyResultForAggregationByEmptySet"`
	// Enables or disables data compression in the response to an HTTP request.
	EnableHttpCompression pulumi.BoolInput `pulumi:"enableHttpCompression"`
	// Forces a query to an out-of-date replica if updated data is not available.
	FallbackToStaleReplicasForDistributedQueries pulumi.BoolInput `pulumi:"fallbackToStaleReplicasForDistributedQueries"`
	// Disables query execution if the index can’t be used by date.
	ForceIndexByDate pulumi.BoolInput `pulumi:"forceIndexByDate"`
	// Disables query execution if indexing by the primary key is not possible.
	ForcePrimaryKey pulumi.BoolInput `pulumi:"forcePrimaryKey"`
	// Sets behaviour on overflow while GROUP BY operation. Possible values:
	GroupByOverflowMode pulumi.StringInput `pulumi:"groupByOverflowMode"`
	// Sets the threshold of the number of keys, after that the two-level aggregation should be used.
	GroupByTwoLevelThreshold pulumi.IntInput `pulumi:"groupByTwoLevelThreshold"`
	// Sets the threshold of the number of bytes, after that the two-level aggregation should be used.
	GroupByTwoLevelThresholdBytes pulumi.IntInput `pulumi:"groupByTwoLevelThresholdBytes"`
	// Timeout for HTTP connection in milliseconds.
	HttpConnectionTimeout pulumi.IntInput `pulumi:"httpConnectionTimeout"`
	// Sets minimal interval between notifications about request process in HTTP header X-ClickHouse-Progress.
	HttpHeadersProgressInterval pulumi.IntInput `pulumi:"httpHeadersProgressInterval"`
	// Timeout for HTTP connection in milliseconds.
	HttpReceiveTimeout pulumi.IntInput `pulumi:"httpReceiveTimeout"`
	// Timeout for HTTP connection in milliseconds.
	HttpSendTimeout pulumi.IntInput `pulumi:"httpSendTimeout"`
	// When performing INSERT queries, replace omitted input column values with default values of the respective columns.
	InputFormatDefaultsForOmittedFields pulumi.BoolInput `pulumi:"inputFormatDefaultsForOmittedFields"`
	// Enables or disables the full SQL parser if the fast stream parser can’t parse the data.
	InputFormatValuesInterpretExpressions pulumi.BoolInput `pulumi:"inputFormatValuesInterpretExpressions"`
	// Enables the quorum writes.
	InsertQuorum pulumi.IntInput `pulumi:"insertQuorum"`
	// Write to a quorum timeout in milliseconds.
	InsertQuorumTimeout pulumi.IntInput `pulumi:"insertQuorumTimeout"`
	// Sets behaviour on overflow in JOIN. Possible values:
	JoinOverflowMode pulumi.StringInput `pulumi:"joinOverflowMode"`
	// Sets the type of JOIN behaviour. When merging tables, empty cells may appear. ClickHouse fills them differently based on this setting.
	JoinUseNulls pulumi.BoolInput `pulumi:"joinUseNulls"`
	// Require aliases for subselects and table functions in FROM that more than one table is present.
	JoinedSubqueryRequiresAlias pulumi.BoolInput `pulumi:"joinedSubqueryRequiresAlias"`
	// Allows or restricts using the LowCardinality data type with the Native format.
	LowCardinalityAllowInNativeFormat pulumi.BoolInput `pulumi:"lowCardinalityAllowInNativeFormat"`
	// Maximum abstract syntax tree depth.
	MaxAstDepth pulumi.IntInput `pulumi:"maxAstDepth"`
	// Maximum abstract syntax tree elements.
	MaxAstElements pulumi.IntInput `pulumi:"maxAstElements"`
	// A recommendation for what size of the block (in a count of rows) to load from tables.
	MaxBlockSize pulumi.IntInput `pulumi:"maxBlockSize"`
	// Limit in bytes for using memoru for GROUP BY before using swap on disk.
	MaxBytesBeforeExternalGroupBy pulumi.IntInput `pulumi:"maxBytesBeforeExternalGroupBy"`
	// This setting is equivalent of the maxBytesBeforeExternalGroupBy setting, except for it is for sort operation (ORDER BY), not aggregation.
	MaxBytesBeforeExternalSort pulumi.IntInput `pulumi:"maxBytesBeforeExternalSort"`
	// Limits the maximum size of a hash table in bytes (uncompressed data) when using DISTINCT.
	MaxBytesInDistinct pulumi.IntInput `pulumi:"maxBytesInDistinct"`
	// Limit on maximum size of the hash table for JOIN, in bytes.
	MaxBytesInJoin pulumi.IntInput `pulumi:"maxBytesInJoin"`
	// Limit on the number of bytes in the set resulting from the execution of the IN section.
	MaxBytesInSet pulumi.IntInput `pulumi:"maxBytesInSet"`
	// Limits the maximum number of bytes (uncompressed data) that can be read from a table when running a query.
	MaxBytesToRead pulumi.IntInput `pulumi:"maxBytesToRead"`
	// Limits the maximum number of bytes (uncompressed data) that can be read from a table for sorting.
	MaxBytesToSort pulumi.IntInput `pulumi:"maxBytesToSort"`
	// Limits the maximum number of bytes (uncompressed data) that can be passed to a remote server or saved in a temporary table when using GLOBAL IN.
	MaxBytesToTransfer pulumi.IntInput `pulumi:"maxBytesToTransfer"`
	// Limits the maximum number of columns that can be read from a table in a single query.
	MaxColumnsToRead pulumi.IntInput `pulumi:"maxColumnsToRead"`
	// Limits the maximum query execution time in milliseconds.
	MaxExecutionTime pulumi.IntInput `pulumi:"maxExecutionTime"`
	// Maximum abstract syntax tree depth after after expansion of aliases.
	MaxExpandedAstElements pulumi.IntInput `pulumi:"maxExpandedAstElements"`
	// The size of blocks (in a count of rows) to form for insertion into a table.
	MaxInsertBlockSize pulumi.IntInput `pulumi:"maxInsertBlockSize"`
	// Limits the maximum memory usage (in bytes) for processing queries on a single server.
	MaxMemoryUsage pulumi.IntInput `pulumi:"maxMemoryUsage"`
	// Limits the maximum memory usage (in bytes) for processing of user's queries on a single server.
	MaxMemoryUsageForUser pulumi.IntInput `pulumi:"maxMemoryUsageForUser"`
	// Limits the speed of the data exchange over the network in bytes per second.
	MaxNetworkBandwidth pulumi.IntInput `pulumi:"maxNetworkBandwidth"`
	// Limits the speed of the data exchange over the network in bytes per second.
	MaxNetworkBandwidthForUser pulumi.IntInput `pulumi:"maxNetworkBandwidthForUser"`
	// The maximum part of a query that can be taken to RAM for parsing with the SQL parser.
	MaxQuerySize pulumi.IntInput `pulumi:"maxQuerySize"`
	// Disables lagging replicas for distributed queries.
	MaxReplicaDelayForDistributedQueries pulumi.IntInput `pulumi:"maxReplicaDelayForDistributedQueries"`
	// Limits the number of bytes in the result.
	MaxResultBytes pulumi.IntInput `pulumi:"maxResultBytes"`
	// Limits the number of rows in the result.
	MaxResultRows pulumi.IntInput `pulumi:"maxResultRows"`
	// Limits the maximum number of different rows when using DISTINCT.
	MaxRowsInDistinct pulumi.IntInput `pulumi:"maxRowsInDistinct"`
	// Limit on maximum size of the hash table for JOIN, in rows.
	MaxRowsInJoin pulumi.IntInput `pulumi:"maxRowsInJoin"`
	// Limit on the number of rows in the set resulting from the execution of the IN section.
	MaxRowsInSet pulumi.IntInput `pulumi:"maxRowsInSet"`
	// Limits the maximum number of unique keys received from aggregation function.
	MaxRowsToGroupBy pulumi.IntInput `pulumi:"maxRowsToGroupBy"`
	// Limits the maximum number of rows that can be read from a table when running a query.
	MaxRowsToRead pulumi.IntInput `pulumi:"maxRowsToRead"`
	// Limits the maximum number of rows that can be read from a table for sorting.
	MaxRowsToSort pulumi.IntInput `pulumi:"maxRowsToSort"`
	// Limits the maximum number of rows that can be passed to a remote server or saved in a temporary table when using GLOBAL IN.
	MaxRowsToTransfer pulumi.IntInput `pulumi:"maxRowsToTransfer"`
	// Limits the maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
	MaxTemporaryColumns pulumi.IntInput `pulumi:"maxTemporaryColumns"`
	// Limits the maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
	MaxTemporaryNonConstColumns pulumi.IntInput `pulumi:"maxTemporaryNonConstColumns"`
	// The maximum number of query processing threads, excluding threads for retrieving data from remote servers.
	MaxThreads pulumi.IntInput `pulumi:"maxThreads"`
	// If ClickHouse should read more than mergeTreeMaxBytesToUseCache bytes in one query, it doesn’t use the cache of uncompressed blocks.
	MergeTreeMaxBytesToUseCache pulumi.IntInput `pulumi:"mergeTreeMaxBytesToUseCache"`
	// If ClickHouse should read more than mergeTreeMaxRowsToUseCache rows in one query, it doesn’t use the cache of uncompressed blocks.
	MergeTreeMaxRowsToUseCache pulumi.IntInput `pulumi:"mergeTreeMaxRowsToUseCache"`
	// If the number of bytes to read from one file of a MergeTree-engine table exceeds merge_tree_min_bytes_for_concurrent_read, then ClickHouse tries to concurrently read from this file in several threads.
	MergeTreeMinBytesForConcurrentRead pulumi.IntInput `pulumi:"mergeTreeMinBytesForConcurrentRead"`
	// If the number of rows to be read from a file of a MergeTree table exceeds mergeTreeMinRowsForConcurrentRead then ClickHouse tries to perform a concurrent reading from this file on several threads.
	MergeTreeMinRowsForConcurrentRead pulumi.IntInput `pulumi:"mergeTreeMinRowsForConcurrentRead"`
	// The minimum data volume required for using direct I/O access to the storage disk.
	MinBytesToUseDirectIo pulumi.IntInput `pulumi:"minBytesToUseDirectIo"`
	// How many times to potentially use a compiled chunk of code before running compilation.
	MinCountToCompile pulumi.IntInput `pulumi:"minCountToCompile"`
	// A query waits for expression compilation process to complete prior to continuing execution.
	MinCountToCompileExpression pulumi.IntInput `pulumi:"minCountToCompileExpression"`
	// Minimal execution speed in rows per second.
	MinExecutionSpeed pulumi.IntInput `pulumi:"minExecutionSpeed"`
	// Minimal execution speed in bytes per second.
	MinExecutionSpeedBytes pulumi.IntInput `pulumi:"minExecutionSpeedBytes"`
	// Sets the minimum number of bytes in the block which can be inserted into a table by an INSERT query.
	MinInsertBlockSizeBytes pulumi.IntInput `pulumi:"minInsertBlockSizeBytes"`
	// Sets the minimum number of rows in the block which can be inserted into a table by an INSERT query.
	MinInsertBlockSizeRows pulumi.IntInput `pulumi:"minInsertBlockSizeRows"`
	// If the value is true, integers appear in quotes when using JSON* Int64 and UInt64 formats (for compatibility with most JavaScript implementations); otherwise, integers are output without the quotes.
	OutputFormatJsonQuote64bitIntegers pulumi.BoolInput `pulumi:"outputFormatJsonQuote64bitIntegers"`
	// Enables +nan, -nan, +inf, -inf outputs in JSON output format.
	OutputFormatJsonQuoteDenormals pulumi.BoolInput `pulumi:"outputFormatJsonQuoteDenormals"`
	// Query priority.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Quota accounting mode.
	QuotaMode pulumi.StringInput `pulumi:"quotaMode"`
	// Sets behaviour on overflow while read. Possible values:
	ReadOverflowMode pulumi.StringInput `pulumi:"readOverflowMode"`
	// Restricts permissions for reading data, write data and change settings queries.
	Readonly pulumi.IntInput `pulumi:"readonly"`
	// Receive timeout in milliseconds on the socket used for communicating with the client.
	ReceiveTimeout pulumi.IntInput `pulumi:"receiveTimeout"`
	// For ALTER ... ATTACH|DETACH|DROP queries, you can use the replicationAlterPartitionsSync setting to set up waiting.
	ReplicationAlterPartitionsSync pulumi.IntInput `pulumi:"replicationAlterPartitionsSync"`
	// Sets behaviour on overflow in result. Possible values:
	ResultOverflowMode pulumi.StringInput `pulumi:"resultOverflowMode"`
	// Enables or disables sequential consistency for SELECT queries.
	SelectSequentialConsistency pulumi.BoolInput `pulumi:"selectSequentialConsistency"`
	// Enables or disables X-ClickHouse-Progress HTTP response headers in clickhouse-server responses.
	SendProgressInHttpHeaders pulumi.BoolInput `pulumi:"sendProgressInHttpHeaders"`
	// Send timeout in milliseconds on the socket used for communicating with the client.
	SendTimeout pulumi.IntInput `pulumi:"sendTimeout"`
	// Sets behaviour on overflow in the set resulting. Possible values:
	SetOverflowMode pulumi.StringInput `pulumi:"setOverflowMode"`
	// Enables or disables silently skipping of unavailable shards.
	SkipUnavailableShards pulumi.BoolInput `pulumi:"skipUnavailableShards"`
	// Sets behaviour on overflow while sort. Possible values:
	SortOverflowMode pulumi.StringInput `pulumi:"sortOverflowMode"`
	// Sets behaviour on overflow. Possible values:
	TimeoutOverflowMode pulumi.StringInput `pulumi:"timeoutOverflowMode"`
	// Sets behaviour on overflow. Possible values:
	TransferOverflowMode pulumi.StringInput `pulumi:"transferOverflowMode"`
	// Enables equality of NULL values for IN operator.
	TransformNullIn pulumi.BoolInput `pulumi:"transformNullIn"`
	// Whether to use a cache of uncompressed blocks.
	UseUncompressedCache pulumi.BoolInput `pulumi:"useUncompressedCache"`
}

func (GetMdbClickhouseClusterUserSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterUserSettings)(nil)).Elem()
}

func (i GetMdbClickhouseClusterUserSettingsArgs) ToGetMdbClickhouseClusterUserSettingsOutput() GetMdbClickhouseClusterUserSettingsOutput {
	return i.ToGetMdbClickhouseClusterUserSettingsOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterUserSettingsArgs) ToGetMdbClickhouseClusterUserSettingsOutputWithContext(ctx context.Context) GetMdbClickhouseClusterUserSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterUserSettingsOutput)
}

type GetMdbClickhouseClusterUserSettingsOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterUserSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterUserSettings)(nil)).Elem()
}

func (o GetMdbClickhouseClusterUserSettingsOutput) ToGetMdbClickhouseClusterUserSettingsOutput() GetMdbClickhouseClusterUserSettingsOutput {
	return o
}

func (o GetMdbClickhouseClusterUserSettingsOutput) ToGetMdbClickhouseClusterUserSettingsOutputWithContext(ctx context.Context) GetMdbClickhouseClusterUserSettingsOutput {
	return o
}

// Include CORS headers in HTTP responces.
func (o GetMdbClickhouseClusterUserSettingsOutput) AddHttpCorsHeader() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) bool { return v.AddHttpCorsHeader }).(pulumi.BoolOutput)
}

// Allows or denies DDL queries.
func (o GetMdbClickhouseClusterUserSettingsOutput) AllowDdl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) bool { return v.AllowDdl }).(pulumi.BoolOutput)
}

// Enable compilation of queries.
func (o GetMdbClickhouseClusterUserSettingsOutput) Compile() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) bool { return v.Compile }).(pulumi.BoolOutput)
}

// Turn on expression compilation.
func (o GetMdbClickhouseClusterUserSettingsOutput) CompileExpressions() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) bool { return v.CompileExpressions }).(pulumi.BoolOutput)
}

// Connect timeout in milliseconds on the socket used for communicating with the client.
func (o GetMdbClickhouseClusterUserSettingsOutput) ConnectTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.ConnectTimeout }).(pulumi.IntOutput)
}

// Specifies which of the uniq* functions should be used to perform the COUNT(DISTINCT …) construction.
func (o GetMdbClickhouseClusterUserSettingsOutput) CountDistinctImplementation() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) string { return v.CountDistinctImplementation }).(pulumi.StringOutput)
}

// Sets behaviour on overflow when using DISTINCT. Possible values:
func (o GetMdbClickhouseClusterUserSettingsOutput) DistinctOverflowMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) string { return v.DistinctOverflowMode }).(pulumi.StringOutput)
}

// Determine the behavior of distributed subqueries.
func (o GetMdbClickhouseClusterUserSettingsOutput) DistributedAggregationMemoryEfficient() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) bool { return v.DistributedAggregationMemoryEfficient }).(pulumi.BoolOutput)
}

// Timeout for DDL queries, in milliseconds.
func (o GetMdbClickhouseClusterUserSettingsOutput) DistributedDdlTaskTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.DistributedDdlTaskTimeout }).(pulumi.IntOutput)
}

// Changes the behaviour of distributed subqueries.
func (o GetMdbClickhouseClusterUserSettingsOutput) DistributedProductMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) string { return v.DistributedProductMode }).(pulumi.StringOutput)
}

// Allows to retunr empty result.
func (o GetMdbClickhouseClusterUserSettingsOutput) EmptyResultForAggregationByEmptySet() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) bool { return v.EmptyResultForAggregationByEmptySet }).(pulumi.BoolOutput)
}

// Enables or disables data compression in the response to an HTTP request.
func (o GetMdbClickhouseClusterUserSettingsOutput) EnableHttpCompression() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) bool { return v.EnableHttpCompression }).(pulumi.BoolOutput)
}

// Forces a query to an out-of-date replica if updated data is not available.
func (o GetMdbClickhouseClusterUserSettingsOutput) FallbackToStaleReplicasForDistributedQueries() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) bool {
		return v.FallbackToStaleReplicasForDistributedQueries
	}).(pulumi.BoolOutput)
}

// Disables query execution if the index can’t be used by date.
func (o GetMdbClickhouseClusterUserSettingsOutput) ForceIndexByDate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) bool { return v.ForceIndexByDate }).(pulumi.BoolOutput)
}

// Disables query execution if indexing by the primary key is not possible.
func (o GetMdbClickhouseClusterUserSettingsOutput) ForcePrimaryKey() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) bool { return v.ForcePrimaryKey }).(pulumi.BoolOutput)
}

// Sets behaviour on overflow while GROUP BY operation. Possible values:
func (o GetMdbClickhouseClusterUserSettingsOutput) GroupByOverflowMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) string { return v.GroupByOverflowMode }).(pulumi.StringOutput)
}

// Sets the threshold of the number of keys, after that the two-level aggregation should be used.
func (o GetMdbClickhouseClusterUserSettingsOutput) GroupByTwoLevelThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.GroupByTwoLevelThreshold }).(pulumi.IntOutput)
}

// Sets the threshold of the number of bytes, after that the two-level aggregation should be used.
func (o GetMdbClickhouseClusterUserSettingsOutput) GroupByTwoLevelThresholdBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.GroupByTwoLevelThresholdBytes }).(pulumi.IntOutput)
}

// Timeout for HTTP connection in milliseconds.
func (o GetMdbClickhouseClusterUserSettingsOutput) HttpConnectionTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.HttpConnectionTimeout }).(pulumi.IntOutput)
}

// Sets minimal interval between notifications about request process in HTTP header X-ClickHouse-Progress.
func (o GetMdbClickhouseClusterUserSettingsOutput) HttpHeadersProgressInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.HttpHeadersProgressInterval }).(pulumi.IntOutput)
}

// Timeout for HTTP connection in milliseconds.
func (o GetMdbClickhouseClusterUserSettingsOutput) HttpReceiveTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.HttpReceiveTimeout }).(pulumi.IntOutput)
}

// Timeout for HTTP connection in milliseconds.
func (o GetMdbClickhouseClusterUserSettingsOutput) HttpSendTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.HttpSendTimeout }).(pulumi.IntOutput)
}

// When performing INSERT queries, replace omitted input column values with default values of the respective columns.
func (o GetMdbClickhouseClusterUserSettingsOutput) InputFormatDefaultsForOmittedFields() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) bool { return v.InputFormatDefaultsForOmittedFields }).(pulumi.BoolOutput)
}

// Enables or disables the full SQL parser if the fast stream parser can’t parse the data.
func (o GetMdbClickhouseClusterUserSettingsOutput) InputFormatValuesInterpretExpressions() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) bool { return v.InputFormatValuesInterpretExpressions }).(pulumi.BoolOutput)
}

// Enables the quorum writes.
func (o GetMdbClickhouseClusterUserSettingsOutput) InsertQuorum() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.InsertQuorum }).(pulumi.IntOutput)
}

// Write to a quorum timeout in milliseconds.
func (o GetMdbClickhouseClusterUserSettingsOutput) InsertQuorumTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.InsertQuorumTimeout }).(pulumi.IntOutput)
}

// Sets behaviour on overflow in JOIN. Possible values:
func (o GetMdbClickhouseClusterUserSettingsOutput) JoinOverflowMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) string { return v.JoinOverflowMode }).(pulumi.StringOutput)
}

// Sets the type of JOIN behaviour. When merging tables, empty cells may appear. ClickHouse fills them differently based on this setting.
func (o GetMdbClickhouseClusterUserSettingsOutput) JoinUseNulls() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) bool { return v.JoinUseNulls }).(pulumi.BoolOutput)
}

// Require aliases for subselects and table functions in FROM that more than one table is present.
func (o GetMdbClickhouseClusterUserSettingsOutput) JoinedSubqueryRequiresAlias() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) bool { return v.JoinedSubqueryRequiresAlias }).(pulumi.BoolOutput)
}

// Allows or restricts using the LowCardinality data type with the Native format.
func (o GetMdbClickhouseClusterUserSettingsOutput) LowCardinalityAllowInNativeFormat() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) bool { return v.LowCardinalityAllowInNativeFormat }).(pulumi.BoolOutput)
}

// Maximum abstract syntax tree depth.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxAstDepth() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxAstDepth }).(pulumi.IntOutput)
}

// Maximum abstract syntax tree elements.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxAstElements() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxAstElements }).(pulumi.IntOutput)
}

// A recommendation for what size of the block (in a count of rows) to load from tables.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxBlockSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxBlockSize }).(pulumi.IntOutput)
}

// Limit in bytes for using memoru for GROUP BY before using swap on disk.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxBytesBeforeExternalGroupBy() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxBytesBeforeExternalGroupBy }).(pulumi.IntOutput)
}

// This setting is equivalent of the maxBytesBeforeExternalGroupBy setting, except for it is for sort operation (ORDER BY), not aggregation.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxBytesBeforeExternalSort() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxBytesBeforeExternalSort }).(pulumi.IntOutput)
}

// Limits the maximum size of a hash table in bytes (uncompressed data) when using DISTINCT.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxBytesInDistinct() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxBytesInDistinct }).(pulumi.IntOutput)
}

// Limit on maximum size of the hash table for JOIN, in bytes.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxBytesInJoin() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxBytesInJoin }).(pulumi.IntOutput)
}

// Limit on the number of bytes in the set resulting from the execution of the IN section.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxBytesInSet() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxBytesInSet }).(pulumi.IntOutput)
}

// Limits the maximum number of bytes (uncompressed data) that can be read from a table when running a query.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxBytesToRead() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxBytesToRead }).(pulumi.IntOutput)
}

// Limits the maximum number of bytes (uncompressed data) that can be read from a table for sorting.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxBytesToSort() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxBytesToSort }).(pulumi.IntOutput)
}

// Limits the maximum number of bytes (uncompressed data) that can be passed to a remote server or saved in a temporary table when using GLOBAL IN.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxBytesToTransfer() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxBytesToTransfer }).(pulumi.IntOutput)
}

// Limits the maximum number of columns that can be read from a table in a single query.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxColumnsToRead() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxColumnsToRead }).(pulumi.IntOutput)
}

// Limits the maximum query execution time in milliseconds.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxExecutionTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxExecutionTime }).(pulumi.IntOutput)
}

// Maximum abstract syntax tree depth after after expansion of aliases.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxExpandedAstElements() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxExpandedAstElements }).(pulumi.IntOutput)
}

// The size of blocks (in a count of rows) to form for insertion into a table.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxInsertBlockSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxInsertBlockSize }).(pulumi.IntOutput)
}

// Limits the maximum memory usage (in bytes) for processing queries on a single server.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxMemoryUsage() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxMemoryUsage }).(pulumi.IntOutput)
}

// Limits the maximum memory usage (in bytes) for processing of user's queries on a single server.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxMemoryUsageForUser() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxMemoryUsageForUser }).(pulumi.IntOutput)
}

// Limits the speed of the data exchange over the network in bytes per second.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxNetworkBandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxNetworkBandwidth }).(pulumi.IntOutput)
}

// Limits the speed of the data exchange over the network in bytes per second.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxNetworkBandwidthForUser() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxNetworkBandwidthForUser }).(pulumi.IntOutput)
}

// The maximum part of a query that can be taken to RAM for parsing with the SQL parser.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxQuerySize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxQuerySize }).(pulumi.IntOutput)
}

// Disables lagging replicas for distributed queries.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxReplicaDelayForDistributedQueries() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxReplicaDelayForDistributedQueries }).(pulumi.IntOutput)
}

// Limits the number of bytes in the result.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxResultBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxResultBytes }).(pulumi.IntOutput)
}

// Limits the number of rows in the result.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxResultRows() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxResultRows }).(pulumi.IntOutput)
}

// Limits the maximum number of different rows when using DISTINCT.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxRowsInDistinct() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxRowsInDistinct }).(pulumi.IntOutput)
}

// Limit on maximum size of the hash table for JOIN, in rows.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxRowsInJoin() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxRowsInJoin }).(pulumi.IntOutput)
}

// Limit on the number of rows in the set resulting from the execution of the IN section.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxRowsInSet() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxRowsInSet }).(pulumi.IntOutput)
}

// Limits the maximum number of unique keys received from aggregation function.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxRowsToGroupBy() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxRowsToGroupBy }).(pulumi.IntOutput)
}

// Limits the maximum number of rows that can be read from a table when running a query.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxRowsToRead() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxRowsToRead }).(pulumi.IntOutput)
}

// Limits the maximum number of rows that can be read from a table for sorting.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxRowsToSort() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxRowsToSort }).(pulumi.IntOutput)
}

// Limits the maximum number of rows that can be passed to a remote server or saved in a temporary table when using GLOBAL IN.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxRowsToTransfer() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxRowsToTransfer }).(pulumi.IntOutput)
}

// Limits the maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxTemporaryColumns() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxTemporaryColumns }).(pulumi.IntOutput)
}

// Limits the maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxTemporaryNonConstColumns() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxTemporaryNonConstColumns }).(pulumi.IntOutput)
}

// The maximum number of query processing threads, excluding threads for retrieving data from remote servers.
func (o GetMdbClickhouseClusterUserSettingsOutput) MaxThreads() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MaxThreads }).(pulumi.IntOutput)
}

// If ClickHouse should read more than mergeTreeMaxBytesToUseCache bytes in one query, it doesn’t use the cache of uncompressed blocks.
func (o GetMdbClickhouseClusterUserSettingsOutput) MergeTreeMaxBytesToUseCache() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MergeTreeMaxBytesToUseCache }).(pulumi.IntOutput)
}

// If ClickHouse should read more than mergeTreeMaxRowsToUseCache rows in one query, it doesn’t use the cache of uncompressed blocks.
func (o GetMdbClickhouseClusterUserSettingsOutput) MergeTreeMaxRowsToUseCache() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MergeTreeMaxRowsToUseCache }).(pulumi.IntOutput)
}

// If the number of bytes to read from one file of a MergeTree-engine table exceeds merge_tree_min_bytes_for_concurrent_read, then ClickHouse tries to concurrently read from this file in several threads.
func (o GetMdbClickhouseClusterUserSettingsOutput) MergeTreeMinBytesForConcurrentRead() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MergeTreeMinBytesForConcurrentRead }).(pulumi.IntOutput)
}

// If the number of rows to be read from a file of a MergeTree table exceeds mergeTreeMinRowsForConcurrentRead then ClickHouse tries to perform a concurrent reading from this file on several threads.
func (o GetMdbClickhouseClusterUserSettingsOutput) MergeTreeMinRowsForConcurrentRead() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MergeTreeMinRowsForConcurrentRead }).(pulumi.IntOutput)
}

// The minimum data volume required for using direct I/O access to the storage disk.
func (o GetMdbClickhouseClusterUserSettingsOutput) MinBytesToUseDirectIo() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MinBytesToUseDirectIo }).(pulumi.IntOutput)
}

// How many times to potentially use a compiled chunk of code before running compilation.
func (o GetMdbClickhouseClusterUserSettingsOutput) MinCountToCompile() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MinCountToCompile }).(pulumi.IntOutput)
}

// A query waits for expression compilation process to complete prior to continuing execution.
func (o GetMdbClickhouseClusterUserSettingsOutput) MinCountToCompileExpression() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MinCountToCompileExpression }).(pulumi.IntOutput)
}

// Minimal execution speed in rows per second.
func (o GetMdbClickhouseClusterUserSettingsOutput) MinExecutionSpeed() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MinExecutionSpeed }).(pulumi.IntOutput)
}

// Minimal execution speed in bytes per second.
func (o GetMdbClickhouseClusterUserSettingsOutput) MinExecutionSpeedBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MinExecutionSpeedBytes }).(pulumi.IntOutput)
}

// Sets the minimum number of bytes in the block which can be inserted into a table by an INSERT query.
func (o GetMdbClickhouseClusterUserSettingsOutput) MinInsertBlockSizeBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MinInsertBlockSizeBytes }).(pulumi.IntOutput)
}

// Sets the minimum number of rows in the block which can be inserted into a table by an INSERT query.
func (o GetMdbClickhouseClusterUserSettingsOutput) MinInsertBlockSizeRows() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.MinInsertBlockSizeRows }).(pulumi.IntOutput)
}

// If the value is true, integers appear in quotes when using JSON* Int64 and UInt64 formats (for compatibility with most JavaScript implementations); otherwise, integers are output without the quotes.
func (o GetMdbClickhouseClusterUserSettingsOutput) OutputFormatJsonQuote64bitIntegers() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) bool { return v.OutputFormatJsonQuote64bitIntegers }).(pulumi.BoolOutput)
}

// Enables +nan, -nan, +inf, -inf outputs in JSON output format.
func (o GetMdbClickhouseClusterUserSettingsOutput) OutputFormatJsonQuoteDenormals() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) bool { return v.OutputFormatJsonQuoteDenormals }).(pulumi.BoolOutput)
}

// Query priority.
func (o GetMdbClickhouseClusterUserSettingsOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.Priority }).(pulumi.IntOutput)
}

// Quota accounting mode.
func (o GetMdbClickhouseClusterUserSettingsOutput) QuotaMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) string { return v.QuotaMode }).(pulumi.StringOutput)
}

// Sets behaviour on overflow while read. Possible values:
func (o GetMdbClickhouseClusterUserSettingsOutput) ReadOverflowMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) string { return v.ReadOverflowMode }).(pulumi.StringOutput)
}

// Restricts permissions for reading data, write data and change settings queries.
func (o GetMdbClickhouseClusterUserSettingsOutput) Readonly() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.Readonly }).(pulumi.IntOutput)
}

// Receive timeout in milliseconds on the socket used for communicating with the client.
func (o GetMdbClickhouseClusterUserSettingsOutput) ReceiveTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.ReceiveTimeout }).(pulumi.IntOutput)
}

// For ALTER ... ATTACH|DETACH|DROP queries, you can use the replicationAlterPartitionsSync setting to set up waiting.
func (o GetMdbClickhouseClusterUserSettingsOutput) ReplicationAlterPartitionsSync() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.ReplicationAlterPartitionsSync }).(pulumi.IntOutput)
}

// Sets behaviour on overflow in result. Possible values:
func (o GetMdbClickhouseClusterUserSettingsOutput) ResultOverflowMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) string { return v.ResultOverflowMode }).(pulumi.StringOutput)
}

// Enables or disables sequential consistency for SELECT queries.
func (o GetMdbClickhouseClusterUserSettingsOutput) SelectSequentialConsistency() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) bool { return v.SelectSequentialConsistency }).(pulumi.BoolOutput)
}

// Enables or disables X-ClickHouse-Progress HTTP response headers in clickhouse-server responses.
func (o GetMdbClickhouseClusterUserSettingsOutput) SendProgressInHttpHeaders() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) bool { return v.SendProgressInHttpHeaders }).(pulumi.BoolOutput)
}

// Send timeout in milliseconds on the socket used for communicating with the client.
func (o GetMdbClickhouseClusterUserSettingsOutput) SendTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) int { return v.SendTimeout }).(pulumi.IntOutput)
}

// Sets behaviour on overflow in the set resulting. Possible values:
func (o GetMdbClickhouseClusterUserSettingsOutput) SetOverflowMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) string { return v.SetOverflowMode }).(pulumi.StringOutput)
}

// Enables or disables silently skipping of unavailable shards.
func (o GetMdbClickhouseClusterUserSettingsOutput) SkipUnavailableShards() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) bool { return v.SkipUnavailableShards }).(pulumi.BoolOutput)
}

// Sets behaviour on overflow while sort. Possible values:
func (o GetMdbClickhouseClusterUserSettingsOutput) SortOverflowMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) string { return v.SortOverflowMode }).(pulumi.StringOutput)
}

// Sets behaviour on overflow. Possible values:
func (o GetMdbClickhouseClusterUserSettingsOutput) TimeoutOverflowMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) string { return v.TimeoutOverflowMode }).(pulumi.StringOutput)
}

// Sets behaviour on overflow. Possible values:
func (o GetMdbClickhouseClusterUserSettingsOutput) TransferOverflowMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) string { return v.TransferOverflowMode }).(pulumi.StringOutput)
}

// Enables equality of NULL values for IN operator.
func (o GetMdbClickhouseClusterUserSettingsOutput) TransformNullIn() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) bool { return v.TransformNullIn }).(pulumi.BoolOutput)
}

// Whether to use a cache of uncompressed blocks.
func (o GetMdbClickhouseClusterUserSettingsOutput) UseUncompressedCache() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterUserSettings) bool { return v.UseUncompressedCache }).(pulumi.BoolOutput)
}

type GetMdbClickhouseClusterZookeeper struct {
	// Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
	Resources GetMdbClickhouseClusterZookeeperResources `pulumi:"resources"`
}

// GetMdbClickhouseClusterZookeeperInput is an input type that accepts GetMdbClickhouseClusterZookeeperArgs and GetMdbClickhouseClusterZookeeperOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterZookeeperInput` via:
//
//          GetMdbClickhouseClusterZookeeperArgs{...}
type GetMdbClickhouseClusterZookeeperInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterZookeeperOutput() GetMdbClickhouseClusterZookeeperOutput
	ToGetMdbClickhouseClusterZookeeperOutputWithContext(context.Context) GetMdbClickhouseClusterZookeeperOutput
}

type GetMdbClickhouseClusterZookeeperArgs struct {
	// Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
	Resources GetMdbClickhouseClusterZookeeperResourcesInput `pulumi:"resources"`
}

func (GetMdbClickhouseClusterZookeeperArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterZookeeper)(nil)).Elem()
}

func (i GetMdbClickhouseClusterZookeeperArgs) ToGetMdbClickhouseClusterZookeeperOutput() GetMdbClickhouseClusterZookeeperOutput {
	return i.ToGetMdbClickhouseClusterZookeeperOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterZookeeperArgs) ToGetMdbClickhouseClusterZookeeperOutputWithContext(ctx context.Context) GetMdbClickhouseClusterZookeeperOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterZookeeperOutput)
}

type GetMdbClickhouseClusterZookeeperOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterZookeeperOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterZookeeper)(nil)).Elem()
}

func (o GetMdbClickhouseClusterZookeeperOutput) ToGetMdbClickhouseClusterZookeeperOutput() GetMdbClickhouseClusterZookeeperOutput {
	return o
}

func (o GetMdbClickhouseClusterZookeeperOutput) ToGetMdbClickhouseClusterZookeeperOutputWithContext(ctx context.Context) GetMdbClickhouseClusterZookeeperOutput {
	return o
}

// Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
func (o GetMdbClickhouseClusterZookeeperOutput) Resources() GetMdbClickhouseClusterZookeeperResourcesOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterZookeeper) GetMdbClickhouseClusterZookeeperResources { return v.Resources }).(GetMdbClickhouseClusterZookeeperResourcesOutput)
}

type GetMdbClickhouseClusterZookeeperResources struct {
	// Volume of the storage available to a ClickHouse or ZooKeeper host, in gigabytes.
	DiskSize int `pulumi:"diskSize"`
	// Type of the storage of ClickHouse or ZooKeeper hosts.
	DiskTypeId       string `pulumi:"diskTypeId"`
	ResourcePresetId string `pulumi:"resourcePresetId"`
}

// GetMdbClickhouseClusterZookeeperResourcesInput is an input type that accepts GetMdbClickhouseClusterZookeeperResourcesArgs and GetMdbClickhouseClusterZookeeperResourcesOutput values.
// You can construct a concrete instance of `GetMdbClickhouseClusterZookeeperResourcesInput` via:
//
//          GetMdbClickhouseClusterZookeeperResourcesArgs{...}
type GetMdbClickhouseClusterZookeeperResourcesInput interface {
	pulumi.Input

	ToGetMdbClickhouseClusterZookeeperResourcesOutput() GetMdbClickhouseClusterZookeeperResourcesOutput
	ToGetMdbClickhouseClusterZookeeperResourcesOutputWithContext(context.Context) GetMdbClickhouseClusterZookeeperResourcesOutput
}

type GetMdbClickhouseClusterZookeeperResourcesArgs struct {
	// Volume of the storage available to a ClickHouse or ZooKeeper host, in gigabytes.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// Type of the storage of ClickHouse or ZooKeeper hosts.
	DiskTypeId       pulumi.StringInput `pulumi:"diskTypeId"`
	ResourcePresetId pulumi.StringInput `pulumi:"resourcePresetId"`
}

func (GetMdbClickhouseClusterZookeeperResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterZookeeperResources)(nil)).Elem()
}

func (i GetMdbClickhouseClusterZookeeperResourcesArgs) ToGetMdbClickhouseClusterZookeeperResourcesOutput() GetMdbClickhouseClusterZookeeperResourcesOutput {
	return i.ToGetMdbClickhouseClusterZookeeperResourcesOutputWithContext(context.Background())
}

func (i GetMdbClickhouseClusterZookeeperResourcesArgs) ToGetMdbClickhouseClusterZookeeperResourcesOutputWithContext(ctx context.Context) GetMdbClickhouseClusterZookeeperResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbClickhouseClusterZookeeperResourcesOutput)
}

type GetMdbClickhouseClusterZookeeperResourcesOutput struct{ *pulumi.OutputState }

func (GetMdbClickhouseClusterZookeeperResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbClickhouseClusterZookeeperResources)(nil)).Elem()
}

func (o GetMdbClickhouseClusterZookeeperResourcesOutput) ToGetMdbClickhouseClusterZookeeperResourcesOutput() GetMdbClickhouseClusterZookeeperResourcesOutput {
	return o
}

func (o GetMdbClickhouseClusterZookeeperResourcesOutput) ToGetMdbClickhouseClusterZookeeperResourcesOutputWithContext(ctx context.Context) GetMdbClickhouseClusterZookeeperResourcesOutput {
	return o
}

// Volume of the storage available to a ClickHouse or ZooKeeper host, in gigabytes.
func (o GetMdbClickhouseClusterZookeeperResourcesOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterZookeeperResources) int { return v.DiskSize }).(pulumi.IntOutput)
}

// Type of the storage of ClickHouse or ZooKeeper hosts.
func (o GetMdbClickhouseClusterZookeeperResourcesOutput) DiskTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterZookeeperResources) string { return v.DiskTypeId }).(pulumi.StringOutput)
}

func (o GetMdbClickhouseClusterZookeeperResourcesOutput) ResourcePresetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbClickhouseClusterZookeeperResources) string { return v.ResourcePresetId }).(pulumi.StringOutput)
}

type GetMdbKafkaClusterConfig struct {
	// The flag that defines whether a public IP address is assigned to the node.
	AssignPublicIp *bool `pulumi:"assignPublicIp"`
	// (Optional) Count of brokers per availability zone.
	BrokersCount *int `pulumi:"brokersCount"`
	// (Optional) Configuration of the Kafka subcluster. The structure is documented below.
	Kafka GetMdbKafkaClusterConfigKafka `pulumi:"kafka"`
	// (Optional) Allows to use Kafka AdminAPI to manage topics. Can be either `true` or `false`.
	UnmanagedTopics *bool `pulumi:"unmanagedTopics"`
	// (Required) Version of the Kafka server software.
	Version string `pulumi:"version"`
	// (Optional) List of availability zones.
	Zones []string `pulumi:"zones"`
	// (Optional) Configuration of the ZooKeeper subcluster. The structure is documented below.
	Zookeeper *GetMdbKafkaClusterConfigZookeeper `pulumi:"zookeeper"`
}

// GetMdbKafkaClusterConfigInput is an input type that accepts GetMdbKafkaClusterConfigArgs and GetMdbKafkaClusterConfigOutput values.
// You can construct a concrete instance of `GetMdbKafkaClusterConfigInput` via:
//
//          GetMdbKafkaClusterConfigArgs{...}
type GetMdbKafkaClusterConfigInput interface {
	pulumi.Input

	ToGetMdbKafkaClusterConfigOutput() GetMdbKafkaClusterConfigOutput
	ToGetMdbKafkaClusterConfigOutputWithContext(context.Context) GetMdbKafkaClusterConfigOutput
}

type GetMdbKafkaClusterConfigArgs struct {
	// The flag that defines whether a public IP address is assigned to the node.
	AssignPublicIp pulumi.BoolPtrInput `pulumi:"assignPublicIp"`
	// (Optional) Count of brokers per availability zone.
	BrokersCount pulumi.IntPtrInput `pulumi:"brokersCount"`
	// (Optional) Configuration of the Kafka subcluster. The structure is documented below.
	Kafka GetMdbKafkaClusterConfigKafkaInput `pulumi:"kafka"`
	// (Optional) Allows to use Kafka AdminAPI to manage topics. Can be either `true` or `false`.
	UnmanagedTopics pulumi.BoolPtrInput `pulumi:"unmanagedTopics"`
	// (Required) Version of the Kafka server software.
	Version pulumi.StringInput `pulumi:"version"`
	// (Optional) List of availability zones.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
	// (Optional) Configuration of the ZooKeeper subcluster. The structure is documented below.
	Zookeeper GetMdbKafkaClusterConfigZookeeperPtrInput `pulumi:"zookeeper"`
}

func (GetMdbKafkaClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbKafkaClusterConfig)(nil)).Elem()
}

func (i GetMdbKafkaClusterConfigArgs) ToGetMdbKafkaClusterConfigOutput() GetMdbKafkaClusterConfigOutput {
	return i.ToGetMdbKafkaClusterConfigOutputWithContext(context.Background())
}

func (i GetMdbKafkaClusterConfigArgs) ToGetMdbKafkaClusterConfigOutputWithContext(ctx context.Context) GetMdbKafkaClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbKafkaClusterConfigOutput)
}

type GetMdbKafkaClusterConfigOutput struct{ *pulumi.OutputState }

func (GetMdbKafkaClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbKafkaClusterConfig)(nil)).Elem()
}

func (o GetMdbKafkaClusterConfigOutput) ToGetMdbKafkaClusterConfigOutput() GetMdbKafkaClusterConfigOutput {
	return o
}

func (o GetMdbKafkaClusterConfigOutput) ToGetMdbKafkaClusterConfigOutputWithContext(ctx context.Context) GetMdbKafkaClusterConfigOutput {
	return o
}

// The flag that defines whether a public IP address is assigned to the node.
func (o GetMdbKafkaClusterConfigOutput) AssignPublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfig) *bool { return v.AssignPublicIp }).(pulumi.BoolPtrOutput)
}

// (Optional) Count of brokers per availability zone.
func (o GetMdbKafkaClusterConfigOutput) BrokersCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfig) *int { return v.BrokersCount }).(pulumi.IntPtrOutput)
}

// (Optional) Configuration of the Kafka subcluster. The structure is documented below.
func (o GetMdbKafkaClusterConfigOutput) Kafka() GetMdbKafkaClusterConfigKafkaOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfig) GetMdbKafkaClusterConfigKafka { return v.Kafka }).(GetMdbKafkaClusterConfigKafkaOutput)
}

// (Optional) Allows to use Kafka AdminAPI to manage topics. Can be either `true` or `false`.
func (o GetMdbKafkaClusterConfigOutput) UnmanagedTopics() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfig) *bool { return v.UnmanagedTopics }).(pulumi.BoolPtrOutput)
}

// (Required) Version of the Kafka server software.
func (o GetMdbKafkaClusterConfigOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfig) string { return v.Version }).(pulumi.StringOutput)
}

// (Optional) List of availability zones.
func (o GetMdbKafkaClusterConfigOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfig) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

// (Optional) Configuration of the ZooKeeper subcluster. The structure is documented below.
func (o GetMdbKafkaClusterConfigOutput) Zookeeper() GetMdbKafkaClusterConfigZookeeperPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfig) *GetMdbKafkaClusterConfigZookeeper { return v.Zookeeper }).(GetMdbKafkaClusterConfigZookeeperPtrOutput)
}

type GetMdbKafkaClusterConfigKafka struct {
	// (Optional) User-defined settings for the Kafka cluster. The structure is documented below.
	KafkaConfig *GetMdbKafkaClusterConfigKafkaKafkaConfig `pulumi:"kafkaConfig"`
	// (Optional) Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
	Resources GetMdbKafkaClusterConfigKafkaResources `pulumi:"resources"`
}

// GetMdbKafkaClusterConfigKafkaInput is an input type that accepts GetMdbKafkaClusterConfigKafkaArgs and GetMdbKafkaClusterConfigKafkaOutput values.
// You can construct a concrete instance of `GetMdbKafkaClusterConfigKafkaInput` via:
//
//          GetMdbKafkaClusterConfigKafkaArgs{...}
type GetMdbKafkaClusterConfigKafkaInput interface {
	pulumi.Input

	ToGetMdbKafkaClusterConfigKafkaOutput() GetMdbKafkaClusterConfigKafkaOutput
	ToGetMdbKafkaClusterConfigKafkaOutputWithContext(context.Context) GetMdbKafkaClusterConfigKafkaOutput
}

type GetMdbKafkaClusterConfigKafkaArgs struct {
	// (Optional) User-defined settings for the Kafka cluster. The structure is documented below.
	KafkaConfig GetMdbKafkaClusterConfigKafkaKafkaConfigPtrInput `pulumi:"kafkaConfig"`
	// (Optional) Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
	Resources GetMdbKafkaClusterConfigKafkaResourcesInput `pulumi:"resources"`
}

func (GetMdbKafkaClusterConfigKafkaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbKafkaClusterConfigKafka)(nil)).Elem()
}

func (i GetMdbKafkaClusterConfigKafkaArgs) ToGetMdbKafkaClusterConfigKafkaOutput() GetMdbKafkaClusterConfigKafkaOutput {
	return i.ToGetMdbKafkaClusterConfigKafkaOutputWithContext(context.Background())
}

func (i GetMdbKafkaClusterConfigKafkaArgs) ToGetMdbKafkaClusterConfigKafkaOutputWithContext(ctx context.Context) GetMdbKafkaClusterConfigKafkaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbKafkaClusterConfigKafkaOutput)
}

type GetMdbKafkaClusterConfigKafkaOutput struct{ *pulumi.OutputState }

func (GetMdbKafkaClusterConfigKafkaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbKafkaClusterConfigKafka)(nil)).Elem()
}

func (o GetMdbKafkaClusterConfigKafkaOutput) ToGetMdbKafkaClusterConfigKafkaOutput() GetMdbKafkaClusterConfigKafkaOutput {
	return o
}

func (o GetMdbKafkaClusterConfigKafkaOutput) ToGetMdbKafkaClusterConfigKafkaOutputWithContext(ctx context.Context) GetMdbKafkaClusterConfigKafkaOutput {
	return o
}

// (Optional) User-defined settings for the Kafka cluster. The structure is documented below.
func (o GetMdbKafkaClusterConfigKafkaOutput) KafkaConfig() GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfigKafka) *GetMdbKafkaClusterConfigKafkaKafkaConfig { return v.KafkaConfig }).(GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput)
}

// (Optional) Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
func (o GetMdbKafkaClusterConfigKafkaOutput) Resources() GetMdbKafkaClusterConfigKafkaResourcesOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfigKafka) GetMdbKafkaClusterConfigKafkaResources { return v.Resources }).(GetMdbKafkaClusterConfigKafkaResourcesOutput)
}

type GetMdbKafkaClusterConfigKafkaKafkaConfig struct {
	AutoCreateTopicsEnable      *bool   `pulumi:"autoCreateTopicsEnable"`
	CompressionType             *string `pulumi:"compressionType"`
	LogFlushIntervalMessages    *int    `pulumi:"logFlushIntervalMessages"`
	LogFlushIntervalMs          *int    `pulumi:"logFlushIntervalMs"`
	LogFlushSchedulerIntervalMs *int    `pulumi:"logFlushSchedulerIntervalMs"`
	LogPreallocate              *bool   `pulumi:"logPreallocate"`
	LogRetentionBytes           *int    `pulumi:"logRetentionBytes"`
	LogRetentionHours           *int    `pulumi:"logRetentionHours"`
	LogRetentionMinutes         *int    `pulumi:"logRetentionMinutes"`
	LogRetentionMs              *int    `pulumi:"logRetentionMs"`
	LogSegmentBytes             *int    `pulumi:"logSegmentBytes"`
	SocketReceiveBufferBytes    *int    `pulumi:"socketReceiveBufferBytes"`
	SocketSendBufferBytes       *int    `pulumi:"socketSendBufferBytes"`
}

// GetMdbKafkaClusterConfigKafkaKafkaConfigInput is an input type that accepts GetMdbKafkaClusterConfigKafkaKafkaConfigArgs and GetMdbKafkaClusterConfigKafkaKafkaConfigOutput values.
// You can construct a concrete instance of `GetMdbKafkaClusterConfigKafkaKafkaConfigInput` via:
//
//          GetMdbKafkaClusterConfigKafkaKafkaConfigArgs{...}
type GetMdbKafkaClusterConfigKafkaKafkaConfigInput interface {
	pulumi.Input

	ToGetMdbKafkaClusterConfigKafkaKafkaConfigOutput() GetMdbKafkaClusterConfigKafkaKafkaConfigOutput
	ToGetMdbKafkaClusterConfigKafkaKafkaConfigOutputWithContext(context.Context) GetMdbKafkaClusterConfigKafkaKafkaConfigOutput
}

type GetMdbKafkaClusterConfigKafkaKafkaConfigArgs struct {
	AutoCreateTopicsEnable      pulumi.BoolPtrInput   `pulumi:"autoCreateTopicsEnable"`
	CompressionType             pulumi.StringPtrInput `pulumi:"compressionType"`
	LogFlushIntervalMessages    pulumi.IntPtrInput    `pulumi:"logFlushIntervalMessages"`
	LogFlushIntervalMs          pulumi.IntPtrInput    `pulumi:"logFlushIntervalMs"`
	LogFlushSchedulerIntervalMs pulumi.IntPtrInput    `pulumi:"logFlushSchedulerIntervalMs"`
	LogPreallocate              pulumi.BoolPtrInput   `pulumi:"logPreallocate"`
	LogRetentionBytes           pulumi.IntPtrInput    `pulumi:"logRetentionBytes"`
	LogRetentionHours           pulumi.IntPtrInput    `pulumi:"logRetentionHours"`
	LogRetentionMinutes         pulumi.IntPtrInput    `pulumi:"logRetentionMinutes"`
	LogRetentionMs              pulumi.IntPtrInput    `pulumi:"logRetentionMs"`
	LogSegmentBytes             pulumi.IntPtrInput    `pulumi:"logSegmentBytes"`
	SocketReceiveBufferBytes    pulumi.IntPtrInput    `pulumi:"socketReceiveBufferBytes"`
	SocketSendBufferBytes       pulumi.IntPtrInput    `pulumi:"socketSendBufferBytes"`
}

func (GetMdbKafkaClusterConfigKafkaKafkaConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbKafkaClusterConfigKafkaKafkaConfig)(nil)).Elem()
}

func (i GetMdbKafkaClusterConfigKafkaKafkaConfigArgs) ToGetMdbKafkaClusterConfigKafkaKafkaConfigOutput() GetMdbKafkaClusterConfigKafkaKafkaConfigOutput {
	return i.ToGetMdbKafkaClusterConfigKafkaKafkaConfigOutputWithContext(context.Background())
}

func (i GetMdbKafkaClusterConfigKafkaKafkaConfigArgs) ToGetMdbKafkaClusterConfigKafkaKafkaConfigOutputWithContext(ctx context.Context) GetMdbKafkaClusterConfigKafkaKafkaConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbKafkaClusterConfigKafkaKafkaConfigOutput)
}

func (i GetMdbKafkaClusterConfigKafkaKafkaConfigArgs) ToGetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput() GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput {
	return i.ToGetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutputWithContext(context.Background())
}

func (i GetMdbKafkaClusterConfigKafkaKafkaConfigArgs) ToGetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutputWithContext(ctx context.Context) GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbKafkaClusterConfigKafkaKafkaConfigOutput).ToGetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutputWithContext(ctx)
}

// GetMdbKafkaClusterConfigKafkaKafkaConfigPtrInput is an input type that accepts GetMdbKafkaClusterConfigKafkaKafkaConfigArgs, GetMdbKafkaClusterConfigKafkaKafkaConfigPtr and GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput values.
// You can construct a concrete instance of `GetMdbKafkaClusterConfigKafkaKafkaConfigPtrInput` via:
//
//          GetMdbKafkaClusterConfigKafkaKafkaConfigArgs{...}
//
//  or:
//
//          nil
type GetMdbKafkaClusterConfigKafkaKafkaConfigPtrInput interface {
	pulumi.Input

	ToGetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput() GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput
	ToGetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutputWithContext(context.Context) GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput
}

type getMdbKafkaClusterConfigKafkaKafkaConfigPtrType GetMdbKafkaClusterConfigKafkaKafkaConfigArgs

func GetMdbKafkaClusterConfigKafkaKafkaConfigPtr(v *GetMdbKafkaClusterConfigKafkaKafkaConfigArgs) GetMdbKafkaClusterConfigKafkaKafkaConfigPtrInput {
	return (*getMdbKafkaClusterConfigKafkaKafkaConfigPtrType)(v)
}

func (*getMdbKafkaClusterConfigKafkaKafkaConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetMdbKafkaClusterConfigKafkaKafkaConfig)(nil)).Elem()
}

func (i *getMdbKafkaClusterConfigKafkaKafkaConfigPtrType) ToGetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput() GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput {
	return i.ToGetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutputWithContext(context.Background())
}

func (i *getMdbKafkaClusterConfigKafkaKafkaConfigPtrType) ToGetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutputWithContext(ctx context.Context) GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput)
}

type GetMdbKafkaClusterConfigKafkaKafkaConfigOutput struct{ *pulumi.OutputState }

func (GetMdbKafkaClusterConfigKafkaKafkaConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbKafkaClusterConfigKafkaKafkaConfig)(nil)).Elem()
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigOutput) ToGetMdbKafkaClusterConfigKafkaKafkaConfigOutput() GetMdbKafkaClusterConfigKafkaKafkaConfigOutput {
	return o
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigOutput) ToGetMdbKafkaClusterConfigKafkaKafkaConfigOutputWithContext(ctx context.Context) GetMdbKafkaClusterConfigKafkaKafkaConfigOutput {
	return o
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigOutput) ToGetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput() GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput {
	return o.ToGetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutputWithContext(context.Background())
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigOutput) ToGetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutputWithContext(ctx context.Context) GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfigKafkaKafkaConfig) *GetMdbKafkaClusterConfigKafkaKafkaConfig {
		return &v
	}).(GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput)
}
func (o GetMdbKafkaClusterConfigKafkaKafkaConfigOutput) AutoCreateTopicsEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfigKafkaKafkaConfig) *bool { return v.AutoCreateTopicsEnable }).(pulumi.BoolPtrOutput)
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfigKafkaKafkaConfig) *string { return v.CompressionType }).(pulumi.StringPtrOutput)
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigOutput) LogFlushIntervalMessages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfigKafkaKafkaConfig) *int { return v.LogFlushIntervalMessages }).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigOutput) LogFlushIntervalMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfigKafkaKafkaConfig) *int { return v.LogFlushIntervalMs }).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigOutput) LogFlushSchedulerIntervalMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfigKafkaKafkaConfig) *int { return v.LogFlushSchedulerIntervalMs }).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigOutput) LogPreallocate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfigKafkaKafkaConfig) *bool { return v.LogPreallocate }).(pulumi.BoolPtrOutput)
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigOutput) LogRetentionBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfigKafkaKafkaConfig) *int { return v.LogRetentionBytes }).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigOutput) LogRetentionHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfigKafkaKafkaConfig) *int { return v.LogRetentionHours }).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigOutput) LogRetentionMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfigKafkaKafkaConfig) *int { return v.LogRetentionMinutes }).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigOutput) LogRetentionMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfigKafkaKafkaConfig) *int { return v.LogRetentionMs }).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigOutput) LogSegmentBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfigKafkaKafkaConfig) *int { return v.LogSegmentBytes }).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigOutput) SocketReceiveBufferBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfigKafkaKafkaConfig) *int { return v.SocketReceiveBufferBytes }).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigOutput) SocketSendBufferBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfigKafkaKafkaConfig) *int { return v.SocketSendBufferBytes }).(pulumi.IntPtrOutput)
}

type GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput struct{ *pulumi.OutputState }

func (GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetMdbKafkaClusterConfigKafkaKafkaConfig)(nil)).Elem()
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) ToGetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput() GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput {
	return o
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) ToGetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutputWithContext(ctx context.Context) GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput {
	return o
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) Elem() GetMdbKafkaClusterConfigKafkaKafkaConfigOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterConfigKafkaKafkaConfig) GetMdbKafkaClusterConfigKafkaKafkaConfig { return *v }).(GetMdbKafkaClusterConfigKafkaKafkaConfigOutput)
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) AutoCreateTopicsEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterConfigKafkaKafkaConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AutoCreateTopicsEnable
	}).(pulumi.BoolPtrOutput)
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterConfigKafkaKafkaConfig) *string {
		if v == nil {
			return nil
		}
		return v.CompressionType
	}).(pulumi.StringPtrOutput)
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) LogFlushIntervalMessages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterConfigKafkaKafkaConfig) *int {
		if v == nil {
			return nil
		}
		return v.LogFlushIntervalMessages
	}).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) LogFlushIntervalMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterConfigKafkaKafkaConfig) *int {
		if v == nil {
			return nil
		}
		return v.LogFlushIntervalMs
	}).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) LogFlushSchedulerIntervalMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterConfigKafkaKafkaConfig) *int {
		if v == nil {
			return nil
		}
		return v.LogFlushSchedulerIntervalMs
	}).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) LogPreallocate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterConfigKafkaKafkaConfig) *bool {
		if v == nil {
			return nil
		}
		return v.LogPreallocate
	}).(pulumi.BoolPtrOutput)
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) LogRetentionBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterConfigKafkaKafkaConfig) *int {
		if v == nil {
			return nil
		}
		return v.LogRetentionBytes
	}).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) LogRetentionHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterConfigKafkaKafkaConfig) *int {
		if v == nil {
			return nil
		}
		return v.LogRetentionHours
	}).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) LogRetentionMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterConfigKafkaKafkaConfig) *int {
		if v == nil {
			return nil
		}
		return v.LogRetentionMinutes
	}).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) LogRetentionMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterConfigKafkaKafkaConfig) *int {
		if v == nil {
			return nil
		}
		return v.LogRetentionMs
	}).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) LogSegmentBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterConfigKafkaKafkaConfig) *int {
		if v == nil {
			return nil
		}
		return v.LogSegmentBytes
	}).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) SocketReceiveBufferBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterConfigKafkaKafkaConfig) *int {
		if v == nil {
			return nil
		}
		return v.SocketReceiveBufferBytes
	}).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput) SocketSendBufferBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterConfigKafkaKafkaConfig) *int {
		if v == nil {
			return nil
		}
		return v.SocketSendBufferBytes
	}).(pulumi.IntPtrOutput)
}

type GetMdbKafkaClusterConfigKafkaResources struct {
	// (Optional) Volume of the storage available to a ZooKeeper host, in gigabytes.
	DiskSize int `pulumi:"diskSize"`
	// (Optional) Type of the storage of ZooKeeper hosts.
	// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-kafka/concepts/storage).
	DiskTypeId       string `pulumi:"diskTypeId"`
	ResourcePresetId string `pulumi:"resourcePresetId"`
}

// GetMdbKafkaClusterConfigKafkaResourcesInput is an input type that accepts GetMdbKafkaClusterConfigKafkaResourcesArgs and GetMdbKafkaClusterConfigKafkaResourcesOutput values.
// You can construct a concrete instance of `GetMdbKafkaClusterConfigKafkaResourcesInput` via:
//
//          GetMdbKafkaClusterConfigKafkaResourcesArgs{...}
type GetMdbKafkaClusterConfigKafkaResourcesInput interface {
	pulumi.Input

	ToGetMdbKafkaClusterConfigKafkaResourcesOutput() GetMdbKafkaClusterConfigKafkaResourcesOutput
	ToGetMdbKafkaClusterConfigKafkaResourcesOutputWithContext(context.Context) GetMdbKafkaClusterConfigKafkaResourcesOutput
}

type GetMdbKafkaClusterConfigKafkaResourcesArgs struct {
	// (Optional) Volume of the storage available to a ZooKeeper host, in gigabytes.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// (Optional) Type of the storage of ZooKeeper hosts.
	// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-kafka/concepts/storage).
	DiskTypeId       pulumi.StringInput `pulumi:"diskTypeId"`
	ResourcePresetId pulumi.StringInput `pulumi:"resourcePresetId"`
}

func (GetMdbKafkaClusterConfigKafkaResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbKafkaClusterConfigKafkaResources)(nil)).Elem()
}

func (i GetMdbKafkaClusterConfigKafkaResourcesArgs) ToGetMdbKafkaClusterConfigKafkaResourcesOutput() GetMdbKafkaClusterConfigKafkaResourcesOutput {
	return i.ToGetMdbKafkaClusterConfigKafkaResourcesOutputWithContext(context.Background())
}

func (i GetMdbKafkaClusterConfigKafkaResourcesArgs) ToGetMdbKafkaClusterConfigKafkaResourcesOutputWithContext(ctx context.Context) GetMdbKafkaClusterConfigKafkaResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbKafkaClusterConfigKafkaResourcesOutput)
}

type GetMdbKafkaClusterConfigKafkaResourcesOutput struct{ *pulumi.OutputState }

func (GetMdbKafkaClusterConfigKafkaResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbKafkaClusterConfigKafkaResources)(nil)).Elem()
}

func (o GetMdbKafkaClusterConfigKafkaResourcesOutput) ToGetMdbKafkaClusterConfigKafkaResourcesOutput() GetMdbKafkaClusterConfigKafkaResourcesOutput {
	return o
}

func (o GetMdbKafkaClusterConfigKafkaResourcesOutput) ToGetMdbKafkaClusterConfigKafkaResourcesOutputWithContext(ctx context.Context) GetMdbKafkaClusterConfigKafkaResourcesOutput {
	return o
}

// (Optional) Volume of the storage available to a ZooKeeper host, in gigabytes.
func (o GetMdbKafkaClusterConfigKafkaResourcesOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfigKafkaResources) int { return v.DiskSize }).(pulumi.IntOutput)
}

// (Optional) Type of the storage of ZooKeeper hosts.
// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-kafka/concepts/storage).
func (o GetMdbKafkaClusterConfigKafkaResourcesOutput) DiskTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfigKafkaResources) string { return v.DiskTypeId }).(pulumi.StringOutput)
}

func (o GetMdbKafkaClusterConfigKafkaResourcesOutput) ResourcePresetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfigKafkaResources) string { return v.ResourcePresetId }).(pulumi.StringOutput)
}

type GetMdbKafkaClusterConfigZookeeper struct {
	// (Optional) Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
	Resources GetMdbKafkaClusterConfigZookeeperResources `pulumi:"resources"`
}

// GetMdbKafkaClusterConfigZookeeperInput is an input type that accepts GetMdbKafkaClusterConfigZookeeperArgs and GetMdbKafkaClusterConfigZookeeperOutput values.
// You can construct a concrete instance of `GetMdbKafkaClusterConfigZookeeperInput` via:
//
//          GetMdbKafkaClusterConfigZookeeperArgs{...}
type GetMdbKafkaClusterConfigZookeeperInput interface {
	pulumi.Input

	ToGetMdbKafkaClusterConfigZookeeperOutput() GetMdbKafkaClusterConfigZookeeperOutput
	ToGetMdbKafkaClusterConfigZookeeperOutputWithContext(context.Context) GetMdbKafkaClusterConfigZookeeperOutput
}

type GetMdbKafkaClusterConfigZookeeperArgs struct {
	// (Optional) Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
	Resources GetMdbKafkaClusterConfigZookeeperResourcesInput `pulumi:"resources"`
}

func (GetMdbKafkaClusterConfigZookeeperArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbKafkaClusterConfigZookeeper)(nil)).Elem()
}

func (i GetMdbKafkaClusterConfigZookeeperArgs) ToGetMdbKafkaClusterConfigZookeeperOutput() GetMdbKafkaClusterConfigZookeeperOutput {
	return i.ToGetMdbKafkaClusterConfigZookeeperOutputWithContext(context.Background())
}

func (i GetMdbKafkaClusterConfigZookeeperArgs) ToGetMdbKafkaClusterConfigZookeeperOutputWithContext(ctx context.Context) GetMdbKafkaClusterConfigZookeeperOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbKafkaClusterConfigZookeeperOutput)
}

func (i GetMdbKafkaClusterConfigZookeeperArgs) ToGetMdbKafkaClusterConfigZookeeperPtrOutput() GetMdbKafkaClusterConfigZookeeperPtrOutput {
	return i.ToGetMdbKafkaClusterConfigZookeeperPtrOutputWithContext(context.Background())
}

func (i GetMdbKafkaClusterConfigZookeeperArgs) ToGetMdbKafkaClusterConfigZookeeperPtrOutputWithContext(ctx context.Context) GetMdbKafkaClusterConfigZookeeperPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbKafkaClusterConfigZookeeperOutput).ToGetMdbKafkaClusterConfigZookeeperPtrOutputWithContext(ctx)
}

// GetMdbKafkaClusterConfigZookeeperPtrInput is an input type that accepts GetMdbKafkaClusterConfigZookeeperArgs, GetMdbKafkaClusterConfigZookeeperPtr and GetMdbKafkaClusterConfigZookeeperPtrOutput values.
// You can construct a concrete instance of `GetMdbKafkaClusterConfigZookeeperPtrInput` via:
//
//          GetMdbKafkaClusterConfigZookeeperArgs{...}
//
//  or:
//
//          nil
type GetMdbKafkaClusterConfigZookeeperPtrInput interface {
	pulumi.Input

	ToGetMdbKafkaClusterConfigZookeeperPtrOutput() GetMdbKafkaClusterConfigZookeeperPtrOutput
	ToGetMdbKafkaClusterConfigZookeeperPtrOutputWithContext(context.Context) GetMdbKafkaClusterConfigZookeeperPtrOutput
}

type getMdbKafkaClusterConfigZookeeperPtrType GetMdbKafkaClusterConfigZookeeperArgs

func GetMdbKafkaClusterConfigZookeeperPtr(v *GetMdbKafkaClusterConfigZookeeperArgs) GetMdbKafkaClusterConfigZookeeperPtrInput {
	return (*getMdbKafkaClusterConfigZookeeperPtrType)(v)
}

func (*getMdbKafkaClusterConfigZookeeperPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetMdbKafkaClusterConfigZookeeper)(nil)).Elem()
}

func (i *getMdbKafkaClusterConfigZookeeperPtrType) ToGetMdbKafkaClusterConfigZookeeperPtrOutput() GetMdbKafkaClusterConfigZookeeperPtrOutput {
	return i.ToGetMdbKafkaClusterConfigZookeeperPtrOutputWithContext(context.Background())
}

func (i *getMdbKafkaClusterConfigZookeeperPtrType) ToGetMdbKafkaClusterConfigZookeeperPtrOutputWithContext(ctx context.Context) GetMdbKafkaClusterConfigZookeeperPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbKafkaClusterConfigZookeeperPtrOutput)
}

type GetMdbKafkaClusterConfigZookeeperOutput struct{ *pulumi.OutputState }

func (GetMdbKafkaClusterConfigZookeeperOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbKafkaClusterConfigZookeeper)(nil)).Elem()
}

func (o GetMdbKafkaClusterConfigZookeeperOutput) ToGetMdbKafkaClusterConfigZookeeperOutput() GetMdbKafkaClusterConfigZookeeperOutput {
	return o
}

func (o GetMdbKafkaClusterConfigZookeeperOutput) ToGetMdbKafkaClusterConfigZookeeperOutputWithContext(ctx context.Context) GetMdbKafkaClusterConfigZookeeperOutput {
	return o
}

func (o GetMdbKafkaClusterConfigZookeeperOutput) ToGetMdbKafkaClusterConfigZookeeperPtrOutput() GetMdbKafkaClusterConfigZookeeperPtrOutput {
	return o.ToGetMdbKafkaClusterConfigZookeeperPtrOutputWithContext(context.Background())
}

func (o GetMdbKafkaClusterConfigZookeeperOutput) ToGetMdbKafkaClusterConfigZookeeperPtrOutputWithContext(ctx context.Context) GetMdbKafkaClusterConfigZookeeperPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfigZookeeper) *GetMdbKafkaClusterConfigZookeeper {
		return &v
	}).(GetMdbKafkaClusterConfigZookeeperPtrOutput)
}

// (Optional) Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
func (o GetMdbKafkaClusterConfigZookeeperOutput) Resources() GetMdbKafkaClusterConfigZookeeperResourcesOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfigZookeeper) GetMdbKafkaClusterConfigZookeeperResources {
		return v.Resources
	}).(GetMdbKafkaClusterConfigZookeeperResourcesOutput)
}

type GetMdbKafkaClusterConfigZookeeperPtrOutput struct{ *pulumi.OutputState }

func (GetMdbKafkaClusterConfigZookeeperPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetMdbKafkaClusterConfigZookeeper)(nil)).Elem()
}

func (o GetMdbKafkaClusterConfigZookeeperPtrOutput) ToGetMdbKafkaClusterConfigZookeeperPtrOutput() GetMdbKafkaClusterConfigZookeeperPtrOutput {
	return o
}

func (o GetMdbKafkaClusterConfigZookeeperPtrOutput) ToGetMdbKafkaClusterConfigZookeeperPtrOutputWithContext(ctx context.Context) GetMdbKafkaClusterConfigZookeeperPtrOutput {
	return o
}

func (o GetMdbKafkaClusterConfigZookeeperPtrOutput) Elem() GetMdbKafkaClusterConfigZookeeperOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterConfigZookeeper) GetMdbKafkaClusterConfigZookeeper { return *v }).(GetMdbKafkaClusterConfigZookeeperOutput)
}

// (Optional) Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
func (o GetMdbKafkaClusterConfigZookeeperPtrOutput) Resources() GetMdbKafkaClusterConfigZookeeperResourcesPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterConfigZookeeper) *GetMdbKafkaClusterConfigZookeeperResources {
		if v == nil {
			return nil
		}
		return &v.Resources
	}).(GetMdbKafkaClusterConfigZookeeperResourcesPtrOutput)
}

type GetMdbKafkaClusterConfigZookeeperResources struct {
	// (Optional) Volume of the storage available to a ZooKeeper host, in gigabytes.
	DiskSize int `pulumi:"diskSize"`
	// (Optional) Type of the storage of ZooKeeper hosts.
	// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-kafka/concepts/storage).
	DiskTypeId       string `pulumi:"diskTypeId"`
	ResourcePresetId string `pulumi:"resourcePresetId"`
}

// GetMdbKafkaClusterConfigZookeeperResourcesInput is an input type that accepts GetMdbKafkaClusterConfigZookeeperResourcesArgs and GetMdbKafkaClusterConfigZookeeperResourcesOutput values.
// You can construct a concrete instance of `GetMdbKafkaClusterConfigZookeeperResourcesInput` via:
//
//          GetMdbKafkaClusterConfigZookeeperResourcesArgs{...}
type GetMdbKafkaClusterConfigZookeeperResourcesInput interface {
	pulumi.Input

	ToGetMdbKafkaClusterConfigZookeeperResourcesOutput() GetMdbKafkaClusterConfigZookeeperResourcesOutput
	ToGetMdbKafkaClusterConfigZookeeperResourcesOutputWithContext(context.Context) GetMdbKafkaClusterConfigZookeeperResourcesOutput
}

type GetMdbKafkaClusterConfigZookeeperResourcesArgs struct {
	// (Optional) Volume of the storage available to a ZooKeeper host, in gigabytes.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// (Optional) Type of the storage of ZooKeeper hosts.
	// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-kafka/concepts/storage).
	DiskTypeId       pulumi.StringInput `pulumi:"diskTypeId"`
	ResourcePresetId pulumi.StringInput `pulumi:"resourcePresetId"`
}

func (GetMdbKafkaClusterConfigZookeeperResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbKafkaClusterConfigZookeeperResources)(nil)).Elem()
}

func (i GetMdbKafkaClusterConfigZookeeperResourcesArgs) ToGetMdbKafkaClusterConfigZookeeperResourcesOutput() GetMdbKafkaClusterConfigZookeeperResourcesOutput {
	return i.ToGetMdbKafkaClusterConfigZookeeperResourcesOutputWithContext(context.Background())
}

func (i GetMdbKafkaClusterConfigZookeeperResourcesArgs) ToGetMdbKafkaClusterConfigZookeeperResourcesOutputWithContext(ctx context.Context) GetMdbKafkaClusterConfigZookeeperResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbKafkaClusterConfigZookeeperResourcesOutput)
}

func (i GetMdbKafkaClusterConfigZookeeperResourcesArgs) ToGetMdbKafkaClusterConfigZookeeperResourcesPtrOutput() GetMdbKafkaClusterConfigZookeeperResourcesPtrOutput {
	return i.ToGetMdbKafkaClusterConfigZookeeperResourcesPtrOutputWithContext(context.Background())
}

func (i GetMdbKafkaClusterConfigZookeeperResourcesArgs) ToGetMdbKafkaClusterConfigZookeeperResourcesPtrOutputWithContext(ctx context.Context) GetMdbKafkaClusterConfigZookeeperResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbKafkaClusterConfigZookeeperResourcesOutput).ToGetMdbKafkaClusterConfigZookeeperResourcesPtrOutputWithContext(ctx)
}

// GetMdbKafkaClusterConfigZookeeperResourcesPtrInput is an input type that accepts GetMdbKafkaClusterConfigZookeeperResourcesArgs, GetMdbKafkaClusterConfigZookeeperResourcesPtr and GetMdbKafkaClusterConfigZookeeperResourcesPtrOutput values.
// You can construct a concrete instance of `GetMdbKafkaClusterConfigZookeeperResourcesPtrInput` via:
//
//          GetMdbKafkaClusterConfigZookeeperResourcesArgs{...}
//
//  or:
//
//          nil
type GetMdbKafkaClusterConfigZookeeperResourcesPtrInput interface {
	pulumi.Input

	ToGetMdbKafkaClusterConfigZookeeperResourcesPtrOutput() GetMdbKafkaClusterConfigZookeeperResourcesPtrOutput
	ToGetMdbKafkaClusterConfigZookeeperResourcesPtrOutputWithContext(context.Context) GetMdbKafkaClusterConfigZookeeperResourcesPtrOutput
}

type getMdbKafkaClusterConfigZookeeperResourcesPtrType GetMdbKafkaClusterConfigZookeeperResourcesArgs

func GetMdbKafkaClusterConfigZookeeperResourcesPtr(v *GetMdbKafkaClusterConfigZookeeperResourcesArgs) GetMdbKafkaClusterConfigZookeeperResourcesPtrInput {
	return (*getMdbKafkaClusterConfigZookeeperResourcesPtrType)(v)
}

func (*getMdbKafkaClusterConfigZookeeperResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetMdbKafkaClusterConfigZookeeperResources)(nil)).Elem()
}

func (i *getMdbKafkaClusterConfigZookeeperResourcesPtrType) ToGetMdbKafkaClusterConfigZookeeperResourcesPtrOutput() GetMdbKafkaClusterConfigZookeeperResourcesPtrOutput {
	return i.ToGetMdbKafkaClusterConfigZookeeperResourcesPtrOutputWithContext(context.Background())
}

func (i *getMdbKafkaClusterConfigZookeeperResourcesPtrType) ToGetMdbKafkaClusterConfigZookeeperResourcesPtrOutputWithContext(ctx context.Context) GetMdbKafkaClusterConfigZookeeperResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbKafkaClusterConfigZookeeperResourcesPtrOutput)
}

type GetMdbKafkaClusterConfigZookeeperResourcesOutput struct{ *pulumi.OutputState }

func (GetMdbKafkaClusterConfigZookeeperResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbKafkaClusterConfigZookeeperResources)(nil)).Elem()
}

func (o GetMdbKafkaClusterConfigZookeeperResourcesOutput) ToGetMdbKafkaClusterConfigZookeeperResourcesOutput() GetMdbKafkaClusterConfigZookeeperResourcesOutput {
	return o
}

func (o GetMdbKafkaClusterConfigZookeeperResourcesOutput) ToGetMdbKafkaClusterConfigZookeeperResourcesOutputWithContext(ctx context.Context) GetMdbKafkaClusterConfigZookeeperResourcesOutput {
	return o
}

func (o GetMdbKafkaClusterConfigZookeeperResourcesOutput) ToGetMdbKafkaClusterConfigZookeeperResourcesPtrOutput() GetMdbKafkaClusterConfigZookeeperResourcesPtrOutput {
	return o.ToGetMdbKafkaClusterConfigZookeeperResourcesPtrOutputWithContext(context.Background())
}

func (o GetMdbKafkaClusterConfigZookeeperResourcesOutput) ToGetMdbKafkaClusterConfigZookeeperResourcesPtrOutputWithContext(ctx context.Context) GetMdbKafkaClusterConfigZookeeperResourcesPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfigZookeeperResources) *GetMdbKafkaClusterConfigZookeeperResources {
		return &v
	}).(GetMdbKafkaClusterConfigZookeeperResourcesPtrOutput)
}

// (Optional) Volume of the storage available to a ZooKeeper host, in gigabytes.
func (o GetMdbKafkaClusterConfigZookeeperResourcesOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfigZookeeperResources) int { return v.DiskSize }).(pulumi.IntOutput)
}

// (Optional) Type of the storage of ZooKeeper hosts.
// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-kafka/concepts/storage).
func (o GetMdbKafkaClusterConfigZookeeperResourcesOutput) DiskTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfigZookeeperResources) string { return v.DiskTypeId }).(pulumi.StringOutput)
}

func (o GetMdbKafkaClusterConfigZookeeperResourcesOutput) ResourcePresetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterConfigZookeeperResources) string { return v.ResourcePresetId }).(pulumi.StringOutput)
}

type GetMdbKafkaClusterConfigZookeeperResourcesPtrOutput struct{ *pulumi.OutputState }

func (GetMdbKafkaClusterConfigZookeeperResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetMdbKafkaClusterConfigZookeeperResources)(nil)).Elem()
}

func (o GetMdbKafkaClusterConfigZookeeperResourcesPtrOutput) ToGetMdbKafkaClusterConfigZookeeperResourcesPtrOutput() GetMdbKafkaClusterConfigZookeeperResourcesPtrOutput {
	return o
}

func (o GetMdbKafkaClusterConfigZookeeperResourcesPtrOutput) ToGetMdbKafkaClusterConfigZookeeperResourcesPtrOutputWithContext(ctx context.Context) GetMdbKafkaClusterConfigZookeeperResourcesPtrOutput {
	return o
}

func (o GetMdbKafkaClusterConfigZookeeperResourcesPtrOutput) Elem() GetMdbKafkaClusterConfigZookeeperResourcesOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterConfigZookeeperResources) GetMdbKafkaClusterConfigZookeeperResources {
		return *v
	}).(GetMdbKafkaClusterConfigZookeeperResourcesOutput)
}

// (Optional) Volume of the storage available to a ZooKeeper host, in gigabytes.
func (o GetMdbKafkaClusterConfigZookeeperResourcesPtrOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterConfigZookeeperResources) *int {
		if v == nil {
			return nil
		}
		return &v.DiskSize
	}).(pulumi.IntPtrOutput)
}

// (Optional) Type of the storage of ZooKeeper hosts.
// For more information see [the official documentation](https://cloud.yandex.com/docs/managed-kafka/concepts/storage).
func (o GetMdbKafkaClusterConfigZookeeperResourcesPtrOutput) DiskTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterConfigZookeeperResources) *string {
		if v == nil {
			return nil
		}
		return &v.DiskTypeId
	}).(pulumi.StringPtrOutput)
}

func (o GetMdbKafkaClusterConfigZookeeperResourcesPtrOutput) ResourcePresetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterConfigZookeeperResources) *string {
		if v == nil {
			return nil
		}
		return &v.ResourcePresetId
	}).(pulumi.StringPtrOutput)
}

type GetMdbKafkaClusterHost struct {
	// The flag that defines whether a public IP address is assigned to the node.
	AssignPublicIp bool `pulumi:"assignPublicIp"`
	// Health of the host.
	Health string `pulumi:"health"`
	// The name of the Kafka cluster.
	Name string `pulumi:"name"`
	// Role of the host in the cluster.
	Role string `pulumi:"role"`
	// The ID of the subnet, to which the host belongs.
	SubnetId string `pulumi:"subnetId"`
	// The availability zone where the Kafka host was created.
	ZoneId string `pulumi:"zoneId"`
}

// GetMdbKafkaClusterHostInput is an input type that accepts GetMdbKafkaClusterHostArgs and GetMdbKafkaClusterHostOutput values.
// You can construct a concrete instance of `GetMdbKafkaClusterHostInput` via:
//
//          GetMdbKafkaClusterHostArgs{...}
type GetMdbKafkaClusterHostInput interface {
	pulumi.Input

	ToGetMdbKafkaClusterHostOutput() GetMdbKafkaClusterHostOutput
	ToGetMdbKafkaClusterHostOutputWithContext(context.Context) GetMdbKafkaClusterHostOutput
}

type GetMdbKafkaClusterHostArgs struct {
	// The flag that defines whether a public IP address is assigned to the node.
	AssignPublicIp pulumi.BoolInput `pulumi:"assignPublicIp"`
	// Health of the host.
	Health pulumi.StringInput `pulumi:"health"`
	// The name of the Kafka cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// Role of the host in the cluster.
	Role pulumi.StringInput `pulumi:"role"`
	// The ID of the subnet, to which the host belongs.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The availability zone where the Kafka host was created.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetMdbKafkaClusterHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbKafkaClusterHost)(nil)).Elem()
}

func (i GetMdbKafkaClusterHostArgs) ToGetMdbKafkaClusterHostOutput() GetMdbKafkaClusterHostOutput {
	return i.ToGetMdbKafkaClusterHostOutputWithContext(context.Background())
}

func (i GetMdbKafkaClusterHostArgs) ToGetMdbKafkaClusterHostOutputWithContext(ctx context.Context) GetMdbKafkaClusterHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbKafkaClusterHostOutput)
}

// GetMdbKafkaClusterHostArrayInput is an input type that accepts GetMdbKafkaClusterHostArray and GetMdbKafkaClusterHostArrayOutput values.
// You can construct a concrete instance of `GetMdbKafkaClusterHostArrayInput` via:
//
//          GetMdbKafkaClusterHostArray{ GetMdbKafkaClusterHostArgs{...} }
type GetMdbKafkaClusterHostArrayInput interface {
	pulumi.Input

	ToGetMdbKafkaClusterHostArrayOutput() GetMdbKafkaClusterHostArrayOutput
	ToGetMdbKafkaClusterHostArrayOutputWithContext(context.Context) GetMdbKafkaClusterHostArrayOutput
}

type GetMdbKafkaClusterHostArray []GetMdbKafkaClusterHostInput

func (GetMdbKafkaClusterHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbKafkaClusterHost)(nil)).Elem()
}

func (i GetMdbKafkaClusterHostArray) ToGetMdbKafkaClusterHostArrayOutput() GetMdbKafkaClusterHostArrayOutput {
	return i.ToGetMdbKafkaClusterHostArrayOutputWithContext(context.Background())
}

func (i GetMdbKafkaClusterHostArray) ToGetMdbKafkaClusterHostArrayOutputWithContext(ctx context.Context) GetMdbKafkaClusterHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbKafkaClusterHostArrayOutput)
}

type GetMdbKafkaClusterHostOutput struct{ *pulumi.OutputState }

func (GetMdbKafkaClusterHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbKafkaClusterHost)(nil)).Elem()
}

func (o GetMdbKafkaClusterHostOutput) ToGetMdbKafkaClusterHostOutput() GetMdbKafkaClusterHostOutput {
	return o
}

func (o GetMdbKafkaClusterHostOutput) ToGetMdbKafkaClusterHostOutputWithContext(ctx context.Context) GetMdbKafkaClusterHostOutput {
	return o
}

// The flag that defines whether a public IP address is assigned to the node.
func (o GetMdbKafkaClusterHostOutput) AssignPublicIp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterHost) bool { return v.AssignPublicIp }).(pulumi.BoolOutput)
}

// Health of the host.
func (o GetMdbKafkaClusterHostOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterHost) string { return v.Health }).(pulumi.StringOutput)
}

// The name of the Kafka cluster.
func (o GetMdbKafkaClusterHostOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterHost) string { return v.Name }).(pulumi.StringOutput)
}

// Role of the host in the cluster.
func (o GetMdbKafkaClusterHostOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterHost) string { return v.Role }).(pulumi.StringOutput)
}

// The ID of the subnet, to which the host belongs.
func (o GetMdbKafkaClusterHostOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterHost) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The availability zone where the Kafka host was created.
func (o GetMdbKafkaClusterHostOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterHost) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetMdbKafkaClusterHostArrayOutput struct{ *pulumi.OutputState }

func (GetMdbKafkaClusterHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbKafkaClusterHost)(nil)).Elem()
}

func (o GetMdbKafkaClusterHostArrayOutput) ToGetMdbKafkaClusterHostArrayOutput() GetMdbKafkaClusterHostArrayOutput {
	return o
}

func (o GetMdbKafkaClusterHostArrayOutput) ToGetMdbKafkaClusterHostArrayOutputWithContext(ctx context.Context) GetMdbKafkaClusterHostArrayOutput {
	return o
}

func (o GetMdbKafkaClusterHostArrayOutput) Index(i pulumi.IntInput) GetMdbKafkaClusterHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbKafkaClusterHost {
		return vs[0].([]GetMdbKafkaClusterHost)[vs[1].(int)]
	}).(GetMdbKafkaClusterHostOutput)
}

type GetMdbKafkaClusterTopic struct {
	// The name of the Kafka cluster.
	Name string `pulumi:"name"`
	// (Required) The number of the topic's partitions.
	Partitions int `pulumi:"partitions"`
	// (Required) Amount of data copies (replicas) for the topic in the cluster.
	ReplicationFactor int `pulumi:"replicationFactor"`
	// (Required) User-defined settings for the topic. The structure is documented below.
	TopicConfig *GetMdbKafkaClusterTopicTopicConfig `pulumi:"topicConfig"`
}

// GetMdbKafkaClusterTopicInput is an input type that accepts GetMdbKafkaClusterTopicArgs and GetMdbKafkaClusterTopicOutput values.
// You can construct a concrete instance of `GetMdbKafkaClusterTopicInput` via:
//
//          GetMdbKafkaClusterTopicArgs{...}
type GetMdbKafkaClusterTopicInput interface {
	pulumi.Input

	ToGetMdbKafkaClusterTopicOutput() GetMdbKafkaClusterTopicOutput
	ToGetMdbKafkaClusterTopicOutputWithContext(context.Context) GetMdbKafkaClusterTopicOutput
}

type GetMdbKafkaClusterTopicArgs struct {
	// The name of the Kafka cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// (Required) The number of the topic's partitions.
	Partitions pulumi.IntInput `pulumi:"partitions"`
	// (Required) Amount of data copies (replicas) for the topic in the cluster.
	ReplicationFactor pulumi.IntInput `pulumi:"replicationFactor"`
	// (Required) User-defined settings for the topic. The structure is documented below.
	TopicConfig GetMdbKafkaClusterTopicTopicConfigPtrInput `pulumi:"topicConfig"`
}

func (GetMdbKafkaClusterTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbKafkaClusterTopic)(nil)).Elem()
}

func (i GetMdbKafkaClusterTopicArgs) ToGetMdbKafkaClusterTopicOutput() GetMdbKafkaClusterTopicOutput {
	return i.ToGetMdbKafkaClusterTopicOutputWithContext(context.Background())
}

func (i GetMdbKafkaClusterTopicArgs) ToGetMdbKafkaClusterTopicOutputWithContext(ctx context.Context) GetMdbKafkaClusterTopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbKafkaClusterTopicOutput)
}

// GetMdbKafkaClusterTopicArrayInput is an input type that accepts GetMdbKafkaClusterTopicArray and GetMdbKafkaClusterTopicArrayOutput values.
// You can construct a concrete instance of `GetMdbKafkaClusterTopicArrayInput` via:
//
//          GetMdbKafkaClusterTopicArray{ GetMdbKafkaClusterTopicArgs{...} }
type GetMdbKafkaClusterTopicArrayInput interface {
	pulumi.Input

	ToGetMdbKafkaClusterTopicArrayOutput() GetMdbKafkaClusterTopicArrayOutput
	ToGetMdbKafkaClusterTopicArrayOutputWithContext(context.Context) GetMdbKafkaClusterTopicArrayOutput
}

type GetMdbKafkaClusterTopicArray []GetMdbKafkaClusterTopicInput

func (GetMdbKafkaClusterTopicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbKafkaClusterTopic)(nil)).Elem()
}

func (i GetMdbKafkaClusterTopicArray) ToGetMdbKafkaClusterTopicArrayOutput() GetMdbKafkaClusterTopicArrayOutput {
	return i.ToGetMdbKafkaClusterTopicArrayOutputWithContext(context.Background())
}

func (i GetMdbKafkaClusterTopicArray) ToGetMdbKafkaClusterTopicArrayOutputWithContext(ctx context.Context) GetMdbKafkaClusterTopicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbKafkaClusterTopicArrayOutput)
}

type GetMdbKafkaClusterTopicOutput struct{ *pulumi.OutputState }

func (GetMdbKafkaClusterTopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbKafkaClusterTopic)(nil)).Elem()
}

func (o GetMdbKafkaClusterTopicOutput) ToGetMdbKafkaClusterTopicOutput() GetMdbKafkaClusterTopicOutput {
	return o
}

func (o GetMdbKafkaClusterTopicOutput) ToGetMdbKafkaClusterTopicOutputWithContext(ctx context.Context) GetMdbKafkaClusterTopicOutput {
	return o
}

// The name of the Kafka cluster.
func (o GetMdbKafkaClusterTopicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterTopic) string { return v.Name }).(pulumi.StringOutput)
}

// (Required) The number of the topic's partitions.
func (o GetMdbKafkaClusterTopicOutput) Partitions() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterTopic) int { return v.Partitions }).(pulumi.IntOutput)
}

// (Required) Amount of data copies (replicas) for the topic in the cluster.
func (o GetMdbKafkaClusterTopicOutput) ReplicationFactor() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterTopic) int { return v.ReplicationFactor }).(pulumi.IntOutput)
}

// (Required) User-defined settings for the topic. The structure is documented below.
func (o GetMdbKafkaClusterTopicOutput) TopicConfig() GetMdbKafkaClusterTopicTopicConfigPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterTopic) *GetMdbKafkaClusterTopicTopicConfig { return v.TopicConfig }).(GetMdbKafkaClusterTopicTopicConfigPtrOutput)
}

type GetMdbKafkaClusterTopicArrayOutput struct{ *pulumi.OutputState }

func (GetMdbKafkaClusterTopicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbKafkaClusterTopic)(nil)).Elem()
}

func (o GetMdbKafkaClusterTopicArrayOutput) ToGetMdbKafkaClusterTopicArrayOutput() GetMdbKafkaClusterTopicArrayOutput {
	return o
}

func (o GetMdbKafkaClusterTopicArrayOutput) ToGetMdbKafkaClusterTopicArrayOutputWithContext(ctx context.Context) GetMdbKafkaClusterTopicArrayOutput {
	return o
}

func (o GetMdbKafkaClusterTopicArrayOutput) Index(i pulumi.IntInput) GetMdbKafkaClusterTopicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbKafkaClusterTopic {
		return vs[0].([]GetMdbKafkaClusterTopic)[vs[1].(int)]
	}).(GetMdbKafkaClusterTopicOutput)
}

type GetMdbKafkaClusterTopicTopicConfig struct {
	CleanupPolicy      *string `pulumi:"cleanupPolicy"`
	CompressionType    *string `pulumi:"compressionType"`
	DeleteRetentionMs  *int    `pulumi:"deleteRetentionMs"`
	FileDeleteDelayMs  *int    `pulumi:"fileDeleteDelayMs"`
	FlushMessages      *int    `pulumi:"flushMessages"`
	FlushMs            *int    `pulumi:"flushMs"`
	MaxMessageBytes    *int    `pulumi:"maxMessageBytes"`
	MinCompactionLagMs *int    `pulumi:"minCompactionLagMs"`
	MinInsyncReplicas  *int    `pulumi:"minInsyncReplicas"`
	Preallocate        *bool   `pulumi:"preallocate"`
	RetentionBytes     *int    `pulumi:"retentionBytes"`
	RetentionMs        *int    `pulumi:"retentionMs"`
	SegmentBytes       *int    `pulumi:"segmentBytes"`
}

// GetMdbKafkaClusterTopicTopicConfigInput is an input type that accepts GetMdbKafkaClusterTopicTopicConfigArgs and GetMdbKafkaClusterTopicTopicConfigOutput values.
// You can construct a concrete instance of `GetMdbKafkaClusterTopicTopicConfigInput` via:
//
//          GetMdbKafkaClusterTopicTopicConfigArgs{...}
type GetMdbKafkaClusterTopicTopicConfigInput interface {
	pulumi.Input

	ToGetMdbKafkaClusterTopicTopicConfigOutput() GetMdbKafkaClusterTopicTopicConfigOutput
	ToGetMdbKafkaClusterTopicTopicConfigOutputWithContext(context.Context) GetMdbKafkaClusterTopicTopicConfigOutput
}

type GetMdbKafkaClusterTopicTopicConfigArgs struct {
	CleanupPolicy      pulumi.StringPtrInput `pulumi:"cleanupPolicy"`
	CompressionType    pulumi.StringPtrInput `pulumi:"compressionType"`
	DeleteRetentionMs  pulumi.IntPtrInput    `pulumi:"deleteRetentionMs"`
	FileDeleteDelayMs  pulumi.IntPtrInput    `pulumi:"fileDeleteDelayMs"`
	FlushMessages      pulumi.IntPtrInput    `pulumi:"flushMessages"`
	FlushMs            pulumi.IntPtrInput    `pulumi:"flushMs"`
	MaxMessageBytes    pulumi.IntPtrInput    `pulumi:"maxMessageBytes"`
	MinCompactionLagMs pulumi.IntPtrInput    `pulumi:"minCompactionLagMs"`
	MinInsyncReplicas  pulumi.IntPtrInput    `pulumi:"minInsyncReplicas"`
	Preallocate        pulumi.BoolPtrInput   `pulumi:"preallocate"`
	RetentionBytes     pulumi.IntPtrInput    `pulumi:"retentionBytes"`
	RetentionMs        pulumi.IntPtrInput    `pulumi:"retentionMs"`
	SegmentBytes       pulumi.IntPtrInput    `pulumi:"segmentBytes"`
}

func (GetMdbKafkaClusterTopicTopicConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbKafkaClusterTopicTopicConfig)(nil)).Elem()
}

func (i GetMdbKafkaClusterTopicTopicConfigArgs) ToGetMdbKafkaClusterTopicTopicConfigOutput() GetMdbKafkaClusterTopicTopicConfigOutput {
	return i.ToGetMdbKafkaClusterTopicTopicConfigOutputWithContext(context.Background())
}

func (i GetMdbKafkaClusterTopicTopicConfigArgs) ToGetMdbKafkaClusterTopicTopicConfigOutputWithContext(ctx context.Context) GetMdbKafkaClusterTopicTopicConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbKafkaClusterTopicTopicConfigOutput)
}

func (i GetMdbKafkaClusterTopicTopicConfigArgs) ToGetMdbKafkaClusterTopicTopicConfigPtrOutput() GetMdbKafkaClusterTopicTopicConfigPtrOutput {
	return i.ToGetMdbKafkaClusterTopicTopicConfigPtrOutputWithContext(context.Background())
}

func (i GetMdbKafkaClusterTopicTopicConfigArgs) ToGetMdbKafkaClusterTopicTopicConfigPtrOutputWithContext(ctx context.Context) GetMdbKafkaClusterTopicTopicConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbKafkaClusterTopicTopicConfigOutput).ToGetMdbKafkaClusterTopicTopicConfigPtrOutputWithContext(ctx)
}

// GetMdbKafkaClusterTopicTopicConfigPtrInput is an input type that accepts GetMdbKafkaClusterTopicTopicConfigArgs, GetMdbKafkaClusterTopicTopicConfigPtr and GetMdbKafkaClusterTopicTopicConfigPtrOutput values.
// You can construct a concrete instance of `GetMdbKafkaClusterTopicTopicConfigPtrInput` via:
//
//          GetMdbKafkaClusterTopicTopicConfigArgs{...}
//
//  or:
//
//          nil
type GetMdbKafkaClusterTopicTopicConfigPtrInput interface {
	pulumi.Input

	ToGetMdbKafkaClusterTopicTopicConfigPtrOutput() GetMdbKafkaClusterTopicTopicConfigPtrOutput
	ToGetMdbKafkaClusterTopicTopicConfigPtrOutputWithContext(context.Context) GetMdbKafkaClusterTopicTopicConfigPtrOutput
}

type getMdbKafkaClusterTopicTopicConfigPtrType GetMdbKafkaClusterTopicTopicConfigArgs

func GetMdbKafkaClusterTopicTopicConfigPtr(v *GetMdbKafkaClusterTopicTopicConfigArgs) GetMdbKafkaClusterTopicTopicConfigPtrInput {
	return (*getMdbKafkaClusterTopicTopicConfigPtrType)(v)
}

func (*getMdbKafkaClusterTopicTopicConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetMdbKafkaClusterTopicTopicConfig)(nil)).Elem()
}

func (i *getMdbKafkaClusterTopicTopicConfigPtrType) ToGetMdbKafkaClusterTopicTopicConfigPtrOutput() GetMdbKafkaClusterTopicTopicConfigPtrOutput {
	return i.ToGetMdbKafkaClusterTopicTopicConfigPtrOutputWithContext(context.Background())
}

func (i *getMdbKafkaClusterTopicTopicConfigPtrType) ToGetMdbKafkaClusterTopicTopicConfigPtrOutputWithContext(ctx context.Context) GetMdbKafkaClusterTopicTopicConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbKafkaClusterTopicTopicConfigPtrOutput)
}

type GetMdbKafkaClusterTopicTopicConfigOutput struct{ *pulumi.OutputState }

func (GetMdbKafkaClusterTopicTopicConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbKafkaClusterTopicTopicConfig)(nil)).Elem()
}

func (o GetMdbKafkaClusterTopicTopicConfigOutput) ToGetMdbKafkaClusterTopicTopicConfigOutput() GetMdbKafkaClusterTopicTopicConfigOutput {
	return o
}

func (o GetMdbKafkaClusterTopicTopicConfigOutput) ToGetMdbKafkaClusterTopicTopicConfigOutputWithContext(ctx context.Context) GetMdbKafkaClusterTopicTopicConfigOutput {
	return o
}

func (o GetMdbKafkaClusterTopicTopicConfigOutput) ToGetMdbKafkaClusterTopicTopicConfigPtrOutput() GetMdbKafkaClusterTopicTopicConfigPtrOutput {
	return o.ToGetMdbKafkaClusterTopicTopicConfigPtrOutputWithContext(context.Background())
}

func (o GetMdbKafkaClusterTopicTopicConfigOutput) ToGetMdbKafkaClusterTopicTopicConfigPtrOutputWithContext(ctx context.Context) GetMdbKafkaClusterTopicTopicConfigPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterTopicTopicConfig) *GetMdbKafkaClusterTopicTopicConfig {
		return &v
	}).(GetMdbKafkaClusterTopicTopicConfigPtrOutput)
}
func (o GetMdbKafkaClusterTopicTopicConfigOutput) CleanupPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterTopicTopicConfig) *string { return v.CleanupPolicy }).(pulumi.StringPtrOutput)
}

func (o GetMdbKafkaClusterTopicTopicConfigOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterTopicTopicConfig) *string { return v.CompressionType }).(pulumi.StringPtrOutput)
}

func (o GetMdbKafkaClusterTopicTopicConfigOutput) DeleteRetentionMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterTopicTopicConfig) *int { return v.DeleteRetentionMs }).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterTopicTopicConfigOutput) FileDeleteDelayMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterTopicTopicConfig) *int { return v.FileDeleteDelayMs }).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterTopicTopicConfigOutput) FlushMessages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterTopicTopicConfig) *int { return v.FlushMessages }).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterTopicTopicConfigOutput) FlushMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterTopicTopicConfig) *int { return v.FlushMs }).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterTopicTopicConfigOutput) MaxMessageBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterTopicTopicConfig) *int { return v.MaxMessageBytes }).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterTopicTopicConfigOutput) MinCompactionLagMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterTopicTopicConfig) *int { return v.MinCompactionLagMs }).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterTopicTopicConfigOutput) MinInsyncReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterTopicTopicConfig) *int { return v.MinInsyncReplicas }).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterTopicTopicConfigOutput) Preallocate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterTopicTopicConfig) *bool { return v.Preallocate }).(pulumi.BoolPtrOutput)
}

func (o GetMdbKafkaClusterTopicTopicConfigOutput) RetentionBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterTopicTopicConfig) *int { return v.RetentionBytes }).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterTopicTopicConfigOutput) RetentionMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterTopicTopicConfig) *int { return v.RetentionMs }).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterTopicTopicConfigOutput) SegmentBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterTopicTopicConfig) *int { return v.SegmentBytes }).(pulumi.IntPtrOutput)
}

type GetMdbKafkaClusterTopicTopicConfigPtrOutput struct{ *pulumi.OutputState }

func (GetMdbKafkaClusterTopicTopicConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetMdbKafkaClusterTopicTopicConfig)(nil)).Elem()
}

func (o GetMdbKafkaClusterTopicTopicConfigPtrOutput) ToGetMdbKafkaClusterTopicTopicConfigPtrOutput() GetMdbKafkaClusterTopicTopicConfigPtrOutput {
	return o
}

func (o GetMdbKafkaClusterTopicTopicConfigPtrOutput) ToGetMdbKafkaClusterTopicTopicConfigPtrOutputWithContext(ctx context.Context) GetMdbKafkaClusterTopicTopicConfigPtrOutput {
	return o
}

func (o GetMdbKafkaClusterTopicTopicConfigPtrOutput) Elem() GetMdbKafkaClusterTopicTopicConfigOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterTopicTopicConfig) GetMdbKafkaClusterTopicTopicConfig { return *v }).(GetMdbKafkaClusterTopicTopicConfigOutput)
}

func (o GetMdbKafkaClusterTopicTopicConfigPtrOutput) CleanupPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterTopicTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.CleanupPolicy
	}).(pulumi.StringPtrOutput)
}

func (o GetMdbKafkaClusterTopicTopicConfigPtrOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterTopicTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.CompressionType
	}).(pulumi.StringPtrOutput)
}

func (o GetMdbKafkaClusterTopicTopicConfigPtrOutput) DeleteRetentionMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterTopicTopicConfig) *int {
		if v == nil {
			return nil
		}
		return v.DeleteRetentionMs
	}).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterTopicTopicConfigPtrOutput) FileDeleteDelayMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterTopicTopicConfig) *int {
		if v == nil {
			return nil
		}
		return v.FileDeleteDelayMs
	}).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterTopicTopicConfigPtrOutput) FlushMessages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterTopicTopicConfig) *int {
		if v == nil {
			return nil
		}
		return v.FlushMessages
	}).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterTopicTopicConfigPtrOutput) FlushMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterTopicTopicConfig) *int {
		if v == nil {
			return nil
		}
		return v.FlushMs
	}).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterTopicTopicConfigPtrOutput) MaxMessageBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterTopicTopicConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxMessageBytes
	}).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterTopicTopicConfigPtrOutput) MinCompactionLagMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterTopicTopicConfig) *int {
		if v == nil {
			return nil
		}
		return v.MinCompactionLagMs
	}).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterTopicTopicConfigPtrOutput) MinInsyncReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterTopicTopicConfig) *int {
		if v == nil {
			return nil
		}
		return v.MinInsyncReplicas
	}).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterTopicTopicConfigPtrOutput) Preallocate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterTopicTopicConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Preallocate
	}).(pulumi.BoolPtrOutput)
}

func (o GetMdbKafkaClusterTopicTopicConfigPtrOutput) RetentionBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterTopicTopicConfig) *int {
		if v == nil {
			return nil
		}
		return v.RetentionBytes
	}).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterTopicTopicConfigPtrOutput) RetentionMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterTopicTopicConfig) *int {
		if v == nil {
			return nil
		}
		return v.RetentionMs
	}).(pulumi.IntPtrOutput)
}

func (o GetMdbKafkaClusterTopicTopicConfigPtrOutput) SegmentBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetMdbKafkaClusterTopicTopicConfig) *int {
		if v == nil {
			return nil
		}
		return v.SegmentBytes
	}).(pulumi.IntPtrOutput)
}

type GetMdbKafkaClusterUser struct {
	// The name of the Kafka cluster.
	Name string `pulumi:"name"`
	// (Required) The password of the user.
	Password string `pulumi:"password"`
	// (Optional) Set of permissions granted to the user. The structure is documented below.
	Permissions []GetMdbKafkaClusterUserPermission `pulumi:"permissions"`
}

// GetMdbKafkaClusterUserInput is an input type that accepts GetMdbKafkaClusterUserArgs and GetMdbKafkaClusterUserOutput values.
// You can construct a concrete instance of `GetMdbKafkaClusterUserInput` via:
//
//          GetMdbKafkaClusterUserArgs{...}
type GetMdbKafkaClusterUserInput interface {
	pulumi.Input

	ToGetMdbKafkaClusterUserOutput() GetMdbKafkaClusterUserOutput
	ToGetMdbKafkaClusterUserOutputWithContext(context.Context) GetMdbKafkaClusterUserOutput
}

type GetMdbKafkaClusterUserArgs struct {
	// The name of the Kafka cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// (Required) The password of the user.
	Password pulumi.StringInput `pulumi:"password"`
	// (Optional) Set of permissions granted to the user. The structure is documented below.
	Permissions GetMdbKafkaClusterUserPermissionArrayInput `pulumi:"permissions"`
}

func (GetMdbKafkaClusterUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbKafkaClusterUser)(nil)).Elem()
}

func (i GetMdbKafkaClusterUserArgs) ToGetMdbKafkaClusterUserOutput() GetMdbKafkaClusterUserOutput {
	return i.ToGetMdbKafkaClusterUserOutputWithContext(context.Background())
}

func (i GetMdbKafkaClusterUserArgs) ToGetMdbKafkaClusterUserOutputWithContext(ctx context.Context) GetMdbKafkaClusterUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbKafkaClusterUserOutput)
}

// GetMdbKafkaClusterUserArrayInput is an input type that accepts GetMdbKafkaClusterUserArray and GetMdbKafkaClusterUserArrayOutput values.
// You can construct a concrete instance of `GetMdbKafkaClusterUserArrayInput` via:
//
//          GetMdbKafkaClusterUserArray{ GetMdbKafkaClusterUserArgs{...} }
type GetMdbKafkaClusterUserArrayInput interface {
	pulumi.Input

	ToGetMdbKafkaClusterUserArrayOutput() GetMdbKafkaClusterUserArrayOutput
	ToGetMdbKafkaClusterUserArrayOutputWithContext(context.Context) GetMdbKafkaClusterUserArrayOutput
}

type GetMdbKafkaClusterUserArray []GetMdbKafkaClusterUserInput

func (GetMdbKafkaClusterUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbKafkaClusterUser)(nil)).Elem()
}

func (i GetMdbKafkaClusterUserArray) ToGetMdbKafkaClusterUserArrayOutput() GetMdbKafkaClusterUserArrayOutput {
	return i.ToGetMdbKafkaClusterUserArrayOutputWithContext(context.Background())
}

func (i GetMdbKafkaClusterUserArray) ToGetMdbKafkaClusterUserArrayOutputWithContext(ctx context.Context) GetMdbKafkaClusterUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbKafkaClusterUserArrayOutput)
}

type GetMdbKafkaClusterUserOutput struct{ *pulumi.OutputState }

func (GetMdbKafkaClusterUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbKafkaClusterUser)(nil)).Elem()
}

func (o GetMdbKafkaClusterUserOutput) ToGetMdbKafkaClusterUserOutput() GetMdbKafkaClusterUserOutput {
	return o
}

func (o GetMdbKafkaClusterUserOutput) ToGetMdbKafkaClusterUserOutputWithContext(ctx context.Context) GetMdbKafkaClusterUserOutput {
	return o
}

// The name of the Kafka cluster.
func (o GetMdbKafkaClusterUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterUser) string { return v.Name }).(pulumi.StringOutput)
}

// (Required) The password of the user.
func (o GetMdbKafkaClusterUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterUser) string { return v.Password }).(pulumi.StringOutput)
}

// (Optional) Set of permissions granted to the user. The structure is documented below.
func (o GetMdbKafkaClusterUserOutput) Permissions() GetMdbKafkaClusterUserPermissionArrayOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterUser) []GetMdbKafkaClusterUserPermission { return v.Permissions }).(GetMdbKafkaClusterUserPermissionArrayOutput)
}

type GetMdbKafkaClusterUserArrayOutput struct{ *pulumi.OutputState }

func (GetMdbKafkaClusterUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbKafkaClusterUser)(nil)).Elem()
}

func (o GetMdbKafkaClusterUserArrayOutput) ToGetMdbKafkaClusterUserArrayOutput() GetMdbKafkaClusterUserArrayOutput {
	return o
}

func (o GetMdbKafkaClusterUserArrayOutput) ToGetMdbKafkaClusterUserArrayOutputWithContext(ctx context.Context) GetMdbKafkaClusterUserArrayOutput {
	return o
}

func (o GetMdbKafkaClusterUserArrayOutput) Index(i pulumi.IntInput) GetMdbKafkaClusterUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbKafkaClusterUser {
		return vs[0].([]GetMdbKafkaClusterUser)[vs[1].(int)]
	}).(GetMdbKafkaClusterUserOutput)
}

type GetMdbKafkaClusterUserPermission struct {
	// Role of the host in the cluster.
	Role string `pulumi:"role"`
	// (Required) The name of the topic that the permission grants access to.
	TopicName string `pulumi:"topicName"`
}

// GetMdbKafkaClusterUserPermissionInput is an input type that accepts GetMdbKafkaClusterUserPermissionArgs and GetMdbKafkaClusterUserPermissionOutput values.
// You can construct a concrete instance of `GetMdbKafkaClusterUserPermissionInput` via:
//
//          GetMdbKafkaClusterUserPermissionArgs{...}
type GetMdbKafkaClusterUserPermissionInput interface {
	pulumi.Input

	ToGetMdbKafkaClusterUserPermissionOutput() GetMdbKafkaClusterUserPermissionOutput
	ToGetMdbKafkaClusterUserPermissionOutputWithContext(context.Context) GetMdbKafkaClusterUserPermissionOutput
}

type GetMdbKafkaClusterUserPermissionArgs struct {
	// Role of the host in the cluster.
	Role pulumi.StringInput `pulumi:"role"`
	// (Required) The name of the topic that the permission grants access to.
	TopicName pulumi.StringInput `pulumi:"topicName"`
}

func (GetMdbKafkaClusterUserPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbKafkaClusterUserPermission)(nil)).Elem()
}

func (i GetMdbKafkaClusterUserPermissionArgs) ToGetMdbKafkaClusterUserPermissionOutput() GetMdbKafkaClusterUserPermissionOutput {
	return i.ToGetMdbKafkaClusterUserPermissionOutputWithContext(context.Background())
}

func (i GetMdbKafkaClusterUserPermissionArgs) ToGetMdbKafkaClusterUserPermissionOutputWithContext(ctx context.Context) GetMdbKafkaClusterUserPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbKafkaClusterUserPermissionOutput)
}

// GetMdbKafkaClusterUserPermissionArrayInput is an input type that accepts GetMdbKafkaClusterUserPermissionArray and GetMdbKafkaClusterUserPermissionArrayOutput values.
// You can construct a concrete instance of `GetMdbKafkaClusterUserPermissionArrayInput` via:
//
//          GetMdbKafkaClusterUserPermissionArray{ GetMdbKafkaClusterUserPermissionArgs{...} }
type GetMdbKafkaClusterUserPermissionArrayInput interface {
	pulumi.Input

	ToGetMdbKafkaClusterUserPermissionArrayOutput() GetMdbKafkaClusterUserPermissionArrayOutput
	ToGetMdbKafkaClusterUserPermissionArrayOutputWithContext(context.Context) GetMdbKafkaClusterUserPermissionArrayOutput
}

type GetMdbKafkaClusterUserPermissionArray []GetMdbKafkaClusterUserPermissionInput

func (GetMdbKafkaClusterUserPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbKafkaClusterUserPermission)(nil)).Elem()
}

func (i GetMdbKafkaClusterUserPermissionArray) ToGetMdbKafkaClusterUserPermissionArrayOutput() GetMdbKafkaClusterUserPermissionArrayOutput {
	return i.ToGetMdbKafkaClusterUserPermissionArrayOutputWithContext(context.Background())
}

func (i GetMdbKafkaClusterUserPermissionArray) ToGetMdbKafkaClusterUserPermissionArrayOutputWithContext(ctx context.Context) GetMdbKafkaClusterUserPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbKafkaClusterUserPermissionArrayOutput)
}

type GetMdbKafkaClusterUserPermissionOutput struct{ *pulumi.OutputState }

func (GetMdbKafkaClusterUserPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbKafkaClusterUserPermission)(nil)).Elem()
}

func (o GetMdbKafkaClusterUserPermissionOutput) ToGetMdbKafkaClusterUserPermissionOutput() GetMdbKafkaClusterUserPermissionOutput {
	return o
}

func (o GetMdbKafkaClusterUserPermissionOutput) ToGetMdbKafkaClusterUserPermissionOutputWithContext(ctx context.Context) GetMdbKafkaClusterUserPermissionOutput {
	return o
}

// Role of the host in the cluster.
func (o GetMdbKafkaClusterUserPermissionOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterUserPermission) string { return v.Role }).(pulumi.StringOutput)
}

// (Required) The name of the topic that the permission grants access to.
func (o GetMdbKafkaClusterUserPermissionOutput) TopicName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbKafkaClusterUserPermission) string { return v.TopicName }).(pulumi.StringOutput)
}

type GetMdbKafkaClusterUserPermissionArrayOutput struct{ *pulumi.OutputState }

func (GetMdbKafkaClusterUserPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbKafkaClusterUserPermission)(nil)).Elem()
}

func (o GetMdbKafkaClusterUserPermissionArrayOutput) ToGetMdbKafkaClusterUserPermissionArrayOutput() GetMdbKafkaClusterUserPermissionArrayOutput {
	return o
}

func (o GetMdbKafkaClusterUserPermissionArrayOutput) ToGetMdbKafkaClusterUserPermissionArrayOutputWithContext(ctx context.Context) GetMdbKafkaClusterUserPermissionArrayOutput {
	return o
}

func (o GetMdbKafkaClusterUserPermissionArrayOutput) Index(i pulumi.IntInput) GetMdbKafkaClusterUserPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbKafkaClusterUserPermission {
		return vs[0].([]GetMdbKafkaClusterUserPermission)[vs[1].(int)]
	}).(GetMdbKafkaClusterUserPermissionOutput)
}

type GetMdbMongodbClusterClusterConfig struct {
	// Access policy to MongoDB cluster. The structure is documented below.
	Access GetMdbMongodbClusterClusterConfigAccess `pulumi:"access"`
	// Time to start the daily backup, in the UTC timezone. The structure is documented below.
	BackupWindowStart GetMdbMongodbClusterClusterConfigBackupWindowStart `pulumi:"backupWindowStart"`
	// Feature compatibility version of MongoDB.
	FeatureCompatibilityVersion string `pulumi:"featureCompatibilityVersion"`
	// Version of MongoDB (either 4.4, 4.2, 4.0 or 3.6).
	Version string `pulumi:"version"`
}

// GetMdbMongodbClusterClusterConfigInput is an input type that accepts GetMdbMongodbClusterClusterConfigArgs and GetMdbMongodbClusterClusterConfigOutput values.
// You can construct a concrete instance of `GetMdbMongodbClusterClusterConfigInput` via:
//
//          GetMdbMongodbClusterClusterConfigArgs{...}
type GetMdbMongodbClusterClusterConfigInput interface {
	pulumi.Input

	ToGetMdbMongodbClusterClusterConfigOutput() GetMdbMongodbClusterClusterConfigOutput
	ToGetMdbMongodbClusterClusterConfigOutputWithContext(context.Context) GetMdbMongodbClusterClusterConfigOutput
}

type GetMdbMongodbClusterClusterConfigArgs struct {
	// Access policy to MongoDB cluster. The structure is documented below.
	Access GetMdbMongodbClusterClusterConfigAccessInput `pulumi:"access"`
	// Time to start the daily backup, in the UTC timezone. The structure is documented below.
	BackupWindowStart GetMdbMongodbClusterClusterConfigBackupWindowStartInput `pulumi:"backupWindowStart"`
	// Feature compatibility version of MongoDB.
	FeatureCompatibilityVersion pulumi.StringInput `pulumi:"featureCompatibilityVersion"`
	// Version of MongoDB (either 4.4, 4.2, 4.0 or 3.6).
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetMdbMongodbClusterClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMongodbClusterClusterConfig)(nil)).Elem()
}

func (i GetMdbMongodbClusterClusterConfigArgs) ToGetMdbMongodbClusterClusterConfigOutput() GetMdbMongodbClusterClusterConfigOutput {
	return i.ToGetMdbMongodbClusterClusterConfigOutputWithContext(context.Background())
}

func (i GetMdbMongodbClusterClusterConfigArgs) ToGetMdbMongodbClusterClusterConfigOutputWithContext(ctx context.Context) GetMdbMongodbClusterClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbMongodbClusterClusterConfigOutput)
}

type GetMdbMongodbClusterClusterConfigOutput struct{ *pulumi.OutputState }

func (GetMdbMongodbClusterClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMongodbClusterClusterConfig)(nil)).Elem()
}

func (o GetMdbMongodbClusterClusterConfigOutput) ToGetMdbMongodbClusterClusterConfigOutput() GetMdbMongodbClusterClusterConfigOutput {
	return o
}

func (o GetMdbMongodbClusterClusterConfigOutput) ToGetMdbMongodbClusterClusterConfigOutputWithContext(ctx context.Context) GetMdbMongodbClusterClusterConfigOutput {
	return o
}

// Access policy to MongoDB cluster. The structure is documented below.
func (o GetMdbMongodbClusterClusterConfigOutput) Access() GetMdbMongodbClusterClusterConfigAccessOutput {
	return o.ApplyT(func(v GetMdbMongodbClusterClusterConfig) GetMdbMongodbClusterClusterConfigAccess { return v.Access }).(GetMdbMongodbClusterClusterConfigAccessOutput)
}

// Time to start the daily backup, in the UTC timezone. The structure is documented below.
func (o GetMdbMongodbClusterClusterConfigOutput) BackupWindowStart() GetMdbMongodbClusterClusterConfigBackupWindowStartOutput {
	return o.ApplyT(func(v GetMdbMongodbClusterClusterConfig) GetMdbMongodbClusterClusterConfigBackupWindowStart {
		return v.BackupWindowStart
	}).(GetMdbMongodbClusterClusterConfigBackupWindowStartOutput)
}

// Feature compatibility version of MongoDB.
func (o GetMdbMongodbClusterClusterConfigOutput) FeatureCompatibilityVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbMongodbClusterClusterConfig) string { return v.FeatureCompatibilityVersion }).(pulumi.StringOutput)
}

// Version of MongoDB (either 4.4, 4.2, 4.0 or 3.6).
func (o GetMdbMongodbClusterClusterConfigOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbMongodbClusterClusterConfig) string { return v.Version }).(pulumi.StringOutput)
}

type GetMdbMongodbClusterClusterConfigAccess struct {
	// Shows whether cluster has access to data lens.
	DataLens bool `pulumi:"dataLens"`
}

// GetMdbMongodbClusterClusterConfigAccessInput is an input type that accepts GetMdbMongodbClusterClusterConfigAccessArgs and GetMdbMongodbClusterClusterConfigAccessOutput values.
// You can construct a concrete instance of `GetMdbMongodbClusterClusterConfigAccessInput` via:
//
//          GetMdbMongodbClusterClusterConfigAccessArgs{...}
type GetMdbMongodbClusterClusterConfigAccessInput interface {
	pulumi.Input

	ToGetMdbMongodbClusterClusterConfigAccessOutput() GetMdbMongodbClusterClusterConfigAccessOutput
	ToGetMdbMongodbClusterClusterConfigAccessOutputWithContext(context.Context) GetMdbMongodbClusterClusterConfigAccessOutput
}

type GetMdbMongodbClusterClusterConfigAccessArgs struct {
	// Shows whether cluster has access to data lens.
	DataLens pulumi.BoolInput `pulumi:"dataLens"`
}

func (GetMdbMongodbClusterClusterConfigAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMongodbClusterClusterConfigAccess)(nil)).Elem()
}

func (i GetMdbMongodbClusterClusterConfigAccessArgs) ToGetMdbMongodbClusterClusterConfigAccessOutput() GetMdbMongodbClusterClusterConfigAccessOutput {
	return i.ToGetMdbMongodbClusterClusterConfigAccessOutputWithContext(context.Background())
}

func (i GetMdbMongodbClusterClusterConfigAccessArgs) ToGetMdbMongodbClusterClusterConfigAccessOutputWithContext(ctx context.Context) GetMdbMongodbClusterClusterConfigAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbMongodbClusterClusterConfigAccessOutput)
}

type GetMdbMongodbClusterClusterConfigAccessOutput struct{ *pulumi.OutputState }

func (GetMdbMongodbClusterClusterConfigAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMongodbClusterClusterConfigAccess)(nil)).Elem()
}

func (o GetMdbMongodbClusterClusterConfigAccessOutput) ToGetMdbMongodbClusterClusterConfigAccessOutput() GetMdbMongodbClusterClusterConfigAccessOutput {
	return o
}

func (o GetMdbMongodbClusterClusterConfigAccessOutput) ToGetMdbMongodbClusterClusterConfigAccessOutputWithContext(ctx context.Context) GetMdbMongodbClusterClusterConfigAccessOutput {
	return o
}

// Shows whether cluster has access to data lens.
func (o GetMdbMongodbClusterClusterConfigAccessOutput) DataLens() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbMongodbClusterClusterConfigAccess) bool { return v.DataLens }).(pulumi.BoolOutput)
}

type GetMdbMongodbClusterClusterConfigBackupWindowStart struct {
	// The hour at which backup will be started.
	Hours *int `pulumi:"hours"`
	// The minute at which backup will be started.
	Minutes *int `pulumi:"minutes"`
}

// GetMdbMongodbClusterClusterConfigBackupWindowStartInput is an input type that accepts GetMdbMongodbClusterClusterConfigBackupWindowStartArgs and GetMdbMongodbClusterClusterConfigBackupWindowStartOutput values.
// You can construct a concrete instance of `GetMdbMongodbClusterClusterConfigBackupWindowStartInput` via:
//
//          GetMdbMongodbClusterClusterConfigBackupWindowStartArgs{...}
type GetMdbMongodbClusterClusterConfigBackupWindowStartInput interface {
	pulumi.Input

	ToGetMdbMongodbClusterClusterConfigBackupWindowStartOutput() GetMdbMongodbClusterClusterConfigBackupWindowStartOutput
	ToGetMdbMongodbClusterClusterConfigBackupWindowStartOutputWithContext(context.Context) GetMdbMongodbClusterClusterConfigBackupWindowStartOutput
}

type GetMdbMongodbClusterClusterConfigBackupWindowStartArgs struct {
	// The hour at which backup will be started.
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// The minute at which backup will be started.
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
}

func (GetMdbMongodbClusterClusterConfigBackupWindowStartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMongodbClusterClusterConfigBackupWindowStart)(nil)).Elem()
}

func (i GetMdbMongodbClusterClusterConfigBackupWindowStartArgs) ToGetMdbMongodbClusterClusterConfigBackupWindowStartOutput() GetMdbMongodbClusterClusterConfigBackupWindowStartOutput {
	return i.ToGetMdbMongodbClusterClusterConfigBackupWindowStartOutputWithContext(context.Background())
}

func (i GetMdbMongodbClusterClusterConfigBackupWindowStartArgs) ToGetMdbMongodbClusterClusterConfigBackupWindowStartOutputWithContext(ctx context.Context) GetMdbMongodbClusterClusterConfigBackupWindowStartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbMongodbClusterClusterConfigBackupWindowStartOutput)
}

type GetMdbMongodbClusterClusterConfigBackupWindowStartOutput struct{ *pulumi.OutputState }

func (GetMdbMongodbClusterClusterConfigBackupWindowStartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMongodbClusterClusterConfigBackupWindowStart)(nil)).Elem()
}

func (o GetMdbMongodbClusterClusterConfigBackupWindowStartOutput) ToGetMdbMongodbClusterClusterConfigBackupWindowStartOutput() GetMdbMongodbClusterClusterConfigBackupWindowStartOutput {
	return o
}

func (o GetMdbMongodbClusterClusterConfigBackupWindowStartOutput) ToGetMdbMongodbClusterClusterConfigBackupWindowStartOutputWithContext(ctx context.Context) GetMdbMongodbClusterClusterConfigBackupWindowStartOutput {
	return o
}

// The hour at which backup will be started.
func (o GetMdbMongodbClusterClusterConfigBackupWindowStartOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbMongodbClusterClusterConfigBackupWindowStart) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// The minute at which backup will be started.
func (o GetMdbMongodbClusterClusterConfigBackupWindowStartOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbMongodbClusterClusterConfigBackupWindowStart) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

type GetMdbMongodbClusterDatabase struct {
	// The name of the MongoDB cluster.
	Name string `pulumi:"name"`
}

// GetMdbMongodbClusterDatabaseInput is an input type that accepts GetMdbMongodbClusterDatabaseArgs and GetMdbMongodbClusterDatabaseOutput values.
// You can construct a concrete instance of `GetMdbMongodbClusterDatabaseInput` via:
//
//          GetMdbMongodbClusterDatabaseArgs{...}
type GetMdbMongodbClusterDatabaseInput interface {
	pulumi.Input

	ToGetMdbMongodbClusterDatabaseOutput() GetMdbMongodbClusterDatabaseOutput
	ToGetMdbMongodbClusterDatabaseOutputWithContext(context.Context) GetMdbMongodbClusterDatabaseOutput
}

type GetMdbMongodbClusterDatabaseArgs struct {
	// The name of the MongoDB cluster.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetMdbMongodbClusterDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMongodbClusterDatabase)(nil)).Elem()
}

func (i GetMdbMongodbClusterDatabaseArgs) ToGetMdbMongodbClusterDatabaseOutput() GetMdbMongodbClusterDatabaseOutput {
	return i.ToGetMdbMongodbClusterDatabaseOutputWithContext(context.Background())
}

func (i GetMdbMongodbClusterDatabaseArgs) ToGetMdbMongodbClusterDatabaseOutputWithContext(ctx context.Context) GetMdbMongodbClusterDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbMongodbClusterDatabaseOutput)
}

// GetMdbMongodbClusterDatabaseArrayInput is an input type that accepts GetMdbMongodbClusterDatabaseArray and GetMdbMongodbClusterDatabaseArrayOutput values.
// You can construct a concrete instance of `GetMdbMongodbClusterDatabaseArrayInput` via:
//
//          GetMdbMongodbClusterDatabaseArray{ GetMdbMongodbClusterDatabaseArgs{...} }
type GetMdbMongodbClusterDatabaseArrayInput interface {
	pulumi.Input

	ToGetMdbMongodbClusterDatabaseArrayOutput() GetMdbMongodbClusterDatabaseArrayOutput
	ToGetMdbMongodbClusterDatabaseArrayOutputWithContext(context.Context) GetMdbMongodbClusterDatabaseArrayOutput
}

type GetMdbMongodbClusterDatabaseArray []GetMdbMongodbClusterDatabaseInput

func (GetMdbMongodbClusterDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbMongodbClusterDatabase)(nil)).Elem()
}

func (i GetMdbMongodbClusterDatabaseArray) ToGetMdbMongodbClusterDatabaseArrayOutput() GetMdbMongodbClusterDatabaseArrayOutput {
	return i.ToGetMdbMongodbClusterDatabaseArrayOutputWithContext(context.Background())
}

func (i GetMdbMongodbClusterDatabaseArray) ToGetMdbMongodbClusterDatabaseArrayOutputWithContext(ctx context.Context) GetMdbMongodbClusterDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbMongodbClusterDatabaseArrayOutput)
}

type GetMdbMongodbClusterDatabaseOutput struct{ *pulumi.OutputState }

func (GetMdbMongodbClusterDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMongodbClusterDatabase)(nil)).Elem()
}

func (o GetMdbMongodbClusterDatabaseOutput) ToGetMdbMongodbClusterDatabaseOutput() GetMdbMongodbClusterDatabaseOutput {
	return o
}

func (o GetMdbMongodbClusterDatabaseOutput) ToGetMdbMongodbClusterDatabaseOutputWithContext(ctx context.Context) GetMdbMongodbClusterDatabaseOutput {
	return o
}

// The name of the MongoDB cluster.
func (o GetMdbMongodbClusterDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbMongodbClusterDatabase) string { return v.Name }).(pulumi.StringOutput)
}

type GetMdbMongodbClusterDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetMdbMongodbClusterDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbMongodbClusterDatabase)(nil)).Elem()
}

func (o GetMdbMongodbClusterDatabaseArrayOutput) ToGetMdbMongodbClusterDatabaseArrayOutput() GetMdbMongodbClusterDatabaseArrayOutput {
	return o
}

func (o GetMdbMongodbClusterDatabaseArrayOutput) ToGetMdbMongodbClusterDatabaseArrayOutputWithContext(ctx context.Context) GetMdbMongodbClusterDatabaseArrayOutput {
	return o
}

func (o GetMdbMongodbClusterDatabaseArrayOutput) Index(i pulumi.IntInput) GetMdbMongodbClusterDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbMongodbClusterDatabase {
		return vs[0].([]GetMdbMongodbClusterDatabase)[vs[1].(int)]
	}).(GetMdbMongodbClusterDatabaseOutput)
}

type GetMdbMongodbClusterHost struct {
	// Has assigned public IP.
	AssignPublicIp bool `pulumi:"assignPublicIp"`
	// The health of the host.
	Health string `pulumi:"health"`
	// The name of the MongoDB cluster.
	Name string `pulumi:"name"`
	// The role of the cluster (either PRIMARY or SECONDARY).
	Role string `pulumi:"role"`
	// The name of the shard to which the host belongs.
	ShardName string `pulumi:"shardName"`
	// The ID of the subnet, to which the host belongs. The subnet must
	// be a part of the network to which the cluster belongs.
	SubnetId string `pulumi:"subnetId"`
	// type of mongo demon which runs on this host (mongod, mongos or monogcfg).
	Type string `pulumi:"type"`
	// The availability zone where the MongoDB host will be created.
	ZoneId string `pulumi:"zoneId"`
}

// GetMdbMongodbClusterHostInput is an input type that accepts GetMdbMongodbClusterHostArgs and GetMdbMongodbClusterHostOutput values.
// You can construct a concrete instance of `GetMdbMongodbClusterHostInput` via:
//
//          GetMdbMongodbClusterHostArgs{...}
type GetMdbMongodbClusterHostInput interface {
	pulumi.Input

	ToGetMdbMongodbClusterHostOutput() GetMdbMongodbClusterHostOutput
	ToGetMdbMongodbClusterHostOutputWithContext(context.Context) GetMdbMongodbClusterHostOutput
}

type GetMdbMongodbClusterHostArgs struct {
	// Has assigned public IP.
	AssignPublicIp pulumi.BoolInput `pulumi:"assignPublicIp"`
	// The health of the host.
	Health pulumi.StringInput `pulumi:"health"`
	// The name of the MongoDB cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// The role of the cluster (either PRIMARY or SECONDARY).
	Role pulumi.StringInput `pulumi:"role"`
	// The name of the shard to which the host belongs.
	ShardName pulumi.StringInput `pulumi:"shardName"`
	// The ID of the subnet, to which the host belongs. The subnet must
	// be a part of the network to which the cluster belongs.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// type of mongo demon which runs on this host (mongod, mongos or monogcfg).
	Type pulumi.StringInput `pulumi:"type"`
	// The availability zone where the MongoDB host will be created.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetMdbMongodbClusterHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMongodbClusterHost)(nil)).Elem()
}

func (i GetMdbMongodbClusterHostArgs) ToGetMdbMongodbClusterHostOutput() GetMdbMongodbClusterHostOutput {
	return i.ToGetMdbMongodbClusterHostOutputWithContext(context.Background())
}

func (i GetMdbMongodbClusterHostArgs) ToGetMdbMongodbClusterHostOutputWithContext(ctx context.Context) GetMdbMongodbClusterHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbMongodbClusterHostOutput)
}

// GetMdbMongodbClusterHostArrayInput is an input type that accepts GetMdbMongodbClusterHostArray and GetMdbMongodbClusterHostArrayOutput values.
// You can construct a concrete instance of `GetMdbMongodbClusterHostArrayInput` via:
//
//          GetMdbMongodbClusterHostArray{ GetMdbMongodbClusterHostArgs{...} }
type GetMdbMongodbClusterHostArrayInput interface {
	pulumi.Input

	ToGetMdbMongodbClusterHostArrayOutput() GetMdbMongodbClusterHostArrayOutput
	ToGetMdbMongodbClusterHostArrayOutputWithContext(context.Context) GetMdbMongodbClusterHostArrayOutput
}

type GetMdbMongodbClusterHostArray []GetMdbMongodbClusterHostInput

func (GetMdbMongodbClusterHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbMongodbClusterHost)(nil)).Elem()
}

func (i GetMdbMongodbClusterHostArray) ToGetMdbMongodbClusterHostArrayOutput() GetMdbMongodbClusterHostArrayOutput {
	return i.ToGetMdbMongodbClusterHostArrayOutputWithContext(context.Background())
}

func (i GetMdbMongodbClusterHostArray) ToGetMdbMongodbClusterHostArrayOutputWithContext(ctx context.Context) GetMdbMongodbClusterHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbMongodbClusterHostArrayOutput)
}

type GetMdbMongodbClusterHostOutput struct{ *pulumi.OutputState }

func (GetMdbMongodbClusterHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMongodbClusterHost)(nil)).Elem()
}

func (o GetMdbMongodbClusterHostOutput) ToGetMdbMongodbClusterHostOutput() GetMdbMongodbClusterHostOutput {
	return o
}

func (o GetMdbMongodbClusterHostOutput) ToGetMdbMongodbClusterHostOutputWithContext(ctx context.Context) GetMdbMongodbClusterHostOutput {
	return o
}

// Has assigned public IP.
func (o GetMdbMongodbClusterHostOutput) AssignPublicIp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbMongodbClusterHost) bool { return v.AssignPublicIp }).(pulumi.BoolOutput)
}

// The health of the host.
func (o GetMdbMongodbClusterHostOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbMongodbClusterHost) string { return v.Health }).(pulumi.StringOutput)
}

// The name of the MongoDB cluster.
func (o GetMdbMongodbClusterHostOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbMongodbClusterHost) string { return v.Name }).(pulumi.StringOutput)
}

// The role of the cluster (either PRIMARY or SECONDARY).
func (o GetMdbMongodbClusterHostOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbMongodbClusterHost) string { return v.Role }).(pulumi.StringOutput)
}

// The name of the shard to which the host belongs.
func (o GetMdbMongodbClusterHostOutput) ShardName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbMongodbClusterHost) string { return v.ShardName }).(pulumi.StringOutput)
}

// The ID of the subnet, to which the host belongs. The subnet must
// be a part of the network to which the cluster belongs.
func (o GetMdbMongodbClusterHostOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbMongodbClusterHost) string { return v.SubnetId }).(pulumi.StringOutput)
}

// type of mongo demon which runs on this host (mongod, mongos or monogcfg).
func (o GetMdbMongodbClusterHostOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbMongodbClusterHost) string { return v.Type }).(pulumi.StringOutput)
}

// The availability zone where the MongoDB host will be created.
func (o GetMdbMongodbClusterHostOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbMongodbClusterHost) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetMdbMongodbClusterHostArrayOutput struct{ *pulumi.OutputState }

func (GetMdbMongodbClusterHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbMongodbClusterHost)(nil)).Elem()
}

func (o GetMdbMongodbClusterHostArrayOutput) ToGetMdbMongodbClusterHostArrayOutput() GetMdbMongodbClusterHostArrayOutput {
	return o
}

func (o GetMdbMongodbClusterHostArrayOutput) ToGetMdbMongodbClusterHostArrayOutputWithContext(ctx context.Context) GetMdbMongodbClusterHostArrayOutput {
	return o
}

func (o GetMdbMongodbClusterHostArrayOutput) Index(i pulumi.IntInput) GetMdbMongodbClusterHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbMongodbClusterHost {
		return vs[0].([]GetMdbMongodbClusterHost)[vs[1].(int)]
	}).(GetMdbMongodbClusterHostOutput)
}

type GetMdbMongodbClusterResources struct {
	// Volume of the storage available to a host, in gigabytes.
	DiskSize int `pulumi:"diskSize"`
	// The ID of the storage type. For more information, see [the official documentation](https://cloud.yandex.com/docs/managed-mongodb/concepts/storage)
	DiskTypeId       string `pulumi:"diskTypeId"`
	ResourcePresetId string `pulumi:"resourcePresetId"`
}

// GetMdbMongodbClusterResourcesInput is an input type that accepts GetMdbMongodbClusterResourcesArgs and GetMdbMongodbClusterResourcesOutput values.
// You can construct a concrete instance of `GetMdbMongodbClusterResourcesInput` via:
//
//          GetMdbMongodbClusterResourcesArgs{...}
type GetMdbMongodbClusterResourcesInput interface {
	pulumi.Input

	ToGetMdbMongodbClusterResourcesOutput() GetMdbMongodbClusterResourcesOutput
	ToGetMdbMongodbClusterResourcesOutputWithContext(context.Context) GetMdbMongodbClusterResourcesOutput
}

type GetMdbMongodbClusterResourcesArgs struct {
	// Volume of the storage available to a host, in gigabytes.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// The ID of the storage type. For more information, see [the official documentation](https://cloud.yandex.com/docs/managed-mongodb/concepts/storage)
	DiskTypeId       pulumi.StringInput `pulumi:"diskTypeId"`
	ResourcePresetId pulumi.StringInput `pulumi:"resourcePresetId"`
}

func (GetMdbMongodbClusterResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMongodbClusterResources)(nil)).Elem()
}

func (i GetMdbMongodbClusterResourcesArgs) ToGetMdbMongodbClusterResourcesOutput() GetMdbMongodbClusterResourcesOutput {
	return i.ToGetMdbMongodbClusterResourcesOutputWithContext(context.Background())
}

func (i GetMdbMongodbClusterResourcesArgs) ToGetMdbMongodbClusterResourcesOutputWithContext(ctx context.Context) GetMdbMongodbClusterResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbMongodbClusterResourcesOutput)
}

type GetMdbMongodbClusterResourcesOutput struct{ *pulumi.OutputState }

func (GetMdbMongodbClusterResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMongodbClusterResources)(nil)).Elem()
}

func (o GetMdbMongodbClusterResourcesOutput) ToGetMdbMongodbClusterResourcesOutput() GetMdbMongodbClusterResourcesOutput {
	return o
}

func (o GetMdbMongodbClusterResourcesOutput) ToGetMdbMongodbClusterResourcesOutputWithContext(ctx context.Context) GetMdbMongodbClusterResourcesOutput {
	return o
}

// Volume of the storage available to a host, in gigabytes.
func (o GetMdbMongodbClusterResourcesOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbMongodbClusterResources) int { return v.DiskSize }).(pulumi.IntOutput)
}

// The ID of the storage type. For more information, see [the official documentation](https://cloud.yandex.com/docs/managed-mongodb/concepts/storage)
func (o GetMdbMongodbClusterResourcesOutput) DiskTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbMongodbClusterResources) string { return v.DiskTypeId }).(pulumi.StringOutput)
}

func (o GetMdbMongodbClusterResourcesOutput) ResourcePresetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbMongodbClusterResources) string { return v.ResourcePresetId }).(pulumi.StringOutput)
}

type GetMdbMongodbClusterUser struct {
	// The name of the MongoDB cluster.
	Name string `pulumi:"name"`
	// Set of permissions granted to the user. The structure is documented below.
	Permissions []GetMdbMongodbClusterUserPermission `pulumi:"permissions"`
}

// GetMdbMongodbClusterUserInput is an input type that accepts GetMdbMongodbClusterUserArgs and GetMdbMongodbClusterUserOutput values.
// You can construct a concrete instance of `GetMdbMongodbClusterUserInput` via:
//
//          GetMdbMongodbClusterUserArgs{...}
type GetMdbMongodbClusterUserInput interface {
	pulumi.Input

	ToGetMdbMongodbClusterUserOutput() GetMdbMongodbClusterUserOutput
	ToGetMdbMongodbClusterUserOutputWithContext(context.Context) GetMdbMongodbClusterUserOutput
}

type GetMdbMongodbClusterUserArgs struct {
	// The name of the MongoDB cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// Set of permissions granted to the user. The structure is documented below.
	Permissions GetMdbMongodbClusterUserPermissionArrayInput `pulumi:"permissions"`
}

func (GetMdbMongodbClusterUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMongodbClusterUser)(nil)).Elem()
}

func (i GetMdbMongodbClusterUserArgs) ToGetMdbMongodbClusterUserOutput() GetMdbMongodbClusterUserOutput {
	return i.ToGetMdbMongodbClusterUserOutputWithContext(context.Background())
}

func (i GetMdbMongodbClusterUserArgs) ToGetMdbMongodbClusterUserOutputWithContext(ctx context.Context) GetMdbMongodbClusterUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbMongodbClusterUserOutput)
}

// GetMdbMongodbClusterUserArrayInput is an input type that accepts GetMdbMongodbClusterUserArray and GetMdbMongodbClusterUserArrayOutput values.
// You can construct a concrete instance of `GetMdbMongodbClusterUserArrayInput` via:
//
//          GetMdbMongodbClusterUserArray{ GetMdbMongodbClusterUserArgs{...} }
type GetMdbMongodbClusterUserArrayInput interface {
	pulumi.Input

	ToGetMdbMongodbClusterUserArrayOutput() GetMdbMongodbClusterUserArrayOutput
	ToGetMdbMongodbClusterUserArrayOutputWithContext(context.Context) GetMdbMongodbClusterUserArrayOutput
}

type GetMdbMongodbClusterUserArray []GetMdbMongodbClusterUserInput

func (GetMdbMongodbClusterUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbMongodbClusterUser)(nil)).Elem()
}

func (i GetMdbMongodbClusterUserArray) ToGetMdbMongodbClusterUserArrayOutput() GetMdbMongodbClusterUserArrayOutput {
	return i.ToGetMdbMongodbClusterUserArrayOutputWithContext(context.Background())
}

func (i GetMdbMongodbClusterUserArray) ToGetMdbMongodbClusterUserArrayOutputWithContext(ctx context.Context) GetMdbMongodbClusterUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbMongodbClusterUserArrayOutput)
}

type GetMdbMongodbClusterUserOutput struct{ *pulumi.OutputState }

func (GetMdbMongodbClusterUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMongodbClusterUser)(nil)).Elem()
}

func (o GetMdbMongodbClusterUserOutput) ToGetMdbMongodbClusterUserOutput() GetMdbMongodbClusterUserOutput {
	return o
}

func (o GetMdbMongodbClusterUserOutput) ToGetMdbMongodbClusterUserOutputWithContext(ctx context.Context) GetMdbMongodbClusterUserOutput {
	return o
}

// The name of the MongoDB cluster.
func (o GetMdbMongodbClusterUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbMongodbClusterUser) string { return v.Name }).(pulumi.StringOutput)
}

// Set of permissions granted to the user. The structure is documented below.
func (o GetMdbMongodbClusterUserOutput) Permissions() GetMdbMongodbClusterUserPermissionArrayOutput {
	return o.ApplyT(func(v GetMdbMongodbClusterUser) []GetMdbMongodbClusterUserPermission { return v.Permissions }).(GetMdbMongodbClusterUserPermissionArrayOutput)
}

type GetMdbMongodbClusterUserArrayOutput struct{ *pulumi.OutputState }

func (GetMdbMongodbClusterUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbMongodbClusterUser)(nil)).Elem()
}

func (o GetMdbMongodbClusterUserArrayOutput) ToGetMdbMongodbClusterUserArrayOutput() GetMdbMongodbClusterUserArrayOutput {
	return o
}

func (o GetMdbMongodbClusterUserArrayOutput) ToGetMdbMongodbClusterUserArrayOutputWithContext(ctx context.Context) GetMdbMongodbClusterUserArrayOutput {
	return o
}

func (o GetMdbMongodbClusterUserArrayOutput) Index(i pulumi.IntInput) GetMdbMongodbClusterUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbMongodbClusterUser {
		return vs[0].([]GetMdbMongodbClusterUser)[vs[1].(int)]
	}).(GetMdbMongodbClusterUserOutput)
}

type GetMdbMongodbClusterUserPermission struct {
	// The name of the database that the permission grants access to.
	DatabaseName string `pulumi:"databaseName"`
	// (Optional) List of strings. The roles of the user in this database. For more information see [the official documentation](https://cloud.yandex.com/docs/managed-mongodb/concepts/users-and-roles).
	Roles []string `pulumi:"roles"`
}

// GetMdbMongodbClusterUserPermissionInput is an input type that accepts GetMdbMongodbClusterUserPermissionArgs and GetMdbMongodbClusterUserPermissionOutput values.
// You can construct a concrete instance of `GetMdbMongodbClusterUserPermissionInput` via:
//
//          GetMdbMongodbClusterUserPermissionArgs{...}
type GetMdbMongodbClusterUserPermissionInput interface {
	pulumi.Input

	ToGetMdbMongodbClusterUserPermissionOutput() GetMdbMongodbClusterUserPermissionOutput
	ToGetMdbMongodbClusterUserPermissionOutputWithContext(context.Context) GetMdbMongodbClusterUserPermissionOutput
}

type GetMdbMongodbClusterUserPermissionArgs struct {
	// The name of the database that the permission grants access to.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// (Optional) List of strings. The roles of the user in this database. For more information see [the official documentation](https://cloud.yandex.com/docs/managed-mongodb/concepts/users-and-roles).
	Roles pulumi.StringArrayInput `pulumi:"roles"`
}

func (GetMdbMongodbClusterUserPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMongodbClusterUserPermission)(nil)).Elem()
}

func (i GetMdbMongodbClusterUserPermissionArgs) ToGetMdbMongodbClusterUserPermissionOutput() GetMdbMongodbClusterUserPermissionOutput {
	return i.ToGetMdbMongodbClusterUserPermissionOutputWithContext(context.Background())
}

func (i GetMdbMongodbClusterUserPermissionArgs) ToGetMdbMongodbClusterUserPermissionOutputWithContext(ctx context.Context) GetMdbMongodbClusterUserPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbMongodbClusterUserPermissionOutput)
}

// GetMdbMongodbClusterUserPermissionArrayInput is an input type that accepts GetMdbMongodbClusterUserPermissionArray and GetMdbMongodbClusterUserPermissionArrayOutput values.
// You can construct a concrete instance of `GetMdbMongodbClusterUserPermissionArrayInput` via:
//
//          GetMdbMongodbClusterUserPermissionArray{ GetMdbMongodbClusterUserPermissionArgs{...} }
type GetMdbMongodbClusterUserPermissionArrayInput interface {
	pulumi.Input

	ToGetMdbMongodbClusterUserPermissionArrayOutput() GetMdbMongodbClusterUserPermissionArrayOutput
	ToGetMdbMongodbClusterUserPermissionArrayOutputWithContext(context.Context) GetMdbMongodbClusterUserPermissionArrayOutput
}

type GetMdbMongodbClusterUserPermissionArray []GetMdbMongodbClusterUserPermissionInput

func (GetMdbMongodbClusterUserPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbMongodbClusterUserPermission)(nil)).Elem()
}

func (i GetMdbMongodbClusterUserPermissionArray) ToGetMdbMongodbClusterUserPermissionArrayOutput() GetMdbMongodbClusterUserPermissionArrayOutput {
	return i.ToGetMdbMongodbClusterUserPermissionArrayOutputWithContext(context.Background())
}

func (i GetMdbMongodbClusterUserPermissionArray) ToGetMdbMongodbClusterUserPermissionArrayOutputWithContext(ctx context.Context) GetMdbMongodbClusterUserPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbMongodbClusterUserPermissionArrayOutput)
}

type GetMdbMongodbClusterUserPermissionOutput struct{ *pulumi.OutputState }

func (GetMdbMongodbClusterUserPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMongodbClusterUserPermission)(nil)).Elem()
}

func (o GetMdbMongodbClusterUserPermissionOutput) ToGetMdbMongodbClusterUserPermissionOutput() GetMdbMongodbClusterUserPermissionOutput {
	return o
}

func (o GetMdbMongodbClusterUserPermissionOutput) ToGetMdbMongodbClusterUserPermissionOutputWithContext(ctx context.Context) GetMdbMongodbClusterUserPermissionOutput {
	return o
}

// The name of the database that the permission grants access to.
func (o GetMdbMongodbClusterUserPermissionOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbMongodbClusterUserPermission) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// (Optional) List of strings. The roles of the user in this database. For more information see [the official documentation](https://cloud.yandex.com/docs/managed-mongodb/concepts/users-and-roles).
func (o GetMdbMongodbClusterUserPermissionOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMdbMongodbClusterUserPermission) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

type GetMdbMongodbClusterUserPermissionArrayOutput struct{ *pulumi.OutputState }

func (GetMdbMongodbClusterUserPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbMongodbClusterUserPermission)(nil)).Elem()
}

func (o GetMdbMongodbClusterUserPermissionArrayOutput) ToGetMdbMongodbClusterUserPermissionArrayOutput() GetMdbMongodbClusterUserPermissionArrayOutput {
	return o
}

func (o GetMdbMongodbClusterUserPermissionArrayOutput) ToGetMdbMongodbClusterUserPermissionArrayOutputWithContext(ctx context.Context) GetMdbMongodbClusterUserPermissionArrayOutput {
	return o
}

func (o GetMdbMongodbClusterUserPermissionArrayOutput) Index(i pulumi.IntInput) GetMdbMongodbClusterUserPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbMongodbClusterUserPermission {
		return vs[0].([]GetMdbMongodbClusterUserPermission)[vs[1].(int)]
	}).(GetMdbMongodbClusterUserPermissionOutput)
}

type GetMdbMysqlClusterAccess struct {
	// Allow access for [Yandex DataLens](https://cloud.yandex.com/services/datalens).
	DataLens bool `pulumi:"dataLens"`
	// Allows access for [SQL queries in the management console](https://cloud.yandex.ru/docs/managed-mysql/operations/web-sql-query).
	WebSql bool `pulumi:"webSql"`
}

// GetMdbMysqlClusterAccessInput is an input type that accepts GetMdbMysqlClusterAccessArgs and GetMdbMysqlClusterAccessOutput values.
// You can construct a concrete instance of `GetMdbMysqlClusterAccessInput` via:
//
//          GetMdbMysqlClusterAccessArgs{...}
type GetMdbMysqlClusterAccessInput interface {
	pulumi.Input

	ToGetMdbMysqlClusterAccessOutput() GetMdbMysqlClusterAccessOutput
	ToGetMdbMysqlClusterAccessOutputWithContext(context.Context) GetMdbMysqlClusterAccessOutput
}

type GetMdbMysqlClusterAccessArgs struct {
	// Allow access for [Yandex DataLens](https://cloud.yandex.com/services/datalens).
	DataLens pulumi.BoolInput `pulumi:"dataLens"`
	// Allows access for [SQL queries in the management console](https://cloud.yandex.ru/docs/managed-mysql/operations/web-sql-query).
	WebSql pulumi.BoolInput `pulumi:"webSql"`
}

func (GetMdbMysqlClusterAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMysqlClusterAccess)(nil)).Elem()
}

func (i GetMdbMysqlClusterAccessArgs) ToGetMdbMysqlClusterAccessOutput() GetMdbMysqlClusterAccessOutput {
	return i.ToGetMdbMysqlClusterAccessOutputWithContext(context.Background())
}

func (i GetMdbMysqlClusterAccessArgs) ToGetMdbMysqlClusterAccessOutputWithContext(ctx context.Context) GetMdbMysqlClusterAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbMysqlClusterAccessOutput)
}

type GetMdbMysqlClusterAccessOutput struct{ *pulumi.OutputState }

func (GetMdbMysqlClusterAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMysqlClusterAccess)(nil)).Elem()
}

func (o GetMdbMysqlClusterAccessOutput) ToGetMdbMysqlClusterAccessOutput() GetMdbMysqlClusterAccessOutput {
	return o
}

func (o GetMdbMysqlClusterAccessOutput) ToGetMdbMysqlClusterAccessOutputWithContext(ctx context.Context) GetMdbMysqlClusterAccessOutput {
	return o
}

// Allow access for [Yandex DataLens](https://cloud.yandex.com/services/datalens).
func (o GetMdbMysqlClusterAccessOutput) DataLens() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbMysqlClusterAccess) bool { return v.DataLens }).(pulumi.BoolOutput)
}

// Allows access for [SQL queries in the management console](https://cloud.yandex.ru/docs/managed-mysql/operations/web-sql-query).
func (o GetMdbMysqlClusterAccessOutput) WebSql() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbMysqlClusterAccess) bool { return v.WebSql }).(pulumi.BoolOutput)
}

type GetMdbMysqlClusterBackupWindowStart struct {
	// The hour at which backup will be started.
	Hours *int `pulumi:"hours"`
	// The minute at which backup will be started.
	Minutes *int `pulumi:"minutes"`
}

// GetMdbMysqlClusterBackupWindowStartInput is an input type that accepts GetMdbMysqlClusterBackupWindowStartArgs and GetMdbMysqlClusterBackupWindowStartOutput values.
// You can construct a concrete instance of `GetMdbMysqlClusterBackupWindowStartInput` via:
//
//          GetMdbMysqlClusterBackupWindowStartArgs{...}
type GetMdbMysqlClusterBackupWindowStartInput interface {
	pulumi.Input

	ToGetMdbMysqlClusterBackupWindowStartOutput() GetMdbMysqlClusterBackupWindowStartOutput
	ToGetMdbMysqlClusterBackupWindowStartOutputWithContext(context.Context) GetMdbMysqlClusterBackupWindowStartOutput
}

type GetMdbMysqlClusterBackupWindowStartArgs struct {
	// The hour at which backup will be started.
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// The minute at which backup will be started.
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
}

func (GetMdbMysqlClusterBackupWindowStartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMysqlClusterBackupWindowStart)(nil)).Elem()
}

func (i GetMdbMysqlClusterBackupWindowStartArgs) ToGetMdbMysqlClusterBackupWindowStartOutput() GetMdbMysqlClusterBackupWindowStartOutput {
	return i.ToGetMdbMysqlClusterBackupWindowStartOutputWithContext(context.Background())
}

func (i GetMdbMysqlClusterBackupWindowStartArgs) ToGetMdbMysqlClusterBackupWindowStartOutputWithContext(ctx context.Context) GetMdbMysqlClusterBackupWindowStartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbMysqlClusterBackupWindowStartOutput)
}

type GetMdbMysqlClusterBackupWindowStartOutput struct{ *pulumi.OutputState }

func (GetMdbMysqlClusterBackupWindowStartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMysqlClusterBackupWindowStart)(nil)).Elem()
}

func (o GetMdbMysqlClusterBackupWindowStartOutput) ToGetMdbMysqlClusterBackupWindowStartOutput() GetMdbMysqlClusterBackupWindowStartOutput {
	return o
}

func (o GetMdbMysqlClusterBackupWindowStartOutput) ToGetMdbMysqlClusterBackupWindowStartOutputWithContext(ctx context.Context) GetMdbMysqlClusterBackupWindowStartOutput {
	return o
}

// The hour at which backup will be started.
func (o GetMdbMysqlClusterBackupWindowStartOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbMysqlClusterBackupWindowStart) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// The minute at which backup will be started.
func (o GetMdbMysqlClusterBackupWindowStartOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbMysqlClusterBackupWindowStart) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

type GetMdbMysqlClusterDatabase struct {
	// The name of the MySQL cluster.
	Name string `pulumi:"name"`
}

// GetMdbMysqlClusterDatabaseInput is an input type that accepts GetMdbMysqlClusterDatabaseArgs and GetMdbMysqlClusterDatabaseOutput values.
// You can construct a concrete instance of `GetMdbMysqlClusterDatabaseInput` via:
//
//          GetMdbMysqlClusterDatabaseArgs{...}
type GetMdbMysqlClusterDatabaseInput interface {
	pulumi.Input

	ToGetMdbMysqlClusterDatabaseOutput() GetMdbMysqlClusterDatabaseOutput
	ToGetMdbMysqlClusterDatabaseOutputWithContext(context.Context) GetMdbMysqlClusterDatabaseOutput
}

type GetMdbMysqlClusterDatabaseArgs struct {
	// The name of the MySQL cluster.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetMdbMysqlClusterDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMysqlClusterDatabase)(nil)).Elem()
}

func (i GetMdbMysqlClusterDatabaseArgs) ToGetMdbMysqlClusterDatabaseOutput() GetMdbMysqlClusterDatabaseOutput {
	return i.ToGetMdbMysqlClusterDatabaseOutputWithContext(context.Background())
}

func (i GetMdbMysqlClusterDatabaseArgs) ToGetMdbMysqlClusterDatabaseOutputWithContext(ctx context.Context) GetMdbMysqlClusterDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbMysqlClusterDatabaseOutput)
}

// GetMdbMysqlClusterDatabaseArrayInput is an input type that accepts GetMdbMysqlClusterDatabaseArray and GetMdbMysqlClusterDatabaseArrayOutput values.
// You can construct a concrete instance of `GetMdbMysqlClusterDatabaseArrayInput` via:
//
//          GetMdbMysqlClusterDatabaseArray{ GetMdbMysqlClusterDatabaseArgs{...} }
type GetMdbMysqlClusterDatabaseArrayInput interface {
	pulumi.Input

	ToGetMdbMysqlClusterDatabaseArrayOutput() GetMdbMysqlClusterDatabaseArrayOutput
	ToGetMdbMysqlClusterDatabaseArrayOutputWithContext(context.Context) GetMdbMysqlClusterDatabaseArrayOutput
}

type GetMdbMysqlClusterDatabaseArray []GetMdbMysqlClusterDatabaseInput

func (GetMdbMysqlClusterDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbMysqlClusterDatabase)(nil)).Elem()
}

func (i GetMdbMysqlClusterDatabaseArray) ToGetMdbMysqlClusterDatabaseArrayOutput() GetMdbMysqlClusterDatabaseArrayOutput {
	return i.ToGetMdbMysqlClusterDatabaseArrayOutputWithContext(context.Background())
}

func (i GetMdbMysqlClusterDatabaseArray) ToGetMdbMysqlClusterDatabaseArrayOutputWithContext(ctx context.Context) GetMdbMysqlClusterDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbMysqlClusterDatabaseArrayOutput)
}

type GetMdbMysqlClusterDatabaseOutput struct{ *pulumi.OutputState }

func (GetMdbMysqlClusterDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMysqlClusterDatabase)(nil)).Elem()
}

func (o GetMdbMysqlClusterDatabaseOutput) ToGetMdbMysqlClusterDatabaseOutput() GetMdbMysqlClusterDatabaseOutput {
	return o
}

func (o GetMdbMysqlClusterDatabaseOutput) ToGetMdbMysqlClusterDatabaseOutputWithContext(ctx context.Context) GetMdbMysqlClusterDatabaseOutput {
	return o
}

// The name of the MySQL cluster.
func (o GetMdbMysqlClusterDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbMysqlClusterDatabase) string { return v.Name }).(pulumi.StringOutput)
}

type GetMdbMysqlClusterDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetMdbMysqlClusterDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbMysqlClusterDatabase)(nil)).Elem()
}

func (o GetMdbMysqlClusterDatabaseArrayOutput) ToGetMdbMysqlClusterDatabaseArrayOutput() GetMdbMysqlClusterDatabaseArrayOutput {
	return o
}

func (o GetMdbMysqlClusterDatabaseArrayOutput) ToGetMdbMysqlClusterDatabaseArrayOutputWithContext(ctx context.Context) GetMdbMysqlClusterDatabaseArrayOutput {
	return o
}

func (o GetMdbMysqlClusterDatabaseArrayOutput) Index(i pulumi.IntInput) GetMdbMysqlClusterDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbMysqlClusterDatabase {
		return vs[0].([]GetMdbMysqlClusterDatabase)[vs[1].(int)]
	}).(GetMdbMysqlClusterDatabaseOutput)
}

type GetMdbMysqlClusterHost struct {
	// Sets whether the host should get a public IP address on creation. Changing this parameter for an existing host is not supported at the moment
	AssignPublicIp *bool `pulumi:"assignPublicIp"`
	// The fully qualified domain name of the host.
	Fqdn string `pulumi:"fqdn"`
	// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
	SubnetId string `pulumi:"subnetId"`
	// The availability zone where the MySQL host will be created.
	Zone string `pulumi:"zone"`
}

// GetMdbMysqlClusterHostInput is an input type that accepts GetMdbMysqlClusterHostArgs and GetMdbMysqlClusterHostOutput values.
// You can construct a concrete instance of `GetMdbMysqlClusterHostInput` via:
//
//          GetMdbMysqlClusterHostArgs{...}
type GetMdbMysqlClusterHostInput interface {
	pulumi.Input

	ToGetMdbMysqlClusterHostOutput() GetMdbMysqlClusterHostOutput
	ToGetMdbMysqlClusterHostOutputWithContext(context.Context) GetMdbMysqlClusterHostOutput
}

type GetMdbMysqlClusterHostArgs struct {
	// Sets whether the host should get a public IP address on creation. Changing this parameter for an existing host is not supported at the moment
	AssignPublicIp pulumi.BoolPtrInput `pulumi:"assignPublicIp"`
	// The fully qualified domain name of the host.
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The availability zone where the MySQL host will be created.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetMdbMysqlClusterHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMysqlClusterHost)(nil)).Elem()
}

func (i GetMdbMysqlClusterHostArgs) ToGetMdbMysqlClusterHostOutput() GetMdbMysqlClusterHostOutput {
	return i.ToGetMdbMysqlClusterHostOutputWithContext(context.Background())
}

func (i GetMdbMysqlClusterHostArgs) ToGetMdbMysqlClusterHostOutputWithContext(ctx context.Context) GetMdbMysqlClusterHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbMysqlClusterHostOutput)
}

// GetMdbMysqlClusterHostArrayInput is an input type that accepts GetMdbMysqlClusterHostArray and GetMdbMysqlClusterHostArrayOutput values.
// You can construct a concrete instance of `GetMdbMysqlClusterHostArrayInput` via:
//
//          GetMdbMysqlClusterHostArray{ GetMdbMysqlClusterHostArgs{...} }
type GetMdbMysqlClusterHostArrayInput interface {
	pulumi.Input

	ToGetMdbMysqlClusterHostArrayOutput() GetMdbMysqlClusterHostArrayOutput
	ToGetMdbMysqlClusterHostArrayOutputWithContext(context.Context) GetMdbMysqlClusterHostArrayOutput
}

type GetMdbMysqlClusterHostArray []GetMdbMysqlClusterHostInput

func (GetMdbMysqlClusterHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbMysqlClusterHost)(nil)).Elem()
}

func (i GetMdbMysqlClusterHostArray) ToGetMdbMysqlClusterHostArrayOutput() GetMdbMysqlClusterHostArrayOutput {
	return i.ToGetMdbMysqlClusterHostArrayOutputWithContext(context.Background())
}

func (i GetMdbMysqlClusterHostArray) ToGetMdbMysqlClusterHostArrayOutputWithContext(ctx context.Context) GetMdbMysqlClusterHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbMysqlClusterHostArrayOutput)
}

type GetMdbMysqlClusterHostOutput struct{ *pulumi.OutputState }

func (GetMdbMysqlClusterHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMysqlClusterHost)(nil)).Elem()
}

func (o GetMdbMysqlClusterHostOutput) ToGetMdbMysqlClusterHostOutput() GetMdbMysqlClusterHostOutput {
	return o
}

func (o GetMdbMysqlClusterHostOutput) ToGetMdbMysqlClusterHostOutputWithContext(ctx context.Context) GetMdbMysqlClusterHostOutput {
	return o
}

// Sets whether the host should get a public IP address on creation. Changing this parameter for an existing host is not supported at the moment
func (o GetMdbMysqlClusterHostOutput) AssignPublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMdbMysqlClusterHost) *bool { return v.AssignPublicIp }).(pulumi.BoolPtrOutput)
}

// The fully qualified domain name of the host.
func (o GetMdbMysqlClusterHostOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbMysqlClusterHost) string { return v.Fqdn }).(pulumi.StringOutput)
}

// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
func (o GetMdbMysqlClusterHostOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbMysqlClusterHost) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The availability zone where the MySQL host will be created.
func (o GetMdbMysqlClusterHostOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbMysqlClusterHost) string { return v.Zone }).(pulumi.StringOutput)
}

type GetMdbMysqlClusterHostArrayOutput struct{ *pulumi.OutputState }

func (GetMdbMysqlClusterHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbMysqlClusterHost)(nil)).Elem()
}

func (o GetMdbMysqlClusterHostArrayOutput) ToGetMdbMysqlClusterHostArrayOutput() GetMdbMysqlClusterHostArrayOutput {
	return o
}

func (o GetMdbMysqlClusterHostArrayOutput) ToGetMdbMysqlClusterHostArrayOutputWithContext(ctx context.Context) GetMdbMysqlClusterHostArrayOutput {
	return o
}

func (o GetMdbMysqlClusterHostArrayOutput) Index(i pulumi.IntInput) GetMdbMysqlClusterHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbMysqlClusterHost {
		return vs[0].([]GetMdbMysqlClusterHost)[vs[1].(int)]
	}).(GetMdbMysqlClusterHostOutput)
}

type GetMdbMysqlClusterResources struct {
	// Volume of the storage available to a MySQL host, in gigabytes.
	DiskSize int `pulumi:"diskSize"`
	// Type of the storage for MySQL hosts.
	DiskTypeId       string `pulumi:"diskTypeId"`
	ResourcePresetId string `pulumi:"resourcePresetId"`
}

// GetMdbMysqlClusterResourcesInput is an input type that accepts GetMdbMysqlClusterResourcesArgs and GetMdbMysqlClusterResourcesOutput values.
// You can construct a concrete instance of `GetMdbMysqlClusterResourcesInput` via:
//
//          GetMdbMysqlClusterResourcesArgs{...}
type GetMdbMysqlClusterResourcesInput interface {
	pulumi.Input

	ToGetMdbMysqlClusterResourcesOutput() GetMdbMysqlClusterResourcesOutput
	ToGetMdbMysqlClusterResourcesOutputWithContext(context.Context) GetMdbMysqlClusterResourcesOutput
}

type GetMdbMysqlClusterResourcesArgs struct {
	// Volume of the storage available to a MySQL host, in gigabytes.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// Type of the storage for MySQL hosts.
	DiskTypeId       pulumi.StringInput `pulumi:"diskTypeId"`
	ResourcePresetId pulumi.StringInput `pulumi:"resourcePresetId"`
}

func (GetMdbMysqlClusterResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMysqlClusterResources)(nil)).Elem()
}

func (i GetMdbMysqlClusterResourcesArgs) ToGetMdbMysqlClusterResourcesOutput() GetMdbMysqlClusterResourcesOutput {
	return i.ToGetMdbMysqlClusterResourcesOutputWithContext(context.Background())
}

func (i GetMdbMysqlClusterResourcesArgs) ToGetMdbMysqlClusterResourcesOutputWithContext(ctx context.Context) GetMdbMysqlClusterResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbMysqlClusterResourcesOutput)
}

type GetMdbMysqlClusterResourcesOutput struct{ *pulumi.OutputState }

func (GetMdbMysqlClusterResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMysqlClusterResources)(nil)).Elem()
}

func (o GetMdbMysqlClusterResourcesOutput) ToGetMdbMysqlClusterResourcesOutput() GetMdbMysqlClusterResourcesOutput {
	return o
}

func (o GetMdbMysqlClusterResourcesOutput) ToGetMdbMysqlClusterResourcesOutputWithContext(ctx context.Context) GetMdbMysqlClusterResourcesOutput {
	return o
}

// Volume of the storage available to a MySQL host, in gigabytes.
func (o GetMdbMysqlClusterResourcesOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbMysqlClusterResources) int { return v.DiskSize }).(pulumi.IntOutput)
}

// Type of the storage for MySQL hosts.
func (o GetMdbMysqlClusterResourcesOutput) DiskTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbMysqlClusterResources) string { return v.DiskTypeId }).(pulumi.StringOutput)
}

func (o GetMdbMysqlClusterResourcesOutput) ResourcePresetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbMysqlClusterResources) string { return v.ResourcePresetId }).(pulumi.StringOutput)
}

type GetMdbMysqlClusterUser struct {
	// Authentication plugin. Allowed values: `MYSQL_NATIVE_PASSWORD`, `CACHING_SHA2_PASSWORD`, `SHA256_PASSWORD`
	AuthenticationPlugin string `pulumi:"authenticationPlugin"`
	// User's connection limits. The structure is documented below.
	ConnectionLimits GetMdbMysqlClusterUserConnectionLimits `pulumi:"connectionLimits"`
	// List user's global permissions. Allowed values: `REPLICATION_CLIENT`, `REPLICATION_SLAVE`, `PROCESS` or empty list.
	GlobalPermissions []string `pulumi:"globalPermissions"`
	// The name of the MySQL cluster.
	Name string `pulumi:"name"`
	// The password of the user.
	Password string `pulumi:"password"`
	// Set of permissions granted to the user. The structure is documented below.
	Permissions []GetMdbMysqlClusterUserPermission `pulumi:"permissions"`
}

// GetMdbMysqlClusterUserInput is an input type that accepts GetMdbMysqlClusterUserArgs and GetMdbMysqlClusterUserOutput values.
// You can construct a concrete instance of `GetMdbMysqlClusterUserInput` via:
//
//          GetMdbMysqlClusterUserArgs{...}
type GetMdbMysqlClusterUserInput interface {
	pulumi.Input

	ToGetMdbMysqlClusterUserOutput() GetMdbMysqlClusterUserOutput
	ToGetMdbMysqlClusterUserOutputWithContext(context.Context) GetMdbMysqlClusterUserOutput
}

type GetMdbMysqlClusterUserArgs struct {
	// Authentication plugin. Allowed values: `MYSQL_NATIVE_PASSWORD`, `CACHING_SHA2_PASSWORD`, `SHA256_PASSWORD`
	AuthenticationPlugin pulumi.StringInput `pulumi:"authenticationPlugin"`
	// User's connection limits. The structure is documented below.
	ConnectionLimits GetMdbMysqlClusterUserConnectionLimitsInput `pulumi:"connectionLimits"`
	// List user's global permissions. Allowed values: `REPLICATION_CLIENT`, `REPLICATION_SLAVE`, `PROCESS` or empty list.
	GlobalPermissions pulumi.StringArrayInput `pulumi:"globalPermissions"`
	// The name of the MySQL cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// The password of the user.
	Password pulumi.StringInput `pulumi:"password"`
	// Set of permissions granted to the user. The structure is documented below.
	Permissions GetMdbMysqlClusterUserPermissionArrayInput `pulumi:"permissions"`
}

func (GetMdbMysqlClusterUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMysqlClusterUser)(nil)).Elem()
}

func (i GetMdbMysqlClusterUserArgs) ToGetMdbMysqlClusterUserOutput() GetMdbMysqlClusterUserOutput {
	return i.ToGetMdbMysqlClusterUserOutputWithContext(context.Background())
}

func (i GetMdbMysqlClusterUserArgs) ToGetMdbMysqlClusterUserOutputWithContext(ctx context.Context) GetMdbMysqlClusterUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbMysqlClusterUserOutput)
}

// GetMdbMysqlClusterUserArrayInput is an input type that accepts GetMdbMysqlClusterUserArray and GetMdbMysqlClusterUserArrayOutput values.
// You can construct a concrete instance of `GetMdbMysqlClusterUserArrayInput` via:
//
//          GetMdbMysqlClusterUserArray{ GetMdbMysqlClusterUserArgs{...} }
type GetMdbMysqlClusterUserArrayInput interface {
	pulumi.Input

	ToGetMdbMysqlClusterUserArrayOutput() GetMdbMysqlClusterUserArrayOutput
	ToGetMdbMysqlClusterUserArrayOutputWithContext(context.Context) GetMdbMysqlClusterUserArrayOutput
}

type GetMdbMysqlClusterUserArray []GetMdbMysqlClusterUserInput

func (GetMdbMysqlClusterUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbMysqlClusterUser)(nil)).Elem()
}

func (i GetMdbMysqlClusterUserArray) ToGetMdbMysqlClusterUserArrayOutput() GetMdbMysqlClusterUserArrayOutput {
	return i.ToGetMdbMysqlClusterUserArrayOutputWithContext(context.Background())
}

func (i GetMdbMysqlClusterUserArray) ToGetMdbMysqlClusterUserArrayOutputWithContext(ctx context.Context) GetMdbMysqlClusterUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbMysqlClusterUserArrayOutput)
}

type GetMdbMysqlClusterUserOutput struct{ *pulumi.OutputState }

func (GetMdbMysqlClusterUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMysqlClusterUser)(nil)).Elem()
}

func (o GetMdbMysqlClusterUserOutput) ToGetMdbMysqlClusterUserOutput() GetMdbMysqlClusterUserOutput {
	return o
}

func (o GetMdbMysqlClusterUserOutput) ToGetMdbMysqlClusterUserOutputWithContext(ctx context.Context) GetMdbMysqlClusterUserOutput {
	return o
}

// Authentication plugin. Allowed values: `MYSQL_NATIVE_PASSWORD`, `CACHING_SHA2_PASSWORD`, `SHA256_PASSWORD`
func (o GetMdbMysqlClusterUserOutput) AuthenticationPlugin() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbMysqlClusterUser) string { return v.AuthenticationPlugin }).(pulumi.StringOutput)
}

// User's connection limits. The structure is documented below.
func (o GetMdbMysqlClusterUserOutput) ConnectionLimits() GetMdbMysqlClusterUserConnectionLimitsOutput {
	return o.ApplyT(func(v GetMdbMysqlClusterUser) GetMdbMysqlClusterUserConnectionLimits { return v.ConnectionLimits }).(GetMdbMysqlClusterUserConnectionLimitsOutput)
}

// List user's global permissions. Allowed values: `REPLICATION_CLIENT`, `REPLICATION_SLAVE`, `PROCESS` or empty list.
func (o GetMdbMysqlClusterUserOutput) GlobalPermissions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMdbMysqlClusterUser) []string { return v.GlobalPermissions }).(pulumi.StringArrayOutput)
}

// The name of the MySQL cluster.
func (o GetMdbMysqlClusterUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbMysqlClusterUser) string { return v.Name }).(pulumi.StringOutput)
}

// The password of the user.
func (o GetMdbMysqlClusterUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbMysqlClusterUser) string { return v.Password }).(pulumi.StringOutput)
}

// Set of permissions granted to the user. The structure is documented below.
func (o GetMdbMysqlClusterUserOutput) Permissions() GetMdbMysqlClusterUserPermissionArrayOutput {
	return o.ApplyT(func(v GetMdbMysqlClusterUser) []GetMdbMysqlClusterUserPermission { return v.Permissions }).(GetMdbMysqlClusterUserPermissionArrayOutput)
}

type GetMdbMysqlClusterUserArrayOutput struct{ *pulumi.OutputState }

func (GetMdbMysqlClusterUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbMysqlClusterUser)(nil)).Elem()
}

func (o GetMdbMysqlClusterUserArrayOutput) ToGetMdbMysqlClusterUserArrayOutput() GetMdbMysqlClusterUserArrayOutput {
	return o
}

func (o GetMdbMysqlClusterUserArrayOutput) ToGetMdbMysqlClusterUserArrayOutputWithContext(ctx context.Context) GetMdbMysqlClusterUserArrayOutput {
	return o
}

func (o GetMdbMysqlClusterUserArrayOutput) Index(i pulumi.IntInput) GetMdbMysqlClusterUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbMysqlClusterUser {
		return vs[0].([]GetMdbMysqlClusterUser)[vs[1].(int)]
	}).(GetMdbMysqlClusterUserOutput)
}

type GetMdbMysqlClusterUserConnectionLimits struct {
	// Max connections per hour.
	MaxConnectionsPerHour int `pulumi:"maxConnectionsPerHour"`
	// Max questions per hour.
	MaxQuestionsPerHour int `pulumi:"maxQuestionsPerHour"`
	// Max updates per hour.
	MaxUpdatesPerHour int `pulumi:"maxUpdatesPerHour"`
	// Max user connections.
	MaxUserConnections int `pulumi:"maxUserConnections"`
}

// GetMdbMysqlClusterUserConnectionLimitsInput is an input type that accepts GetMdbMysqlClusterUserConnectionLimitsArgs and GetMdbMysqlClusterUserConnectionLimitsOutput values.
// You can construct a concrete instance of `GetMdbMysqlClusterUserConnectionLimitsInput` via:
//
//          GetMdbMysqlClusterUserConnectionLimitsArgs{...}
type GetMdbMysqlClusterUserConnectionLimitsInput interface {
	pulumi.Input

	ToGetMdbMysqlClusterUserConnectionLimitsOutput() GetMdbMysqlClusterUserConnectionLimitsOutput
	ToGetMdbMysqlClusterUserConnectionLimitsOutputWithContext(context.Context) GetMdbMysqlClusterUserConnectionLimitsOutput
}

type GetMdbMysqlClusterUserConnectionLimitsArgs struct {
	// Max connections per hour.
	MaxConnectionsPerHour pulumi.IntInput `pulumi:"maxConnectionsPerHour"`
	// Max questions per hour.
	MaxQuestionsPerHour pulumi.IntInput `pulumi:"maxQuestionsPerHour"`
	// Max updates per hour.
	MaxUpdatesPerHour pulumi.IntInput `pulumi:"maxUpdatesPerHour"`
	// Max user connections.
	MaxUserConnections pulumi.IntInput `pulumi:"maxUserConnections"`
}

func (GetMdbMysqlClusterUserConnectionLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMysqlClusterUserConnectionLimits)(nil)).Elem()
}

func (i GetMdbMysqlClusterUserConnectionLimitsArgs) ToGetMdbMysqlClusterUserConnectionLimitsOutput() GetMdbMysqlClusterUserConnectionLimitsOutput {
	return i.ToGetMdbMysqlClusterUserConnectionLimitsOutputWithContext(context.Background())
}

func (i GetMdbMysqlClusterUserConnectionLimitsArgs) ToGetMdbMysqlClusterUserConnectionLimitsOutputWithContext(ctx context.Context) GetMdbMysqlClusterUserConnectionLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbMysqlClusterUserConnectionLimitsOutput)
}

type GetMdbMysqlClusterUserConnectionLimitsOutput struct{ *pulumi.OutputState }

func (GetMdbMysqlClusterUserConnectionLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMysqlClusterUserConnectionLimits)(nil)).Elem()
}

func (o GetMdbMysqlClusterUserConnectionLimitsOutput) ToGetMdbMysqlClusterUserConnectionLimitsOutput() GetMdbMysqlClusterUserConnectionLimitsOutput {
	return o
}

func (o GetMdbMysqlClusterUserConnectionLimitsOutput) ToGetMdbMysqlClusterUserConnectionLimitsOutputWithContext(ctx context.Context) GetMdbMysqlClusterUserConnectionLimitsOutput {
	return o
}

// Max connections per hour.
func (o GetMdbMysqlClusterUserConnectionLimitsOutput) MaxConnectionsPerHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbMysqlClusterUserConnectionLimits) int { return v.MaxConnectionsPerHour }).(pulumi.IntOutput)
}

// Max questions per hour.
func (o GetMdbMysqlClusterUserConnectionLimitsOutput) MaxQuestionsPerHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbMysqlClusterUserConnectionLimits) int { return v.MaxQuestionsPerHour }).(pulumi.IntOutput)
}

// Max updates per hour.
func (o GetMdbMysqlClusterUserConnectionLimitsOutput) MaxUpdatesPerHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbMysqlClusterUserConnectionLimits) int { return v.MaxUpdatesPerHour }).(pulumi.IntOutput)
}

// Max user connections.
func (o GetMdbMysqlClusterUserConnectionLimitsOutput) MaxUserConnections() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbMysqlClusterUserConnectionLimits) int { return v.MaxUserConnections }).(pulumi.IntOutput)
}

type GetMdbMysqlClusterUserPermission struct {
	// The name of the database that the permission grants access to.
	DatabaseName string `pulumi:"databaseName"`
	// List user's roles in the database.
	// Allowed roles: `ALL`,`ALTER`,`ALTER_ROUTINE`,`CREATE`,`CREATE_ROUTINE`,`CREATE_TEMPORARY_TABLES`,
	// `CREATE_VIEW`,`DELETE`,`DROP`,`EVENT`,`EXECUTE`,`INDEX`,`INSERT`,`LOCK_TABLES`,`SELECT`,`SHOW_VIEW`,`TRIGGER`,`UPDATE`.
	Roles []string `pulumi:"roles"`
}

// GetMdbMysqlClusterUserPermissionInput is an input type that accepts GetMdbMysqlClusterUserPermissionArgs and GetMdbMysqlClusterUserPermissionOutput values.
// You can construct a concrete instance of `GetMdbMysqlClusterUserPermissionInput` via:
//
//          GetMdbMysqlClusterUserPermissionArgs{...}
type GetMdbMysqlClusterUserPermissionInput interface {
	pulumi.Input

	ToGetMdbMysqlClusterUserPermissionOutput() GetMdbMysqlClusterUserPermissionOutput
	ToGetMdbMysqlClusterUserPermissionOutputWithContext(context.Context) GetMdbMysqlClusterUserPermissionOutput
}

type GetMdbMysqlClusterUserPermissionArgs struct {
	// The name of the database that the permission grants access to.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// List user's roles in the database.
	// Allowed roles: `ALL`,`ALTER`,`ALTER_ROUTINE`,`CREATE`,`CREATE_ROUTINE`,`CREATE_TEMPORARY_TABLES`,
	// `CREATE_VIEW`,`DELETE`,`DROP`,`EVENT`,`EXECUTE`,`INDEX`,`INSERT`,`LOCK_TABLES`,`SELECT`,`SHOW_VIEW`,`TRIGGER`,`UPDATE`.
	Roles pulumi.StringArrayInput `pulumi:"roles"`
}

func (GetMdbMysqlClusterUserPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMysqlClusterUserPermission)(nil)).Elem()
}

func (i GetMdbMysqlClusterUserPermissionArgs) ToGetMdbMysqlClusterUserPermissionOutput() GetMdbMysqlClusterUserPermissionOutput {
	return i.ToGetMdbMysqlClusterUserPermissionOutputWithContext(context.Background())
}

func (i GetMdbMysqlClusterUserPermissionArgs) ToGetMdbMysqlClusterUserPermissionOutputWithContext(ctx context.Context) GetMdbMysqlClusterUserPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbMysqlClusterUserPermissionOutput)
}

// GetMdbMysqlClusterUserPermissionArrayInput is an input type that accepts GetMdbMysqlClusterUserPermissionArray and GetMdbMysqlClusterUserPermissionArrayOutput values.
// You can construct a concrete instance of `GetMdbMysqlClusterUserPermissionArrayInput` via:
//
//          GetMdbMysqlClusterUserPermissionArray{ GetMdbMysqlClusterUserPermissionArgs{...} }
type GetMdbMysqlClusterUserPermissionArrayInput interface {
	pulumi.Input

	ToGetMdbMysqlClusterUserPermissionArrayOutput() GetMdbMysqlClusterUserPermissionArrayOutput
	ToGetMdbMysqlClusterUserPermissionArrayOutputWithContext(context.Context) GetMdbMysqlClusterUserPermissionArrayOutput
}

type GetMdbMysqlClusterUserPermissionArray []GetMdbMysqlClusterUserPermissionInput

func (GetMdbMysqlClusterUserPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbMysqlClusterUserPermission)(nil)).Elem()
}

func (i GetMdbMysqlClusterUserPermissionArray) ToGetMdbMysqlClusterUserPermissionArrayOutput() GetMdbMysqlClusterUserPermissionArrayOutput {
	return i.ToGetMdbMysqlClusterUserPermissionArrayOutputWithContext(context.Background())
}

func (i GetMdbMysqlClusterUserPermissionArray) ToGetMdbMysqlClusterUserPermissionArrayOutputWithContext(ctx context.Context) GetMdbMysqlClusterUserPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbMysqlClusterUserPermissionArrayOutput)
}

type GetMdbMysqlClusterUserPermissionOutput struct{ *pulumi.OutputState }

func (GetMdbMysqlClusterUserPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbMysqlClusterUserPermission)(nil)).Elem()
}

func (o GetMdbMysqlClusterUserPermissionOutput) ToGetMdbMysqlClusterUserPermissionOutput() GetMdbMysqlClusterUserPermissionOutput {
	return o
}

func (o GetMdbMysqlClusterUserPermissionOutput) ToGetMdbMysqlClusterUserPermissionOutputWithContext(ctx context.Context) GetMdbMysqlClusterUserPermissionOutput {
	return o
}

// The name of the database that the permission grants access to.
func (o GetMdbMysqlClusterUserPermissionOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbMysqlClusterUserPermission) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// List user's roles in the database.
// Allowed roles: `ALL`,`ALTER`,`ALTER_ROUTINE`,`CREATE`,`CREATE_ROUTINE`,`CREATE_TEMPORARY_TABLES`,
// `CREATE_VIEW`,`DELETE`,`DROP`,`EVENT`,`EXECUTE`,`INDEX`,`INSERT`,`LOCK_TABLES`,`SELECT`,`SHOW_VIEW`,`TRIGGER`,`UPDATE`.
func (o GetMdbMysqlClusterUserPermissionOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMdbMysqlClusterUserPermission) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

type GetMdbMysqlClusterUserPermissionArrayOutput struct{ *pulumi.OutputState }

func (GetMdbMysqlClusterUserPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbMysqlClusterUserPermission)(nil)).Elem()
}

func (o GetMdbMysqlClusterUserPermissionArrayOutput) ToGetMdbMysqlClusterUserPermissionArrayOutput() GetMdbMysqlClusterUserPermissionArrayOutput {
	return o
}

func (o GetMdbMysqlClusterUserPermissionArrayOutput) ToGetMdbMysqlClusterUserPermissionArrayOutputWithContext(ctx context.Context) GetMdbMysqlClusterUserPermissionArrayOutput {
	return o
}

func (o GetMdbMysqlClusterUserPermissionArrayOutput) Index(i pulumi.IntInput) GetMdbMysqlClusterUserPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbMysqlClusterUserPermission {
		return vs[0].([]GetMdbMysqlClusterUserPermission)[vs[1].(int)]
	}).(GetMdbMysqlClusterUserPermissionOutput)
}

type GetMdbPostgresqlClusterConfig struct {
	// Access policy to the PostgreSQL cluster. The structure is documented below.
	Access GetMdbPostgresqlClusterConfigAccess `pulumi:"access"`
	// Configuration setting which enables/disables autofailover in cluster.
	Autofailover bool `pulumi:"autofailover"`
	// Time to start the daily backup, in the UTC timezone. The structure is documented below.
	BackupWindowStart GetMdbPostgresqlClusterConfigBackupWindowStart `pulumi:"backupWindowStart"`
	// Cluster performance diagnostics settings. The structure is documented below. [YC Documentation](https://cloud.yandex.com/docs/managed-postgresql/grpc/cluster_service#PerformanceDiagnostics)
	PerformanceDiagnostics GetMdbPostgresqlClusterConfigPerformanceDiagnostics `pulumi:"performanceDiagnostics"`
	// Configuration of the connection pooler. The structure is documented below.
	PoolerConfig GetMdbPostgresqlClusterConfigPoolerConfig `pulumi:"poolerConfig"`
	// PostgreSQL cluster config.
	PostgresqlConfig map[string]string `pulumi:"postgresqlConfig"`
	// Resources allocated to hosts of the PostgreSQL cluster. The structure is documented below.
	Resources GetMdbPostgresqlClusterConfigResources `pulumi:"resources"`
	// Version of the extension.
	Version string `pulumi:"version"`
}

// GetMdbPostgresqlClusterConfigInput is an input type that accepts GetMdbPostgresqlClusterConfigArgs and GetMdbPostgresqlClusterConfigOutput values.
// You can construct a concrete instance of `GetMdbPostgresqlClusterConfigInput` via:
//
//          GetMdbPostgresqlClusterConfigArgs{...}
type GetMdbPostgresqlClusterConfigInput interface {
	pulumi.Input

	ToGetMdbPostgresqlClusterConfigOutput() GetMdbPostgresqlClusterConfigOutput
	ToGetMdbPostgresqlClusterConfigOutputWithContext(context.Context) GetMdbPostgresqlClusterConfigOutput
}

type GetMdbPostgresqlClusterConfigArgs struct {
	// Access policy to the PostgreSQL cluster. The structure is documented below.
	Access GetMdbPostgresqlClusterConfigAccessInput `pulumi:"access"`
	// Configuration setting which enables/disables autofailover in cluster.
	Autofailover pulumi.BoolInput `pulumi:"autofailover"`
	// Time to start the daily backup, in the UTC timezone. The structure is documented below.
	BackupWindowStart GetMdbPostgresqlClusterConfigBackupWindowStartInput `pulumi:"backupWindowStart"`
	// Cluster performance diagnostics settings. The structure is documented below. [YC Documentation](https://cloud.yandex.com/docs/managed-postgresql/grpc/cluster_service#PerformanceDiagnostics)
	PerformanceDiagnostics GetMdbPostgresqlClusterConfigPerformanceDiagnosticsInput `pulumi:"performanceDiagnostics"`
	// Configuration of the connection pooler. The structure is documented below.
	PoolerConfig GetMdbPostgresqlClusterConfigPoolerConfigInput `pulumi:"poolerConfig"`
	// PostgreSQL cluster config.
	PostgresqlConfig pulumi.StringMapInput `pulumi:"postgresqlConfig"`
	// Resources allocated to hosts of the PostgreSQL cluster. The structure is documented below.
	Resources GetMdbPostgresqlClusterConfigResourcesInput `pulumi:"resources"`
	// Version of the extension.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetMdbPostgresqlClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbPostgresqlClusterConfig)(nil)).Elem()
}

func (i GetMdbPostgresqlClusterConfigArgs) ToGetMdbPostgresqlClusterConfigOutput() GetMdbPostgresqlClusterConfigOutput {
	return i.ToGetMdbPostgresqlClusterConfigOutputWithContext(context.Background())
}

func (i GetMdbPostgresqlClusterConfigArgs) ToGetMdbPostgresqlClusterConfigOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbPostgresqlClusterConfigOutput)
}

type GetMdbPostgresqlClusterConfigOutput struct{ *pulumi.OutputState }

func (GetMdbPostgresqlClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbPostgresqlClusterConfig)(nil)).Elem()
}

func (o GetMdbPostgresqlClusterConfigOutput) ToGetMdbPostgresqlClusterConfigOutput() GetMdbPostgresqlClusterConfigOutput {
	return o
}

func (o GetMdbPostgresqlClusterConfigOutput) ToGetMdbPostgresqlClusterConfigOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterConfigOutput {
	return o
}

// Access policy to the PostgreSQL cluster. The structure is documented below.
func (o GetMdbPostgresqlClusterConfigOutput) Access() GetMdbPostgresqlClusterConfigAccessOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterConfig) GetMdbPostgresqlClusterConfigAccess { return v.Access }).(GetMdbPostgresqlClusterConfigAccessOutput)
}

// Configuration setting which enables/disables autofailover in cluster.
func (o GetMdbPostgresqlClusterConfigOutput) Autofailover() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterConfig) bool { return v.Autofailover }).(pulumi.BoolOutput)
}

// Time to start the daily backup, in the UTC timezone. The structure is documented below.
func (o GetMdbPostgresqlClusterConfigOutput) BackupWindowStart() GetMdbPostgresqlClusterConfigBackupWindowStartOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterConfig) GetMdbPostgresqlClusterConfigBackupWindowStart {
		return v.BackupWindowStart
	}).(GetMdbPostgresqlClusterConfigBackupWindowStartOutput)
}

// Cluster performance diagnostics settings. The structure is documented below. [YC Documentation](https://cloud.yandex.com/docs/managed-postgresql/grpc/cluster_service#PerformanceDiagnostics)
func (o GetMdbPostgresqlClusterConfigOutput) PerformanceDiagnostics() GetMdbPostgresqlClusterConfigPerformanceDiagnosticsOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterConfig) GetMdbPostgresqlClusterConfigPerformanceDiagnostics {
		return v.PerformanceDiagnostics
	}).(GetMdbPostgresqlClusterConfigPerformanceDiagnosticsOutput)
}

// Configuration of the connection pooler. The structure is documented below.
func (o GetMdbPostgresqlClusterConfigOutput) PoolerConfig() GetMdbPostgresqlClusterConfigPoolerConfigOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterConfig) GetMdbPostgresqlClusterConfigPoolerConfig { return v.PoolerConfig }).(GetMdbPostgresqlClusterConfigPoolerConfigOutput)
}

// PostgreSQL cluster config.
func (o GetMdbPostgresqlClusterConfigOutput) PostgresqlConfig() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterConfig) map[string]string { return v.PostgresqlConfig }).(pulumi.StringMapOutput)
}

// Resources allocated to hosts of the PostgreSQL cluster. The structure is documented below.
func (o GetMdbPostgresqlClusterConfigOutput) Resources() GetMdbPostgresqlClusterConfigResourcesOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterConfig) GetMdbPostgresqlClusterConfigResources { return v.Resources }).(GetMdbPostgresqlClusterConfigResourcesOutput)
}

// Version of the extension.
func (o GetMdbPostgresqlClusterConfigOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterConfig) string { return v.Version }).(pulumi.StringOutput)
}

type GetMdbPostgresqlClusterConfigAccess struct {
	// Allow access for [Yandex DataLens](https://cloud.yandex.com/services/datalens).
	DataLens bool `pulumi:"dataLens"`
	// Allows access for [SQL queries in the management console](https://cloud.yandex.com/docs/managed-postgresql/operations/web-sql-query)
	WebSql bool `pulumi:"webSql"`
}

// GetMdbPostgresqlClusterConfigAccessInput is an input type that accepts GetMdbPostgresqlClusterConfigAccessArgs and GetMdbPostgresqlClusterConfigAccessOutput values.
// You can construct a concrete instance of `GetMdbPostgresqlClusterConfigAccessInput` via:
//
//          GetMdbPostgresqlClusterConfigAccessArgs{...}
type GetMdbPostgresqlClusterConfigAccessInput interface {
	pulumi.Input

	ToGetMdbPostgresqlClusterConfigAccessOutput() GetMdbPostgresqlClusterConfigAccessOutput
	ToGetMdbPostgresqlClusterConfigAccessOutputWithContext(context.Context) GetMdbPostgresqlClusterConfigAccessOutput
}

type GetMdbPostgresqlClusterConfigAccessArgs struct {
	// Allow access for [Yandex DataLens](https://cloud.yandex.com/services/datalens).
	DataLens pulumi.BoolInput `pulumi:"dataLens"`
	// Allows access for [SQL queries in the management console](https://cloud.yandex.com/docs/managed-postgresql/operations/web-sql-query)
	WebSql pulumi.BoolInput `pulumi:"webSql"`
}

func (GetMdbPostgresqlClusterConfigAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbPostgresqlClusterConfigAccess)(nil)).Elem()
}

func (i GetMdbPostgresqlClusterConfigAccessArgs) ToGetMdbPostgresqlClusterConfigAccessOutput() GetMdbPostgresqlClusterConfigAccessOutput {
	return i.ToGetMdbPostgresqlClusterConfigAccessOutputWithContext(context.Background())
}

func (i GetMdbPostgresqlClusterConfigAccessArgs) ToGetMdbPostgresqlClusterConfigAccessOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterConfigAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbPostgresqlClusterConfigAccessOutput)
}

type GetMdbPostgresqlClusterConfigAccessOutput struct{ *pulumi.OutputState }

func (GetMdbPostgresqlClusterConfigAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbPostgresqlClusterConfigAccess)(nil)).Elem()
}

func (o GetMdbPostgresqlClusterConfigAccessOutput) ToGetMdbPostgresqlClusterConfigAccessOutput() GetMdbPostgresqlClusterConfigAccessOutput {
	return o
}

func (o GetMdbPostgresqlClusterConfigAccessOutput) ToGetMdbPostgresqlClusterConfigAccessOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterConfigAccessOutput {
	return o
}

// Allow access for [Yandex DataLens](https://cloud.yandex.com/services/datalens).
func (o GetMdbPostgresqlClusterConfigAccessOutput) DataLens() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterConfigAccess) bool { return v.DataLens }).(pulumi.BoolOutput)
}

// Allows access for [SQL queries in the management console](https://cloud.yandex.com/docs/managed-postgresql/operations/web-sql-query)
func (o GetMdbPostgresqlClusterConfigAccessOutput) WebSql() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterConfigAccess) bool { return v.WebSql }).(pulumi.BoolOutput)
}

type GetMdbPostgresqlClusterConfigBackupWindowStart struct {
	// The hour at which backup will be started.
	Hours int `pulumi:"hours"`
	// The minute at which backup will be started.
	Minutes int `pulumi:"minutes"`
}

// GetMdbPostgresqlClusterConfigBackupWindowStartInput is an input type that accepts GetMdbPostgresqlClusterConfigBackupWindowStartArgs and GetMdbPostgresqlClusterConfigBackupWindowStartOutput values.
// You can construct a concrete instance of `GetMdbPostgresqlClusterConfigBackupWindowStartInput` via:
//
//          GetMdbPostgresqlClusterConfigBackupWindowStartArgs{...}
type GetMdbPostgresqlClusterConfigBackupWindowStartInput interface {
	pulumi.Input

	ToGetMdbPostgresqlClusterConfigBackupWindowStartOutput() GetMdbPostgresqlClusterConfigBackupWindowStartOutput
	ToGetMdbPostgresqlClusterConfigBackupWindowStartOutputWithContext(context.Context) GetMdbPostgresqlClusterConfigBackupWindowStartOutput
}

type GetMdbPostgresqlClusterConfigBackupWindowStartArgs struct {
	// The hour at which backup will be started.
	Hours pulumi.IntInput `pulumi:"hours"`
	// The minute at which backup will be started.
	Minutes pulumi.IntInput `pulumi:"minutes"`
}

func (GetMdbPostgresqlClusterConfigBackupWindowStartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbPostgresqlClusterConfigBackupWindowStart)(nil)).Elem()
}

func (i GetMdbPostgresqlClusterConfigBackupWindowStartArgs) ToGetMdbPostgresqlClusterConfigBackupWindowStartOutput() GetMdbPostgresqlClusterConfigBackupWindowStartOutput {
	return i.ToGetMdbPostgresqlClusterConfigBackupWindowStartOutputWithContext(context.Background())
}

func (i GetMdbPostgresqlClusterConfigBackupWindowStartArgs) ToGetMdbPostgresqlClusterConfigBackupWindowStartOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterConfigBackupWindowStartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbPostgresqlClusterConfigBackupWindowStartOutput)
}

type GetMdbPostgresqlClusterConfigBackupWindowStartOutput struct{ *pulumi.OutputState }

func (GetMdbPostgresqlClusterConfigBackupWindowStartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbPostgresqlClusterConfigBackupWindowStart)(nil)).Elem()
}

func (o GetMdbPostgresqlClusterConfigBackupWindowStartOutput) ToGetMdbPostgresqlClusterConfigBackupWindowStartOutput() GetMdbPostgresqlClusterConfigBackupWindowStartOutput {
	return o
}

func (o GetMdbPostgresqlClusterConfigBackupWindowStartOutput) ToGetMdbPostgresqlClusterConfigBackupWindowStartOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterConfigBackupWindowStartOutput {
	return o
}

// The hour at which backup will be started.
func (o GetMdbPostgresqlClusterConfigBackupWindowStartOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterConfigBackupWindowStart) int { return v.Hours }).(pulumi.IntOutput)
}

// The minute at which backup will be started.
func (o GetMdbPostgresqlClusterConfigBackupWindowStartOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterConfigBackupWindowStart) int { return v.Minutes }).(pulumi.IntOutput)
}

type GetMdbPostgresqlClusterConfigPerformanceDiagnostics struct {
	// Flag, when true, performance diagnostics is enabled
	Enabled bool `pulumi:"enabled"`
	// Interval (in seconds) for pgStatActivity sampling Acceptable values are 1 to 86400, inclusive.
	SessionsSamplingInterval int `pulumi:"sessionsSamplingInterval"`
	// Interval (in seconds) for pgStatStatements sampling Acceptable values are 1 to 86400, inclusive.
	StatementsSamplingInterval int `pulumi:"statementsSamplingInterval"`
}

// GetMdbPostgresqlClusterConfigPerformanceDiagnosticsInput is an input type that accepts GetMdbPostgresqlClusterConfigPerformanceDiagnosticsArgs and GetMdbPostgresqlClusterConfigPerformanceDiagnosticsOutput values.
// You can construct a concrete instance of `GetMdbPostgresqlClusterConfigPerformanceDiagnosticsInput` via:
//
//          GetMdbPostgresqlClusterConfigPerformanceDiagnosticsArgs{...}
type GetMdbPostgresqlClusterConfigPerformanceDiagnosticsInput interface {
	pulumi.Input

	ToGetMdbPostgresqlClusterConfigPerformanceDiagnosticsOutput() GetMdbPostgresqlClusterConfigPerformanceDiagnosticsOutput
	ToGetMdbPostgresqlClusterConfigPerformanceDiagnosticsOutputWithContext(context.Context) GetMdbPostgresqlClusterConfigPerformanceDiagnosticsOutput
}

type GetMdbPostgresqlClusterConfigPerformanceDiagnosticsArgs struct {
	// Flag, when true, performance diagnostics is enabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Interval (in seconds) for pgStatActivity sampling Acceptable values are 1 to 86400, inclusive.
	SessionsSamplingInterval pulumi.IntInput `pulumi:"sessionsSamplingInterval"`
	// Interval (in seconds) for pgStatStatements sampling Acceptable values are 1 to 86400, inclusive.
	StatementsSamplingInterval pulumi.IntInput `pulumi:"statementsSamplingInterval"`
}

func (GetMdbPostgresqlClusterConfigPerformanceDiagnosticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbPostgresqlClusterConfigPerformanceDiagnostics)(nil)).Elem()
}

func (i GetMdbPostgresqlClusterConfigPerformanceDiagnosticsArgs) ToGetMdbPostgresqlClusterConfigPerformanceDiagnosticsOutput() GetMdbPostgresqlClusterConfigPerformanceDiagnosticsOutput {
	return i.ToGetMdbPostgresqlClusterConfigPerformanceDiagnosticsOutputWithContext(context.Background())
}

func (i GetMdbPostgresqlClusterConfigPerformanceDiagnosticsArgs) ToGetMdbPostgresqlClusterConfigPerformanceDiagnosticsOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterConfigPerformanceDiagnosticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbPostgresqlClusterConfigPerformanceDiagnosticsOutput)
}

type GetMdbPostgresqlClusterConfigPerformanceDiagnosticsOutput struct{ *pulumi.OutputState }

func (GetMdbPostgresqlClusterConfigPerformanceDiagnosticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbPostgresqlClusterConfigPerformanceDiagnostics)(nil)).Elem()
}

func (o GetMdbPostgresqlClusterConfigPerformanceDiagnosticsOutput) ToGetMdbPostgresqlClusterConfigPerformanceDiagnosticsOutput() GetMdbPostgresqlClusterConfigPerformanceDiagnosticsOutput {
	return o
}

func (o GetMdbPostgresqlClusterConfigPerformanceDiagnosticsOutput) ToGetMdbPostgresqlClusterConfigPerformanceDiagnosticsOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterConfigPerformanceDiagnosticsOutput {
	return o
}

// Flag, when true, performance diagnostics is enabled
func (o GetMdbPostgresqlClusterConfigPerformanceDiagnosticsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterConfigPerformanceDiagnostics) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Interval (in seconds) for pgStatActivity sampling Acceptable values are 1 to 86400, inclusive.
func (o GetMdbPostgresqlClusterConfigPerformanceDiagnosticsOutput) SessionsSamplingInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterConfigPerformanceDiagnostics) int { return v.SessionsSamplingInterval }).(pulumi.IntOutput)
}

// Interval (in seconds) for pgStatStatements sampling Acceptable values are 1 to 86400, inclusive.
func (o GetMdbPostgresqlClusterConfigPerformanceDiagnosticsOutput) StatementsSamplingInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterConfigPerformanceDiagnostics) int { return v.StatementsSamplingInterval }).(pulumi.IntOutput)
}

type GetMdbPostgresqlClusterConfigPoolerConfig struct {
	// Value for `poolDiscard` [parameter in Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_discard-yesno).
	PoolDiscard bool `pulumi:"poolDiscard"`
	// Mode that the connection pooler is working in. See descriptions of all modes in the [documentation for Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string.
	PoolingMode string `pulumi:"poolingMode"`
}

// GetMdbPostgresqlClusterConfigPoolerConfigInput is an input type that accepts GetMdbPostgresqlClusterConfigPoolerConfigArgs and GetMdbPostgresqlClusterConfigPoolerConfigOutput values.
// You can construct a concrete instance of `GetMdbPostgresqlClusterConfigPoolerConfigInput` via:
//
//          GetMdbPostgresqlClusterConfigPoolerConfigArgs{...}
type GetMdbPostgresqlClusterConfigPoolerConfigInput interface {
	pulumi.Input

	ToGetMdbPostgresqlClusterConfigPoolerConfigOutput() GetMdbPostgresqlClusterConfigPoolerConfigOutput
	ToGetMdbPostgresqlClusterConfigPoolerConfigOutputWithContext(context.Context) GetMdbPostgresqlClusterConfigPoolerConfigOutput
}

type GetMdbPostgresqlClusterConfigPoolerConfigArgs struct {
	// Value for `poolDiscard` [parameter in Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_discard-yesno).
	PoolDiscard pulumi.BoolInput `pulumi:"poolDiscard"`
	// Mode that the connection pooler is working in. See descriptions of all modes in the [documentation for Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string.
	PoolingMode pulumi.StringInput `pulumi:"poolingMode"`
}

func (GetMdbPostgresqlClusterConfigPoolerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbPostgresqlClusterConfigPoolerConfig)(nil)).Elem()
}

func (i GetMdbPostgresqlClusterConfigPoolerConfigArgs) ToGetMdbPostgresqlClusterConfigPoolerConfigOutput() GetMdbPostgresqlClusterConfigPoolerConfigOutput {
	return i.ToGetMdbPostgresqlClusterConfigPoolerConfigOutputWithContext(context.Background())
}

func (i GetMdbPostgresqlClusterConfigPoolerConfigArgs) ToGetMdbPostgresqlClusterConfigPoolerConfigOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterConfigPoolerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbPostgresqlClusterConfigPoolerConfigOutput)
}

type GetMdbPostgresqlClusterConfigPoolerConfigOutput struct{ *pulumi.OutputState }

func (GetMdbPostgresqlClusterConfigPoolerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbPostgresqlClusterConfigPoolerConfig)(nil)).Elem()
}

func (o GetMdbPostgresqlClusterConfigPoolerConfigOutput) ToGetMdbPostgresqlClusterConfigPoolerConfigOutput() GetMdbPostgresqlClusterConfigPoolerConfigOutput {
	return o
}

func (o GetMdbPostgresqlClusterConfigPoolerConfigOutput) ToGetMdbPostgresqlClusterConfigPoolerConfigOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterConfigPoolerConfigOutput {
	return o
}

// Value for `poolDiscard` [parameter in Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_discard-yesno).
func (o GetMdbPostgresqlClusterConfigPoolerConfigOutput) PoolDiscard() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterConfigPoolerConfig) bool { return v.PoolDiscard }).(pulumi.BoolOutput)
}

// Mode that the connection pooler is working in. See descriptions of all modes in the [documentation for Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string.
func (o GetMdbPostgresqlClusterConfigPoolerConfigOutput) PoolingMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterConfigPoolerConfig) string { return v.PoolingMode }).(pulumi.StringOutput)
}

type GetMdbPostgresqlClusterConfigResources struct {
	// Volume of the storage available to a PostgreSQL host, in gigabytes.
	DiskSize int `pulumi:"diskSize"`
	// Type of the storage for PostgreSQL hosts.
	DiskTypeId       string `pulumi:"diskTypeId"`
	ResourcePresetId string `pulumi:"resourcePresetId"`
}

// GetMdbPostgresqlClusterConfigResourcesInput is an input type that accepts GetMdbPostgresqlClusterConfigResourcesArgs and GetMdbPostgresqlClusterConfigResourcesOutput values.
// You can construct a concrete instance of `GetMdbPostgresqlClusterConfigResourcesInput` via:
//
//          GetMdbPostgresqlClusterConfigResourcesArgs{...}
type GetMdbPostgresqlClusterConfigResourcesInput interface {
	pulumi.Input

	ToGetMdbPostgresqlClusterConfigResourcesOutput() GetMdbPostgresqlClusterConfigResourcesOutput
	ToGetMdbPostgresqlClusterConfigResourcesOutputWithContext(context.Context) GetMdbPostgresqlClusterConfigResourcesOutput
}

type GetMdbPostgresqlClusterConfigResourcesArgs struct {
	// Volume of the storage available to a PostgreSQL host, in gigabytes.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// Type of the storage for PostgreSQL hosts.
	DiskTypeId       pulumi.StringInput `pulumi:"diskTypeId"`
	ResourcePresetId pulumi.StringInput `pulumi:"resourcePresetId"`
}

func (GetMdbPostgresqlClusterConfigResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbPostgresqlClusterConfigResources)(nil)).Elem()
}

func (i GetMdbPostgresqlClusterConfigResourcesArgs) ToGetMdbPostgresqlClusterConfigResourcesOutput() GetMdbPostgresqlClusterConfigResourcesOutput {
	return i.ToGetMdbPostgresqlClusterConfigResourcesOutputWithContext(context.Background())
}

func (i GetMdbPostgresqlClusterConfigResourcesArgs) ToGetMdbPostgresqlClusterConfigResourcesOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterConfigResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbPostgresqlClusterConfigResourcesOutput)
}

type GetMdbPostgresqlClusterConfigResourcesOutput struct{ *pulumi.OutputState }

func (GetMdbPostgresqlClusterConfigResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbPostgresqlClusterConfigResources)(nil)).Elem()
}

func (o GetMdbPostgresqlClusterConfigResourcesOutput) ToGetMdbPostgresqlClusterConfigResourcesOutput() GetMdbPostgresqlClusterConfigResourcesOutput {
	return o
}

func (o GetMdbPostgresqlClusterConfigResourcesOutput) ToGetMdbPostgresqlClusterConfigResourcesOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterConfigResourcesOutput {
	return o
}

// Volume of the storage available to a PostgreSQL host, in gigabytes.
func (o GetMdbPostgresqlClusterConfigResourcesOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterConfigResources) int { return v.DiskSize }).(pulumi.IntOutput)
}

// Type of the storage for PostgreSQL hosts.
func (o GetMdbPostgresqlClusterConfigResourcesOutput) DiskTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterConfigResources) string { return v.DiskTypeId }).(pulumi.StringOutput)
}

func (o GetMdbPostgresqlClusterConfigResourcesOutput) ResourcePresetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterConfigResources) string { return v.ResourcePresetId }).(pulumi.StringOutput)
}

type GetMdbPostgresqlClusterDatabase struct {
	// Set of database extensions. The structure is documented below
	Extensions []GetMdbPostgresqlClusterDatabaseExtension `pulumi:"extensions"`
	// POSIX locale for string sorting order. Forbidden to change in an existing database.
	LcCollate string `pulumi:"lcCollate"`
	// POSIX locale for character classification. Forbidden to change in an existing database.
	LcType string `pulumi:"lcType"`
	// The name of the PostgreSQL cluster.
	Name string `pulumi:"name"`
	// Name of the user assigned as the owner of the database.
	Owner string `pulumi:"owner"`
}

// GetMdbPostgresqlClusterDatabaseInput is an input type that accepts GetMdbPostgresqlClusterDatabaseArgs and GetMdbPostgresqlClusterDatabaseOutput values.
// You can construct a concrete instance of `GetMdbPostgresqlClusterDatabaseInput` via:
//
//          GetMdbPostgresqlClusterDatabaseArgs{...}
type GetMdbPostgresqlClusterDatabaseInput interface {
	pulumi.Input

	ToGetMdbPostgresqlClusterDatabaseOutput() GetMdbPostgresqlClusterDatabaseOutput
	ToGetMdbPostgresqlClusterDatabaseOutputWithContext(context.Context) GetMdbPostgresqlClusterDatabaseOutput
}

type GetMdbPostgresqlClusterDatabaseArgs struct {
	// Set of database extensions. The structure is documented below
	Extensions GetMdbPostgresqlClusterDatabaseExtensionArrayInput `pulumi:"extensions"`
	// POSIX locale for string sorting order. Forbidden to change in an existing database.
	LcCollate pulumi.StringInput `pulumi:"lcCollate"`
	// POSIX locale for character classification. Forbidden to change in an existing database.
	LcType pulumi.StringInput `pulumi:"lcType"`
	// The name of the PostgreSQL cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// Name of the user assigned as the owner of the database.
	Owner pulumi.StringInput `pulumi:"owner"`
}

func (GetMdbPostgresqlClusterDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbPostgresqlClusterDatabase)(nil)).Elem()
}

func (i GetMdbPostgresqlClusterDatabaseArgs) ToGetMdbPostgresqlClusterDatabaseOutput() GetMdbPostgresqlClusterDatabaseOutput {
	return i.ToGetMdbPostgresqlClusterDatabaseOutputWithContext(context.Background())
}

func (i GetMdbPostgresqlClusterDatabaseArgs) ToGetMdbPostgresqlClusterDatabaseOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbPostgresqlClusterDatabaseOutput)
}

// GetMdbPostgresqlClusterDatabaseArrayInput is an input type that accepts GetMdbPostgresqlClusterDatabaseArray and GetMdbPostgresqlClusterDatabaseArrayOutput values.
// You can construct a concrete instance of `GetMdbPostgresqlClusterDatabaseArrayInput` via:
//
//          GetMdbPostgresqlClusterDatabaseArray{ GetMdbPostgresqlClusterDatabaseArgs{...} }
type GetMdbPostgresqlClusterDatabaseArrayInput interface {
	pulumi.Input

	ToGetMdbPostgresqlClusterDatabaseArrayOutput() GetMdbPostgresqlClusterDatabaseArrayOutput
	ToGetMdbPostgresqlClusterDatabaseArrayOutputWithContext(context.Context) GetMdbPostgresqlClusterDatabaseArrayOutput
}

type GetMdbPostgresqlClusterDatabaseArray []GetMdbPostgresqlClusterDatabaseInput

func (GetMdbPostgresqlClusterDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbPostgresqlClusterDatabase)(nil)).Elem()
}

func (i GetMdbPostgresqlClusterDatabaseArray) ToGetMdbPostgresqlClusterDatabaseArrayOutput() GetMdbPostgresqlClusterDatabaseArrayOutput {
	return i.ToGetMdbPostgresqlClusterDatabaseArrayOutputWithContext(context.Background())
}

func (i GetMdbPostgresqlClusterDatabaseArray) ToGetMdbPostgresqlClusterDatabaseArrayOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbPostgresqlClusterDatabaseArrayOutput)
}

type GetMdbPostgresqlClusterDatabaseOutput struct{ *pulumi.OutputState }

func (GetMdbPostgresqlClusterDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbPostgresqlClusterDatabase)(nil)).Elem()
}

func (o GetMdbPostgresqlClusterDatabaseOutput) ToGetMdbPostgresqlClusterDatabaseOutput() GetMdbPostgresqlClusterDatabaseOutput {
	return o
}

func (o GetMdbPostgresqlClusterDatabaseOutput) ToGetMdbPostgresqlClusterDatabaseOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterDatabaseOutput {
	return o
}

// Set of database extensions. The structure is documented below
func (o GetMdbPostgresqlClusterDatabaseOutput) Extensions() GetMdbPostgresqlClusterDatabaseExtensionArrayOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterDatabase) []GetMdbPostgresqlClusterDatabaseExtension {
		return v.Extensions
	}).(GetMdbPostgresqlClusterDatabaseExtensionArrayOutput)
}

// POSIX locale for string sorting order. Forbidden to change in an existing database.
func (o GetMdbPostgresqlClusterDatabaseOutput) LcCollate() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterDatabase) string { return v.LcCollate }).(pulumi.StringOutput)
}

// POSIX locale for character classification. Forbidden to change in an existing database.
func (o GetMdbPostgresqlClusterDatabaseOutput) LcType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterDatabase) string { return v.LcType }).(pulumi.StringOutput)
}

// The name of the PostgreSQL cluster.
func (o GetMdbPostgresqlClusterDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterDatabase) string { return v.Name }).(pulumi.StringOutput)
}

// Name of the user assigned as the owner of the database.
func (o GetMdbPostgresqlClusterDatabaseOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterDatabase) string { return v.Owner }).(pulumi.StringOutput)
}

type GetMdbPostgresqlClusterDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetMdbPostgresqlClusterDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbPostgresqlClusterDatabase)(nil)).Elem()
}

func (o GetMdbPostgresqlClusterDatabaseArrayOutput) ToGetMdbPostgresqlClusterDatabaseArrayOutput() GetMdbPostgresqlClusterDatabaseArrayOutput {
	return o
}

func (o GetMdbPostgresqlClusterDatabaseArrayOutput) ToGetMdbPostgresqlClusterDatabaseArrayOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterDatabaseArrayOutput {
	return o
}

func (o GetMdbPostgresqlClusterDatabaseArrayOutput) Index(i pulumi.IntInput) GetMdbPostgresqlClusterDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbPostgresqlClusterDatabase {
		return vs[0].([]GetMdbPostgresqlClusterDatabase)[vs[1].(int)]
	}).(GetMdbPostgresqlClusterDatabaseOutput)
}

type GetMdbPostgresqlClusterDatabaseExtension struct {
	// The name of the PostgreSQL cluster.
	Name string `pulumi:"name"`
	// Version of the extension.
	Version string `pulumi:"version"`
}

// GetMdbPostgresqlClusterDatabaseExtensionInput is an input type that accepts GetMdbPostgresqlClusterDatabaseExtensionArgs and GetMdbPostgresqlClusterDatabaseExtensionOutput values.
// You can construct a concrete instance of `GetMdbPostgresqlClusterDatabaseExtensionInput` via:
//
//          GetMdbPostgresqlClusterDatabaseExtensionArgs{...}
type GetMdbPostgresqlClusterDatabaseExtensionInput interface {
	pulumi.Input

	ToGetMdbPostgresqlClusterDatabaseExtensionOutput() GetMdbPostgresqlClusterDatabaseExtensionOutput
	ToGetMdbPostgresqlClusterDatabaseExtensionOutputWithContext(context.Context) GetMdbPostgresqlClusterDatabaseExtensionOutput
}

type GetMdbPostgresqlClusterDatabaseExtensionArgs struct {
	// The name of the PostgreSQL cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// Version of the extension.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetMdbPostgresqlClusterDatabaseExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbPostgresqlClusterDatabaseExtension)(nil)).Elem()
}

func (i GetMdbPostgresqlClusterDatabaseExtensionArgs) ToGetMdbPostgresqlClusterDatabaseExtensionOutput() GetMdbPostgresqlClusterDatabaseExtensionOutput {
	return i.ToGetMdbPostgresqlClusterDatabaseExtensionOutputWithContext(context.Background())
}

func (i GetMdbPostgresqlClusterDatabaseExtensionArgs) ToGetMdbPostgresqlClusterDatabaseExtensionOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterDatabaseExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbPostgresqlClusterDatabaseExtensionOutput)
}

// GetMdbPostgresqlClusterDatabaseExtensionArrayInput is an input type that accepts GetMdbPostgresqlClusterDatabaseExtensionArray and GetMdbPostgresqlClusterDatabaseExtensionArrayOutput values.
// You can construct a concrete instance of `GetMdbPostgresqlClusterDatabaseExtensionArrayInput` via:
//
//          GetMdbPostgresqlClusterDatabaseExtensionArray{ GetMdbPostgresqlClusterDatabaseExtensionArgs{...} }
type GetMdbPostgresqlClusterDatabaseExtensionArrayInput interface {
	pulumi.Input

	ToGetMdbPostgresqlClusterDatabaseExtensionArrayOutput() GetMdbPostgresqlClusterDatabaseExtensionArrayOutput
	ToGetMdbPostgresqlClusterDatabaseExtensionArrayOutputWithContext(context.Context) GetMdbPostgresqlClusterDatabaseExtensionArrayOutput
}

type GetMdbPostgresqlClusterDatabaseExtensionArray []GetMdbPostgresqlClusterDatabaseExtensionInput

func (GetMdbPostgresqlClusterDatabaseExtensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbPostgresqlClusterDatabaseExtension)(nil)).Elem()
}

func (i GetMdbPostgresqlClusterDatabaseExtensionArray) ToGetMdbPostgresqlClusterDatabaseExtensionArrayOutput() GetMdbPostgresqlClusterDatabaseExtensionArrayOutput {
	return i.ToGetMdbPostgresqlClusterDatabaseExtensionArrayOutputWithContext(context.Background())
}

func (i GetMdbPostgresqlClusterDatabaseExtensionArray) ToGetMdbPostgresqlClusterDatabaseExtensionArrayOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterDatabaseExtensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbPostgresqlClusterDatabaseExtensionArrayOutput)
}

type GetMdbPostgresqlClusterDatabaseExtensionOutput struct{ *pulumi.OutputState }

func (GetMdbPostgresqlClusterDatabaseExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbPostgresqlClusterDatabaseExtension)(nil)).Elem()
}

func (o GetMdbPostgresqlClusterDatabaseExtensionOutput) ToGetMdbPostgresqlClusterDatabaseExtensionOutput() GetMdbPostgresqlClusterDatabaseExtensionOutput {
	return o
}

func (o GetMdbPostgresqlClusterDatabaseExtensionOutput) ToGetMdbPostgresqlClusterDatabaseExtensionOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterDatabaseExtensionOutput {
	return o
}

// The name of the PostgreSQL cluster.
func (o GetMdbPostgresqlClusterDatabaseExtensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterDatabaseExtension) string { return v.Name }).(pulumi.StringOutput)
}

// Version of the extension.
func (o GetMdbPostgresqlClusterDatabaseExtensionOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterDatabaseExtension) string { return v.Version }).(pulumi.StringOutput)
}

type GetMdbPostgresqlClusterDatabaseExtensionArrayOutput struct{ *pulumi.OutputState }

func (GetMdbPostgresqlClusterDatabaseExtensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbPostgresqlClusterDatabaseExtension)(nil)).Elem()
}

func (o GetMdbPostgresqlClusterDatabaseExtensionArrayOutput) ToGetMdbPostgresqlClusterDatabaseExtensionArrayOutput() GetMdbPostgresqlClusterDatabaseExtensionArrayOutput {
	return o
}

func (o GetMdbPostgresqlClusterDatabaseExtensionArrayOutput) ToGetMdbPostgresqlClusterDatabaseExtensionArrayOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterDatabaseExtensionArrayOutput {
	return o
}

func (o GetMdbPostgresqlClusterDatabaseExtensionArrayOutput) Index(i pulumi.IntInput) GetMdbPostgresqlClusterDatabaseExtensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbPostgresqlClusterDatabaseExtension {
		return vs[0].([]GetMdbPostgresqlClusterDatabaseExtension)[vs[1].(int)]
	}).(GetMdbPostgresqlClusterDatabaseExtensionOutput)
}

type GetMdbPostgresqlClusterHost struct {
	// Sets whether the host should get a public IP address on creation. Changing this parameter for an existing host is not supported at the moment.
	AssignPublicIp bool `pulumi:"assignPublicIp"`
	// The fully qualified domain name of the host.
	Fqdn string `pulumi:"fqdn"`
	// Host priority in HA group.
	Priority int `pulumi:"priority"`
	// Host replication source (fqdn), case when replicationSource is empty then host in HA group.
	ReplicationSource string `pulumi:"replicationSource"`
	// Role of the host in the cluster.
	Role string `pulumi:"role"`
	// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
	SubnetId string `pulumi:"subnetId"`
	// The availability zone where the PostgreSQL host will be created.
	Zone string `pulumi:"zone"`
}

// GetMdbPostgresqlClusterHostInput is an input type that accepts GetMdbPostgresqlClusterHostArgs and GetMdbPostgresqlClusterHostOutput values.
// You can construct a concrete instance of `GetMdbPostgresqlClusterHostInput` via:
//
//          GetMdbPostgresqlClusterHostArgs{...}
type GetMdbPostgresqlClusterHostInput interface {
	pulumi.Input

	ToGetMdbPostgresqlClusterHostOutput() GetMdbPostgresqlClusterHostOutput
	ToGetMdbPostgresqlClusterHostOutputWithContext(context.Context) GetMdbPostgresqlClusterHostOutput
}

type GetMdbPostgresqlClusterHostArgs struct {
	// Sets whether the host should get a public IP address on creation. Changing this parameter for an existing host is not supported at the moment.
	AssignPublicIp pulumi.BoolInput `pulumi:"assignPublicIp"`
	// The fully qualified domain name of the host.
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// Host priority in HA group.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Host replication source (fqdn), case when replicationSource is empty then host in HA group.
	ReplicationSource pulumi.StringInput `pulumi:"replicationSource"`
	// Role of the host in the cluster.
	Role pulumi.StringInput `pulumi:"role"`
	// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The availability zone where the PostgreSQL host will be created.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetMdbPostgresqlClusterHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbPostgresqlClusterHost)(nil)).Elem()
}

func (i GetMdbPostgresqlClusterHostArgs) ToGetMdbPostgresqlClusterHostOutput() GetMdbPostgresqlClusterHostOutput {
	return i.ToGetMdbPostgresqlClusterHostOutputWithContext(context.Background())
}

func (i GetMdbPostgresqlClusterHostArgs) ToGetMdbPostgresqlClusterHostOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbPostgresqlClusterHostOutput)
}

// GetMdbPostgresqlClusterHostArrayInput is an input type that accepts GetMdbPostgresqlClusterHostArray and GetMdbPostgresqlClusterHostArrayOutput values.
// You can construct a concrete instance of `GetMdbPostgresqlClusterHostArrayInput` via:
//
//          GetMdbPostgresqlClusterHostArray{ GetMdbPostgresqlClusterHostArgs{...} }
type GetMdbPostgresqlClusterHostArrayInput interface {
	pulumi.Input

	ToGetMdbPostgresqlClusterHostArrayOutput() GetMdbPostgresqlClusterHostArrayOutput
	ToGetMdbPostgresqlClusterHostArrayOutputWithContext(context.Context) GetMdbPostgresqlClusterHostArrayOutput
}

type GetMdbPostgresqlClusterHostArray []GetMdbPostgresqlClusterHostInput

func (GetMdbPostgresqlClusterHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbPostgresqlClusterHost)(nil)).Elem()
}

func (i GetMdbPostgresqlClusterHostArray) ToGetMdbPostgresqlClusterHostArrayOutput() GetMdbPostgresqlClusterHostArrayOutput {
	return i.ToGetMdbPostgresqlClusterHostArrayOutputWithContext(context.Background())
}

func (i GetMdbPostgresqlClusterHostArray) ToGetMdbPostgresqlClusterHostArrayOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbPostgresqlClusterHostArrayOutput)
}

type GetMdbPostgresqlClusterHostOutput struct{ *pulumi.OutputState }

func (GetMdbPostgresqlClusterHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbPostgresqlClusterHost)(nil)).Elem()
}

func (o GetMdbPostgresqlClusterHostOutput) ToGetMdbPostgresqlClusterHostOutput() GetMdbPostgresqlClusterHostOutput {
	return o
}

func (o GetMdbPostgresqlClusterHostOutput) ToGetMdbPostgresqlClusterHostOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterHostOutput {
	return o
}

// Sets whether the host should get a public IP address on creation. Changing this parameter for an existing host is not supported at the moment.
func (o GetMdbPostgresqlClusterHostOutput) AssignPublicIp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterHost) bool { return v.AssignPublicIp }).(pulumi.BoolOutput)
}

// The fully qualified domain name of the host.
func (o GetMdbPostgresqlClusterHostOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterHost) string { return v.Fqdn }).(pulumi.StringOutput)
}

// Host priority in HA group.
func (o GetMdbPostgresqlClusterHostOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterHost) int { return v.Priority }).(pulumi.IntOutput)
}

// Host replication source (fqdn), case when replicationSource is empty then host in HA group.
func (o GetMdbPostgresqlClusterHostOutput) ReplicationSource() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterHost) string { return v.ReplicationSource }).(pulumi.StringOutput)
}

// Role of the host in the cluster.
func (o GetMdbPostgresqlClusterHostOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterHost) string { return v.Role }).(pulumi.StringOutput)
}

// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
func (o GetMdbPostgresqlClusterHostOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterHost) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The availability zone where the PostgreSQL host will be created.
func (o GetMdbPostgresqlClusterHostOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterHost) string { return v.Zone }).(pulumi.StringOutput)
}

type GetMdbPostgresqlClusterHostArrayOutput struct{ *pulumi.OutputState }

func (GetMdbPostgresqlClusterHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbPostgresqlClusterHost)(nil)).Elem()
}

func (o GetMdbPostgresqlClusterHostArrayOutput) ToGetMdbPostgresqlClusterHostArrayOutput() GetMdbPostgresqlClusterHostArrayOutput {
	return o
}

func (o GetMdbPostgresqlClusterHostArrayOutput) ToGetMdbPostgresqlClusterHostArrayOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterHostArrayOutput {
	return o
}

func (o GetMdbPostgresqlClusterHostArrayOutput) Index(i pulumi.IntInput) GetMdbPostgresqlClusterHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbPostgresqlClusterHost {
		return vs[0].([]GetMdbPostgresqlClusterHost)[vs[1].(int)]
	}).(GetMdbPostgresqlClusterHostOutput)
}

type GetMdbPostgresqlClusterUser struct {
	// The maximum number of connections per user.
	ConnLimit *int `pulumi:"connLimit"`
	// List of the user's grants.
	Grants []string `pulumi:"grants"`
	// User's ability to login.
	Login *bool `pulumi:"login"`
	// The name of the PostgreSQL cluster.
	Name string `pulumi:"name"`
	// The password of the user.
	Password string `pulumi:"password"`
	// Set of permissions granted to the user. The structure is documented below.
	Permissions []GetMdbPostgresqlClusterUserPermission `pulumi:"permissions"`
	// Map of user settings.
	Settings map[string]string `pulumi:"settings"`
}

// GetMdbPostgresqlClusterUserInput is an input type that accepts GetMdbPostgresqlClusterUserArgs and GetMdbPostgresqlClusterUserOutput values.
// You can construct a concrete instance of `GetMdbPostgresqlClusterUserInput` via:
//
//          GetMdbPostgresqlClusterUserArgs{...}
type GetMdbPostgresqlClusterUserInput interface {
	pulumi.Input

	ToGetMdbPostgresqlClusterUserOutput() GetMdbPostgresqlClusterUserOutput
	ToGetMdbPostgresqlClusterUserOutputWithContext(context.Context) GetMdbPostgresqlClusterUserOutput
}

type GetMdbPostgresqlClusterUserArgs struct {
	// The maximum number of connections per user.
	ConnLimit pulumi.IntPtrInput `pulumi:"connLimit"`
	// List of the user's grants.
	Grants pulumi.StringArrayInput `pulumi:"grants"`
	// User's ability to login.
	Login pulumi.BoolPtrInput `pulumi:"login"`
	// The name of the PostgreSQL cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// The password of the user.
	Password pulumi.StringInput `pulumi:"password"`
	// Set of permissions granted to the user. The structure is documented below.
	Permissions GetMdbPostgresqlClusterUserPermissionArrayInput `pulumi:"permissions"`
	// Map of user settings.
	Settings pulumi.StringMapInput `pulumi:"settings"`
}

func (GetMdbPostgresqlClusterUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbPostgresqlClusterUser)(nil)).Elem()
}

func (i GetMdbPostgresqlClusterUserArgs) ToGetMdbPostgresqlClusterUserOutput() GetMdbPostgresqlClusterUserOutput {
	return i.ToGetMdbPostgresqlClusterUserOutputWithContext(context.Background())
}

func (i GetMdbPostgresqlClusterUserArgs) ToGetMdbPostgresqlClusterUserOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbPostgresqlClusterUserOutput)
}

// GetMdbPostgresqlClusterUserArrayInput is an input type that accepts GetMdbPostgresqlClusterUserArray and GetMdbPostgresqlClusterUserArrayOutput values.
// You can construct a concrete instance of `GetMdbPostgresqlClusterUserArrayInput` via:
//
//          GetMdbPostgresqlClusterUserArray{ GetMdbPostgresqlClusterUserArgs{...} }
type GetMdbPostgresqlClusterUserArrayInput interface {
	pulumi.Input

	ToGetMdbPostgresqlClusterUserArrayOutput() GetMdbPostgresqlClusterUserArrayOutput
	ToGetMdbPostgresqlClusterUserArrayOutputWithContext(context.Context) GetMdbPostgresqlClusterUserArrayOutput
}

type GetMdbPostgresqlClusterUserArray []GetMdbPostgresqlClusterUserInput

func (GetMdbPostgresqlClusterUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbPostgresqlClusterUser)(nil)).Elem()
}

func (i GetMdbPostgresqlClusterUserArray) ToGetMdbPostgresqlClusterUserArrayOutput() GetMdbPostgresqlClusterUserArrayOutput {
	return i.ToGetMdbPostgresqlClusterUserArrayOutputWithContext(context.Background())
}

func (i GetMdbPostgresqlClusterUserArray) ToGetMdbPostgresqlClusterUserArrayOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbPostgresqlClusterUserArrayOutput)
}

type GetMdbPostgresqlClusterUserOutput struct{ *pulumi.OutputState }

func (GetMdbPostgresqlClusterUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbPostgresqlClusterUser)(nil)).Elem()
}

func (o GetMdbPostgresqlClusterUserOutput) ToGetMdbPostgresqlClusterUserOutput() GetMdbPostgresqlClusterUserOutput {
	return o
}

func (o GetMdbPostgresqlClusterUserOutput) ToGetMdbPostgresqlClusterUserOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterUserOutput {
	return o
}

// The maximum number of connections per user.
func (o GetMdbPostgresqlClusterUserOutput) ConnLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterUser) *int { return v.ConnLimit }).(pulumi.IntPtrOutput)
}

// List of the user's grants.
func (o GetMdbPostgresqlClusterUserOutput) Grants() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterUser) []string { return v.Grants }).(pulumi.StringArrayOutput)
}

// User's ability to login.
func (o GetMdbPostgresqlClusterUserOutput) Login() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterUser) *bool { return v.Login }).(pulumi.BoolPtrOutput)
}

// The name of the PostgreSQL cluster.
func (o GetMdbPostgresqlClusterUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterUser) string { return v.Name }).(pulumi.StringOutput)
}

// The password of the user.
func (o GetMdbPostgresqlClusterUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterUser) string { return v.Password }).(pulumi.StringOutput)
}

// Set of permissions granted to the user. The structure is documented below.
func (o GetMdbPostgresqlClusterUserOutput) Permissions() GetMdbPostgresqlClusterUserPermissionArrayOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterUser) []GetMdbPostgresqlClusterUserPermission { return v.Permissions }).(GetMdbPostgresqlClusterUserPermissionArrayOutput)
}

// Map of user settings.
func (o GetMdbPostgresqlClusterUserOutput) Settings() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterUser) map[string]string { return v.Settings }).(pulumi.StringMapOutput)
}

type GetMdbPostgresqlClusterUserArrayOutput struct{ *pulumi.OutputState }

func (GetMdbPostgresqlClusterUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbPostgresqlClusterUser)(nil)).Elem()
}

func (o GetMdbPostgresqlClusterUserArrayOutput) ToGetMdbPostgresqlClusterUserArrayOutput() GetMdbPostgresqlClusterUserArrayOutput {
	return o
}

func (o GetMdbPostgresqlClusterUserArrayOutput) ToGetMdbPostgresqlClusterUserArrayOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterUserArrayOutput {
	return o
}

func (o GetMdbPostgresqlClusterUserArrayOutput) Index(i pulumi.IntInput) GetMdbPostgresqlClusterUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbPostgresqlClusterUser {
		return vs[0].([]GetMdbPostgresqlClusterUser)[vs[1].(int)]
	}).(GetMdbPostgresqlClusterUserOutput)
}

type GetMdbPostgresqlClusterUserPermission struct {
	// The name of the database that the permission grants access to.
	DatabaseName string `pulumi:"databaseName"`
}

// GetMdbPostgresqlClusterUserPermissionInput is an input type that accepts GetMdbPostgresqlClusterUserPermissionArgs and GetMdbPostgresqlClusterUserPermissionOutput values.
// You can construct a concrete instance of `GetMdbPostgresqlClusterUserPermissionInput` via:
//
//          GetMdbPostgresqlClusterUserPermissionArgs{...}
type GetMdbPostgresqlClusterUserPermissionInput interface {
	pulumi.Input

	ToGetMdbPostgresqlClusterUserPermissionOutput() GetMdbPostgresqlClusterUserPermissionOutput
	ToGetMdbPostgresqlClusterUserPermissionOutputWithContext(context.Context) GetMdbPostgresqlClusterUserPermissionOutput
}

type GetMdbPostgresqlClusterUserPermissionArgs struct {
	// The name of the database that the permission grants access to.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
}

func (GetMdbPostgresqlClusterUserPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbPostgresqlClusterUserPermission)(nil)).Elem()
}

func (i GetMdbPostgresqlClusterUserPermissionArgs) ToGetMdbPostgresqlClusterUserPermissionOutput() GetMdbPostgresqlClusterUserPermissionOutput {
	return i.ToGetMdbPostgresqlClusterUserPermissionOutputWithContext(context.Background())
}

func (i GetMdbPostgresqlClusterUserPermissionArgs) ToGetMdbPostgresqlClusterUserPermissionOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterUserPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbPostgresqlClusterUserPermissionOutput)
}

// GetMdbPostgresqlClusterUserPermissionArrayInput is an input type that accepts GetMdbPostgresqlClusterUserPermissionArray and GetMdbPostgresqlClusterUserPermissionArrayOutput values.
// You can construct a concrete instance of `GetMdbPostgresqlClusterUserPermissionArrayInput` via:
//
//          GetMdbPostgresqlClusterUserPermissionArray{ GetMdbPostgresqlClusterUserPermissionArgs{...} }
type GetMdbPostgresqlClusterUserPermissionArrayInput interface {
	pulumi.Input

	ToGetMdbPostgresqlClusterUserPermissionArrayOutput() GetMdbPostgresqlClusterUserPermissionArrayOutput
	ToGetMdbPostgresqlClusterUserPermissionArrayOutputWithContext(context.Context) GetMdbPostgresqlClusterUserPermissionArrayOutput
}

type GetMdbPostgresqlClusterUserPermissionArray []GetMdbPostgresqlClusterUserPermissionInput

func (GetMdbPostgresqlClusterUserPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbPostgresqlClusterUserPermission)(nil)).Elem()
}

func (i GetMdbPostgresqlClusterUserPermissionArray) ToGetMdbPostgresqlClusterUserPermissionArrayOutput() GetMdbPostgresqlClusterUserPermissionArrayOutput {
	return i.ToGetMdbPostgresqlClusterUserPermissionArrayOutputWithContext(context.Background())
}

func (i GetMdbPostgresqlClusterUserPermissionArray) ToGetMdbPostgresqlClusterUserPermissionArrayOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterUserPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbPostgresqlClusterUserPermissionArrayOutput)
}

type GetMdbPostgresqlClusterUserPermissionOutput struct{ *pulumi.OutputState }

func (GetMdbPostgresqlClusterUserPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbPostgresqlClusterUserPermission)(nil)).Elem()
}

func (o GetMdbPostgresqlClusterUserPermissionOutput) ToGetMdbPostgresqlClusterUserPermissionOutput() GetMdbPostgresqlClusterUserPermissionOutput {
	return o
}

func (o GetMdbPostgresqlClusterUserPermissionOutput) ToGetMdbPostgresqlClusterUserPermissionOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterUserPermissionOutput {
	return o
}

// The name of the database that the permission grants access to.
func (o GetMdbPostgresqlClusterUserPermissionOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbPostgresqlClusterUserPermission) string { return v.DatabaseName }).(pulumi.StringOutput)
}

type GetMdbPostgresqlClusterUserPermissionArrayOutput struct{ *pulumi.OutputState }

func (GetMdbPostgresqlClusterUserPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbPostgresqlClusterUserPermission)(nil)).Elem()
}

func (o GetMdbPostgresqlClusterUserPermissionArrayOutput) ToGetMdbPostgresqlClusterUserPermissionArrayOutput() GetMdbPostgresqlClusterUserPermissionArrayOutput {
	return o
}

func (o GetMdbPostgresqlClusterUserPermissionArrayOutput) ToGetMdbPostgresqlClusterUserPermissionArrayOutputWithContext(ctx context.Context) GetMdbPostgresqlClusterUserPermissionArrayOutput {
	return o
}

func (o GetMdbPostgresqlClusterUserPermissionArrayOutput) Index(i pulumi.IntInput) GetMdbPostgresqlClusterUserPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbPostgresqlClusterUserPermission {
		return vs[0].([]GetMdbPostgresqlClusterUserPermission)[vs[1].(int)]
	}).(GetMdbPostgresqlClusterUserPermissionOutput)
}

type GetMdbRedisClusterConfig struct {
	// Redis key eviction policy for a dataset that reaches maximum memory.
	MaxmemoryPolicy string `pulumi:"maxmemoryPolicy"`
	// Close the connection after a client is idle for N seconds.
	Timeout int `pulumi:"timeout"`
	// Version of Redis (either 5.0 or 6.0).
	Version string `pulumi:"version"`
}

// GetMdbRedisClusterConfigInput is an input type that accepts GetMdbRedisClusterConfigArgs and GetMdbRedisClusterConfigOutput values.
// You can construct a concrete instance of `GetMdbRedisClusterConfigInput` via:
//
//          GetMdbRedisClusterConfigArgs{...}
type GetMdbRedisClusterConfigInput interface {
	pulumi.Input

	ToGetMdbRedisClusterConfigOutput() GetMdbRedisClusterConfigOutput
	ToGetMdbRedisClusterConfigOutputWithContext(context.Context) GetMdbRedisClusterConfigOutput
}

type GetMdbRedisClusterConfigArgs struct {
	// Redis key eviction policy for a dataset that reaches maximum memory.
	MaxmemoryPolicy pulumi.StringInput `pulumi:"maxmemoryPolicy"`
	// Close the connection after a client is idle for N seconds.
	Timeout pulumi.IntInput `pulumi:"timeout"`
	// Version of Redis (either 5.0 or 6.0).
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetMdbRedisClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbRedisClusterConfig)(nil)).Elem()
}

func (i GetMdbRedisClusterConfigArgs) ToGetMdbRedisClusterConfigOutput() GetMdbRedisClusterConfigOutput {
	return i.ToGetMdbRedisClusterConfigOutputWithContext(context.Background())
}

func (i GetMdbRedisClusterConfigArgs) ToGetMdbRedisClusterConfigOutputWithContext(ctx context.Context) GetMdbRedisClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbRedisClusterConfigOutput)
}

type GetMdbRedisClusterConfigOutput struct{ *pulumi.OutputState }

func (GetMdbRedisClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbRedisClusterConfig)(nil)).Elem()
}

func (o GetMdbRedisClusterConfigOutput) ToGetMdbRedisClusterConfigOutput() GetMdbRedisClusterConfigOutput {
	return o
}

func (o GetMdbRedisClusterConfigOutput) ToGetMdbRedisClusterConfigOutputWithContext(ctx context.Context) GetMdbRedisClusterConfigOutput {
	return o
}

// Redis key eviction policy for a dataset that reaches maximum memory.
func (o GetMdbRedisClusterConfigOutput) MaxmemoryPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbRedisClusterConfig) string { return v.MaxmemoryPolicy }).(pulumi.StringOutput)
}

// Close the connection after a client is idle for N seconds.
func (o GetMdbRedisClusterConfigOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbRedisClusterConfig) int { return v.Timeout }).(pulumi.IntOutput)
}

// Version of Redis (either 5.0 or 6.0).
func (o GetMdbRedisClusterConfigOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbRedisClusterConfig) string { return v.Version }).(pulumi.StringOutput)
}

type GetMdbRedisClusterHost struct {
	// The fully qualified domain name of the host.
	Fqdn string `pulumi:"fqdn"`
	// The name of the shard to which the host belongs.
	ShardName string `pulumi:"shardName"`
	// The ID of the subnet, to which the host belongs. The subnet must
	// be a part of the network to which the cluster belongs.
	SubnetId string `pulumi:"subnetId"`
	// The availability zone where the Redis host will be created.
	Zone string `pulumi:"zone"`
}

// GetMdbRedisClusterHostInput is an input type that accepts GetMdbRedisClusterHostArgs and GetMdbRedisClusterHostOutput values.
// You can construct a concrete instance of `GetMdbRedisClusterHostInput` via:
//
//          GetMdbRedisClusterHostArgs{...}
type GetMdbRedisClusterHostInput interface {
	pulumi.Input

	ToGetMdbRedisClusterHostOutput() GetMdbRedisClusterHostOutput
	ToGetMdbRedisClusterHostOutputWithContext(context.Context) GetMdbRedisClusterHostOutput
}

type GetMdbRedisClusterHostArgs struct {
	// The fully qualified domain name of the host.
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// The name of the shard to which the host belongs.
	ShardName pulumi.StringInput `pulumi:"shardName"`
	// The ID of the subnet, to which the host belongs. The subnet must
	// be a part of the network to which the cluster belongs.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The availability zone where the Redis host will be created.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetMdbRedisClusterHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbRedisClusterHost)(nil)).Elem()
}

func (i GetMdbRedisClusterHostArgs) ToGetMdbRedisClusterHostOutput() GetMdbRedisClusterHostOutput {
	return i.ToGetMdbRedisClusterHostOutputWithContext(context.Background())
}

func (i GetMdbRedisClusterHostArgs) ToGetMdbRedisClusterHostOutputWithContext(ctx context.Context) GetMdbRedisClusterHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbRedisClusterHostOutput)
}

// GetMdbRedisClusterHostArrayInput is an input type that accepts GetMdbRedisClusterHostArray and GetMdbRedisClusterHostArrayOutput values.
// You can construct a concrete instance of `GetMdbRedisClusterHostArrayInput` via:
//
//          GetMdbRedisClusterHostArray{ GetMdbRedisClusterHostArgs{...} }
type GetMdbRedisClusterHostArrayInput interface {
	pulumi.Input

	ToGetMdbRedisClusterHostArrayOutput() GetMdbRedisClusterHostArrayOutput
	ToGetMdbRedisClusterHostArrayOutputWithContext(context.Context) GetMdbRedisClusterHostArrayOutput
}

type GetMdbRedisClusterHostArray []GetMdbRedisClusterHostInput

func (GetMdbRedisClusterHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbRedisClusterHost)(nil)).Elem()
}

func (i GetMdbRedisClusterHostArray) ToGetMdbRedisClusterHostArrayOutput() GetMdbRedisClusterHostArrayOutput {
	return i.ToGetMdbRedisClusterHostArrayOutputWithContext(context.Background())
}

func (i GetMdbRedisClusterHostArray) ToGetMdbRedisClusterHostArrayOutputWithContext(ctx context.Context) GetMdbRedisClusterHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbRedisClusterHostArrayOutput)
}

type GetMdbRedisClusterHostOutput struct{ *pulumi.OutputState }

func (GetMdbRedisClusterHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbRedisClusterHost)(nil)).Elem()
}

func (o GetMdbRedisClusterHostOutput) ToGetMdbRedisClusterHostOutput() GetMdbRedisClusterHostOutput {
	return o
}

func (o GetMdbRedisClusterHostOutput) ToGetMdbRedisClusterHostOutputWithContext(ctx context.Context) GetMdbRedisClusterHostOutput {
	return o
}

// The fully qualified domain name of the host.
func (o GetMdbRedisClusterHostOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbRedisClusterHost) string { return v.Fqdn }).(pulumi.StringOutput)
}

// The name of the shard to which the host belongs.
func (o GetMdbRedisClusterHostOutput) ShardName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbRedisClusterHost) string { return v.ShardName }).(pulumi.StringOutput)
}

// The ID of the subnet, to which the host belongs. The subnet must
// be a part of the network to which the cluster belongs.
func (o GetMdbRedisClusterHostOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbRedisClusterHost) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The availability zone where the Redis host will be created.
func (o GetMdbRedisClusterHostOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbRedisClusterHost) string { return v.Zone }).(pulumi.StringOutput)
}

type GetMdbRedisClusterHostArrayOutput struct{ *pulumi.OutputState }

func (GetMdbRedisClusterHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbRedisClusterHost)(nil)).Elem()
}

func (o GetMdbRedisClusterHostArrayOutput) ToGetMdbRedisClusterHostArrayOutput() GetMdbRedisClusterHostArrayOutput {
	return o
}

func (o GetMdbRedisClusterHostArrayOutput) ToGetMdbRedisClusterHostArrayOutputWithContext(ctx context.Context) GetMdbRedisClusterHostArrayOutput {
	return o
}

func (o GetMdbRedisClusterHostArrayOutput) Index(i pulumi.IntInput) GetMdbRedisClusterHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbRedisClusterHost {
		return vs[0].([]GetMdbRedisClusterHost)[vs[1].(int)]
	}).(GetMdbRedisClusterHostOutput)
}

type GetMdbRedisClusterResources struct {
	// Volume of the storage available to a host, in gigabytes.
	DiskSize int `pulumi:"diskSize"`
	// Type of the storage of a host.
	DiskTypeId       string `pulumi:"diskTypeId"`
	ResourcePresetId string `pulumi:"resourcePresetId"`
}

// GetMdbRedisClusterResourcesInput is an input type that accepts GetMdbRedisClusterResourcesArgs and GetMdbRedisClusterResourcesOutput values.
// You can construct a concrete instance of `GetMdbRedisClusterResourcesInput` via:
//
//          GetMdbRedisClusterResourcesArgs{...}
type GetMdbRedisClusterResourcesInput interface {
	pulumi.Input

	ToGetMdbRedisClusterResourcesOutput() GetMdbRedisClusterResourcesOutput
	ToGetMdbRedisClusterResourcesOutputWithContext(context.Context) GetMdbRedisClusterResourcesOutput
}

type GetMdbRedisClusterResourcesArgs struct {
	// Volume of the storage available to a host, in gigabytes.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// Type of the storage of a host.
	DiskTypeId       pulumi.StringInput `pulumi:"diskTypeId"`
	ResourcePresetId pulumi.StringInput `pulumi:"resourcePresetId"`
}

func (GetMdbRedisClusterResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbRedisClusterResources)(nil)).Elem()
}

func (i GetMdbRedisClusterResourcesArgs) ToGetMdbRedisClusterResourcesOutput() GetMdbRedisClusterResourcesOutput {
	return i.ToGetMdbRedisClusterResourcesOutputWithContext(context.Background())
}

func (i GetMdbRedisClusterResourcesArgs) ToGetMdbRedisClusterResourcesOutputWithContext(ctx context.Context) GetMdbRedisClusterResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbRedisClusterResourcesOutput)
}

type GetMdbRedisClusterResourcesOutput struct{ *pulumi.OutputState }

func (GetMdbRedisClusterResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbRedisClusterResources)(nil)).Elem()
}

func (o GetMdbRedisClusterResourcesOutput) ToGetMdbRedisClusterResourcesOutput() GetMdbRedisClusterResourcesOutput {
	return o
}

func (o GetMdbRedisClusterResourcesOutput) ToGetMdbRedisClusterResourcesOutputWithContext(ctx context.Context) GetMdbRedisClusterResourcesOutput {
	return o
}

// Volume of the storage available to a host, in gigabytes.
func (o GetMdbRedisClusterResourcesOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbRedisClusterResources) int { return v.DiskSize }).(pulumi.IntOutput)
}

// Type of the storage of a host.
func (o GetMdbRedisClusterResourcesOutput) DiskTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbRedisClusterResources) string { return v.DiskTypeId }).(pulumi.StringOutput)
}

func (o GetMdbRedisClusterResourcesOutput) ResourcePresetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbRedisClusterResources) string { return v.ResourcePresetId }).(pulumi.StringOutput)
}

type GetMdbSqlserverClusterBackupWindowStart struct {
	// The hour at which backup will be started.
	Hours int `pulumi:"hours"`
	// The minute at which backup will be started.
	Minutes int `pulumi:"minutes"`
}

// GetMdbSqlserverClusterBackupWindowStartInput is an input type that accepts GetMdbSqlserverClusterBackupWindowStartArgs and GetMdbSqlserverClusterBackupWindowStartOutput values.
// You can construct a concrete instance of `GetMdbSqlserverClusterBackupWindowStartInput` via:
//
//          GetMdbSqlserverClusterBackupWindowStartArgs{...}
type GetMdbSqlserverClusterBackupWindowStartInput interface {
	pulumi.Input

	ToGetMdbSqlserverClusterBackupWindowStartOutput() GetMdbSqlserverClusterBackupWindowStartOutput
	ToGetMdbSqlserverClusterBackupWindowStartOutputWithContext(context.Context) GetMdbSqlserverClusterBackupWindowStartOutput
}

type GetMdbSqlserverClusterBackupWindowStartArgs struct {
	// The hour at which backup will be started.
	Hours pulumi.IntInput `pulumi:"hours"`
	// The minute at which backup will be started.
	Minutes pulumi.IntInput `pulumi:"minutes"`
}

func (GetMdbSqlserverClusterBackupWindowStartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbSqlserverClusterBackupWindowStart)(nil)).Elem()
}

func (i GetMdbSqlserverClusterBackupWindowStartArgs) ToGetMdbSqlserverClusterBackupWindowStartOutput() GetMdbSqlserverClusterBackupWindowStartOutput {
	return i.ToGetMdbSqlserverClusterBackupWindowStartOutputWithContext(context.Background())
}

func (i GetMdbSqlserverClusterBackupWindowStartArgs) ToGetMdbSqlserverClusterBackupWindowStartOutputWithContext(ctx context.Context) GetMdbSqlserverClusterBackupWindowStartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbSqlserverClusterBackupWindowStartOutput)
}

// GetMdbSqlserverClusterBackupWindowStartArrayInput is an input type that accepts GetMdbSqlserverClusterBackupWindowStartArray and GetMdbSqlserverClusterBackupWindowStartArrayOutput values.
// You can construct a concrete instance of `GetMdbSqlserverClusterBackupWindowStartArrayInput` via:
//
//          GetMdbSqlserverClusterBackupWindowStartArray{ GetMdbSqlserverClusterBackupWindowStartArgs{...} }
type GetMdbSqlserverClusterBackupWindowStartArrayInput interface {
	pulumi.Input

	ToGetMdbSqlserverClusterBackupWindowStartArrayOutput() GetMdbSqlserverClusterBackupWindowStartArrayOutput
	ToGetMdbSqlserverClusterBackupWindowStartArrayOutputWithContext(context.Context) GetMdbSqlserverClusterBackupWindowStartArrayOutput
}

type GetMdbSqlserverClusterBackupWindowStartArray []GetMdbSqlserverClusterBackupWindowStartInput

func (GetMdbSqlserverClusterBackupWindowStartArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbSqlserverClusterBackupWindowStart)(nil)).Elem()
}

func (i GetMdbSqlserverClusterBackupWindowStartArray) ToGetMdbSqlserverClusterBackupWindowStartArrayOutput() GetMdbSqlserverClusterBackupWindowStartArrayOutput {
	return i.ToGetMdbSqlserverClusterBackupWindowStartArrayOutputWithContext(context.Background())
}

func (i GetMdbSqlserverClusterBackupWindowStartArray) ToGetMdbSqlserverClusterBackupWindowStartArrayOutputWithContext(ctx context.Context) GetMdbSqlserverClusterBackupWindowStartArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbSqlserverClusterBackupWindowStartArrayOutput)
}

type GetMdbSqlserverClusterBackupWindowStartOutput struct{ *pulumi.OutputState }

func (GetMdbSqlserverClusterBackupWindowStartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbSqlserverClusterBackupWindowStart)(nil)).Elem()
}

func (o GetMdbSqlserverClusterBackupWindowStartOutput) ToGetMdbSqlserverClusterBackupWindowStartOutput() GetMdbSqlserverClusterBackupWindowStartOutput {
	return o
}

func (o GetMdbSqlserverClusterBackupWindowStartOutput) ToGetMdbSqlserverClusterBackupWindowStartOutputWithContext(ctx context.Context) GetMdbSqlserverClusterBackupWindowStartOutput {
	return o
}

// The hour at which backup will be started.
func (o GetMdbSqlserverClusterBackupWindowStartOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterBackupWindowStart) int { return v.Hours }).(pulumi.IntOutput)
}

// The minute at which backup will be started.
func (o GetMdbSqlserverClusterBackupWindowStartOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterBackupWindowStart) int { return v.Minutes }).(pulumi.IntOutput)
}

type GetMdbSqlserverClusterBackupWindowStartArrayOutput struct{ *pulumi.OutputState }

func (GetMdbSqlserverClusterBackupWindowStartArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbSqlserverClusterBackupWindowStart)(nil)).Elem()
}

func (o GetMdbSqlserverClusterBackupWindowStartArrayOutput) ToGetMdbSqlserverClusterBackupWindowStartArrayOutput() GetMdbSqlserverClusterBackupWindowStartArrayOutput {
	return o
}

func (o GetMdbSqlserverClusterBackupWindowStartArrayOutput) ToGetMdbSqlserverClusterBackupWindowStartArrayOutputWithContext(ctx context.Context) GetMdbSqlserverClusterBackupWindowStartArrayOutput {
	return o
}

func (o GetMdbSqlserverClusterBackupWindowStartArrayOutput) Index(i pulumi.IntInput) GetMdbSqlserverClusterBackupWindowStartOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbSqlserverClusterBackupWindowStart {
		return vs[0].([]GetMdbSqlserverClusterBackupWindowStart)[vs[1].(int)]
	}).(GetMdbSqlserverClusterBackupWindowStartOutput)
}

type GetMdbSqlserverClusterDatabase struct {
	// The name of the SQLServer cluster.
	Name string `pulumi:"name"`
}

// GetMdbSqlserverClusterDatabaseInput is an input type that accepts GetMdbSqlserverClusterDatabaseArgs and GetMdbSqlserverClusterDatabaseOutput values.
// You can construct a concrete instance of `GetMdbSqlserverClusterDatabaseInput` via:
//
//          GetMdbSqlserverClusterDatabaseArgs{...}
type GetMdbSqlserverClusterDatabaseInput interface {
	pulumi.Input

	ToGetMdbSqlserverClusterDatabaseOutput() GetMdbSqlserverClusterDatabaseOutput
	ToGetMdbSqlserverClusterDatabaseOutputWithContext(context.Context) GetMdbSqlserverClusterDatabaseOutput
}

type GetMdbSqlserverClusterDatabaseArgs struct {
	// The name of the SQLServer cluster.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetMdbSqlserverClusterDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbSqlserverClusterDatabase)(nil)).Elem()
}

func (i GetMdbSqlserverClusterDatabaseArgs) ToGetMdbSqlserverClusterDatabaseOutput() GetMdbSqlserverClusterDatabaseOutput {
	return i.ToGetMdbSqlserverClusterDatabaseOutputWithContext(context.Background())
}

func (i GetMdbSqlserverClusterDatabaseArgs) ToGetMdbSqlserverClusterDatabaseOutputWithContext(ctx context.Context) GetMdbSqlserverClusterDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbSqlserverClusterDatabaseOutput)
}

// GetMdbSqlserverClusterDatabaseArrayInput is an input type that accepts GetMdbSqlserverClusterDatabaseArray and GetMdbSqlserverClusterDatabaseArrayOutput values.
// You can construct a concrete instance of `GetMdbSqlserverClusterDatabaseArrayInput` via:
//
//          GetMdbSqlserverClusterDatabaseArray{ GetMdbSqlserverClusterDatabaseArgs{...} }
type GetMdbSqlserverClusterDatabaseArrayInput interface {
	pulumi.Input

	ToGetMdbSqlserverClusterDatabaseArrayOutput() GetMdbSqlserverClusterDatabaseArrayOutput
	ToGetMdbSqlserverClusterDatabaseArrayOutputWithContext(context.Context) GetMdbSqlserverClusterDatabaseArrayOutput
}

type GetMdbSqlserverClusterDatabaseArray []GetMdbSqlserverClusterDatabaseInput

func (GetMdbSqlserverClusterDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbSqlserverClusterDatabase)(nil)).Elem()
}

func (i GetMdbSqlserverClusterDatabaseArray) ToGetMdbSqlserverClusterDatabaseArrayOutput() GetMdbSqlserverClusterDatabaseArrayOutput {
	return i.ToGetMdbSqlserverClusterDatabaseArrayOutputWithContext(context.Background())
}

func (i GetMdbSqlserverClusterDatabaseArray) ToGetMdbSqlserverClusterDatabaseArrayOutputWithContext(ctx context.Context) GetMdbSqlserverClusterDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbSqlserverClusterDatabaseArrayOutput)
}

type GetMdbSqlserverClusterDatabaseOutput struct{ *pulumi.OutputState }

func (GetMdbSqlserverClusterDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbSqlserverClusterDatabase)(nil)).Elem()
}

func (o GetMdbSqlserverClusterDatabaseOutput) ToGetMdbSqlserverClusterDatabaseOutput() GetMdbSqlserverClusterDatabaseOutput {
	return o
}

func (o GetMdbSqlserverClusterDatabaseOutput) ToGetMdbSqlserverClusterDatabaseOutputWithContext(ctx context.Context) GetMdbSqlserverClusterDatabaseOutput {
	return o
}

// The name of the SQLServer cluster.
func (o GetMdbSqlserverClusterDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterDatabase) string { return v.Name }).(pulumi.StringOutput)
}

type GetMdbSqlserverClusterDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetMdbSqlserverClusterDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbSqlserverClusterDatabase)(nil)).Elem()
}

func (o GetMdbSqlserverClusterDatabaseArrayOutput) ToGetMdbSqlserverClusterDatabaseArrayOutput() GetMdbSqlserverClusterDatabaseArrayOutput {
	return o
}

func (o GetMdbSqlserverClusterDatabaseArrayOutput) ToGetMdbSqlserverClusterDatabaseArrayOutputWithContext(ctx context.Context) GetMdbSqlserverClusterDatabaseArrayOutput {
	return o
}

func (o GetMdbSqlserverClusterDatabaseArrayOutput) Index(i pulumi.IntInput) GetMdbSqlserverClusterDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbSqlserverClusterDatabase {
		return vs[0].([]GetMdbSqlserverClusterDatabase)[vs[1].(int)]
	}).(GetMdbSqlserverClusterDatabaseOutput)
}

type GetMdbSqlserverClusterHost struct {
	// Sets whether the host should get a public IP address on creation. Changing this parameter for an existing host is not supported at the moment
	AssignPublicIp bool `pulumi:"assignPublicIp"`
	// The fully qualified domain name of the host.
	Fqdn string `pulumi:"fqdn"`
	// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
	SubnetId string `pulumi:"subnetId"`
	// The availability zone where the SQLServer host will be created.
	Zone string `pulumi:"zone"`
}

// GetMdbSqlserverClusterHostInput is an input type that accepts GetMdbSqlserverClusterHostArgs and GetMdbSqlserverClusterHostOutput values.
// You can construct a concrete instance of `GetMdbSqlserverClusterHostInput` via:
//
//          GetMdbSqlserverClusterHostArgs{...}
type GetMdbSqlserverClusterHostInput interface {
	pulumi.Input

	ToGetMdbSqlserverClusterHostOutput() GetMdbSqlserverClusterHostOutput
	ToGetMdbSqlserverClusterHostOutputWithContext(context.Context) GetMdbSqlserverClusterHostOutput
}

type GetMdbSqlserverClusterHostArgs struct {
	// Sets whether the host should get a public IP address on creation. Changing this parameter for an existing host is not supported at the moment
	AssignPublicIp pulumi.BoolInput `pulumi:"assignPublicIp"`
	// The fully qualified domain name of the host.
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The availability zone where the SQLServer host will be created.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetMdbSqlserverClusterHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbSqlserverClusterHost)(nil)).Elem()
}

func (i GetMdbSqlserverClusterHostArgs) ToGetMdbSqlserverClusterHostOutput() GetMdbSqlserverClusterHostOutput {
	return i.ToGetMdbSqlserverClusterHostOutputWithContext(context.Background())
}

func (i GetMdbSqlserverClusterHostArgs) ToGetMdbSqlserverClusterHostOutputWithContext(ctx context.Context) GetMdbSqlserverClusterHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbSqlserverClusterHostOutput)
}

// GetMdbSqlserverClusterHostArrayInput is an input type that accepts GetMdbSqlserverClusterHostArray and GetMdbSqlserverClusterHostArrayOutput values.
// You can construct a concrete instance of `GetMdbSqlserverClusterHostArrayInput` via:
//
//          GetMdbSqlserverClusterHostArray{ GetMdbSqlserverClusterHostArgs{...} }
type GetMdbSqlserverClusterHostArrayInput interface {
	pulumi.Input

	ToGetMdbSqlserverClusterHostArrayOutput() GetMdbSqlserverClusterHostArrayOutput
	ToGetMdbSqlserverClusterHostArrayOutputWithContext(context.Context) GetMdbSqlserverClusterHostArrayOutput
}

type GetMdbSqlserverClusterHostArray []GetMdbSqlserverClusterHostInput

func (GetMdbSqlserverClusterHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbSqlserverClusterHost)(nil)).Elem()
}

func (i GetMdbSqlserverClusterHostArray) ToGetMdbSqlserverClusterHostArrayOutput() GetMdbSqlserverClusterHostArrayOutput {
	return i.ToGetMdbSqlserverClusterHostArrayOutputWithContext(context.Background())
}

func (i GetMdbSqlserverClusterHostArray) ToGetMdbSqlserverClusterHostArrayOutputWithContext(ctx context.Context) GetMdbSqlserverClusterHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbSqlserverClusterHostArrayOutput)
}

type GetMdbSqlserverClusterHostOutput struct{ *pulumi.OutputState }

func (GetMdbSqlserverClusterHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbSqlserverClusterHost)(nil)).Elem()
}

func (o GetMdbSqlserverClusterHostOutput) ToGetMdbSqlserverClusterHostOutput() GetMdbSqlserverClusterHostOutput {
	return o
}

func (o GetMdbSqlserverClusterHostOutput) ToGetMdbSqlserverClusterHostOutputWithContext(ctx context.Context) GetMdbSqlserverClusterHostOutput {
	return o
}

// Sets whether the host should get a public IP address on creation. Changing this parameter for an existing host is not supported at the moment
func (o GetMdbSqlserverClusterHostOutput) AssignPublicIp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterHost) bool { return v.AssignPublicIp }).(pulumi.BoolOutput)
}

// The fully qualified domain name of the host.
func (o GetMdbSqlserverClusterHostOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterHost) string { return v.Fqdn }).(pulumi.StringOutput)
}

// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
func (o GetMdbSqlserverClusterHostOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterHost) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The availability zone where the SQLServer host will be created.
func (o GetMdbSqlserverClusterHostOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterHost) string { return v.Zone }).(pulumi.StringOutput)
}

type GetMdbSqlserverClusterHostArrayOutput struct{ *pulumi.OutputState }

func (GetMdbSqlserverClusterHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbSqlserverClusterHost)(nil)).Elem()
}

func (o GetMdbSqlserverClusterHostArrayOutput) ToGetMdbSqlserverClusterHostArrayOutput() GetMdbSqlserverClusterHostArrayOutput {
	return o
}

func (o GetMdbSqlserverClusterHostArrayOutput) ToGetMdbSqlserverClusterHostArrayOutputWithContext(ctx context.Context) GetMdbSqlserverClusterHostArrayOutput {
	return o
}

func (o GetMdbSqlserverClusterHostArrayOutput) Index(i pulumi.IntInput) GetMdbSqlserverClusterHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbSqlserverClusterHost {
		return vs[0].([]GetMdbSqlserverClusterHost)[vs[1].(int)]
	}).(GetMdbSqlserverClusterHostOutput)
}

type GetMdbSqlserverClusterResource struct {
	// Volume of the storage available to a SQLServer host, in gigabytes.
	DiskSize int `pulumi:"diskSize"`
	// Type of the storage for SQLServer hosts.
	DiskTypeId       string `pulumi:"diskTypeId"`
	ResourcePresetId string `pulumi:"resourcePresetId"`
}

// GetMdbSqlserverClusterResourceInput is an input type that accepts GetMdbSqlserverClusterResourceArgs and GetMdbSqlserverClusterResourceOutput values.
// You can construct a concrete instance of `GetMdbSqlserverClusterResourceInput` via:
//
//          GetMdbSqlserverClusterResourceArgs{...}
type GetMdbSqlserverClusterResourceInput interface {
	pulumi.Input

	ToGetMdbSqlserverClusterResourceOutput() GetMdbSqlserverClusterResourceOutput
	ToGetMdbSqlserverClusterResourceOutputWithContext(context.Context) GetMdbSqlserverClusterResourceOutput
}

type GetMdbSqlserverClusterResourceArgs struct {
	// Volume of the storage available to a SQLServer host, in gigabytes.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// Type of the storage for SQLServer hosts.
	DiskTypeId       pulumi.StringInput `pulumi:"diskTypeId"`
	ResourcePresetId pulumi.StringInput `pulumi:"resourcePresetId"`
}

func (GetMdbSqlserverClusterResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbSqlserverClusterResource)(nil)).Elem()
}

func (i GetMdbSqlserverClusterResourceArgs) ToGetMdbSqlserverClusterResourceOutput() GetMdbSqlserverClusterResourceOutput {
	return i.ToGetMdbSqlserverClusterResourceOutputWithContext(context.Background())
}

func (i GetMdbSqlserverClusterResourceArgs) ToGetMdbSqlserverClusterResourceOutputWithContext(ctx context.Context) GetMdbSqlserverClusterResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbSqlserverClusterResourceOutput)
}

// GetMdbSqlserverClusterResourceArrayInput is an input type that accepts GetMdbSqlserverClusterResourceArray and GetMdbSqlserverClusterResourceArrayOutput values.
// You can construct a concrete instance of `GetMdbSqlserverClusterResourceArrayInput` via:
//
//          GetMdbSqlserverClusterResourceArray{ GetMdbSqlserverClusterResourceArgs{...} }
type GetMdbSqlserverClusterResourceArrayInput interface {
	pulumi.Input

	ToGetMdbSqlserverClusterResourceArrayOutput() GetMdbSqlserverClusterResourceArrayOutput
	ToGetMdbSqlserverClusterResourceArrayOutputWithContext(context.Context) GetMdbSqlserverClusterResourceArrayOutput
}

type GetMdbSqlserverClusterResourceArray []GetMdbSqlserverClusterResourceInput

func (GetMdbSqlserverClusterResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbSqlserverClusterResource)(nil)).Elem()
}

func (i GetMdbSqlserverClusterResourceArray) ToGetMdbSqlserverClusterResourceArrayOutput() GetMdbSqlserverClusterResourceArrayOutput {
	return i.ToGetMdbSqlserverClusterResourceArrayOutputWithContext(context.Background())
}

func (i GetMdbSqlserverClusterResourceArray) ToGetMdbSqlserverClusterResourceArrayOutputWithContext(ctx context.Context) GetMdbSqlserverClusterResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbSqlserverClusterResourceArrayOutput)
}

type GetMdbSqlserverClusterResourceOutput struct{ *pulumi.OutputState }

func (GetMdbSqlserverClusterResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbSqlserverClusterResource)(nil)).Elem()
}

func (o GetMdbSqlserverClusterResourceOutput) ToGetMdbSqlserverClusterResourceOutput() GetMdbSqlserverClusterResourceOutput {
	return o
}

func (o GetMdbSqlserverClusterResourceOutput) ToGetMdbSqlserverClusterResourceOutputWithContext(ctx context.Context) GetMdbSqlserverClusterResourceOutput {
	return o
}

// Volume of the storage available to a SQLServer host, in gigabytes.
func (o GetMdbSqlserverClusterResourceOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterResource) int { return v.DiskSize }).(pulumi.IntOutput)
}

// Type of the storage for SQLServer hosts.
func (o GetMdbSqlserverClusterResourceOutput) DiskTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterResource) string { return v.DiskTypeId }).(pulumi.StringOutput)
}

func (o GetMdbSqlserverClusterResourceOutput) ResourcePresetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterResource) string { return v.ResourcePresetId }).(pulumi.StringOutput)
}

type GetMdbSqlserverClusterResourceArrayOutput struct{ *pulumi.OutputState }

func (GetMdbSqlserverClusterResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbSqlserverClusterResource)(nil)).Elem()
}

func (o GetMdbSqlserverClusterResourceArrayOutput) ToGetMdbSqlserverClusterResourceArrayOutput() GetMdbSqlserverClusterResourceArrayOutput {
	return o
}

func (o GetMdbSqlserverClusterResourceArrayOutput) ToGetMdbSqlserverClusterResourceArrayOutputWithContext(ctx context.Context) GetMdbSqlserverClusterResourceArrayOutput {
	return o
}

func (o GetMdbSqlserverClusterResourceArrayOutput) Index(i pulumi.IntInput) GetMdbSqlserverClusterResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbSqlserverClusterResource {
		return vs[0].([]GetMdbSqlserverClusterResource)[vs[1].(int)]
	}).(GetMdbSqlserverClusterResourceOutput)
}

type GetMdbSqlserverClusterUser struct {
	// The name of the SQLServer cluster.
	Name string `pulumi:"name"`
	// The password of the user.
	Password string `pulumi:"password"`
	// Set of permissions granted to the user. The structure is documented below.
	Permissions []GetMdbSqlserverClusterUserPermission `pulumi:"permissions"`
}

// GetMdbSqlserverClusterUserInput is an input type that accepts GetMdbSqlserverClusterUserArgs and GetMdbSqlserverClusterUserOutput values.
// You can construct a concrete instance of `GetMdbSqlserverClusterUserInput` via:
//
//          GetMdbSqlserverClusterUserArgs{...}
type GetMdbSqlserverClusterUserInput interface {
	pulumi.Input

	ToGetMdbSqlserverClusterUserOutput() GetMdbSqlserverClusterUserOutput
	ToGetMdbSqlserverClusterUserOutputWithContext(context.Context) GetMdbSqlserverClusterUserOutput
}

type GetMdbSqlserverClusterUserArgs struct {
	// The name of the SQLServer cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// The password of the user.
	Password pulumi.StringInput `pulumi:"password"`
	// Set of permissions granted to the user. The structure is documented below.
	Permissions GetMdbSqlserverClusterUserPermissionArrayInput `pulumi:"permissions"`
}

func (GetMdbSqlserverClusterUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbSqlserverClusterUser)(nil)).Elem()
}

func (i GetMdbSqlserverClusterUserArgs) ToGetMdbSqlserverClusterUserOutput() GetMdbSqlserverClusterUserOutput {
	return i.ToGetMdbSqlserverClusterUserOutputWithContext(context.Background())
}

func (i GetMdbSqlserverClusterUserArgs) ToGetMdbSqlserverClusterUserOutputWithContext(ctx context.Context) GetMdbSqlserverClusterUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbSqlserverClusterUserOutput)
}

// GetMdbSqlserverClusterUserArrayInput is an input type that accepts GetMdbSqlserverClusterUserArray and GetMdbSqlserverClusterUserArrayOutput values.
// You can construct a concrete instance of `GetMdbSqlserverClusterUserArrayInput` via:
//
//          GetMdbSqlserverClusterUserArray{ GetMdbSqlserverClusterUserArgs{...} }
type GetMdbSqlserverClusterUserArrayInput interface {
	pulumi.Input

	ToGetMdbSqlserverClusterUserArrayOutput() GetMdbSqlserverClusterUserArrayOutput
	ToGetMdbSqlserverClusterUserArrayOutputWithContext(context.Context) GetMdbSqlserverClusterUserArrayOutput
}

type GetMdbSqlserverClusterUserArray []GetMdbSqlserverClusterUserInput

func (GetMdbSqlserverClusterUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbSqlserverClusterUser)(nil)).Elem()
}

func (i GetMdbSqlserverClusterUserArray) ToGetMdbSqlserverClusterUserArrayOutput() GetMdbSqlserverClusterUserArrayOutput {
	return i.ToGetMdbSqlserverClusterUserArrayOutputWithContext(context.Background())
}

func (i GetMdbSqlserverClusterUserArray) ToGetMdbSqlserverClusterUserArrayOutputWithContext(ctx context.Context) GetMdbSqlserverClusterUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbSqlserverClusterUserArrayOutput)
}

type GetMdbSqlserverClusterUserOutput struct{ *pulumi.OutputState }

func (GetMdbSqlserverClusterUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbSqlserverClusterUser)(nil)).Elem()
}

func (o GetMdbSqlserverClusterUserOutput) ToGetMdbSqlserverClusterUserOutput() GetMdbSqlserverClusterUserOutput {
	return o
}

func (o GetMdbSqlserverClusterUserOutput) ToGetMdbSqlserverClusterUserOutputWithContext(ctx context.Context) GetMdbSqlserverClusterUserOutput {
	return o
}

// The name of the SQLServer cluster.
func (o GetMdbSqlserverClusterUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterUser) string { return v.Name }).(pulumi.StringOutput)
}

// The password of the user.
func (o GetMdbSqlserverClusterUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterUser) string { return v.Password }).(pulumi.StringOutput)
}

// Set of permissions granted to the user. The structure is documented below.
func (o GetMdbSqlserverClusterUserOutput) Permissions() GetMdbSqlserverClusterUserPermissionArrayOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterUser) []GetMdbSqlserverClusterUserPermission { return v.Permissions }).(GetMdbSqlserverClusterUserPermissionArrayOutput)
}

type GetMdbSqlserverClusterUserArrayOutput struct{ *pulumi.OutputState }

func (GetMdbSqlserverClusterUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbSqlserverClusterUser)(nil)).Elem()
}

func (o GetMdbSqlserverClusterUserArrayOutput) ToGetMdbSqlserverClusterUserArrayOutput() GetMdbSqlserverClusterUserArrayOutput {
	return o
}

func (o GetMdbSqlserverClusterUserArrayOutput) ToGetMdbSqlserverClusterUserArrayOutputWithContext(ctx context.Context) GetMdbSqlserverClusterUserArrayOutput {
	return o
}

func (o GetMdbSqlserverClusterUserArrayOutput) Index(i pulumi.IntInput) GetMdbSqlserverClusterUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbSqlserverClusterUser {
		return vs[0].([]GetMdbSqlserverClusterUser)[vs[1].(int)]
	}).(GetMdbSqlserverClusterUserOutput)
}

type GetMdbSqlserverClusterUserPermission struct {
	// The name of the database that the permission grants access to.
	DatabaseName string `pulumi:"databaseName"`
	// List user's roles in the database.
	// Allowed roles: `OWNER`, `SECURITYADMIN`, `ACCESSADMIN`, `BACKUPOPERATOR`, `DDLADMIN`, `DATAWRITER`, `DATAREADER`, `DENYDATAWRITER`, `DENYDATAREADER`.
	Roles []string `pulumi:"roles"`
}

// GetMdbSqlserverClusterUserPermissionInput is an input type that accepts GetMdbSqlserverClusterUserPermissionArgs and GetMdbSqlserverClusterUserPermissionOutput values.
// You can construct a concrete instance of `GetMdbSqlserverClusterUserPermissionInput` via:
//
//          GetMdbSqlserverClusterUserPermissionArgs{...}
type GetMdbSqlserverClusterUserPermissionInput interface {
	pulumi.Input

	ToGetMdbSqlserverClusterUserPermissionOutput() GetMdbSqlserverClusterUserPermissionOutput
	ToGetMdbSqlserverClusterUserPermissionOutputWithContext(context.Context) GetMdbSqlserverClusterUserPermissionOutput
}

type GetMdbSqlserverClusterUserPermissionArgs struct {
	// The name of the database that the permission grants access to.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// List user's roles in the database.
	// Allowed roles: `OWNER`, `SECURITYADMIN`, `ACCESSADMIN`, `BACKUPOPERATOR`, `DDLADMIN`, `DATAWRITER`, `DATAREADER`, `DENYDATAWRITER`, `DENYDATAREADER`.
	Roles pulumi.StringArrayInput `pulumi:"roles"`
}

func (GetMdbSqlserverClusterUserPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbSqlserverClusterUserPermission)(nil)).Elem()
}

func (i GetMdbSqlserverClusterUserPermissionArgs) ToGetMdbSqlserverClusterUserPermissionOutput() GetMdbSqlserverClusterUserPermissionOutput {
	return i.ToGetMdbSqlserverClusterUserPermissionOutputWithContext(context.Background())
}

func (i GetMdbSqlserverClusterUserPermissionArgs) ToGetMdbSqlserverClusterUserPermissionOutputWithContext(ctx context.Context) GetMdbSqlserverClusterUserPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbSqlserverClusterUserPermissionOutput)
}

// GetMdbSqlserverClusterUserPermissionArrayInput is an input type that accepts GetMdbSqlserverClusterUserPermissionArray and GetMdbSqlserverClusterUserPermissionArrayOutput values.
// You can construct a concrete instance of `GetMdbSqlserverClusterUserPermissionArrayInput` via:
//
//          GetMdbSqlserverClusterUserPermissionArray{ GetMdbSqlserverClusterUserPermissionArgs{...} }
type GetMdbSqlserverClusterUserPermissionArrayInput interface {
	pulumi.Input

	ToGetMdbSqlserverClusterUserPermissionArrayOutput() GetMdbSqlserverClusterUserPermissionArrayOutput
	ToGetMdbSqlserverClusterUserPermissionArrayOutputWithContext(context.Context) GetMdbSqlserverClusterUserPermissionArrayOutput
}

type GetMdbSqlserverClusterUserPermissionArray []GetMdbSqlserverClusterUserPermissionInput

func (GetMdbSqlserverClusterUserPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbSqlserverClusterUserPermission)(nil)).Elem()
}

func (i GetMdbSqlserverClusterUserPermissionArray) ToGetMdbSqlserverClusterUserPermissionArrayOutput() GetMdbSqlserverClusterUserPermissionArrayOutput {
	return i.ToGetMdbSqlserverClusterUserPermissionArrayOutputWithContext(context.Background())
}

func (i GetMdbSqlserverClusterUserPermissionArray) ToGetMdbSqlserverClusterUserPermissionArrayOutputWithContext(ctx context.Context) GetMdbSqlserverClusterUserPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMdbSqlserverClusterUserPermissionArrayOutput)
}

type GetMdbSqlserverClusterUserPermissionOutput struct{ *pulumi.OutputState }

func (GetMdbSqlserverClusterUserPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMdbSqlserverClusterUserPermission)(nil)).Elem()
}

func (o GetMdbSqlserverClusterUserPermissionOutput) ToGetMdbSqlserverClusterUserPermissionOutput() GetMdbSqlserverClusterUserPermissionOutput {
	return o
}

func (o GetMdbSqlserverClusterUserPermissionOutput) ToGetMdbSqlserverClusterUserPermissionOutputWithContext(ctx context.Context) GetMdbSqlserverClusterUserPermissionOutput {
	return o
}

// The name of the database that the permission grants access to.
func (o GetMdbSqlserverClusterUserPermissionOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterUserPermission) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// List user's roles in the database.
// Allowed roles: `OWNER`, `SECURITYADMIN`, `ACCESSADMIN`, `BACKUPOPERATOR`, `DDLADMIN`, `DATAWRITER`, `DATAREADER`, `DENYDATAWRITER`, `DENYDATAREADER`.
func (o GetMdbSqlserverClusterUserPermissionOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMdbSqlserverClusterUserPermission) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

type GetMdbSqlserverClusterUserPermissionArrayOutput struct{ *pulumi.OutputState }

func (GetMdbSqlserverClusterUserPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMdbSqlserverClusterUserPermission)(nil)).Elem()
}

func (o GetMdbSqlserverClusterUserPermissionArrayOutput) ToGetMdbSqlserverClusterUserPermissionArrayOutput() GetMdbSqlserverClusterUserPermissionArrayOutput {
	return o
}

func (o GetMdbSqlserverClusterUserPermissionArrayOutput) ToGetMdbSqlserverClusterUserPermissionArrayOutputWithContext(ctx context.Context) GetMdbSqlserverClusterUserPermissionArrayOutput {
	return o
}

func (o GetMdbSqlserverClusterUserPermissionArrayOutput) Index(i pulumi.IntInput) GetMdbSqlserverClusterUserPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMdbSqlserverClusterUserPermission {
		return vs[0].([]GetMdbSqlserverClusterUserPermission)[vs[1].(int)]
	}).(GetMdbSqlserverClusterUserPermissionOutput)
}

type GetVpcAddressExternalIpv4Address struct {
	// IP address.
	Address string `pulumi:"address"`
	// DDOS protection provider.
	DdosProtectionProvider string `pulumi:"ddosProtectionProvider"`
	// Outgoing smtp capability.
	OutgoingSmtpCapability string `pulumi:"outgoingSmtpCapability"`
	// Zone for allocating address.
	ZoneId string `pulumi:"zoneId"`
}

// GetVpcAddressExternalIpv4AddressInput is an input type that accepts GetVpcAddressExternalIpv4AddressArgs and GetVpcAddressExternalIpv4AddressOutput values.
// You can construct a concrete instance of `GetVpcAddressExternalIpv4AddressInput` via:
//
//          GetVpcAddressExternalIpv4AddressArgs{...}
type GetVpcAddressExternalIpv4AddressInput interface {
	pulumi.Input

	ToGetVpcAddressExternalIpv4AddressOutput() GetVpcAddressExternalIpv4AddressOutput
	ToGetVpcAddressExternalIpv4AddressOutputWithContext(context.Context) GetVpcAddressExternalIpv4AddressOutput
}

type GetVpcAddressExternalIpv4AddressArgs struct {
	// IP address.
	Address pulumi.StringInput `pulumi:"address"`
	// DDOS protection provider.
	DdosProtectionProvider pulumi.StringInput `pulumi:"ddosProtectionProvider"`
	// Outgoing smtp capability.
	OutgoingSmtpCapability pulumi.StringInput `pulumi:"outgoingSmtpCapability"`
	// Zone for allocating address.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetVpcAddressExternalIpv4AddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcAddressExternalIpv4Address)(nil)).Elem()
}

func (i GetVpcAddressExternalIpv4AddressArgs) ToGetVpcAddressExternalIpv4AddressOutput() GetVpcAddressExternalIpv4AddressOutput {
	return i.ToGetVpcAddressExternalIpv4AddressOutputWithContext(context.Background())
}

func (i GetVpcAddressExternalIpv4AddressArgs) ToGetVpcAddressExternalIpv4AddressOutputWithContext(ctx context.Context) GetVpcAddressExternalIpv4AddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcAddressExternalIpv4AddressOutput)
}

type GetVpcAddressExternalIpv4AddressOutput struct{ *pulumi.OutputState }

func (GetVpcAddressExternalIpv4AddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcAddressExternalIpv4Address)(nil)).Elem()
}

func (o GetVpcAddressExternalIpv4AddressOutput) ToGetVpcAddressExternalIpv4AddressOutput() GetVpcAddressExternalIpv4AddressOutput {
	return o
}

func (o GetVpcAddressExternalIpv4AddressOutput) ToGetVpcAddressExternalIpv4AddressOutputWithContext(ctx context.Context) GetVpcAddressExternalIpv4AddressOutput {
	return o
}

// IP address.
func (o GetVpcAddressExternalIpv4AddressOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcAddressExternalIpv4Address) string { return v.Address }).(pulumi.StringOutput)
}

// DDOS protection provider.
func (o GetVpcAddressExternalIpv4AddressOutput) DdosProtectionProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcAddressExternalIpv4Address) string { return v.DdosProtectionProvider }).(pulumi.StringOutput)
}

// Outgoing smtp capability.
func (o GetVpcAddressExternalIpv4AddressOutput) OutgoingSmtpCapability() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcAddressExternalIpv4Address) string { return v.OutgoingSmtpCapability }).(pulumi.StringOutput)
}

// Zone for allocating address.
func (o GetVpcAddressExternalIpv4AddressOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcAddressExternalIpv4Address) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetVpcRouteTableStaticRoute struct {
	// Route prefix in CIDR notation.
	DestinationPrefix string `pulumi:"destinationPrefix"`
	// Address of the next hop.
	NextHopAddress string `pulumi:"nextHopAddress"`
}

// GetVpcRouteTableStaticRouteInput is an input type that accepts GetVpcRouteTableStaticRouteArgs and GetVpcRouteTableStaticRouteOutput values.
// You can construct a concrete instance of `GetVpcRouteTableStaticRouteInput` via:
//
//          GetVpcRouteTableStaticRouteArgs{...}
type GetVpcRouteTableStaticRouteInput interface {
	pulumi.Input

	ToGetVpcRouteTableStaticRouteOutput() GetVpcRouteTableStaticRouteOutput
	ToGetVpcRouteTableStaticRouteOutputWithContext(context.Context) GetVpcRouteTableStaticRouteOutput
}

type GetVpcRouteTableStaticRouteArgs struct {
	// Route prefix in CIDR notation.
	DestinationPrefix pulumi.StringInput `pulumi:"destinationPrefix"`
	// Address of the next hop.
	NextHopAddress pulumi.StringInput `pulumi:"nextHopAddress"`
}

func (GetVpcRouteTableStaticRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcRouteTableStaticRoute)(nil)).Elem()
}

func (i GetVpcRouteTableStaticRouteArgs) ToGetVpcRouteTableStaticRouteOutput() GetVpcRouteTableStaticRouteOutput {
	return i.ToGetVpcRouteTableStaticRouteOutputWithContext(context.Background())
}

func (i GetVpcRouteTableStaticRouteArgs) ToGetVpcRouteTableStaticRouteOutputWithContext(ctx context.Context) GetVpcRouteTableStaticRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcRouteTableStaticRouteOutput)
}

// GetVpcRouteTableStaticRouteArrayInput is an input type that accepts GetVpcRouteTableStaticRouteArray and GetVpcRouteTableStaticRouteArrayOutput values.
// You can construct a concrete instance of `GetVpcRouteTableStaticRouteArrayInput` via:
//
//          GetVpcRouteTableStaticRouteArray{ GetVpcRouteTableStaticRouteArgs{...} }
type GetVpcRouteTableStaticRouteArrayInput interface {
	pulumi.Input

	ToGetVpcRouteTableStaticRouteArrayOutput() GetVpcRouteTableStaticRouteArrayOutput
	ToGetVpcRouteTableStaticRouteArrayOutputWithContext(context.Context) GetVpcRouteTableStaticRouteArrayOutput
}

type GetVpcRouteTableStaticRouteArray []GetVpcRouteTableStaticRouteInput

func (GetVpcRouteTableStaticRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcRouteTableStaticRoute)(nil)).Elem()
}

func (i GetVpcRouteTableStaticRouteArray) ToGetVpcRouteTableStaticRouteArrayOutput() GetVpcRouteTableStaticRouteArrayOutput {
	return i.ToGetVpcRouteTableStaticRouteArrayOutputWithContext(context.Background())
}

func (i GetVpcRouteTableStaticRouteArray) ToGetVpcRouteTableStaticRouteArrayOutputWithContext(ctx context.Context) GetVpcRouteTableStaticRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcRouteTableStaticRouteArrayOutput)
}

type GetVpcRouteTableStaticRouteOutput struct{ *pulumi.OutputState }

func (GetVpcRouteTableStaticRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcRouteTableStaticRoute)(nil)).Elem()
}

func (o GetVpcRouteTableStaticRouteOutput) ToGetVpcRouteTableStaticRouteOutput() GetVpcRouteTableStaticRouteOutput {
	return o
}

func (o GetVpcRouteTableStaticRouteOutput) ToGetVpcRouteTableStaticRouteOutputWithContext(ctx context.Context) GetVpcRouteTableStaticRouteOutput {
	return o
}

// Route prefix in CIDR notation.
func (o GetVpcRouteTableStaticRouteOutput) DestinationPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcRouteTableStaticRoute) string { return v.DestinationPrefix }).(pulumi.StringOutput)
}

// Address of the next hop.
func (o GetVpcRouteTableStaticRouteOutput) NextHopAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcRouteTableStaticRoute) string { return v.NextHopAddress }).(pulumi.StringOutput)
}

type GetVpcRouteTableStaticRouteArrayOutput struct{ *pulumi.OutputState }

func (GetVpcRouteTableStaticRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcRouteTableStaticRoute)(nil)).Elem()
}

func (o GetVpcRouteTableStaticRouteArrayOutput) ToGetVpcRouteTableStaticRouteArrayOutput() GetVpcRouteTableStaticRouteArrayOutput {
	return o
}

func (o GetVpcRouteTableStaticRouteArrayOutput) ToGetVpcRouteTableStaticRouteArrayOutputWithContext(ctx context.Context) GetVpcRouteTableStaticRouteArrayOutput {
	return o
}

func (o GetVpcRouteTableStaticRouteArrayOutput) Index(i pulumi.IntInput) GetVpcRouteTableStaticRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcRouteTableStaticRoute {
		return vs[0].([]GetVpcRouteTableStaticRoute)[vs[1].(int)]
	}).(GetVpcRouteTableStaticRouteOutput)
}

type GetVpcSecurityGroupEgress struct {
	// Description of the rule.
	Description string `pulumi:"description"`
	// Minimum port number.
	FromPort int `pulumi:"fromPort"`
	// Id of the rule.
	Id string `pulumi:"id"`
	// Labels to assign to this rule.
	Labels map[string]string `pulumi:"labels"`
	// Port number (if applied to a single port).
	Port int `pulumi:"port"`
	// Special-purpose targets such as "selfSecurityGroup". [See docs](https://cloud.yandex.ru/docs/vpc/concepts/security-groups) for possible options.
	PredefinedTarget string `pulumi:"predefinedTarget"`
	// One of `ANY`, `TCP`, `UDP`, `ICMP`, `IPV6_ICMP`.
	Protocol string `pulumi:"protocol"`
	// Security Group ID.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// Maximum port number.
	ToPort int `pulumi:"toPort"`
	// The blocks of  IPv4 addresses for this rule.
	V4CidrBlocks []string `pulumi:"v4CidrBlocks"`
	// The blocks of  IPv6 addresses for this rule.
	V6CidrBlocks []string `pulumi:"v6CidrBlocks"`
}

// GetVpcSecurityGroupEgressInput is an input type that accepts GetVpcSecurityGroupEgressArgs and GetVpcSecurityGroupEgressOutput values.
// You can construct a concrete instance of `GetVpcSecurityGroupEgressInput` via:
//
//          GetVpcSecurityGroupEgressArgs{...}
type GetVpcSecurityGroupEgressInput interface {
	pulumi.Input

	ToGetVpcSecurityGroupEgressOutput() GetVpcSecurityGroupEgressOutput
	ToGetVpcSecurityGroupEgressOutputWithContext(context.Context) GetVpcSecurityGroupEgressOutput
}

type GetVpcSecurityGroupEgressArgs struct {
	// Description of the rule.
	Description pulumi.StringInput `pulumi:"description"`
	// Minimum port number.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// Id of the rule.
	Id pulumi.StringInput `pulumi:"id"`
	// Labels to assign to this rule.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Port number (if applied to a single port).
	Port pulumi.IntInput `pulumi:"port"`
	// Special-purpose targets such as "selfSecurityGroup". [See docs](https://cloud.yandex.ru/docs/vpc/concepts/security-groups) for possible options.
	PredefinedTarget pulumi.StringInput `pulumi:"predefinedTarget"`
	// One of `ANY`, `TCP`, `UDP`, `ICMP`, `IPV6_ICMP`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Security Group ID.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// Maximum port number.
	ToPort pulumi.IntInput `pulumi:"toPort"`
	// The blocks of  IPv4 addresses for this rule.
	V4CidrBlocks pulumi.StringArrayInput `pulumi:"v4CidrBlocks"`
	// The blocks of  IPv6 addresses for this rule.
	V6CidrBlocks pulumi.StringArrayInput `pulumi:"v6CidrBlocks"`
}

func (GetVpcSecurityGroupEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcSecurityGroupEgress)(nil)).Elem()
}

func (i GetVpcSecurityGroupEgressArgs) ToGetVpcSecurityGroupEgressOutput() GetVpcSecurityGroupEgressOutput {
	return i.ToGetVpcSecurityGroupEgressOutputWithContext(context.Background())
}

func (i GetVpcSecurityGroupEgressArgs) ToGetVpcSecurityGroupEgressOutputWithContext(ctx context.Context) GetVpcSecurityGroupEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcSecurityGroupEgressOutput)
}

// GetVpcSecurityGroupEgressArrayInput is an input type that accepts GetVpcSecurityGroupEgressArray and GetVpcSecurityGroupEgressArrayOutput values.
// You can construct a concrete instance of `GetVpcSecurityGroupEgressArrayInput` via:
//
//          GetVpcSecurityGroupEgressArray{ GetVpcSecurityGroupEgressArgs{...} }
type GetVpcSecurityGroupEgressArrayInput interface {
	pulumi.Input

	ToGetVpcSecurityGroupEgressArrayOutput() GetVpcSecurityGroupEgressArrayOutput
	ToGetVpcSecurityGroupEgressArrayOutputWithContext(context.Context) GetVpcSecurityGroupEgressArrayOutput
}

type GetVpcSecurityGroupEgressArray []GetVpcSecurityGroupEgressInput

func (GetVpcSecurityGroupEgressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcSecurityGroupEgress)(nil)).Elem()
}

func (i GetVpcSecurityGroupEgressArray) ToGetVpcSecurityGroupEgressArrayOutput() GetVpcSecurityGroupEgressArrayOutput {
	return i.ToGetVpcSecurityGroupEgressArrayOutputWithContext(context.Background())
}

func (i GetVpcSecurityGroupEgressArray) ToGetVpcSecurityGroupEgressArrayOutputWithContext(ctx context.Context) GetVpcSecurityGroupEgressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcSecurityGroupEgressArrayOutput)
}

type GetVpcSecurityGroupEgressOutput struct{ *pulumi.OutputState }

func (GetVpcSecurityGroupEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcSecurityGroupEgress)(nil)).Elem()
}

func (o GetVpcSecurityGroupEgressOutput) ToGetVpcSecurityGroupEgressOutput() GetVpcSecurityGroupEgressOutput {
	return o
}

func (o GetVpcSecurityGroupEgressOutput) ToGetVpcSecurityGroupEgressOutputWithContext(ctx context.Context) GetVpcSecurityGroupEgressOutput {
	return o
}

// Description of the rule.
func (o GetVpcSecurityGroupEgressOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSecurityGroupEgress) string { return v.Description }).(pulumi.StringOutput)
}

// Minimum port number.
func (o GetVpcSecurityGroupEgressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpcSecurityGroupEgress) int { return v.FromPort }).(pulumi.IntOutput)
}

// Id of the rule.
func (o GetVpcSecurityGroupEgressOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSecurityGroupEgress) string { return v.Id }).(pulumi.StringOutput)
}

// Labels to assign to this rule.
func (o GetVpcSecurityGroupEgressOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetVpcSecurityGroupEgress) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Port number (if applied to a single port).
func (o GetVpcSecurityGroupEgressOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpcSecurityGroupEgress) int { return v.Port }).(pulumi.IntOutput)
}

// Special-purpose targets such as "selfSecurityGroup". [See docs](https://cloud.yandex.ru/docs/vpc/concepts/security-groups) for possible options.
func (o GetVpcSecurityGroupEgressOutput) PredefinedTarget() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSecurityGroupEgress) string { return v.PredefinedTarget }).(pulumi.StringOutput)
}

// One of `ANY`, `TCP`, `UDP`, `ICMP`, `IPV6_ICMP`.
func (o GetVpcSecurityGroupEgressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSecurityGroupEgress) string { return v.Protocol }).(pulumi.StringOutput)
}

// Security Group ID.
func (o GetVpcSecurityGroupEgressOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSecurityGroupEgress) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// Maximum port number.
func (o GetVpcSecurityGroupEgressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpcSecurityGroupEgress) int { return v.ToPort }).(pulumi.IntOutput)
}

// The blocks of  IPv4 addresses for this rule.
func (o GetVpcSecurityGroupEgressOutput) V4CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcSecurityGroupEgress) []string { return v.V4CidrBlocks }).(pulumi.StringArrayOutput)
}

// The blocks of  IPv6 addresses for this rule.
func (o GetVpcSecurityGroupEgressOutput) V6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcSecurityGroupEgress) []string { return v.V6CidrBlocks }).(pulumi.StringArrayOutput)
}

type GetVpcSecurityGroupEgressArrayOutput struct{ *pulumi.OutputState }

func (GetVpcSecurityGroupEgressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcSecurityGroupEgress)(nil)).Elem()
}

func (o GetVpcSecurityGroupEgressArrayOutput) ToGetVpcSecurityGroupEgressArrayOutput() GetVpcSecurityGroupEgressArrayOutput {
	return o
}

func (o GetVpcSecurityGroupEgressArrayOutput) ToGetVpcSecurityGroupEgressArrayOutputWithContext(ctx context.Context) GetVpcSecurityGroupEgressArrayOutput {
	return o
}

func (o GetVpcSecurityGroupEgressArrayOutput) Index(i pulumi.IntInput) GetVpcSecurityGroupEgressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcSecurityGroupEgress {
		return vs[0].([]GetVpcSecurityGroupEgress)[vs[1].(int)]
	}).(GetVpcSecurityGroupEgressOutput)
}

type GetVpcSecurityGroupIngress struct {
	// Description of the rule.
	Description string `pulumi:"description"`
	// Minimum port number.
	FromPort int `pulumi:"fromPort"`
	// Id of the rule.
	Id string `pulumi:"id"`
	// Labels to assign to this rule.
	Labels map[string]string `pulumi:"labels"`
	// Port number (if applied to a single port).
	Port int `pulumi:"port"`
	// Special-purpose targets such as "selfSecurityGroup". [See docs](https://cloud.yandex.ru/docs/vpc/concepts/security-groups) for possible options.
	PredefinedTarget string `pulumi:"predefinedTarget"`
	// One of `ANY`, `TCP`, `UDP`, `ICMP`, `IPV6_ICMP`.
	Protocol string `pulumi:"protocol"`
	// Security Group ID.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// Maximum port number.
	ToPort int `pulumi:"toPort"`
	// The blocks of  IPv4 addresses for this rule.
	V4CidrBlocks []string `pulumi:"v4CidrBlocks"`
	// The blocks of  IPv6 addresses for this rule.
	V6CidrBlocks []string `pulumi:"v6CidrBlocks"`
}

// GetVpcSecurityGroupIngressInput is an input type that accepts GetVpcSecurityGroupIngressArgs and GetVpcSecurityGroupIngressOutput values.
// You can construct a concrete instance of `GetVpcSecurityGroupIngressInput` via:
//
//          GetVpcSecurityGroupIngressArgs{...}
type GetVpcSecurityGroupIngressInput interface {
	pulumi.Input

	ToGetVpcSecurityGroupIngressOutput() GetVpcSecurityGroupIngressOutput
	ToGetVpcSecurityGroupIngressOutputWithContext(context.Context) GetVpcSecurityGroupIngressOutput
}

type GetVpcSecurityGroupIngressArgs struct {
	// Description of the rule.
	Description pulumi.StringInput `pulumi:"description"`
	// Minimum port number.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// Id of the rule.
	Id pulumi.StringInput `pulumi:"id"`
	// Labels to assign to this rule.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Port number (if applied to a single port).
	Port pulumi.IntInput `pulumi:"port"`
	// Special-purpose targets such as "selfSecurityGroup". [See docs](https://cloud.yandex.ru/docs/vpc/concepts/security-groups) for possible options.
	PredefinedTarget pulumi.StringInput `pulumi:"predefinedTarget"`
	// One of `ANY`, `TCP`, `UDP`, `ICMP`, `IPV6_ICMP`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Security Group ID.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// Maximum port number.
	ToPort pulumi.IntInput `pulumi:"toPort"`
	// The blocks of  IPv4 addresses for this rule.
	V4CidrBlocks pulumi.StringArrayInput `pulumi:"v4CidrBlocks"`
	// The blocks of  IPv6 addresses for this rule.
	V6CidrBlocks pulumi.StringArrayInput `pulumi:"v6CidrBlocks"`
}

func (GetVpcSecurityGroupIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcSecurityGroupIngress)(nil)).Elem()
}

func (i GetVpcSecurityGroupIngressArgs) ToGetVpcSecurityGroupIngressOutput() GetVpcSecurityGroupIngressOutput {
	return i.ToGetVpcSecurityGroupIngressOutputWithContext(context.Background())
}

func (i GetVpcSecurityGroupIngressArgs) ToGetVpcSecurityGroupIngressOutputWithContext(ctx context.Context) GetVpcSecurityGroupIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcSecurityGroupIngressOutput)
}

// GetVpcSecurityGroupIngressArrayInput is an input type that accepts GetVpcSecurityGroupIngressArray and GetVpcSecurityGroupIngressArrayOutput values.
// You can construct a concrete instance of `GetVpcSecurityGroupIngressArrayInput` via:
//
//          GetVpcSecurityGroupIngressArray{ GetVpcSecurityGroupIngressArgs{...} }
type GetVpcSecurityGroupIngressArrayInput interface {
	pulumi.Input

	ToGetVpcSecurityGroupIngressArrayOutput() GetVpcSecurityGroupIngressArrayOutput
	ToGetVpcSecurityGroupIngressArrayOutputWithContext(context.Context) GetVpcSecurityGroupIngressArrayOutput
}

type GetVpcSecurityGroupIngressArray []GetVpcSecurityGroupIngressInput

func (GetVpcSecurityGroupIngressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcSecurityGroupIngress)(nil)).Elem()
}

func (i GetVpcSecurityGroupIngressArray) ToGetVpcSecurityGroupIngressArrayOutput() GetVpcSecurityGroupIngressArrayOutput {
	return i.ToGetVpcSecurityGroupIngressArrayOutputWithContext(context.Background())
}

func (i GetVpcSecurityGroupIngressArray) ToGetVpcSecurityGroupIngressArrayOutputWithContext(ctx context.Context) GetVpcSecurityGroupIngressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcSecurityGroupIngressArrayOutput)
}

type GetVpcSecurityGroupIngressOutput struct{ *pulumi.OutputState }

func (GetVpcSecurityGroupIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcSecurityGroupIngress)(nil)).Elem()
}

func (o GetVpcSecurityGroupIngressOutput) ToGetVpcSecurityGroupIngressOutput() GetVpcSecurityGroupIngressOutput {
	return o
}

func (o GetVpcSecurityGroupIngressOutput) ToGetVpcSecurityGroupIngressOutputWithContext(ctx context.Context) GetVpcSecurityGroupIngressOutput {
	return o
}

// Description of the rule.
func (o GetVpcSecurityGroupIngressOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSecurityGroupIngress) string { return v.Description }).(pulumi.StringOutput)
}

// Minimum port number.
func (o GetVpcSecurityGroupIngressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpcSecurityGroupIngress) int { return v.FromPort }).(pulumi.IntOutput)
}

// Id of the rule.
func (o GetVpcSecurityGroupIngressOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSecurityGroupIngress) string { return v.Id }).(pulumi.StringOutput)
}

// Labels to assign to this rule.
func (o GetVpcSecurityGroupIngressOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetVpcSecurityGroupIngress) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Port number (if applied to a single port).
func (o GetVpcSecurityGroupIngressOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpcSecurityGroupIngress) int { return v.Port }).(pulumi.IntOutput)
}

// Special-purpose targets such as "selfSecurityGroup". [See docs](https://cloud.yandex.ru/docs/vpc/concepts/security-groups) for possible options.
func (o GetVpcSecurityGroupIngressOutput) PredefinedTarget() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSecurityGroupIngress) string { return v.PredefinedTarget }).(pulumi.StringOutput)
}

// One of `ANY`, `TCP`, `UDP`, `ICMP`, `IPV6_ICMP`.
func (o GetVpcSecurityGroupIngressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSecurityGroupIngress) string { return v.Protocol }).(pulumi.StringOutput)
}

// Security Group ID.
func (o GetVpcSecurityGroupIngressOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSecurityGroupIngress) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// Maximum port number.
func (o GetVpcSecurityGroupIngressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpcSecurityGroupIngress) int { return v.ToPort }).(pulumi.IntOutput)
}

// The blocks of  IPv4 addresses for this rule.
func (o GetVpcSecurityGroupIngressOutput) V4CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcSecurityGroupIngress) []string { return v.V4CidrBlocks }).(pulumi.StringArrayOutput)
}

// The blocks of  IPv6 addresses for this rule.
func (o GetVpcSecurityGroupIngressOutput) V6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcSecurityGroupIngress) []string { return v.V6CidrBlocks }).(pulumi.StringArrayOutput)
}

type GetVpcSecurityGroupIngressArrayOutput struct{ *pulumi.OutputState }

func (GetVpcSecurityGroupIngressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcSecurityGroupIngress)(nil)).Elem()
}

func (o GetVpcSecurityGroupIngressArrayOutput) ToGetVpcSecurityGroupIngressArrayOutput() GetVpcSecurityGroupIngressArrayOutput {
	return o
}

func (o GetVpcSecurityGroupIngressArrayOutput) ToGetVpcSecurityGroupIngressArrayOutputWithContext(ctx context.Context) GetVpcSecurityGroupIngressArrayOutput {
	return o
}

func (o GetVpcSecurityGroupIngressArrayOutput) Index(i pulumi.IntInput) GetVpcSecurityGroupIngressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcSecurityGroupIngress {
		return vs[0].([]GetVpcSecurityGroupIngress)[vs[1].(int)]
	}).(GetVpcSecurityGroupIngressOutput)
}

type GetVpcSubnetDhcpOptions struct {
	// Domain name.
	DomainName string `pulumi:"domainName"`
	// Domain name server IP addresses.
	DomainNameServers []string `pulumi:"domainNameServers"`
	// NTP server IP addresses.
	NtpServers []string `pulumi:"ntpServers"`
}

// GetVpcSubnetDhcpOptionsInput is an input type that accepts GetVpcSubnetDhcpOptionsArgs and GetVpcSubnetDhcpOptionsOutput values.
// You can construct a concrete instance of `GetVpcSubnetDhcpOptionsInput` via:
//
//          GetVpcSubnetDhcpOptionsArgs{...}
type GetVpcSubnetDhcpOptionsInput interface {
	pulumi.Input

	ToGetVpcSubnetDhcpOptionsOutput() GetVpcSubnetDhcpOptionsOutput
	ToGetVpcSubnetDhcpOptionsOutputWithContext(context.Context) GetVpcSubnetDhcpOptionsOutput
}

type GetVpcSubnetDhcpOptionsArgs struct {
	// Domain name.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// Domain name server IP addresses.
	DomainNameServers pulumi.StringArrayInput `pulumi:"domainNameServers"`
	// NTP server IP addresses.
	NtpServers pulumi.StringArrayInput `pulumi:"ntpServers"`
}

func (GetVpcSubnetDhcpOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcSubnetDhcpOptions)(nil)).Elem()
}

func (i GetVpcSubnetDhcpOptionsArgs) ToGetVpcSubnetDhcpOptionsOutput() GetVpcSubnetDhcpOptionsOutput {
	return i.ToGetVpcSubnetDhcpOptionsOutputWithContext(context.Background())
}

func (i GetVpcSubnetDhcpOptionsArgs) ToGetVpcSubnetDhcpOptionsOutputWithContext(ctx context.Context) GetVpcSubnetDhcpOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcSubnetDhcpOptionsOutput)
}

type GetVpcSubnetDhcpOptionsOutput struct{ *pulumi.OutputState }

func (GetVpcSubnetDhcpOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcSubnetDhcpOptions)(nil)).Elem()
}

func (o GetVpcSubnetDhcpOptionsOutput) ToGetVpcSubnetDhcpOptionsOutput() GetVpcSubnetDhcpOptionsOutput {
	return o
}

func (o GetVpcSubnetDhcpOptionsOutput) ToGetVpcSubnetDhcpOptionsOutputWithContext(ctx context.Context) GetVpcSubnetDhcpOptionsOutput {
	return o
}

// Domain name.
func (o GetVpcSubnetDhcpOptionsOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSubnetDhcpOptions) string { return v.DomainName }).(pulumi.StringOutput)
}

// Domain name server IP addresses.
func (o GetVpcSubnetDhcpOptionsOutput) DomainNameServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcSubnetDhcpOptions) []string { return v.DomainNameServers }).(pulumi.StringArrayOutput)
}

// NTP server IP addresses.
func (o GetVpcSubnetDhcpOptionsOutput) NtpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcSubnetDhcpOptions) []string { return v.NtpServers }).(pulumi.StringArrayOutput)
}

type GetYdbDatabaseDedicatedLocation struct {
	// Region of the Yandex Database cluster.
	// The structure is documented below.
	Region GetYdbDatabaseDedicatedLocationRegion `pulumi:"region"`
	Zone   GetYdbDatabaseDedicatedLocationZone   `pulumi:"zone"`
}

// GetYdbDatabaseDedicatedLocationInput is an input type that accepts GetYdbDatabaseDedicatedLocationArgs and GetYdbDatabaseDedicatedLocationOutput values.
// You can construct a concrete instance of `GetYdbDatabaseDedicatedLocationInput` via:
//
//          GetYdbDatabaseDedicatedLocationArgs{...}
type GetYdbDatabaseDedicatedLocationInput interface {
	pulumi.Input

	ToGetYdbDatabaseDedicatedLocationOutput() GetYdbDatabaseDedicatedLocationOutput
	ToGetYdbDatabaseDedicatedLocationOutputWithContext(context.Context) GetYdbDatabaseDedicatedLocationOutput
}

type GetYdbDatabaseDedicatedLocationArgs struct {
	// Region of the Yandex Database cluster.
	// The structure is documented below.
	Region GetYdbDatabaseDedicatedLocationRegionInput `pulumi:"region"`
	Zone   GetYdbDatabaseDedicatedLocationZoneInput   `pulumi:"zone"`
}

func (GetYdbDatabaseDedicatedLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetYdbDatabaseDedicatedLocation)(nil)).Elem()
}

func (i GetYdbDatabaseDedicatedLocationArgs) ToGetYdbDatabaseDedicatedLocationOutput() GetYdbDatabaseDedicatedLocationOutput {
	return i.ToGetYdbDatabaseDedicatedLocationOutputWithContext(context.Background())
}

func (i GetYdbDatabaseDedicatedLocationArgs) ToGetYdbDatabaseDedicatedLocationOutputWithContext(ctx context.Context) GetYdbDatabaseDedicatedLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetYdbDatabaseDedicatedLocationOutput)
}

type GetYdbDatabaseDedicatedLocationOutput struct{ *pulumi.OutputState }

func (GetYdbDatabaseDedicatedLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetYdbDatabaseDedicatedLocation)(nil)).Elem()
}

func (o GetYdbDatabaseDedicatedLocationOutput) ToGetYdbDatabaseDedicatedLocationOutput() GetYdbDatabaseDedicatedLocationOutput {
	return o
}

func (o GetYdbDatabaseDedicatedLocationOutput) ToGetYdbDatabaseDedicatedLocationOutputWithContext(ctx context.Context) GetYdbDatabaseDedicatedLocationOutput {
	return o
}

// Region of the Yandex Database cluster.
// The structure is documented below.
func (o GetYdbDatabaseDedicatedLocationOutput) Region() GetYdbDatabaseDedicatedLocationRegionOutput {
	return o.ApplyT(func(v GetYdbDatabaseDedicatedLocation) GetYdbDatabaseDedicatedLocationRegion { return v.Region }).(GetYdbDatabaseDedicatedLocationRegionOutput)
}

func (o GetYdbDatabaseDedicatedLocationOutput) Zone() GetYdbDatabaseDedicatedLocationZoneOutput {
	return o.ApplyT(func(v GetYdbDatabaseDedicatedLocation) GetYdbDatabaseDedicatedLocationZone { return v.Zone }).(GetYdbDatabaseDedicatedLocationZoneOutput)
}

type GetYdbDatabaseDedicatedLocationRegion struct {
	// Region ID of the Yandex Database cluster.
	Id string `pulumi:"id"`
}

// GetYdbDatabaseDedicatedLocationRegionInput is an input type that accepts GetYdbDatabaseDedicatedLocationRegionArgs and GetYdbDatabaseDedicatedLocationRegionOutput values.
// You can construct a concrete instance of `GetYdbDatabaseDedicatedLocationRegionInput` via:
//
//          GetYdbDatabaseDedicatedLocationRegionArgs{...}
type GetYdbDatabaseDedicatedLocationRegionInput interface {
	pulumi.Input

	ToGetYdbDatabaseDedicatedLocationRegionOutput() GetYdbDatabaseDedicatedLocationRegionOutput
	ToGetYdbDatabaseDedicatedLocationRegionOutputWithContext(context.Context) GetYdbDatabaseDedicatedLocationRegionOutput
}

type GetYdbDatabaseDedicatedLocationRegionArgs struct {
	// Region ID of the Yandex Database cluster.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetYdbDatabaseDedicatedLocationRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetYdbDatabaseDedicatedLocationRegion)(nil)).Elem()
}

func (i GetYdbDatabaseDedicatedLocationRegionArgs) ToGetYdbDatabaseDedicatedLocationRegionOutput() GetYdbDatabaseDedicatedLocationRegionOutput {
	return i.ToGetYdbDatabaseDedicatedLocationRegionOutputWithContext(context.Background())
}

func (i GetYdbDatabaseDedicatedLocationRegionArgs) ToGetYdbDatabaseDedicatedLocationRegionOutputWithContext(ctx context.Context) GetYdbDatabaseDedicatedLocationRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetYdbDatabaseDedicatedLocationRegionOutput)
}

type GetYdbDatabaseDedicatedLocationRegionOutput struct{ *pulumi.OutputState }

func (GetYdbDatabaseDedicatedLocationRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetYdbDatabaseDedicatedLocationRegion)(nil)).Elem()
}

func (o GetYdbDatabaseDedicatedLocationRegionOutput) ToGetYdbDatabaseDedicatedLocationRegionOutput() GetYdbDatabaseDedicatedLocationRegionOutput {
	return o
}

func (o GetYdbDatabaseDedicatedLocationRegionOutput) ToGetYdbDatabaseDedicatedLocationRegionOutputWithContext(ctx context.Context) GetYdbDatabaseDedicatedLocationRegionOutput {
	return o
}

// Region ID of the Yandex Database cluster.
func (o GetYdbDatabaseDedicatedLocationRegionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetYdbDatabaseDedicatedLocationRegion) string { return v.Id }).(pulumi.StringOutput)
}

type GetYdbDatabaseDedicatedLocationZone struct {
	// Region ID of the Yandex Database cluster.
	Id string `pulumi:"id"`
}

// GetYdbDatabaseDedicatedLocationZoneInput is an input type that accepts GetYdbDatabaseDedicatedLocationZoneArgs and GetYdbDatabaseDedicatedLocationZoneOutput values.
// You can construct a concrete instance of `GetYdbDatabaseDedicatedLocationZoneInput` via:
//
//          GetYdbDatabaseDedicatedLocationZoneArgs{...}
type GetYdbDatabaseDedicatedLocationZoneInput interface {
	pulumi.Input

	ToGetYdbDatabaseDedicatedLocationZoneOutput() GetYdbDatabaseDedicatedLocationZoneOutput
	ToGetYdbDatabaseDedicatedLocationZoneOutputWithContext(context.Context) GetYdbDatabaseDedicatedLocationZoneOutput
}

type GetYdbDatabaseDedicatedLocationZoneArgs struct {
	// Region ID of the Yandex Database cluster.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetYdbDatabaseDedicatedLocationZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetYdbDatabaseDedicatedLocationZone)(nil)).Elem()
}

func (i GetYdbDatabaseDedicatedLocationZoneArgs) ToGetYdbDatabaseDedicatedLocationZoneOutput() GetYdbDatabaseDedicatedLocationZoneOutput {
	return i.ToGetYdbDatabaseDedicatedLocationZoneOutputWithContext(context.Background())
}

func (i GetYdbDatabaseDedicatedLocationZoneArgs) ToGetYdbDatabaseDedicatedLocationZoneOutputWithContext(ctx context.Context) GetYdbDatabaseDedicatedLocationZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetYdbDatabaseDedicatedLocationZoneOutput)
}

type GetYdbDatabaseDedicatedLocationZoneOutput struct{ *pulumi.OutputState }

func (GetYdbDatabaseDedicatedLocationZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetYdbDatabaseDedicatedLocationZone)(nil)).Elem()
}

func (o GetYdbDatabaseDedicatedLocationZoneOutput) ToGetYdbDatabaseDedicatedLocationZoneOutput() GetYdbDatabaseDedicatedLocationZoneOutput {
	return o
}

func (o GetYdbDatabaseDedicatedLocationZoneOutput) ToGetYdbDatabaseDedicatedLocationZoneOutputWithContext(ctx context.Context) GetYdbDatabaseDedicatedLocationZoneOutput {
	return o
}

// Region ID of the Yandex Database cluster.
func (o GetYdbDatabaseDedicatedLocationZoneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetYdbDatabaseDedicatedLocationZone) string { return v.Id }).(pulumi.StringOutput)
}

type GetYdbDatabaseDedicatedScalePolicy struct {
	// Fixed scaling policy of the Yandex Database cluster.
	// The structure is documented below.
	FixedScale GetYdbDatabaseDedicatedScalePolicyFixedScale `pulumi:"fixedScale"`
}

// GetYdbDatabaseDedicatedScalePolicyInput is an input type that accepts GetYdbDatabaseDedicatedScalePolicyArgs and GetYdbDatabaseDedicatedScalePolicyOutput values.
// You can construct a concrete instance of `GetYdbDatabaseDedicatedScalePolicyInput` via:
//
//          GetYdbDatabaseDedicatedScalePolicyArgs{...}
type GetYdbDatabaseDedicatedScalePolicyInput interface {
	pulumi.Input

	ToGetYdbDatabaseDedicatedScalePolicyOutput() GetYdbDatabaseDedicatedScalePolicyOutput
	ToGetYdbDatabaseDedicatedScalePolicyOutputWithContext(context.Context) GetYdbDatabaseDedicatedScalePolicyOutput
}

type GetYdbDatabaseDedicatedScalePolicyArgs struct {
	// Fixed scaling policy of the Yandex Database cluster.
	// The structure is documented below.
	FixedScale GetYdbDatabaseDedicatedScalePolicyFixedScaleInput `pulumi:"fixedScale"`
}

func (GetYdbDatabaseDedicatedScalePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetYdbDatabaseDedicatedScalePolicy)(nil)).Elem()
}

func (i GetYdbDatabaseDedicatedScalePolicyArgs) ToGetYdbDatabaseDedicatedScalePolicyOutput() GetYdbDatabaseDedicatedScalePolicyOutput {
	return i.ToGetYdbDatabaseDedicatedScalePolicyOutputWithContext(context.Background())
}

func (i GetYdbDatabaseDedicatedScalePolicyArgs) ToGetYdbDatabaseDedicatedScalePolicyOutputWithContext(ctx context.Context) GetYdbDatabaseDedicatedScalePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetYdbDatabaseDedicatedScalePolicyOutput)
}

type GetYdbDatabaseDedicatedScalePolicyOutput struct{ *pulumi.OutputState }

func (GetYdbDatabaseDedicatedScalePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetYdbDatabaseDedicatedScalePolicy)(nil)).Elem()
}

func (o GetYdbDatabaseDedicatedScalePolicyOutput) ToGetYdbDatabaseDedicatedScalePolicyOutput() GetYdbDatabaseDedicatedScalePolicyOutput {
	return o
}

func (o GetYdbDatabaseDedicatedScalePolicyOutput) ToGetYdbDatabaseDedicatedScalePolicyOutputWithContext(ctx context.Context) GetYdbDatabaseDedicatedScalePolicyOutput {
	return o
}

// Fixed scaling policy of the Yandex Database cluster.
// The structure is documented below.
func (o GetYdbDatabaseDedicatedScalePolicyOutput) FixedScale() GetYdbDatabaseDedicatedScalePolicyFixedScaleOutput {
	return o.ApplyT(func(v GetYdbDatabaseDedicatedScalePolicy) GetYdbDatabaseDedicatedScalePolicyFixedScale {
		return v.FixedScale
	}).(GetYdbDatabaseDedicatedScalePolicyFixedScaleOutput)
}

type GetYdbDatabaseDedicatedScalePolicyFixedScale struct {
	// Number of instances in the Yandex Database cluster.
	Size int `pulumi:"size"`
}

// GetYdbDatabaseDedicatedScalePolicyFixedScaleInput is an input type that accepts GetYdbDatabaseDedicatedScalePolicyFixedScaleArgs and GetYdbDatabaseDedicatedScalePolicyFixedScaleOutput values.
// You can construct a concrete instance of `GetYdbDatabaseDedicatedScalePolicyFixedScaleInput` via:
//
//          GetYdbDatabaseDedicatedScalePolicyFixedScaleArgs{...}
type GetYdbDatabaseDedicatedScalePolicyFixedScaleInput interface {
	pulumi.Input

	ToGetYdbDatabaseDedicatedScalePolicyFixedScaleOutput() GetYdbDatabaseDedicatedScalePolicyFixedScaleOutput
	ToGetYdbDatabaseDedicatedScalePolicyFixedScaleOutputWithContext(context.Context) GetYdbDatabaseDedicatedScalePolicyFixedScaleOutput
}

type GetYdbDatabaseDedicatedScalePolicyFixedScaleArgs struct {
	// Number of instances in the Yandex Database cluster.
	Size pulumi.IntInput `pulumi:"size"`
}

func (GetYdbDatabaseDedicatedScalePolicyFixedScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetYdbDatabaseDedicatedScalePolicyFixedScale)(nil)).Elem()
}

func (i GetYdbDatabaseDedicatedScalePolicyFixedScaleArgs) ToGetYdbDatabaseDedicatedScalePolicyFixedScaleOutput() GetYdbDatabaseDedicatedScalePolicyFixedScaleOutput {
	return i.ToGetYdbDatabaseDedicatedScalePolicyFixedScaleOutputWithContext(context.Background())
}

func (i GetYdbDatabaseDedicatedScalePolicyFixedScaleArgs) ToGetYdbDatabaseDedicatedScalePolicyFixedScaleOutputWithContext(ctx context.Context) GetYdbDatabaseDedicatedScalePolicyFixedScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetYdbDatabaseDedicatedScalePolicyFixedScaleOutput)
}

type GetYdbDatabaseDedicatedScalePolicyFixedScaleOutput struct{ *pulumi.OutputState }

func (GetYdbDatabaseDedicatedScalePolicyFixedScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetYdbDatabaseDedicatedScalePolicyFixedScale)(nil)).Elem()
}

func (o GetYdbDatabaseDedicatedScalePolicyFixedScaleOutput) ToGetYdbDatabaseDedicatedScalePolicyFixedScaleOutput() GetYdbDatabaseDedicatedScalePolicyFixedScaleOutput {
	return o
}

func (o GetYdbDatabaseDedicatedScalePolicyFixedScaleOutput) ToGetYdbDatabaseDedicatedScalePolicyFixedScaleOutputWithContext(ctx context.Context) GetYdbDatabaseDedicatedScalePolicyFixedScaleOutput {
	return o
}

// Number of instances in the Yandex Database cluster.
func (o GetYdbDatabaseDedicatedScalePolicyFixedScaleOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetYdbDatabaseDedicatedScalePolicyFixedScale) int { return v.Size }).(pulumi.IntOutput)
}

type GetYdbDatabaseDedicatedStorageConfig struct {
	// Amount of storage groups of selected type in the Yandex Database cluster.
	GroupCount int `pulumi:"groupCount"`
	// Storage type ID of the Yandex Database cluster.
	StorageTypeId string `pulumi:"storageTypeId"`
}

// GetYdbDatabaseDedicatedStorageConfigInput is an input type that accepts GetYdbDatabaseDedicatedStorageConfigArgs and GetYdbDatabaseDedicatedStorageConfigOutput values.
// You can construct a concrete instance of `GetYdbDatabaseDedicatedStorageConfigInput` via:
//
//          GetYdbDatabaseDedicatedStorageConfigArgs{...}
type GetYdbDatabaseDedicatedStorageConfigInput interface {
	pulumi.Input

	ToGetYdbDatabaseDedicatedStorageConfigOutput() GetYdbDatabaseDedicatedStorageConfigOutput
	ToGetYdbDatabaseDedicatedStorageConfigOutputWithContext(context.Context) GetYdbDatabaseDedicatedStorageConfigOutput
}

type GetYdbDatabaseDedicatedStorageConfigArgs struct {
	// Amount of storage groups of selected type in the Yandex Database cluster.
	GroupCount pulumi.IntInput `pulumi:"groupCount"`
	// Storage type ID of the Yandex Database cluster.
	StorageTypeId pulumi.StringInput `pulumi:"storageTypeId"`
}

func (GetYdbDatabaseDedicatedStorageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetYdbDatabaseDedicatedStorageConfig)(nil)).Elem()
}

func (i GetYdbDatabaseDedicatedStorageConfigArgs) ToGetYdbDatabaseDedicatedStorageConfigOutput() GetYdbDatabaseDedicatedStorageConfigOutput {
	return i.ToGetYdbDatabaseDedicatedStorageConfigOutputWithContext(context.Background())
}

func (i GetYdbDatabaseDedicatedStorageConfigArgs) ToGetYdbDatabaseDedicatedStorageConfigOutputWithContext(ctx context.Context) GetYdbDatabaseDedicatedStorageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetYdbDatabaseDedicatedStorageConfigOutput)
}

// GetYdbDatabaseDedicatedStorageConfigArrayInput is an input type that accepts GetYdbDatabaseDedicatedStorageConfigArray and GetYdbDatabaseDedicatedStorageConfigArrayOutput values.
// You can construct a concrete instance of `GetYdbDatabaseDedicatedStorageConfigArrayInput` via:
//
//          GetYdbDatabaseDedicatedStorageConfigArray{ GetYdbDatabaseDedicatedStorageConfigArgs{...} }
type GetYdbDatabaseDedicatedStorageConfigArrayInput interface {
	pulumi.Input

	ToGetYdbDatabaseDedicatedStorageConfigArrayOutput() GetYdbDatabaseDedicatedStorageConfigArrayOutput
	ToGetYdbDatabaseDedicatedStorageConfigArrayOutputWithContext(context.Context) GetYdbDatabaseDedicatedStorageConfigArrayOutput
}

type GetYdbDatabaseDedicatedStorageConfigArray []GetYdbDatabaseDedicatedStorageConfigInput

func (GetYdbDatabaseDedicatedStorageConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetYdbDatabaseDedicatedStorageConfig)(nil)).Elem()
}

func (i GetYdbDatabaseDedicatedStorageConfigArray) ToGetYdbDatabaseDedicatedStorageConfigArrayOutput() GetYdbDatabaseDedicatedStorageConfigArrayOutput {
	return i.ToGetYdbDatabaseDedicatedStorageConfigArrayOutputWithContext(context.Background())
}

func (i GetYdbDatabaseDedicatedStorageConfigArray) ToGetYdbDatabaseDedicatedStorageConfigArrayOutputWithContext(ctx context.Context) GetYdbDatabaseDedicatedStorageConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetYdbDatabaseDedicatedStorageConfigArrayOutput)
}

type GetYdbDatabaseDedicatedStorageConfigOutput struct{ *pulumi.OutputState }

func (GetYdbDatabaseDedicatedStorageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetYdbDatabaseDedicatedStorageConfig)(nil)).Elem()
}

func (o GetYdbDatabaseDedicatedStorageConfigOutput) ToGetYdbDatabaseDedicatedStorageConfigOutput() GetYdbDatabaseDedicatedStorageConfigOutput {
	return o
}

func (o GetYdbDatabaseDedicatedStorageConfigOutput) ToGetYdbDatabaseDedicatedStorageConfigOutputWithContext(ctx context.Context) GetYdbDatabaseDedicatedStorageConfigOutput {
	return o
}

// Amount of storage groups of selected type in the Yandex Database cluster.
func (o GetYdbDatabaseDedicatedStorageConfigOutput) GroupCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetYdbDatabaseDedicatedStorageConfig) int { return v.GroupCount }).(pulumi.IntOutput)
}

// Storage type ID of the Yandex Database cluster.
func (o GetYdbDatabaseDedicatedStorageConfigOutput) StorageTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetYdbDatabaseDedicatedStorageConfig) string { return v.StorageTypeId }).(pulumi.StringOutput)
}

type GetYdbDatabaseDedicatedStorageConfigArrayOutput struct{ *pulumi.OutputState }

func (GetYdbDatabaseDedicatedStorageConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetYdbDatabaseDedicatedStorageConfig)(nil)).Elem()
}

func (o GetYdbDatabaseDedicatedStorageConfigArrayOutput) ToGetYdbDatabaseDedicatedStorageConfigArrayOutput() GetYdbDatabaseDedicatedStorageConfigArrayOutput {
	return o
}

func (o GetYdbDatabaseDedicatedStorageConfigArrayOutput) ToGetYdbDatabaseDedicatedStorageConfigArrayOutputWithContext(ctx context.Context) GetYdbDatabaseDedicatedStorageConfigArrayOutput {
	return o
}

func (o GetYdbDatabaseDedicatedStorageConfigArrayOutput) Index(i pulumi.IntInput) GetYdbDatabaseDedicatedStorageConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetYdbDatabaseDedicatedStorageConfig {
		return vs[0].([]GetYdbDatabaseDedicatedStorageConfig)[vs[1].(int)]
	}).(GetYdbDatabaseDedicatedStorageConfigOutput)
}

func init() {
	pulumi.RegisterOutputType(ComputeDiskDiskPlacementPolicyOutput{})
	pulumi.RegisterOutputType(ComputeDiskDiskPlacementPolicyPtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceBootDiskOutput{})
	pulumi.RegisterOutputType(ComputeInstanceBootDiskPtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceBootDiskInitializeParamsOutput{})
	pulumi.RegisterOutputType(ComputeInstanceBootDiskInitializeParamsPtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupAllocationPolicyOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupAllocationPolicyPtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupDeployPolicyOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupDeployPolicyPtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupHealthCheckOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupHealthCheckHttpOptionOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupHealthCheckHttpOptionArrayOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupHealthCheckTcpOptionOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupHealthCheckTcpOptionArrayOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceArrayOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceTemplateOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceTemplatePtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceTemplateBootDiskOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceTemplateBootDiskPtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsPtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceTemplateNetworkSettingOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceTemplatePlacementPolicyOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceTemplateResourcesOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceTemplateResourcesPtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceTemplateSchedulingPolicyPtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceTemplateSecondaryDiskOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupLoadBalancerOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupLoadBalancerPtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupScalePolicyOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupScalePolicyPtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupScalePolicyAutoScaleOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupScalePolicyAutoScalePtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupScalePolicyFixedScaleOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupScalePolicyFixedScalePtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupScalePolicyTestAutoScaleOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupScalePolicyTestAutoScalePtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput{})
	pulumi.RegisterOutputType(ComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput{})
	pulumi.RegisterOutputType(ComputeInstanceNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(ComputeInstanceNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(ComputeInstancePlacementPolicyOutput{})
	pulumi.RegisterOutputType(ComputeInstancePlacementPolicyPtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceResourcesOutput{})
	pulumi.RegisterOutputType(ComputeInstanceResourcesPtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceSchedulingPolicyOutput{})
	pulumi.RegisterOutputType(ComputeInstanceSchedulingPolicyPtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceSecondaryDiskOutput{})
	pulumi.RegisterOutputType(ComputeInstanceSecondaryDiskArrayOutput{})
	pulumi.RegisterOutputType(DataprocClusterClusterConfigOutput{})
	pulumi.RegisterOutputType(DataprocClusterClusterConfigPtrOutput{})
	pulumi.RegisterOutputType(DataprocClusterClusterConfigHadoopOutput{})
	pulumi.RegisterOutputType(DataprocClusterClusterConfigHadoopPtrOutput{})
	pulumi.RegisterOutputType(DataprocClusterClusterConfigSubclusterSpecOutput{})
	pulumi.RegisterOutputType(DataprocClusterClusterConfigSubclusterSpecArrayOutput{})
	pulumi.RegisterOutputType(DataprocClusterClusterConfigSubclusterSpecResourcesOutput{})
	pulumi.RegisterOutputType(FunctionContentOutput{})
	pulumi.RegisterOutputType(FunctionContentPtrOutput{})
	pulumi.RegisterOutputType(FunctionPackageOutput{})
	pulumi.RegisterOutputType(FunctionPackagePtrOutput{})
	pulumi.RegisterOutputType(FunctionTriggerDlqOutput{})
	pulumi.RegisterOutputType(FunctionTriggerDlqPtrOutput{})
	pulumi.RegisterOutputType(FunctionTriggerFunctionOutput{})
	pulumi.RegisterOutputType(FunctionTriggerFunctionPtrOutput{})
	pulumi.RegisterOutputType(FunctionTriggerIotOutput{})
	pulumi.RegisterOutputType(FunctionTriggerIotPtrOutput{})
	pulumi.RegisterOutputType(FunctionTriggerLogGroupOutput{})
	pulumi.RegisterOutputType(FunctionTriggerLogGroupPtrOutput{})
	pulumi.RegisterOutputType(FunctionTriggerMessageQueueOutput{})
	pulumi.RegisterOutputType(FunctionTriggerMessageQueuePtrOutput{})
	pulumi.RegisterOutputType(FunctionTriggerObjectStorageOutput{})
	pulumi.RegisterOutputType(FunctionTriggerObjectStoragePtrOutput{})
	pulumi.RegisterOutputType(FunctionTriggerTimerOutput{})
	pulumi.RegisterOutputType(FunctionTriggerTimerPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKmsProviderOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKmsProviderPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMasterOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMasterPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMasterMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMasterMaintenancePolicyPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMasterRegionalOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMasterRegionalPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMasterRegionalLocationOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMasterRegionalLocationArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMasterVersionInfoOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMasterVersionInfoPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMasterZonalOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMasterZonalPtrOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupAllocationPolicyOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupAllocationPolicyPtrOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupAllocationPolicyLocationOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupAllocationPolicyLocationArrayOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupDeployPolicyOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupDeployPolicyPtrOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupInstanceTemplateOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupInstanceTemplatePtrOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupInstanceTemplateBootDiskOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupInstanceTemplateBootDiskPtrOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupInstanceTemplateResourcesOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupInstanceTemplateResourcesPtrOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupInstanceTemplateSchedulingPolicyPtrOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupMaintenancePolicyPtrOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupScalePolicyOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupScalePolicyPtrOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupScalePolicyAutoScaleOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupScalePolicyAutoScalePtrOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupScalePolicyFixedScaleOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupScalePolicyFixedScalePtrOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupVersionInfoOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupVersionInfoPtrOutput{})
	pulumi.RegisterOutputType(LbNetworkLoadBalancerAttachedTargetGroupOutput{})
	pulumi.RegisterOutputType(LbNetworkLoadBalancerAttachedTargetGroupArrayOutput{})
	pulumi.RegisterOutputType(LbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput{})
	pulumi.RegisterOutputType(LbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput{})
	pulumi.RegisterOutputType(LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput{})
	pulumi.RegisterOutputType(LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsPtrOutput{})
	pulumi.RegisterOutputType(LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput{})
	pulumi.RegisterOutputType(LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsPtrOutput{})
	pulumi.RegisterOutputType(LbNetworkLoadBalancerListenerOutput{})
	pulumi.RegisterOutputType(LbNetworkLoadBalancerListenerArrayOutput{})
	pulumi.RegisterOutputType(LbNetworkLoadBalancerListenerExternalAddressSpecOutput{})
	pulumi.RegisterOutputType(LbNetworkLoadBalancerListenerExternalAddressSpecPtrOutput{})
	pulumi.RegisterOutputType(LbNetworkLoadBalancerListenerInternalAddressSpecOutput{})
	pulumi.RegisterOutputType(LbNetworkLoadBalancerListenerInternalAddressSpecPtrOutput{})
	pulumi.RegisterOutputType(LbTargetGroupTargetOutput{})
	pulumi.RegisterOutputType(LbTargetGroupTargetArrayOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterAccessOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterAccessPtrOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterBackupWindowStartOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterBackupWindowStartPtrOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterClickhouseOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterClickhousePtrOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterClickhouseConfigOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterClickhouseConfigPtrOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterClickhouseConfigCompressionOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterClickhouseConfigCompressionArrayOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterClickhouseConfigGraphiteRollupOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterClickhouseConfigKafkaOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterClickhouseConfigKafkaPtrOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterClickhouseConfigKafkaTopicOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterClickhouseConfigMergeTreeOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterClickhouseConfigMergeTreePtrOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterClickhouseConfigRabbitmqOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterClickhouseConfigRabbitmqPtrOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterClickhouseResourcesOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterClickhouseResourcesPtrOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterCloudStorageOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterCloudStoragePtrOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterDatabaseOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterDatabaseArrayOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterFormatSchemaOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterFormatSchemaArrayOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterHostOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterHostArrayOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterMlModelOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterMlModelArrayOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterShardGroupOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterShardGroupArrayOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterUserOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterUserArrayOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterUserPermissionOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterUserPermissionArrayOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterUserQuotaOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterUserQuotaArrayOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterUserSettingsOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterUserSettingsPtrOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterZookeeperOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterZookeeperPtrOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterZookeeperResourcesOutput{})
	pulumi.RegisterOutputType(MdbClickhouseClusterZookeeperResourcesPtrOutput{})
	pulumi.RegisterOutputType(MdbKafkaClusterConfigOutput{})
	pulumi.RegisterOutputType(MdbKafkaClusterConfigPtrOutput{})
	pulumi.RegisterOutputType(MdbKafkaClusterConfigKafkaOutput{})
	pulumi.RegisterOutputType(MdbKafkaClusterConfigKafkaPtrOutput{})
	pulumi.RegisterOutputType(MdbKafkaClusterConfigKafkaKafkaConfigOutput{})
	pulumi.RegisterOutputType(MdbKafkaClusterConfigKafkaKafkaConfigPtrOutput{})
	pulumi.RegisterOutputType(MdbKafkaClusterConfigKafkaResourcesOutput{})
	pulumi.RegisterOutputType(MdbKafkaClusterConfigKafkaResourcesPtrOutput{})
	pulumi.RegisterOutputType(MdbKafkaClusterConfigZookeeperOutput{})
	pulumi.RegisterOutputType(MdbKafkaClusterConfigZookeeperPtrOutput{})
	pulumi.RegisterOutputType(MdbKafkaClusterConfigZookeeperResourcesOutput{})
	pulumi.RegisterOutputType(MdbKafkaClusterConfigZookeeperResourcesPtrOutput{})
	pulumi.RegisterOutputType(MdbKafkaClusterHostOutput{})
	pulumi.RegisterOutputType(MdbKafkaClusterHostArrayOutput{})
	pulumi.RegisterOutputType(MdbKafkaClusterTopicOutput{})
	pulumi.RegisterOutputType(MdbKafkaClusterTopicArrayOutput{})
	pulumi.RegisterOutputType(MdbKafkaClusterTopicTopicConfigOutput{})
	pulumi.RegisterOutputType(MdbKafkaClusterTopicTopicConfigPtrOutput{})
	pulumi.RegisterOutputType(MdbKafkaClusterUserOutput{})
	pulumi.RegisterOutputType(MdbKafkaClusterUserArrayOutput{})
	pulumi.RegisterOutputType(MdbKafkaClusterUserPermissionOutput{})
	pulumi.RegisterOutputType(MdbKafkaClusterUserPermissionArrayOutput{})
	pulumi.RegisterOutputType(MdbMongodbClusterClusterConfigOutput{})
	pulumi.RegisterOutputType(MdbMongodbClusterClusterConfigPtrOutput{})
	pulumi.RegisterOutputType(MdbMongodbClusterClusterConfigAccessOutput{})
	pulumi.RegisterOutputType(MdbMongodbClusterClusterConfigAccessPtrOutput{})
	pulumi.RegisterOutputType(MdbMongodbClusterClusterConfigBackupWindowStartOutput{})
	pulumi.RegisterOutputType(MdbMongodbClusterClusterConfigBackupWindowStartPtrOutput{})
	pulumi.RegisterOutputType(MdbMongodbClusterDatabaseOutput{})
	pulumi.RegisterOutputType(MdbMongodbClusterDatabaseArrayOutput{})
	pulumi.RegisterOutputType(MdbMongodbClusterHostOutput{})
	pulumi.RegisterOutputType(MdbMongodbClusterHostArrayOutput{})
	pulumi.RegisterOutputType(MdbMongodbClusterResourcesOutput{})
	pulumi.RegisterOutputType(MdbMongodbClusterResourcesPtrOutput{})
	pulumi.RegisterOutputType(MdbMongodbClusterUserOutput{})
	pulumi.RegisterOutputType(MdbMongodbClusterUserArrayOutput{})
	pulumi.RegisterOutputType(MdbMongodbClusterUserPermissionOutput{})
	pulumi.RegisterOutputType(MdbMongodbClusterUserPermissionArrayOutput{})
	pulumi.RegisterOutputType(MdbMysqlClusterAccessOutput{})
	pulumi.RegisterOutputType(MdbMysqlClusterAccessPtrOutput{})
	pulumi.RegisterOutputType(MdbMysqlClusterBackupWindowStartOutput{})
	pulumi.RegisterOutputType(MdbMysqlClusterBackupWindowStartPtrOutput{})
	pulumi.RegisterOutputType(MdbMysqlClusterDatabaseOutput{})
	pulumi.RegisterOutputType(MdbMysqlClusterDatabaseArrayOutput{})
	pulumi.RegisterOutputType(MdbMysqlClusterHostOutput{})
	pulumi.RegisterOutputType(MdbMysqlClusterHostArrayOutput{})
	pulumi.RegisterOutputType(MdbMysqlClusterResourcesOutput{})
	pulumi.RegisterOutputType(MdbMysqlClusterResourcesPtrOutput{})
	pulumi.RegisterOutputType(MdbMysqlClusterRestoreOutput{})
	pulumi.RegisterOutputType(MdbMysqlClusterRestorePtrOutput{})
	pulumi.RegisterOutputType(MdbMysqlClusterUserOutput{})
	pulumi.RegisterOutputType(MdbMysqlClusterUserArrayOutput{})
	pulumi.RegisterOutputType(MdbMysqlClusterUserConnectionLimitsOutput{})
	pulumi.RegisterOutputType(MdbMysqlClusterUserConnectionLimitsPtrOutput{})
	pulumi.RegisterOutputType(MdbMysqlClusterUserPermissionOutput{})
	pulumi.RegisterOutputType(MdbMysqlClusterUserPermissionArrayOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterConfigOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterConfigPtrOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterConfigAccessOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterConfigAccessPtrOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterConfigBackupWindowStartOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterConfigBackupWindowStartPtrOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterConfigPerformanceDiagnosticsOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterConfigPerformanceDiagnosticsPtrOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterConfigPoolerConfigOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterConfigPoolerConfigPtrOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterConfigResourcesOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterConfigResourcesPtrOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterDatabaseOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterDatabaseArrayOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterDatabaseExtensionOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterDatabaseExtensionArrayOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterHostOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterHostArrayOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterRestoreOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterRestorePtrOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterUserOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterUserArrayOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterUserPermissionOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterUserPermissionArrayOutput{})
	pulumi.RegisterOutputType(MdbRedisClusterConfigOutput{})
	pulumi.RegisterOutputType(MdbRedisClusterConfigPtrOutput{})
	pulumi.RegisterOutputType(MdbRedisClusterHostOutput{})
	pulumi.RegisterOutputType(MdbRedisClusterHostArrayOutput{})
	pulumi.RegisterOutputType(MdbRedisClusterResourcesOutput{})
	pulumi.RegisterOutputType(MdbRedisClusterResourcesPtrOutput{})
	pulumi.RegisterOutputType(MdbSqlServerClusterBackupWindowStartOutput{})
	pulumi.RegisterOutputType(MdbSqlServerClusterBackupWindowStartPtrOutput{})
	pulumi.RegisterOutputType(MdbSqlServerClusterDatabaseOutput{})
	pulumi.RegisterOutputType(MdbSqlServerClusterDatabaseArrayOutput{})
	pulumi.RegisterOutputType(MdbSqlServerClusterHostOutput{})
	pulumi.RegisterOutputType(MdbSqlServerClusterHostArrayOutput{})
	pulumi.RegisterOutputType(MdbSqlServerClusterResourcesOutput{})
	pulumi.RegisterOutputType(MdbSqlServerClusterResourcesPtrOutput{})
	pulumi.RegisterOutputType(MdbSqlServerClusterUserOutput{})
	pulumi.RegisterOutputType(MdbSqlServerClusterUserArrayOutput{})
	pulumi.RegisterOutputType(MdbSqlServerClusterUserPermissionOutput{})
	pulumi.RegisterOutputType(MdbSqlServerClusterUserPermissionArrayOutput{})
	pulumi.RegisterOutputType(StorageBucketCorsRuleOutput{})
	pulumi.RegisterOutputType(StorageBucketCorsRuleArrayOutput{})
	pulumi.RegisterOutputType(StorageBucketGrantOutput{})
	pulumi.RegisterOutputType(StorageBucketGrantArrayOutput{})
	pulumi.RegisterOutputType(StorageBucketLifecycleRuleOutput{})
	pulumi.RegisterOutputType(StorageBucketLifecycleRuleArrayOutput{})
	pulumi.RegisterOutputType(StorageBucketLifecycleRuleExpirationOutput{})
	pulumi.RegisterOutputType(StorageBucketLifecycleRuleExpirationPtrOutput{})
	pulumi.RegisterOutputType(StorageBucketLifecycleRuleNoncurrentVersionExpirationOutput{})
	pulumi.RegisterOutputType(StorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput{})
	pulumi.RegisterOutputType(StorageBucketLifecycleRuleNoncurrentVersionTransitionOutput{})
	pulumi.RegisterOutputType(StorageBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput{})
	pulumi.RegisterOutputType(StorageBucketLifecycleRuleTransitionOutput{})
	pulumi.RegisterOutputType(StorageBucketLifecycleRuleTransitionArrayOutput{})
	pulumi.RegisterOutputType(StorageBucketLoggingOutput{})
	pulumi.RegisterOutputType(StorageBucketLoggingArrayOutput{})
	pulumi.RegisterOutputType(StorageBucketServerSideEncryptionConfigurationOutput{})
	pulumi.RegisterOutputType(StorageBucketServerSideEncryptionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(StorageBucketServerSideEncryptionConfigurationRuleOutput{})
	pulumi.RegisterOutputType(StorageBucketServerSideEncryptionConfigurationRulePtrOutput{})
	pulumi.RegisterOutputType(StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput{})
	pulumi.RegisterOutputType(StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultPtrOutput{})
	pulumi.RegisterOutputType(StorageBucketVersioningOutput{})
	pulumi.RegisterOutputType(StorageBucketVersioningPtrOutput{})
	pulumi.RegisterOutputType(StorageBucketWebsiteOutput{})
	pulumi.RegisterOutputType(StorageBucketWebsitePtrOutput{})
	pulumi.RegisterOutputType(VpcAddressExternalIpv4AddressOutput{})
	pulumi.RegisterOutputType(VpcAddressExternalIpv4AddressPtrOutput{})
	pulumi.RegisterOutputType(VpcRouteTableStaticRouteOutput{})
	pulumi.RegisterOutputType(VpcRouteTableStaticRouteArrayOutput{})
	pulumi.RegisterOutputType(VpcSecurityGroupEgressOutput{})
	pulumi.RegisterOutputType(VpcSecurityGroupEgressArrayOutput{})
	pulumi.RegisterOutputType(VpcSecurityGroupIngressOutput{})
	pulumi.RegisterOutputType(VpcSecurityGroupIngressArrayOutput{})
	pulumi.RegisterOutputType(VpcSubnetDhcpOptionsOutput{})
	pulumi.RegisterOutputType(VpcSubnetDhcpOptionsPtrOutput{})
	pulumi.RegisterOutputType(YdbDatabaseDedicatedLocationOutput{})
	pulumi.RegisterOutputType(YdbDatabaseDedicatedLocationPtrOutput{})
	pulumi.RegisterOutputType(YdbDatabaseDedicatedLocationRegionOutput{})
	pulumi.RegisterOutputType(YdbDatabaseDedicatedLocationRegionPtrOutput{})
	pulumi.RegisterOutputType(YdbDatabaseDedicatedScalePolicyOutput{})
	pulumi.RegisterOutputType(YdbDatabaseDedicatedScalePolicyPtrOutput{})
	pulumi.RegisterOutputType(YdbDatabaseDedicatedScalePolicyFixedScaleOutput{})
	pulumi.RegisterOutputType(YdbDatabaseDedicatedScalePolicyFixedScalePtrOutput{})
	pulumi.RegisterOutputType(YdbDatabaseDedicatedStorageConfigOutput{})
	pulumi.RegisterOutputType(YdbDatabaseDedicatedStorageConfigPtrOutput{})
	pulumi.RegisterOutputType(GetComputeDiskDiskPlacementPolicyOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceBootDiskOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceBootDiskInitializeParamOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceBootDiskInitializeParamArrayOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupAllocationPolicyOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupDeployPolicyOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupHealthCheckOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupHealthCheckHttpOptionOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupHealthCheckHttpOptionArrayOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupHealthCheckTcpOptionOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupHealthCheckTcpOptionArrayOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupInstanceOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupInstanceNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupInstanceNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupInstanceTemplateOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupInstanceTemplateBootDiskOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupInstanceTemplateBootDiskInitializeParamsOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupInstanceTemplateNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupInstanceTemplateNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecordArrayOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecordArrayOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecordArrayOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupInstanceTemplateNetworkSettingOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupInstanceTemplateNetworkSettingArrayOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupInstanceTemplatePlacementPolicyOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupInstanceTemplatePlacementPolicyPtrOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupInstanceTemplateResourcesOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupInstanceTemplateSchedulingPolicyOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupInstanceTemplateSecondaryDiskOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupInstanceTemplateSecondaryDiskArrayOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParamsOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupLoadBalancerOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupLoadBalancerStateOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupScalePolicyOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupScalePolicyAutoScaleOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupScalePolicyAutoScaleArrayOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupScalePolicyAutoScaleCustomRuleArrayOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupScalePolicyFixedScaleOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupScalePolicyFixedScaleArrayOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupScalePolicyTestAutoScaleOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupScalePolicyTestAutoScaleArrayOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceGroupScalePolicyTestAutoScaleCustomRuleArrayOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetComputeInstancePlacementPolicyOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceResourcesOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceSchedulingPolicyOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceSecondaryDiskOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceSecondaryDiskArrayOutput{})
	pulumi.RegisterOutputType(GetDataprocClusterClusterConfigOutput{})
	pulumi.RegisterOutputType(GetDataprocClusterClusterConfigHadoopOutput{})
	pulumi.RegisterOutputType(GetDataprocClusterClusterConfigSubclusterSpecOutput{})
	pulumi.RegisterOutputType(GetDataprocClusterClusterConfigSubclusterSpecArrayOutput{})
	pulumi.RegisterOutputType(GetDataprocClusterClusterConfigSubclusterSpecResourcesOutput{})
	pulumi.RegisterOutputType(GetFunctionTriggerDlqOutput{})
	pulumi.RegisterOutputType(GetFunctionTriggerFunctionOutput{})
	pulumi.RegisterOutputType(GetFunctionTriggerIotOutput{})
	pulumi.RegisterOutputType(GetFunctionTriggerLogGroupOutput{})
	pulumi.RegisterOutputType(GetFunctionTriggerMessageQueueOutput{})
	pulumi.RegisterOutputType(GetFunctionTriggerObjectStorageOutput{})
	pulumi.RegisterOutputType(GetFunctionTriggerTimerOutput{})
	pulumi.RegisterOutputType(GetIamPolicyBindingOutput{})
	pulumi.RegisterOutputType(GetIamPolicyBindingArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterKmsProviderOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterMasterOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterMasterMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterMasterMaintenancePolicyMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterMasterRegionalOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterMasterVersionInfoOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterMasterZonalOutput{})
	pulumi.RegisterOutputType(GetKubernetesNodeGroupAllocationPolicyOutput{})
	pulumi.RegisterOutputType(GetKubernetesNodeGroupAllocationPolicyLocationOutput{})
	pulumi.RegisterOutputType(GetKubernetesNodeGroupAllocationPolicyLocationArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesNodeGroupDeployPolicyOutput{})
	pulumi.RegisterOutputType(GetKubernetesNodeGroupInstanceTemplateOutput{})
	pulumi.RegisterOutputType(GetKubernetesNodeGroupInstanceTemplateBootDiskOutput{})
	pulumi.RegisterOutputType(GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(GetKubernetesNodeGroupInstanceTemplateNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesNodeGroupInstanceTemplateResourcesOutput{})
	pulumi.RegisterOutputType(GetKubernetesNodeGroupInstanceTemplateSchedulingPolicyOutput{})
	pulumi.RegisterOutputType(GetKubernetesNodeGroupMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetKubernetesNodeGroupMaintenancePolicyMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesNodeGroupScalePolicyOutput{})
	pulumi.RegisterOutputType(GetKubernetesNodeGroupScalePolicyAutoScaleOutput{})
	pulumi.RegisterOutputType(GetKubernetesNodeGroupScalePolicyFixedScaleOutput{})
	pulumi.RegisterOutputType(GetKubernetesNodeGroupVersionInfoOutput{})
	pulumi.RegisterOutputType(GetLbNetworkLoadBalancerAttachedTargetGroupOutput{})
	pulumi.RegisterOutputType(GetLbNetworkLoadBalancerAttachedTargetGroupArrayOutput{})
	pulumi.RegisterOutputType(GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckOutput{})
	pulumi.RegisterOutputType(GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckArrayOutput{})
	pulumi.RegisterOutputType(GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptionsOutput{})
	pulumi.RegisterOutputType(GetLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptionsOutput{})
	pulumi.RegisterOutputType(GetLbNetworkLoadBalancerListenerOutput{})
	pulumi.RegisterOutputType(GetLbNetworkLoadBalancerListenerArrayOutput{})
	pulumi.RegisterOutputType(GetLbNetworkLoadBalancerListenerExternalAddressSpecOutput{})
	pulumi.RegisterOutputType(GetLbNetworkLoadBalancerListenerInternalAddressSpecOutput{})
	pulumi.RegisterOutputType(GetLbTargetGroupTargetOutput{})
	pulumi.RegisterOutputType(GetLbTargetGroupTargetArrayOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterAccessOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterBackupWindowStartOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterClickhouseOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterClickhouseConfigOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterClickhouseConfigCompressionOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterClickhouseConfigCompressionArrayOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterClickhouseConfigGraphiteRollupOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArrayOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArrayOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArrayOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterClickhouseConfigKafkaOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterClickhouseConfigKafkaArrayOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterClickhouseConfigKafkaTopicOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterClickhouseConfigKafkaTopicArrayOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsPtrOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterClickhouseConfigMergeTreeOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterClickhouseConfigRabbitmqOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterClickhouseResourcesOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterCloudStorageOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterDatabaseOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterFormatSchemaOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterFormatSchemaArrayOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterHostOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterHostArrayOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterMlModelOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterMlModelArrayOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterShardGroupOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterShardGroupArrayOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterUserOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterUserArrayOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterUserPermissionOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterUserPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterUserQuotaOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterUserQuotaArrayOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterUserSettingsOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterZookeeperOutput{})
	pulumi.RegisterOutputType(GetMdbClickhouseClusterZookeeperResourcesOutput{})
	pulumi.RegisterOutputType(GetMdbKafkaClusterConfigOutput{})
	pulumi.RegisterOutputType(GetMdbKafkaClusterConfigKafkaOutput{})
	pulumi.RegisterOutputType(GetMdbKafkaClusterConfigKafkaKafkaConfigOutput{})
	pulumi.RegisterOutputType(GetMdbKafkaClusterConfigKafkaKafkaConfigPtrOutput{})
	pulumi.RegisterOutputType(GetMdbKafkaClusterConfigKafkaResourcesOutput{})
	pulumi.RegisterOutputType(GetMdbKafkaClusterConfigZookeeperOutput{})
	pulumi.RegisterOutputType(GetMdbKafkaClusterConfigZookeeperPtrOutput{})
	pulumi.RegisterOutputType(GetMdbKafkaClusterConfigZookeeperResourcesOutput{})
	pulumi.RegisterOutputType(GetMdbKafkaClusterConfigZookeeperResourcesPtrOutput{})
	pulumi.RegisterOutputType(GetMdbKafkaClusterHostOutput{})
	pulumi.RegisterOutputType(GetMdbKafkaClusterHostArrayOutput{})
	pulumi.RegisterOutputType(GetMdbKafkaClusterTopicOutput{})
	pulumi.RegisterOutputType(GetMdbKafkaClusterTopicArrayOutput{})
	pulumi.RegisterOutputType(GetMdbKafkaClusterTopicTopicConfigOutput{})
	pulumi.RegisterOutputType(GetMdbKafkaClusterTopicTopicConfigPtrOutput{})
	pulumi.RegisterOutputType(GetMdbKafkaClusterUserOutput{})
	pulumi.RegisterOutputType(GetMdbKafkaClusterUserArrayOutput{})
	pulumi.RegisterOutputType(GetMdbKafkaClusterUserPermissionOutput{})
	pulumi.RegisterOutputType(GetMdbKafkaClusterUserPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetMdbMongodbClusterClusterConfigOutput{})
	pulumi.RegisterOutputType(GetMdbMongodbClusterClusterConfigAccessOutput{})
	pulumi.RegisterOutputType(GetMdbMongodbClusterClusterConfigBackupWindowStartOutput{})
	pulumi.RegisterOutputType(GetMdbMongodbClusterDatabaseOutput{})
	pulumi.RegisterOutputType(GetMdbMongodbClusterDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetMdbMongodbClusterHostOutput{})
	pulumi.RegisterOutputType(GetMdbMongodbClusterHostArrayOutput{})
	pulumi.RegisterOutputType(GetMdbMongodbClusterResourcesOutput{})
	pulumi.RegisterOutputType(GetMdbMongodbClusterUserOutput{})
	pulumi.RegisterOutputType(GetMdbMongodbClusterUserArrayOutput{})
	pulumi.RegisterOutputType(GetMdbMongodbClusterUserPermissionOutput{})
	pulumi.RegisterOutputType(GetMdbMongodbClusterUserPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetMdbMysqlClusterAccessOutput{})
	pulumi.RegisterOutputType(GetMdbMysqlClusterBackupWindowStartOutput{})
	pulumi.RegisterOutputType(GetMdbMysqlClusterDatabaseOutput{})
	pulumi.RegisterOutputType(GetMdbMysqlClusterDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetMdbMysqlClusterHostOutput{})
	pulumi.RegisterOutputType(GetMdbMysqlClusterHostArrayOutput{})
	pulumi.RegisterOutputType(GetMdbMysqlClusterResourcesOutput{})
	pulumi.RegisterOutputType(GetMdbMysqlClusterUserOutput{})
	pulumi.RegisterOutputType(GetMdbMysqlClusterUserArrayOutput{})
	pulumi.RegisterOutputType(GetMdbMysqlClusterUserConnectionLimitsOutput{})
	pulumi.RegisterOutputType(GetMdbMysqlClusterUserPermissionOutput{})
	pulumi.RegisterOutputType(GetMdbMysqlClusterUserPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetMdbPostgresqlClusterConfigOutput{})
	pulumi.RegisterOutputType(GetMdbPostgresqlClusterConfigAccessOutput{})
	pulumi.RegisterOutputType(GetMdbPostgresqlClusterConfigBackupWindowStartOutput{})
	pulumi.RegisterOutputType(GetMdbPostgresqlClusterConfigPerformanceDiagnosticsOutput{})
	pulumi.RegisterOutputType(GetMdbPostgresqlClusterConfigPoolerConfigOutput{})
	pulumi.RegisterOutputType(GetMdbPostgresqlClusterConfigResourcesOutput{})
	pulumi.RegisterOutputType(GetMdbPostgresqlClusterDatabaseOutput{})
	pulumi.RegisterOutputType(GetMdbPostgresqlClusterDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetMdbPostgresqlClusterDatabaseExtensionOutput{})
	pulumi.RegisterOutputType(GetMdbPostgresqlClusterDatabaseExtensionArrayOutput{})
	pulumi.RegisterOutputType(GetMdbPostgresqlClusterHostOutput{})
	pulumi.RegisterOutputType(GetMdbPostgresqlClusterHostArrayOutput{})
	pulumi.RegisterOutputType(GetMdbPostgresqlClusterUserOutput{})
	pulumi.RegisterOutputType(GetMdbPostgresqlClusterUserArrayOutput{})
	pulumi.RegisterOutputType(GetMdbPostgresqlClusterUserPermissionOutput{})
	pulumi.RegisterOutputType(GetMdbPostgresqlClusterUserPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetMdbRedisClusterConfigOutput{})
	pulumi.RegisterOutputType(GetMdbRedisClusterHostOutput{})
	pulumi.RegisterOutputType(GetMdbRedisClusterHostArrayOutput{})
	pulumi.RegisterOutputType(GetMdbRedisClusterResourcesOutput{})
	pulumi.RegisterOutputType(GetMdbSqlserverClusterBackupWindowStartOutput{})
	pulumi.RegisterOutputType(GetMdbSqlserverClusterBackupWindowStartArrayOutput{})
	pulumi.RegisterOutputType(GetMdbSqlserverClusterDatabaseOutput{})
	pulumi.RegisterOutputType(GetMdbSqlserverClusterDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetMdbSqlserverClusterHostOutput{})
	pulumi.RegisterOutputType(GetMdbSqlserverClusterHostArrayOutput{})
	pulumi.RegisterOutputType(GetMdbSqlserverClusterResourceOutput{})
	pulumi.RegisterOutputType(GetMdbSqlserverClusterResourceArrayOutput{})
	pulumi.RegisterOutputType(GetMdbSqlserverClusterUserOutput{})
	pulumi.RegisterOutputType(GetMdbSqlserverClusterUserArrayOutput{})
	pulumi.RegisterOutputType(GetMdbSqlserverClusterUserPermissionOutput{})
	pulumi.RegisterOutputType(GetMdbSqlserverClusterUserPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetVpcAddressExternalIpv4AddressOutput{})
	pulumi.RegisterOutputType(GetVpcRouteTableStaticRouteOutput{})
	pulumi.RegisterOutputType(GetVpcRouteTableStaticRouteArrayOutput{})
	pulumi.RegisterOutputType(GetVpcSecurityGroupEgressOutput{})
	pulumi.RegisterOutputType(GetVpcSecurityGroupEgressArrayOutput{})
	pulumi.RegisterOutputType(GetVpcSecurityGroupIngressOutput{})
	pulumi.RegisterOutputType(GetVpcSecurityGroupIngressArrayOutput{})
	pulumi.RegisterOutputType(GetVpcSubnetDhcpOptionsOutput{})
	pulumi.RegisterOutputType(GetYdbDatabaseDedicatedLocationOutput{})
	pulumi.RegisterOutputType(GetYdbDatabaseDedicatedLocationRegionOutput{})
	pulumi.RegisterOutputType(GetYdbDatabaseDedicatedLocationZoneOutput{})
	pulumi.RegisterOutputType(GetYdbDatabaseDedicatedScalePolicyOutput{})
	pulumi.RegisterOutputType(GetYdbDatabaseDedicatedScalePolicyFixedScaleOutput{})
	pulumi.RegisterOutputType(GetYdbDatabaseDedicatedStorageConfigOutput{})
	pulumi.RegisterOutputType(GetYdbDatabaseDedicatedStorageConfigArrayOutput{})
}
