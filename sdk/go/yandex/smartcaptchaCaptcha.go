// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a Captcha in the specified folder. For more information, see [the official documentation](https://yandex.cloud/docs/smartcaptcha/).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Simple SmartCaptcha example.
//			_, err := yandex.NewSmartcaptchaCaptcha(ctx, "demo-captcha-simple", &yandex.SmartcaptchaCaptchaArgs{
//				AllowedSites: pulumi.StringArray{
//					pulumi.String("example.com"),
//					pulumi.String("example.ru"),
//				},
//				ChallengeType:      pulumi.String("IMAGE_TEXT"),
//				Complexity:         pulumi.String("HARD"),
//				DeletionProtection: pulumi.Bool(true),
//				PreCheckType:       pulumi.String("SLIDER"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ```go
// package main
//
// import (
//
//	"github.com/airoh-io/pulumi-yandex/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Advanced SmartCaptcha example.
//			_, err := yandex.NewSmartcaptchaCaptcha(ctx, "demo-captcha-advanced", &yandex.SmartcaptchaCaptchaArgs{
//				AllowedSites: pulumi.StringArray{
//					pulumi.String("example.com"),
//					pulumi.String("example.ru"),
//				},
//				ChallengeType:      pulumi.String("IMAGE_TEXT"),
//				Complexity:         pulumi.String("HARD"),
//				DeletionProtection: pulumi.Bool(true),
//				OverrideVariants: yandex.SmartcaptchaCaptchaOverrideVariantArray{
//					&yandex.SmartcaptchaCaptchaOverrideVariantArgs{
//						ChallengeType: pulumi.String("SILHOUETTES"),
//						Complexity:    pulumi.String("EASY"),
//						Description:   pulumi.String("override variant 1"),
//						PreCheckType:  pulumi.String("CHECKBOX"),
//						Uuid:          pulumi.String("xxx"),
//					},
//					&yandex.SmartcaptchaCaptchaOverrideVariantArgs{
//						ChallengeType: pulumi.String("KALEIDOSCOPE"),
//						Complexity:    pulumi.String("HARD"),
//						Description:   pulumi.String("override variant 2"),
//						PreCheckType:  pulumi.String("CHECKBOX"),
//						Uuid:          pulumi.String("yyy"),
//					},
//				},
//				PreCheckType: pulumi.String("SLIDER"),
//				SecurityRules: yandex.SmartcaptchaCaptchaSecurityRuleArray{
//					&yandex.SmartcaptchaCaptchaSecurityRuleArgs{
//						Condition: &yandex.SmartcaptchaCaptchaSecurityRuleConditionArgs{
//							Headers: yandex.SmartcaptchaCaptchaSecurityRuleConditionHeaderArray{
//								&yandex.SmartcaptchaCaptchaSecurityRuleConditionHeaderArgs{
//									Name: pulumi.String("User-Agent"),
//									Value: &yandex.SmartcaptchaCaptchaSecurityRuleConditionHeaderValueArgs{
//										PireRegexMatch: pulumi.String(".*curl.*"),
//									},
//								},
//								&yandex.SmartcaptchaCaptchaSecurityRuleConditionHeaderArgs{
//									Name: pulumi.String("Referer"),
//									Value: &yandex.SmartcaptchaCaptchaSecurityRuleConditionHeaderValueArgs{
//										PireRegexNotMatch: pulumi.String(".*bot.*"),
//									},
//								},
//							},
//							Host: &yandex.SmartcaptchaCaptchaSecurityRuleConditionHostArgs{
//								Hosts: yandex.SmartcaptchaCaptchaSecurityRuleConditionHostHostArray{
//									&yandex.SmartcaptchaCaptchaSecurityRuleConditionHostHostArgs{
//										ExactMatch: pulumi.String("example.com"),
//									},
//									&yandex.SmartcaptchaCaptchaSecurityRuleConditionHostHostArgs{
//										ExactMatch: pulumi.String("example.net"),
//									},
//								},
//							},
//							SourceIp: &yandex.SmartcaptchaCaptchaSecurityRuleConditionSourceIpArgs{
//								GeoIpMatch: &yandex.SmartcaptchaCaptchaSecurityRuleConditionSourceIpGeoIpMatchArgs{
//									Locations: pulumi.StringArray{
//										pulumi.String("ru"),
//										pulumi.String("es"),
//									},
//								},
//								GeoIpNotMatch: &yandex.SmartcaptchaCaptchaSecurityRuleConditionSourceIpGeoIpNotMatchArgs{
//									Locations: pulumi.StringArray{
//										pulumi.String("us"),
//										pulumi.String("fm"),
//										pulumi.String("gb"),
//									},
//								},
//								IpRangesMatch: &yandex.SmartcaptchaCaptchaSecurityRuleConditionSourceIpIpRangesMatchArgs{
//									IpRanges: pulumi.StringArray{
//										pulumi.String("1.2.33.44"),
//										pulumi.String("2.3.4.56"),
//									},
//								},
//								IpRangesNotMatch: &yandex.SmartcaptchaCaptchaSecurityRuleConditionSourceIpIpRangesNotMatchArgs{
//									IpRanges: pulumi.StringArray{
//										pulumi.String("8.8.0.0/16"),
//										pulumi.String("10::1234:1abc:1/64"),
//									},
//								},
//							},
//							Uri: &yandex.SmartcaptchaCaptchaSecurityRuleConditionUriArgs{
//								Path: &yandex.SmartcaptchaCaptchaSecurityRuleConditionUriPathArgs{
//									PrefixMatch: pulumi.String("/form"),
//								},
//								Queries: yandex.SmartcaptchaCaptchaSecurityRuleConditionUriQueryArray{
//									&yandex.SmartcaptchaCaptchaSecurityRuleConditionUriQueryArgs{
//										Key: pulumi.String("firstname"),
//										Value: &yandex.SmartcaptchaCaptchaSecurityRuleConditionUriQueryValueArgs{
//											PireRegexMatch: pulumi.String(".*ivan.*"),
//										},
//									},
//									&yandex.SmartcaptchaCaptchaSecurityRuleConditionUriQueryArgs{
//										Key: pulumi.String("lastname"),
//										Value: &yandex.SmartcaptchaCaptchaSecurityRuleConditionUriQueryValueArgs{
//											PireRegexMatch: pulumi.String(".*petr.*"),
//										},
//									},
//								},
//							},
//						},
//						Description:         pulumi.String("My first security rule. This rule it's just example to show possibilities of configuration."),
//						Name:                pulumi.String("rule1"),
//						OverrideVariantUuid: pulumi.String("xxx"),
//						Priority:            pulumi.Int(11),
//					},
//					&yandex.SmartcaptchaCaptchaSecurityRuleArgs{
//						Condition: &yandex.SmartcaptchaCaptchaSecurityRuleConditionArgs{
//							Uri: &yandex.SmartcaptchaCaptchaSecurityRuleConditionUriArgs{
//								Path: &yandex.SmartcaptchaCaptchaSecurityRuleConditionUriPathArgs{
//									PrefixMatch: pulumi.String("/form"),
//								},
//							},
//						},
//						Description:         pulumi.String("Second rule"),
//						Name:                pulumi.String("rule2"),
//						OverrideVariantUuid: pulumi.String("yyy"),
//						Priority:            pulumi.Int(555),
//					},
//					&yandex.SmartcaptchaCaptchaSecurityRuleArgs{
//						Description:         pulumi.String("Empty condition rule"),
//						Name:                pulumi.String("rule3"),
//						OverrideVariantUuid: pulumi.String("yyy"),
//						Priority:            pulumi.Int(99999),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The resource can be imported by using their `resource ID`. For getting the resource ID you can use Yandex Cloud [Web Console](https://console.yandex.cloud) or [YC CLI](https://yandex.cloud/docs/cli/quickstart).
//
// ```sh
// $ pulumi import yandex:index/smartcaptchaCaptcha:SmartcaptchaCaptcha <resource Name> <resource Id>
// ```
//
// ```sh
// $ pulumi import yandex:index/smartcaptchaCaptcha:SmartcaptchaCaptcha demo-captcha-simple ...
// ```
type SmartcaptchaCaptcha struct {
	pulumi.CustomResourceState

	// List of allowed host names, see [Domain validation](https://yandex.cloud/docs/smartcaptcha/concepts/domain-validation).
	AllowedSites pulumi.StringArrayOutput `pulumi:"allowedSites"`
	// Additional task type of the captcha. Possible values:
	ChallengeType pulumi.StringPtrOutput `pulumi:"challengeType"`
	// Client key of the captcha, see [CAPTCHA keys](https://yandex.cloud/docs/smartcaptcha/concepts/keys).
	ClientKey pulumi.StringOutput `pulumi:"clientKey"`
	// The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
	CloudId pulumi.StringOutput `pulumi:"cloudId"`
	// Complexity of the captcha. Possible values:
	Complexity pulumi.StringPtrOutput `pulumi:"complexity"`
	// The creation timestamp of the resource.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection pulumi.BoolPtrOutput `pulumi:"deletionProtection"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringOutput `pulumi:"folderId"`
	// The resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// List of variants to use in security*rules.
	OverrideVariants SmartcaptchaCaptchaOverrideVariantArrayOutput `pulumi:"overrideVariants"`
	// Basic check type of the captcha.Possible values:
	PreCheckType pulumi.StringPtrOutput `pulumi:"preCheckType"`
	// List of security rules.
	SecurityRules SmartcaptchaCaptchaSecurityRuleArrayOutput `pulumi:"securityRules"`
	// JSON with variables to define the captcha appearance. For more details see generated JSON in cloud console.
	StyleJson pulumi.StringPtrOutput `pulumi:"styleJson"`
	Suspend   pulumi.BoolOutput      `pulumi:"suspend"`
	// Turn off host name check, see [Domain validation](https://yandex.cloud/docs/smartcaptcha/concepts/domain-validation).
	TurnOffHostnameCheck pulumi.BoolPtrOutput `pulumi:"turnOffHostnameCheck"`
}

// NewSmartcaptchaCaptcha registers a new resource with the given unique name, arguments, and options.
func NewSmartcaptchaCaptcha(ctx *pulumi.Context,
	name string, args *SmartcaptchaCaptchaArgs, opts ...pulumi.ResourceOption) (*SmartcaptchaCaptcha, error) {
	if args == nil {
		args = &SmartcaptchaCaptchaArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SmartcaptchaCaptcha
	err := ctx.RegisterResource("yandex:index/smartcaptchaCaptcha:SmartcaptchaCaptcha", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSmartcaptchaCaptcha gets an existing SmartcaptchaCaptcha resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSmartcaptchaCaptcha(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SmartcaptchaCaptchaState, opts ...pulumi.ResourceOption) (*SmartcaptchaCaptcha, error) {
	var resource SmartcaptchaCaptcha
	err := ctx.ReadResource("yandex:index/smartcaptchaCaptcha:SmartcaptchaCaptcha", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SmartcaptchaCaptcha resources.
type smartcaptchaCaptchaState struct {
	// List of allowed host names, see [Domain validation](https://yandex.cloud/docs/smartcaptcha/concepts/domain-validation).
	AllowedSites []string `pulumi:"allowedSites"`
	// Additional task type of the captcha. Possible values:
	ChallengeType *string `pulumi:"challengeType"`
	// Client key of the captcha, see [CAPTCHA keys](https://yandex.cloud/docs/smartcaptcha/concepts/keys).
	ClientKey *string `pulumi:"clientKey"`
	// The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
	CloudId *string `pulumi:"cloudId"`
	// Complexity of the captcha. Possible values:
	Complexity *string `pulumi:"complexity"`
	// The creation timestamp of the resource.
	CreatedAt *string `pulumi:"createdAt"`
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// The resource name.
	Name *string `pulumi:"name"`
	// List of variants to use in security*rules.
	OverrideVariants []SmartcaptchaCaptchaOverrideVariant `pulumi:"overrideVariants"`
	// Basic check type of the captcha.Possible values:
	PreCheckType *string `pulumi:"preCheckType"`
	// List of security rules.
	SecurityRules []SmartcaptchaCaptchaSecurityRule `pulumi:"securityRules"`
	// JSON with variables to define the captcha appearance. For more details see generated JSON in cloud console.
	StyleJson *string `pulumi:"styleJson"`
	Suspend   *bool   `pulumi:"suspend"`
	// Turn off host name check, see [Domain validation](https://yandex.cloud/docs/smartcaptcha/concepts/domain-validation).
	TurnOffHostnameCheck *bool `pulumi:"turnOffHostnameCheck"`
}

type SmartcaptchaCaptchaState struct {
	// List of allowed host names, see [Domain validation](https://yandex.cloud/docs/smartcaptcha/concepts/domain-validation).
	AllowedSites pulumi.StringArrayInput
	// Additional task type of the captcha. Possible values:
	ChallengeType pulumi.StringPtrInput
	// Client key of the captcha, see [CAPTCHA keys](https://yandex.cloud/docs/smartcaptcha/concepts/keys).
	ClientKey pulumi.StringPtrInput
	// The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
	CloudId pulumi.StringPtrInput
	// Complexity of the captcha. Possible values:
	Complexity pulumi.StringPtrInput
	// The creation timestamp of the resource.
	CreatedAt pulumi.StringPtrInput
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection pulumi.BoolPtrInput
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput
	// The resource name.
	Name pulumi.StringPtrInput
	// List of variants to use in security*rules.
	OverrideVariants SmartcaptchaCaptchaOverrideVariantArrayInput
	// Basic check type of the captcha.Possible values:
	PreCheckType pulumi.StringPtrInput
	// List of security rules.
	SecurityRules SmartcaptchaCaptchaSecurityRuleArrayInput
	// JSON with variables to define the captcha appearance. For more details see generated JSON in cloud console.
	StyleJson pulumi.StringPtrInput
	Suspend   pulumi.BoolPtrInput
	// Turn off host name check, see [Domain validation](https://yandex.cloud/docs/smartcaptcha/concepts/domain-validation).
	TurnOffHostnameCheck pulumi.BoolPtrInput
}

func (SmartcaptchaCaptchaState) ElementType() reflect.Type {
	return reflect.TypeOf((*smartcaptchaCaptchaState)(nil)).Elem()
}

type smartcaptchaCaptchaArgs struct {
	// List of allowed host names, see [Domain validation](https://yandex.cloud/docs/smartcaptcha/concepts/domain-validation).
	AllowedSites []string `pulumi:"allowedSites"`
	// Additional task type of the captcha. Possible values:
	ChallengeType *string `pulumi:"challengeType"`
	// The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
	CloudId *string `pulumi:"cloudId"`
	// Complexity of the captcha. Possible values:
	Complexity *string `pulumi:"complexity"`
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// The resource name.
	Name *string `pulumi:"name"`
	// List of variants to use in security*rules.
	OverrideVariants []SmartcaptchaCaptchaOverrideVariant `pulumi:"overrideVariants"`
	// Basic check type of the captcha.Possible values:
	PreCheckType *string `pulumi:"preCheckType"`
	// List of security rules.
	SecurityRules []SmartcaptchaCaptchaSecurityRule `pulumi:"securityRules"`
	// JSON with variables to define the captcha appearance. For more details see generated JSON in cloud console.
	StyleJson *string `pulumi:"styleJson"`
	// Turn off host name check, see [Domain validation](https://yandex.cloud/docs/smartcaptcha/concepts/domain-validation).
	TurnOffHostnameCheck *bool `pulumi:"turnOffHostnameCheck"`
}

// The set of arguments for constructing a SmartcaptchaCaptcha resource.
type SmartcaptchaCaptchaArgs struct {
	// List of allowed host names, see [Domain validation](https://yandex.cloud/docs/smartcaptcha/concepts/domain-validation).
	AllowedSites pulumi.StringArrayInput
	// Additional task type of the captcha. Possible values:
	ChallengeType pulumi.StringPtrInput
	// The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
	CloudId pulumi.StringPtrInput
	// Complexity of the captcha. Possible values:
	Complexity pulumi.StringPtrInput
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection pulumi.BoolPtrInput
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput
	// The resource name.
	Name pulumi.StringPtrInput
	// List of variants to use in security*rules.
	OverrideVariants SmartcaptchaCaptchaOverrideVariantArrayInput
	// Basic check type of the captcha.Possible values:
	PreCheckType pulumi.StringPtrInput
	// List of security rules.
	SecurityRules SmartcaptchaCaptchaSecurityRuleArrayInput
	// JSON with variables to define the captcha appearance. For more details see generated JSON in cloud console.
	StyleJson pulumi.StringPtrInput
	// Turn off host name check, see [Domain validation](https://yandex.cloud/docs/smartcaptcha/concepts/domain-validation).
	TurnOffHostnameCheck pulumi.BoolPtrInput
}

func (SmartcaptchaCaptchaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*smartcaptchaCaptchaArgs)(nil)).Elem()
}

type SmartcaptchaCaptchaInput interface {
	pulumi.Input

	ToSmartcaptchaCaptchaOutput() SmartcaptchaCaptchaOutput
	ToSmartcaptchaCaptchaOutputWithContext(ctx context.Context) SmartcaptchaCaptchaOutput
}

func (*SmartcaptchaCaptcha) ElementType() reflect.Type {
	return reflect.TypeOf((**SmartcaptchaCaptcha)(nil)).Elem()
}

func (i *SmartcaptchaCaptcha) ToSmartcaptchaCaptchaOutput() SmartcaptchaCaptchaOutput {
	return i.ToSmartcaptchaCaptchaOutputWithContext(context.Background())
}

func (i *SmartcaptchaCaptcha) ToSmartcaptchaCaptchaOutputWithContext(ctx context.Context) SmartcaptchaCaptchaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmartcaptchaCaptchaOutput)
}

// SmartcaptchaCaptchaArrayInput is an input type that accepts SmartcaptchaCaptchaArray and SmartcaptchaCaptchaArrayOutput values.
// You can construct a concrete instance of `SmartcaptchaCaptchaArrayInput` via:
//
//	SmartcaptchaCaptchaArray{ SmartcaptchaCaptchaArgs{...} }
type SmartcaptchaCaptchaArrayInput interface {
	pulumi.Input

	ToSmartcaptchaCaptchaArrayOutput() SmartcaptchaCaptchaArrayOutput
	ToSmartcaptchaCaptchaArrayOutputWithContext(context.Context) SmartcaptchaCaptchaArrayOutput
}

type SmartcaptchaCaptchaArray []SmartcaptchaCaptchaInput

func (SmartcaptchaCaptchaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SmartcaptchaCaptcha)(nil)).Elem()
}

func (i SmartcaptchaCaptchaArray) ToSmartcaptchaCaptchaArrayOutput() SmartcaptchaCaptchaArrayOutput {
	return i.ToSmartcaptchaCaptchaArrayOutputWithContext(context.Background())
}

func (i SmartcaptchaCaptchaArray) ToSmartcaptchaCaptchaArrayOutputWithContext(ctx context.Context) SmartcaptchaCaptchaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmartcaptchaCaptchaArrayOutput)
}

// SmartcaptchaCaptchaMapInput is an input type that accepts SmartcaptchaCaptchaMap and SmartcaptchaCaptchaMapOutput values.
// You can construct a concrete instance of `SmartcaptchaCaptchaMapInput` via:
//
//	SmartcaptchaCaptchaMap{ "key": SmartcaptchaCaptchaArgs{...} }
type SmartcaptchaCaptchaMapInput interface {
	pulumi.Input

	ToSmartcaptchaCaptchaMapOutput() SmartcaptchaCaptchaMapOutput
	ToSmartcaptchaCaptchaMapOutputWithContext(context.Context) SmartcaptchaCaptchaMapOutput
}

type SmartcaptchaCaptchaMap map[string]SmartcaptchaCaptchaInput

func (SmartcaptchaCaptchaMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SmartcaptchaCaptcha)(nil)).Elem()
}

func (i SmartcaptchaCaptchaMap) ToSmartcaptchaCaptchaMapOutput() SmartcaptchaCaptchaMapOutput {
	return i.ToSmartcaptchaCaptchaMapOutputWithContext(context.Background())
}

func (i SmartcaptchaCaptchaMap) ToSmartcaptchaCaptchaMapOutputWithContext(ctx context.Context) SmartcaptchaCaptchaMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmartcaptchaCaptchaMapOutput)
}

type SmartcaptchaCaptchaOutput struct{ *pulumi.OutputState }

func (SmartcaptchaCaptchaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SmartcaptchaCaptcha)(nil)).Elem()
}

func (o SmartcaptchaCaptchaOutput) ToSmartcaptchaCaptchaOutput() SmartcaptchaCaptchaOutput {
	return o
}

func (o SmartcaptchaCaptchaOutput) ToSmartcaptchaCaptchaOutputWithContext(ctx context.Context) SmartcaptchaCaptchaOutput {
	return o
}

// List of allowed host names, see [Domain validation](https://yandex.cloud/docs/smartcaptcha/concepts/domain-validation).
func (o SmartcaptchaCaptchaOutput) AllowedSites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SmartcaptchaCaptcha) pulumi.StringArrayOutput { return v.AllowedSites }).(pulumi.StringArrayOutput)
}

// Additional task type of the captcha. Possible values:
func (o SmartcaptchaCaptchaOutput) ChallengeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmartcaptchaCaptcha) pulumi.StringPtrOutput { return v.ChallengeType }).(pulumi.StringPtrOutput)
}

// Client key of the captcha, see [CAPTCHA keys](https://yandex.cloud/docs/smartcaptcha/concepts/keys).
func (o SmartcaptchaCaptchaOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v *SmartcaptchaCaptcha) pulumi.StringOutput { return v.ClientKey }).(pulumi.StringOutput)
}

// The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
func (o SmartcaptchaCaptchaOutput) CloudId() pulumi.StringOutput {
	return o.ApplyT(func(v *SmartcaptchaCaptcha) pulumi.StringOutput { return v.CloudId }).(pulumi.StringOutput)
}

// Complexity of the captcha. Possible values:
func (o SmartcaptchaCaptchaOutput) Complexity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmartcaptchaCaptcha) pulumi.StringPtrOutput { return v.Complexity }).(pulumi.StringPtrOutput)
}

// The creation timestamp of the resource.
func (o SmartcaptchaCaptchaOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *SmartcaptchaCaptcha) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The `true` value means that resource is protected from accidental deletion.
func (o SmartcaptchaCaptchaOutput) DeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SmartcaptchaCaptcha) pulumi.BoolPtrOutput { return v.DeletionProtection }).(pulumi.BoolPtrOutput)
}

// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
func (o SmartcaptchaCaptchaOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *SmartcaptchaCaptcha) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

// The resource name.
func (o SmartcaptchaCaptchaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SmartcaptchaCaptcha) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// List of variants to use in security*rules.
func (o SmartcaptchaCaptchaOutput) OverrideVariants() SmartcaptchaCaptchaOverrideVariantArrayOutput {
	return o.ApplyT(func(v *SmartcaptchaCaptcha) SmartcaptchaCaptchaOverrideVariantArrayOutput { return v.OverrideVariants }).(SmartcaptchaCaptchaOverrideVariantArrayOutput)
}

// Basic check type of the captcha.Possible values:
func (o SmartcaptchaCaptchaOutput) PreCheckType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmartcaptchaCaptcha) pulumi.StringPtrOutput { return v.PreCheckType }).(pulumi.StringPtrOutput)
}

// List of security rules.
func (o SmartcaptchaCaptchaOutput) SecurityRules() SmartcaptchaCaptchaSecurityRuleArrayOutput {
	return o.ApplyT(func(v *SmartcaptchaCaptcha) SmartcaptchaCaptchaSecurityRuleArrayOutput { return v.SecurityRules }).(SmartcaptchaCaptchaSecurityRuleArrayOutput)
}

// JSON with variables to define the captcha appearance. For more details see generated JSON in cloud console.
func (o SmartcaptchaCaptchaOutput) StyleJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmartcaptchaCaptcha) pulumi.StringPtrOutput { return v.StyleJson }).(pulumi.StringPtrOutput)
}

func (o SmartcaptchaCaptchaOutput) Suspend() pulumi.BoolOutput {
	return o.ApplyT(func(v *SmartcaptchaCaptcha) pulumi.BoolOutput { return v.Suspend }).(pulumi.BoolOutput)
}

// Turn off host name check, see [Domain validation](https://yandex.cloud/docs/smartcaptcha/concepts/domain-validation).
func (o SmartcaptchaCaptchaOutput) TurnOffHostnameCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SmartcaptchaCaptcha) pulumi.BoolPtrOutput { return v.TurnOffHostnameCheck }).(pulumi.BoolPtrOutput)
}

type SmartcaptchaCaptchaArrayOutput struct{ *pulumi.OutputState }

func (SmartcaptchaCaptchaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SmartcaptchaCaptcha)(nil)).Elem()
}

func (o SmartcaptchaCaptchaArrayOutput) ToSmartcaptchaCaptchaArrayOutput() SmartcaptchaCaptchaArrayOutput {
	return o
}

func (o SmartcaptchaCaptchaArrayOutput) ToSmartcaptchaCaptchaArrayOutputWithContext(ctx context.Context) SmartcaptchaCaptchaArrayOutput {
	return o
}

func (o SmartcaptchaCaptchaArrayOutput) Index(i pulumi.IntInput) SmartcaptchaCaptchaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SmartcaptchaCaptcha {
		return vs[0].([]*SmartcaptchaCaptcha)[vs[1].(int)]
	}).(SmartcaptchaCaptchaOutput)
}

type SmartcaptchaCaptchaMapOutput struct{ *pulumi.OutputState }

func (SmartcaptchaCaptchaMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SmartcaptchaCaptcha)(nil)).Elem()
}

func (o SmartcaptchaCaptchaMapOutput) ToSmartcaptchaCaptchaMapOutput() SmartcaptchaCaptchaMapOutput {
	return o
}

func (o SmartcaptchaCaptchaMapOutput) ToSmartcaptchaCaptchaMapOutputWithContext(ctx context.Context) SmartcaptchaCaptchaMapOutput {
	return o
}

func (o SmartcaptchaCaptchaMapOutput) MapIndex(k pulumi.StringInput) SmartcaptchaCaptchaOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SmartcaptchaCaptcha {
		return vs[0].(map[string]*SmartcaptchaCaptcha)[vs[1].(string)]
	}).(SmartcaptchaCaptchaOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SmartcaptchaCaptchaInput)(nil)).Elem(), &SmartcaptchaCaptcha{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmartcaptchaCaptchaArrayInput)(nil)).Elem(), SmartcaptchaCaptchaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmartcaptchaCaptchaMapInput)(nil)).Elem(), SmartcaptchaCaptchaMap{})
	pulumi.RegisterOutputType(SmartcaptchaCaptchaOutput{})
	pulumi.RegisterOutputType(SmartcaptchaCaptchaArrayOutput{})
	pulumi.RegisterOutputType(SmartcaptchaCaptchaMapOutput{})
}
