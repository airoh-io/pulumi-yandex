// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Creates an Application Load Balancer in the specified folder. For more information, see [the official documentation](https://yandex.cloud/docs/application-load-balancer/concepts/application-load-balancer).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh/pulumi-yandex";
 *
 * //
 * // Create a new Application Load Balancer (ALB)
 * //
 * const myAlb = new yandex.AlbLoadBalancer("myAlb", {
 *     networkId: yandex_vpc_network["test-network"].id,
 *     allocationPolicy: {
 *         locations: [{
 *             zoneId: "ru-central1-a",
 *             subnetId: yandex_vpc_subnet["test-subnet"].id,
 *         }],
 *     },
 *     listeners: [{
 *         name: "my-listener",
 *         endpoints: [{
 *             addresses: [{
 *                 externalIpv4Address: {},
 *             }],
 *             ports: [8080],
 *         }],
 *         http: {
 *             handler: {
 *                 httpRouterId: yandex_alb_http_router["test-router"].id,
 *             },
 *         },
 *     }],
 *     logOptions: {
 *         discardRules: [{
 *             httpCodeIntervals: ["2XX"],
 *             discardPercent: 75,
 *         }],
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * The resource can be imported by using their `resource ID`. For getting the resource ID you can use Yandex Cloud [Web Console](https://console.yandex.cloud) or [YC CLI](https://yandex.cloud/docs/cli/quickstart).
 *
 * bash
 *
 * ```sh
 * $ pulumi import yandex:index/albLoadBalancer:AlbLoadBalancer <resource Name> <resource Id>
 * ```
 *
 * ```sh
 * $ pulumi import yandex:index/albLoadBalancer:AlbLoadBalancer my_alb ds705**********q7qvl
 * ```
 */
export class AlbLoadBalancer extends pulumi.CustomResource {
    /**
     * Get an existing AlbLoadBalancer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlbLoadBalancerState, opts?: pulumi.CustomResourceOptions): AlbLoadBalancer {
        return new AlbLoadBalancer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/albLoadBalancer:AlbLoadBalancer';

    /**
     * Returns true if the given object is an instance of AlbLoadBalancer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AlbLoadBalancer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AlbLoadBalancer.__pulumiType;
    }

    /**
     * Allocation zones for the Load Balancer instance.
     */
    declare public readonly allocationPolicy: pulumi.Output<outputs.AlbLoadBalancerAllocationPolicy>;
    /**
     * Specifies whether application load balancer is available to zonal shift
     */
    declare public readonly allowZonalShift: pulumi.Output<boolean | undefined>;
    /**
     * Scaling settings of the application load balancer.
     */
    declare public readonly autoScalePolicy: pulumi.Output<outputs.AlbLoadBalancerAutoScalePolicy | undefined>;
    /**
     * The creation timestamp of the resource.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * The resource description.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    declare public readonly folderId: pulumi.Output<string>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    declare public readonly labels: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * List of listeners for the Load Balancer.
     */
    declare public readonly listeners: pulumi.Output<outputs.AlbLoadBalancerListener[] | undefined>;
    /**
     * Cloud Logging group ID to send logs to. Leave empty to use the balancer folder default log group.
     */
    declare public /*out*/ readonly logGroupId: pulumi.Output<string>;
    /**
     * Cloud Logging settings.
     */
    declare public readonly logOptions: pulumi.Output<outputs.AlbLoadBalancerLogOptions | undefined>;
    /**
     * The resource name.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    declare public readonly networkId: pulumi.Output<string>;
    /**
     * The region ID where Load Balancer is located at.
     */
    declare public readonly regionId: pulumi.Output<string | undefined>;
    /**
     * The list of security groups applied to resource or their components.
     */
    declare public readonly securityGroupIds: pulumi.Output<string[] | undefined>;
    /**
     * Status of the Load Balancer.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;

    /**
     * Create a AlbLoadBalancer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlbLoadBalancerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlbLoadBalancerArgs | AlbLoadBalancerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlbLoadBalancerState | undefined;
            resourceInputs["allocationPolicy"] = state?.allocationPolicy;
            resourceInputs["allowZonalShift"] = state?.allowZonalShift;
            resourceInputs["autoScalePolicy"] = state?.autoScalePolicy;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["description"] = state?.description;
            resourceInputs["folderId"] = state?.folderId;
            resourceInputs["labels"] = state?.labels;
            resourceInputs["listeners"] = state?.listeners;
            resourceInputs["logGroupId"] = state?.logGroupId;
            resourceInputs["logOptions"] = state?.logOptions;
            resourceInputs["name"] = state?.name;
            resourceInputs["networkId"] = state?.networkId;
            resourceInputs["regionId"] = state?.regionId;
            resourceInputs["securityGroupIds"] = state?.securityGroupIds;
            resourceInputs["status"] = state?.status;
        } else {
            const args = argsOrState as AlbLoadBalancerArgs | undefined;
            if (args?.allocationPolicy === undefined && !opts.urn) {
                throw new Error("Missing required property 'allocationPolicy'");
            }
            if (args?.networkId === undefined && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            resourceInputs["allocationPolicy"] = args?.allocationPolicy;
            resourceInputs["allowZonalShift"] = args?.allowZonalShift;
            resourceInputs["autoScalePolicy"] = args?.autoScalePolicy;
            resourceInputs["description"] = args?.description;
            resourceInputs["folderId"] = args?.folderId;
            resourceInputs["labels"] = args?.labels;
            resourceInputs["listeners"] = args?.listeners;
            resourceInputs["logOptions"] = args?.logOptions;
            resourceInputs["name"] = args?.name;
            resourceInputs["networkId"] = args?.networkId;
            resourceInputs["regionId"] = args?.regionId;
            resourceInputs["securityGroupIds"] = args?.securityGroupIds;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["logGroupId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AlbLoadBalancer.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AlbLoadBalancer resources.
 */
export interface AlbLoadBalancerState {
    /**
     * Allocation zones for the Load Balancer instance.
     */
    allocationPolicy?: pulumi.Input<inputs.AlbLoadBalancerAllocationPolicy>;
    /**
     * Specifies whether application load balancer is available to zonal shift
     */
    allowZonalShift?: pulumi.Input<boolean>;
    /**
     * Scaling settings of the application load balancer.
     */
    autoScalePolicy?: pulumi.Input<inputs.AlbLoadBalancerAutoScalePolicy>;
    /**
     * The creation timestamp of the resource.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of listeners for the Load Balancer.
     */
    listeners?: pulumi.Input<pulumi.Input<inputs.AlbLoadBalancerListener>[]>;
    /**
     * Cloud Logging group ID to send logs to. Leave empty to use the balancer folder default log group.
     */
    logGroupId?: pulumi.Input<string>;
    /**
     * Cloud Logging settings.
     */
    logOptions?: pulumi.Input<inputs.AlbLoadBalancerLogOptions>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    networkId?: pulumi.Input<string>;
    /**
     * The region ID where Load Balancer is located at.
     */
    regionId?: pulumi.Input<string>;
    /**
     * The list of security groups applied to resource or their components.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Status of the Load Balancer.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AlbLoadBalancer resource.
 */
export interface AlbLoadBalancerArgs {
    /**
     * Allocation zones for the Load Balancer instance.
     */
    allocationPolicy: pulumi.Input<inputs.AlbLoadBalancerAllocationPolicy>;
    /**
     * Specifies whether application load balancer is available to zonal shift
     */
    allowZonalShift?: pulumi.Input<boolean>;
    /**
     * Scaling settings of the application load balancer.
     */
    autoScalePolicy?: pulumi.Input<inputs.AlbLoadBalancerAutoScalePolicy>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of listeners for the Load Balancer.
     */
    listeners?: pulumi.Input<pulumi.Input<inputs.AlbLoadBalancerListener>[]>;
    /**
     * Cloud Logging settings.
     */
    logOptions?: pulumi.Input<inputs.AlbLoadBalancerLogOptions>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    networkId: pulumi.Input<string>;
    /**
     * The region ID where Load Balancer is located at.
     */
    regionId?: pulumi.Input<string>;
    /**
     * The list of security groups applied to resource or their components.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}
