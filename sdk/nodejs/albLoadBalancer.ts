// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Creates an Application Load Balancer in the specified folder. For more information, see
 * [the official documentation](https://cloud.yandex.com/en/docs/application-load-balancer/concepts/application-load-balancer)
 * .
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@pulumi/yandex";
 *
 * const test_balancer = new yandex.AlbLoadBalancer("test-balancer", {
 *     networkId: yandex_vpc_network["test-network"].id,
 *     allocationPolicy: {
 *         locations: [{
 *             zoneId: "ru-central1-a",
 *             subnetId: yandex_vpc_subnet["test-subnet"].id,
 *         }],
 *     },
 *     listeners: [{
 *         name: "my-listener",
 *         endpoints: [{
 *             addresses: [{
 *                 externalIpv4Address: {},
 *             }],
 *             ports: [8080],
 *         }],
 *         http: {
 *             handler: {
 *                 httpRouterId: yandex_alb_http_router["test-router"].id,
 *             },
 *         },
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * An Application Load Balancer can be imported using the `id` of the resource, e.g.
 *
 * ```sh
 *  $ pulumi import yandex:index/albLoadBalancer:AlbLoadBalancer default load_balancer_id
 * ```
 */
export class AlbLoadBalancer extends pulumi.CustomResource {
    /**
     * Get an existing AlbLoadBalancer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlbLoadBalancerState, opts?: pulumi.CustomResourceOptions): AlbLoadBalancer {
        return new AlbLoadBalancer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/albLoadBalancer:AlbLoadBalancer';

    /**
     * Returns true if the given object is an instance of AlbLoadBalancer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AlbLoadBalancer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AlbLoadBalancer.__pulumiType;
    }

    /**
     * Allocation zones for the Load Balancer instance. The structure is documented below.
     */
    public readonly allocationPolicy!: pulumi.Output<outputs.AlbLoadBalancerAllocationPolicy>;
    /**
     * The Load Balancer creation timestamp.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * An optional description of the Load Balancer.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The ID of the folder to which the resource belongs. If omitted, the provider folder is used.
     */
    public readonly folderId!: pulumi.Output<string>;
    /**
     * Labels to assign to this Load Balancer. A list of key/value pairs.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * List of listeners for the Load Balancer. The structure is documented below.
     */
    public readonly listeners!: pulumi.Output<outputs.AlbLoadBalancerListener[] | undefined>;
    /**
     * Cloud log group used by the Load Balancer to store access logs.
     */
    public /*out*/ readonly logGroupId!: pulumi.Output<string>;
    /**
     * name of SNI match.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * ID of the network that the Load Balancer is located at.
     */
    public readonly networkId!: pulumi.Output<string>;
    /**
     * ID of the region that the Load Balancer is located at.
     */
    public readonly regionId!: pulumi.Output<string | undefined>;
    /**
     * A list of ID's of security groups attached to the Load Balancer.
     */
    public readonly securityGroupIds!: pulumi.Output<string[] | undefined>;
    /**
     * Status of the Load Balancer.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a AlbLoadBalancer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlbLoadBalancerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlbLoadBalancerArgs | AlbLoadBalancerState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlbLoadBalancerState | undefined;
            inputs["allocationPolicy"] = state ? state.allocationPolicy : undefined;
            inputs["createdAt"] = state ? state.createdAt : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["folderId"] = state ? state.folderId : undefined;
            inputs["labels"] = state ? state.labels : undefined;
            inputs["listeners"] = state ? state.listeners : undefined;
            inputs["logGroupId"] = state ? state.logGroupId : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["networkId"] = state ? state.networkId : undefined;
            inputs["regionId"] = state ? state.regionId : undefined;
            inputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            inputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as AlbLoadBalancerArgs | undefined;
            if ((!args || args.allocationPolicy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'allocationPolicy'");
            }
            if ((!args || args.networkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            inputs["allocationPolicy"] = args ? args.allocationPolicy : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["folderId"] = args ? args.folderId : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["listeners"] = args ? args.listeners : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["networkId"] = args ? args.networkId : undefined;
            inputs["regionId"] = args ? args.regionId : undefined;
            inputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            inputs["createdAt"] = undefined /*out*/;
            inputs["logGroupId"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(AlbLoadBalancer.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AlbLoadBalancer resources.
 */
export interface AlbLoadBalancerState {
    /**
     * Allocation zones for the Load Balancer instance. The structure is documented below.
     */
    readonly allocationPolicy?: pulumi.Input<inputs.AlbLoadBalancerAllocationPolicy>;
    /**
     * The Load Balancer creation timestamp.
     */
    readonly createdAt?: pulumi.Input<string>;
    /**
     * An optional description of the Load Balancer.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The ID of the folder to which the resource belongs. If omitted, the provider folder is used.
     */
    readonly folderId?: pulumi.Input<string>;
    /**
     * Labels to assign to this Load Balancer. A list of key/value pairs.
     */
    readonly labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of listeners for the Load Balancer. The structure is documented below.
     */
    readonly listeners?: pulumi.Input<pulumi.Input<inputs.AlbLoadBalancerListener>[]>;
    /**
     * Cloud log group used by the Load Balancer to store access logs.
     */
    readonly logGroupId?: pulumi.Input<string>;
    /**
     * name of SNI match.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * ID of the network that the Load Balancer is located at.
     */
    readonly networkId?: pulumi.Input<string>;
    /**
     * ID of the region that the Load Balancer is located at.
     */
    readonly regionId?: pulumi.Input<string>;
    /**
     * A list of ID's of security groups attached to the Load Balancer.
     */
    readonly securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Status of the Load Balancer.
     */
    readonly status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AlbLoadBalancer resource.
 */
export interface AlbLoadBalancerArgs {
    /**
     * Allocation zones for the Load Balancer instance. The structure is documented below.
     */
    readonly allocationPolicy: pulumi.Input<inputs.AlbLoadBalancerAllocationPolicy>;
    /**
     * An optional description of the Load Balancer.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The ID of the folder to which the resource belongs. If omitted, the provider folder is used.
     */
    readonly folderId?: pulumi.Input<string>;
    /**
     * Labels to assign to this Load Balancer. A list of key/value pairs.
     */
    readonly labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of listeners for the Load Balancer. The structure is documented below.
     */
    readonly listeners?: pulumi.Input<pulumi.Input<inputs.AlbLoadBalancerListener>[]>;
    /**
     * name of SNI match.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * ID of the network that the Load Balancer is located at.
     */
    readonly networkId: pulumi.Input<string>;
    /**
     * ID of the region that the Load Balancer is located at.
     */
    readonly regionId?: pulumi.Input<string>;
    /**
     * A list of ID's of security groups attached to the Load Balancer.
     */
    readonly securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}
