// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Creates a virtual host that belongs to specified HTTP router and adds the specified routes to it. For more information, see [the official documentation](https://yandex.cloud/docs/application-load-balancer/concepts/http-router).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh/pulumi-yandex";
 *
 * //
 * // Create a new ALB Virtual Host
 * //
 * const my_vhost = new yandex.AlbVirtualHost("my-vhost", {
 *     httpRouterId: yandex_alb_http_router["my-router"].id,
 *     routes: [{
 *         name: "my-route",
 *         httpRoute: {
 *             httpRouteAction: {
 *                 backendGroupId: yandex_alb_backend_group["my-bg"].id,
 *                 timeout: "3s",
 *             },
 *         },
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * The resource can be imported by using their `resource ID`. For getting the resource ID you can use Yandex Cloud [Web Console](https://console.yandex.cloud) or [YC CLI](https://yandex.cloud/docs/cli/quickstart).
 *
 * The `resource ID` for the ALB virtual host is defined as its `http router id` separated by `/` from the `virtual host's name`.
 *
 * bash
 *
 * ```sh
 * $ pulumi import yandex:index/albVirtualHost:AlbVirtualHost <resource Name> <http_router_id>/<vhost_name>
 * ```
 *
 * ```sh
 * $ pulumi import yandex:index/albVirtualHost:AlbVirtualHost my_vhost ds7ph**********hm4in/route-7565bde...6ddd6-1
 * ```
 */
export class AlbVirtualHost extends pulumi.CustomResource {
    /**
     * Get an existing AlbVirtualHost resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlbVirtualHostState, opts?: pulumi.CustomResourceOptions): AlbVirtualHost {
        return new AlbVirtualHost(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/albVirtualHost:AlbVirtualHost';

    /**
     * Returns true if the given object is an instance of AlbVirtualHost.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AlbVirtualHost {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AlbVirtualHost.__pulumiType;
    }

    /**
     * A list of domains (host/authority header) that will be matched to this virtual host. Wildcard hosts are supported in the form of '*.foo.com' or '*-bar.foo.com'. If not specified, all domains will be matched.
     */
    declare public readonly authorities: pulumi.Output<string[] | undefined>;
    /**
     * The ID of the HTTP router to which the virtual host belongs.
     */
    declare public readonly httpRouterId: pulumi.Output<string>;
    /**
     * Apply the following modifications to the Request/Response header.
     */
    declare public readonly modifyRequestHeaders: pulumi.Output<outputs.AlbVirtualHostModifyRequestHeader[] | undefined>;
    /**
     * Apply the following modifications to the Request/Response header.
     *
     * > Only one type of actions `append` or `replace` or `remove` should be specified.
     */
    declare public readonly modifyResponseHeaders: pulumi.Output<outputs.AlbVirtualHostModifyResponseHeader[] | undefined>;
    /**
     * The resource name.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Rate limit configuration applied for a whole virtual host
     */
    declare public readonly rateLimit: pulumi.Output<outputs.AlbVirtualHostRateLimit | undefined>;
    /**
     * Route options for the virtual host.
     */
    declare public readonly routeOptions: pulumi.Output<outputs.AlbVirtualHostRouteOptions | undefined>;
    /**
     * A Route resource. Routes are matched *in-order*. Be careful when adding them to the end. For instance, having http '/' match first makes all other routes unused.
     *
     * > Exactly one type of routes `httpRoute` or `grpcRoute` should be specified.
     */
    declare public readonly routes: pulumi.Output<outputs.AlbVirtualHostRoute[] | undefined>;

    /**
     * Create a AlbVirtualHost resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlbVirtualHostArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlbVirtualHostArgs | AlbVirtualHostState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlbVirtualHostState | undefined;
            resourceInputs["authorities"] = state?.authorities;
            resourceInputs["httpRouterId"] = state?.httpRouterId;
            resourceInputs["modifyRequestHeaders"] = state?.modifyRequestHeaders;
            resourceInputs["modifyResponseHeaders"] = state?.modifyResponseHeaders;
            resourceInputs["name"] = state?.name;
            resourceInputs["rateLimit"] = state?.rateLimit;
            resourceInputs["routeOptions"] = state?.routeOptions;
            resourceInputs["routes"] = state?.routes;
        } else {
            const args = argsOrState as AlbVirtualHostArgs | undefined;
            if (args?.httpRouterId === undefined && !opts.urn) {
                throw new Error("Missing required property 'httpRouterId'");
            }
            resourceInputs["authorities"] = args?.authorities;
            resourceInputs["httpRouterId"] = args?.httpRouterId;
            resourceInputs["modifyRequestHeaders"] = args?.modifyRequestHeaders;
            resourceInputs["modifyResponseHeaders"] = args?.modifyResponseHeaders;
            resourceInputs["name"] = args?.name;
            resourceInputs["rateLimit"] = args?.rateLimit;
            resourceInputs["routeOptions"] = args?.routeOptions;
            resourceInputs["routes"] = args?.routes;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AlbVirtualHost.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AlbVirtualHost resources.
 */
export interface AlbVirtualHostState {
    /**
     * A list of domains (host/authority header) that will be matched to this virtual host. Wildcard hosts are supported in the form of '*.foo.com' or '*-bar.foo.com'. If not specified, all domains will be matched.
     */
    authorities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the HTTP router to which the virtual host belongs.
     */
    httpRouterId?: pulumi.Input<string>;
    /**
     * Apply the following modifications to the Request/Response header.
     */
    modifyRequestHeaders?: pulumi.Input<pulumi.Input<inputs.AlbVirtualHostModifyRequestHeader>[]>;
    /**
     * Apply the following modifications to the Request/Response header.
     *
     * > Only one type of actions `append` or `replace` or `remove` should be specified.
     */
    modifyResponseHeaders?: pulumi.Input<pulumi.Input<inputs.AlbVirtualHostModifyResponseHeader>[]>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * Rate limit configuration applied for a whole virtual host
     */
    rateLimit?: pulumi.Input<inputs.AlbVirtualHostRateLimit>;
    /**
     * Route options for the virtual host.
     */
    routeOptions?: pulumi.Input<inputs.AlbVirtualHostRouteOptions>;
    /**
     * A Route resource. Routes are matched *in-order*. Be careful when adding them to the end. For instance, having http '/' match first makes all other routes unused.
     *
     * > Exactly one type of routes `httpRoute` or `grpcRoute` should be specified.
     */
    routes?: pulumi.Input<pulumi.Input<inputs.AlbVirtualHostRoute>[]>;
}

/**
 * The set of arguments for constructing a AlbVirtualHost resource.
 */
export interface AlbVirtualHostArgs {
    /**
     * A list of domains (host/authority header) that will be matched to this virtual host. Wildcard hosts are supported in the form of '*.foo.com' or '*-bar.foo.com'. If not specified, all domains will be matched.
     */
    authorities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the HTTP router to which the virtual host belongs.
     */
    httpRouterId: pulumi.Input<string>;
    /**
     * Apply the following modifications to the Request/Response header.
     */
    modifyRequestHeaders?: pulumi.Input<pulumi.Input<inputs.AlbVirtualHostModifyRequestHeader>[]>;
    /**
     * Apply the following modifications to the Request/Response header.
     *
     * > Only one type of actions `append` or `replace` or `remove` should be specified.
     */
    modifyResponseHeaders?: pulumi.Input<pulumi.Input<inputs.AlbVirtualHostModifyResponseHeader>[]>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * Rate limit configuration applied for a whole virtual host
     */
    rateLimit?: pulumi.Input<inputs.AlbVirtualHostRateLimit>;
    /**
     * Route options for the virtual host.
     */
    routeOptions?: pulumi.Input<inputs.AlbVirtualHostRouteOptions>;
    /**
     * A Route resource. Routes are matched *in-order*. Be careful when adding them to the end. For instance, having http '/' match first makes all other routes unused.
     *
     * > Exactly one type of routes `httpRoute` or `grpcRoute` should be specified.
     */
    routes?: pulumi.Input<pulumi.Input<inputs.AlbVirtualHostRoute>[]>;
}
