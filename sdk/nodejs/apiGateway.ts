// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ApiGateway extends pulumi.CustomResource {
    /**
     * Get an existing ApiGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApiGatewayState, opts?: pulumi.CustomResourceOptions): ApiGateway {
        return new ApiGateway(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/apiGateway:ApiGateway';

    /**
     * Returns true if the given object is an instance of ApiGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApiGateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApiGateway.__pulumiType;
    }

    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public /*out*/ readonly domain!: pulumi.Output<string>;
    public readonly folderId!: pulumi.Output<string>;
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly logGroupId!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly spec!: pulumi.Output<string>;
    public readonly specContentHash!: pulumi.Output<number | undefined>;
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a ApiGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApiGatewayArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApiGatewayArgs | ApiGatewayState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApiGatewayState | undefined;
            inputs["createdAt"] = state ? state.createdAt : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["domain"] = state ? state.domain : undefined;
            inputs["folderId"] = state ? state.folderId : undefined;
            inputs["labels"] = state ? state.labels : undefined;
            inputs["logGroupId"] = state ? state.logGroupId : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["spec"] = state ? state.spec : undefined;
            inputs["specContentHash"] = state ? state.specContentHash : undefined;
            inputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as ApiGatewayArgs | undefined;
            if ((!args || args.spec === undefined) && !opts.urn) {
                throw new Error("Missing required property 'spec'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["folderId"] = args ? args.folderId : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["spec"] = args ? args.spec : undefined;
            inputs["specContentHash"] = args ? args.specContentHash : undefined;
            inputs["createdAt"] = undefined /*out*/;
            inputs["domain"] = undefined /*out*/;
            inputs["logGroupId"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ApiGateway.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApiGateway resources.
 */
export interface ApiGatewayState {
    readonly createdAt?: pulumi.Input<string>;
    readonly description?: pulumi.Input<string>;
    readonly domain?: pulumi.Input<string>;
    readonly folderId?: pulumi.Input<string>;
    readonly labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly logGroupId?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly spec?: pulumi.Input<string>;
    readonly specContentHash?: pulumi.Input<number>;
    readonly status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApiGateway resource.
 */
export interface ApiGatewayArgs {
    readonly description?: pulumi.Input<string>;
    readonly folderId?: pulumi.Input<string>;
    readonly labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly name?: pulumi.Input<string>;
    readonly spec: pulumi.Input<string>;
    readonly specContentHash?: pulumi.Input<number>;
}
