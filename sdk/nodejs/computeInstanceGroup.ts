// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * An Instance group resource. For more information, see [the official documentation](https://yandex.cloud/docs/compute/concepts/instance-groups/).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fs from "fs";
 * import * as yandex from "@airoh/pulumi-yandex";
 *
 * //
 * // Create a new Compute Instance Group (IG)
 * //
 * const group1 = new yandex.ComputeInstanceGroup("group1", {
 *     folderId: data.yandex_resourcemanager_folder.test_folder.id,
 *     serviceAccountId: yandex_iam_service_account.test_account.id,
 *     deletionProtection: true,
 *     instanceTemplate: {
 *         platformId: "standard-v1",
 *         resources: {
 *             memory: 2,
 *             cores: 2,
 *         },
 *         bootDisk: {
 *             mode: "READ_WRITE",
 *             initializeParams: {
 *                 imageId: data.yandex_compute_image.ubuntu.id,
 *                 size: 4,
 *             },
 *         },
 *         networkInterfaces: [{
 *             networkId: yandex_vpc_network["my-inst-group-network"].id,
 *             subnetIds: [yandex_vpc_subnet["my-inst-group-subnet"].id],
 *         }],
 *         labels: {
 *             label1: "label1-value",
 *             label2: "label2-value",
 *         },
 *         metadata: {
 *             foo: "bar",
 *             "ssh-keys": `ubuntu:${fs.readFileSync("~/.ssh/id_rsa.pub", "utf8")}`,
 *         },
 *         networkSettings: [{
 *             type: "STANDARD",
 *         }],
 *     },
 *     variables: {
 *         test_key1: "test_value1",
 *         test_key2: "test_value2",
 *     },
 *     scalePolicy: {
 *         fixedScale: {
 *             size: 3,
 *         },
 *     },
 *     allocationPolicy: {
 *         zones: ["ru-central1-a"],
 *     },
 *     deployPolicy: {
 *         maxUnavailable: 2,
 *         maxCreating: 2,
 *         maxExpansion: 2,
 *         maxDeleting: 2,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * The resource can be imported by using their `resource ID`. For getting the resource ID you can use Yandex Cloud [Web Console](https://console.yandex.cloud) or [YC CLI](https://yandex.cloud/docs/cli/quickstart).
 *
 * bash
 *
 * ```sh
 * $ pulumi import yandex:index/computeInstanceGroup:ComputeInstanceGroup <resource Name> <resource Id>
 * ```
 *
 * ```sh
 * $ pulumi import yandex:index/computeInstanceGroup:ComputeInstanceGroup my_ig1 cl1jh**********u4275
 * ```
 */
export class ComputeInstanceGroup extends pulumi.CustomResource {
    /**
     * Get an existing ComputeInstanceGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ComputeInstanceGroupState, opts?: pulumi.CustomResourceOptions): ComputeInstanceGroup {
        return new ComputeInstanceGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/computeInstanceGroup:ComputeInstanceGroup';

    /**
     * Returns true if the given object is an instance of ComputeInstanceGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ComputeInstanceGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ComputeInstanceGroup.__pulumiType;
    }

    /**
     * The allocation policy of the instance group by zone and region.
     */
    declare public readonly allocationPolicy: pulumi.Output<outputs.ComputeInstanceGroupAllocationPolicy>;
    /**
     * Application Load balancing (L7) specifications.
     */
    declare public readonly applicationLoadBalancer: pulumi.Output<outputs.ComputeInstanceGroupApplicationLoadBalancer | undefined>;
    /**
     * The creation timestamp of the resource.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    declare public readonly deletionProtection: pulumi.Output<boolean | undefined>;
    /**
     * The deployment policy of the instance group.
     */
    declare public readonly deployPolicy: pulumi.Output<outputs.ComputeInstanceGroupDeployPolicy>;
    /**
     * The resource description.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    declare public readonly folderId: pulumi.Output<string>;
    /**
     * Health check specifications.
     */
    declare public readonly healthChecks: pulumi.Output<outputs.ComputeInstanceGroupHealthCheck[] | undefined>;
    /**
     * The template for creating new instances.
     */
    declare public readonly instanceTemplate: pulumi.Output<outputs.ComputeInstanceGroupInstanceTemplate>;
    /**
     * Instances block.
     */
    declare public /*out*/ readonly instances: pulumi.Output<outputs.ComputeInstanceGroupInstance[]>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    declare public readonly labels: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Load balancing specifications.
     */
    declare public readonly loadBalancer: pulumi.Output<outputs.ComputeInstanceGroupLoadBalancer | undefined>;
    /**
     * Timeout for waiting for the VM to become healthy. If the timeout is exceeded, the VM will be turned off based on the deployment policy. Specified in seconds.
     */
    declare public readonly maxCheckingHealthDuration: pulumi.Output<number | undefined>;
    /**
     * The resource name.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The scaling policy of the instance group.
     *
     * > Either `fixedScale` or `autoScale` must be specified.
     */
    declare public readonly scalePolicy: pulumi.Output<outputs.ComputeInstanceGroupScalePolicy>;
    /**
     * [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
     */
    declare public readonly serviceAccountId: pulumi.Output<string>;
    /**
     * The status of the instance.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * A set of key/value variables pairs to assign to the instance group.
     */
    declare public readonly variables: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a ComputeInstanceGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ComputeInstanceGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ComputeInstanceGroupArgs | ComputeInstanceGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ComputeInstanceGroupState | undefined;
            resourceInputs["allocationPolicy"] = state?.allocationPolicy;
            resourceInputs["applicationLoadBalancer"] = state?.applicationLoadBalancer;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["deletionProtection"] = state?.deletionProtection;
            resourceInputs["deployPolicy"] = state?.deployPolicy;
            resourceInputs["description"] = state?.description;
            resourceInputs["folderId"] = state?.folderId;
            resourceInputs["healthChecks"] = state?.healthChecks;
            resourceInputs["instanceTemplate"] = state?.instanceTemplate;
            resourceInputs["instances"] = state?.instances;
            resourceInputs["labels"] = state?.labels;
            resourceInputs["loadBalancer"] = state?.loadBalancer;
            resourceInputs["maxCheckingHealthDuration"] = state?.maxCheckingHealthDuration;
            resourceInputs["name"] = state?.name;
            resourceInputs["scalePolicy"] = state?.scalePolicy;
            resourceInputs["serviceAccountId"] = state?.serviceAccountId;
            resourceInputs["status"] = state?.status;
            resourceInputs["variables"] = state?.variables;
        } else {
            const args = argsOrState as ComputeInstanceGroupArgs | undefined;
            if (args?.allocationPolicy === undefined && !opts.urn) {
                throw new Error("Missing required property 'allocationPolicy'");
            }
            if (args?.deployPolicy === undefined && !opts.urn) {
                throw new Error("Missing required property 'deployPolicy'");
            }
            if (args?.instanceTemplate === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceTemplate'");
            }
            if (args?.scalePolicy === undefined && !opts.urn) {
                throw new Error("Missing required property 'scalePolicy'");
            }
            if (args?.serviceAccountId === undefined && !opts.urn) {
                throw new Error("Missing required property 'serviceAccountId'");
            }
            resourceInputs["allocationPolicy"] = args?.allocationPolicy;
            resourceInputs["applicationLoadBalancer"] = args?.applicationLoadBalancer;
            resourceInputs["deletionProtection"] = args?.deletionProtection;
            resourceInputs["deployPolicy"] = args?.deployPolicy;
            resourceInputs["description"] = args?.description;
            resourceInputs["folderId"] = args?.folderId;
            resourceInputs["healthChecks"] = args?.healthChecks;
            resourceInputs["instanceTemplate"] = args?.instanceTemplate;
            resourceInputs["labels"] = args?.labels;
            resourceInputs["loadBalancer"] = args?.loadBalancer;
            resourceInputs["maxCheckingHealthDuration"] = args?.maxCheckingHealthDuration;
            resourceInputs["name"] = args?.name;
            resourceInputs["scalePolicy"] = args?.scalePolicy;
            resourceInputs["serviceAccountId"] = args?.serviceAccountId;
            resourceInputs["variables"] = args?.variables;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["instances"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ComputeInstanceGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ComputeInstanceGroup resources.
 */
export interface ComputeInstanceGroupState {
    /**
     * The allocation policy of the instance group by zone and region.
     */
    allocationPolicy?: pulumi.Input<inputs.ComputeInstanceGroupAllocationPolicy>;
    /**
     * Application Load balancing (L7) specifications.
     */
    applicationLoadBalancer?: pulumi.Input<inputs.ComputeInstanceGroupApplicationLoadBalancer>;
    /**
     * The creation timestamp of the resource.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The deployment policy of the instance group.
     */
    deployPolicy?: pulumi.Input<inputs.ComputeInstanceGroupDeployPolicy>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * Health check specifications.
     */
    healthChecks?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceGroupHealthCheck>[]>;
    /**
     * The template for creating new instances.
     */
    instanceTemplate?: pulumi.Input<inputs.ComputeInstanceGroupInstanceTemplate>;
    /**
     * Instances block.
     */
    instances?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceGroupInstance>[]>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Load balancing specifications.
     */
    loadBalancer?: pulumi.Input<inputs.ComputeInstanceGroupLoadBalancer>;
    /**
     * Timeout for waiting for the VM to become healthy. If the timeout is exceeded, the VM will be turned off based on the deployment policy. Specified in seconds.
     */
    maxCheckingHealthDuration?: pulumi.Input<number>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The scaling policy of the instance group.
     *
     * > Either `fixedScale` or `autoScale` must be specified.
     */
    scalePolicy?: pulumi.Input<inputs.ComputeInstanceGroupScalePolicy>;
    /**
     * [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
     */
    serviceAccountId?: pulumi.Input<string>;
    /**
     * The status of the instance.
     */
    status?: pulumi.Input<string>;
    /**
     * A set of key/value variables pairs to assign to the instance group.
     */
    variables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a ComputeInstanceGroup resource.
 */
export interface ComputeInstanceGroupArgs {
    /**
     * The allocation policy of the instance group by zone and region.
     */
    allocationPolicy: pulumi.Input<inputs.ComputeInstanceGroupAllocationPolicy>;
    /**
     * Application Load balancing (L7) specifications.
     */
    applicationLoadBalancer?: pulumi.Input<inputs.ComputeInstanceGroupApplicationLoadBalancer>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The deployment policy of the instance group.
     */
    deployPolicy: pulumi.Input<inputs.ComputeInstanceGroupDeployPolicy>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * Health check specifications.
     */
    healthChecks?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceGroupHealthCheck>[]>;
    /**
     * The template for creating new instances.
     */
    instanceTemplate: pulumi.Input<inputs.ComputeInstanceGroupInstanceTemplate>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Load balancing specifications.
     */
    loadBalancer?: pulumi.Input<inputs.ComputeInstanceGroupLoadBalancer>;
    /**
     * Timeout for waiting for the VM to become healthy. If the timeout is exceeded, the VM will be turned off based on the deployment policy. Specified in seconds.
     */
    maxCheckingHealthDuration?: pulumi.Input<number>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The scaling policy of the instance group.
     *
     * > Either `fixedScale` or `autoScale` must be specified.
     */
    scalePolicy: pulumi.Input<inputs.ComputeInstanceGroupScalePolicy>;
    /**
     * [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
     */
    serviceAccountId: pulumi.Input<string>;
    /**
     * A set of key/value variables pairs to assign to the instance group.
     */
    variables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
