// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manages a Yandex Data Processing cluster. For more information, see [the official documentation](https://yandex.cloud/docs/data-proc/).
 *
 * ## Import
 *
 * The resource can be imported by using their `resource ID`. For getting the resource ID you can use Yandex Cloud [Web Console](https://console.yandex.cloud) or [YC CLI](https://yandex.cloud/docs/cli/quickstart).
 *
 * bash
 *
 * ```sh
 * $ pulumi import yandex:index/dataprocCluster:DataprocCluster <resource Name> <resource Id>
 * ```
 *
 * ```sh
 * $ pulumi import yandex:index/dataprocCluster:DataprocCluster foo c9q85**********gpn21
 * ```
 */
export class DataprocCluster extends pulumi.CustomResource {
    /**
     * Get an existing DataprocCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataprocClusterState, opts?: pulumi.CustomResourceOptions): DataprocCluster {
        return new DataprocCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/dataprocCluster:DataprocCluster';

    /**
     * Returns true if the given object is an instance of DataprocCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataprocCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataprocCluster.__pulumiType;
    }

    /**
     * Service account to be used for managing hosts in an autoscaled subcluster.
     */
    declare public readonly autoscalingServiceAccountId: pulumi.Output<string | undefined>;
    /**
     * Name of the Object Storage bucket to use for Yandex Data Processing jobs. Yandex Data Processing Agent saves output of job driver's process to specified bucket. In order for this to work service account (specified by the `serviceAccountId` argument) should be given permission to create objects within this bucket.
     */
    declare public readonly bucket: pulumi.Output<string | undefined>;
    /**
     * Configuration and resources for hosts that should be created with the cluster.
     */
    declare public readonly clusterConfig: pulumi.Output<outputs.DataprocClusterClusterConfig>;
    /**
     * The creation timestamp of the resource.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    declare public readonly deletionProtection: pulumi.Output<boolean>;
    /**
     * The resource description.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Deployment environment of the cluster. Can be either `PRESTABLE` or `PRODUCTION`. The default is `PRESTABLE`.
     */
    declare public readonly environment: pulumi.Output<string | undefined>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    declare public readonly folderId: pulumi.Output<string>;
    /**
     * A list of host group IDs to place VMs of the cluster on.
     */
    declare public readonly hostGroupIds: pulumi.Output<string[] | undefined>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    declare public readonly labels: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * ID of the cloud logging group for cluster logs.
     */
    declare public readonly logGroupId: pulumi.Output<string | undefined>;
    /**
     * The resource name.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The list of security groups applied to resource or their components.
     */
    declare public readonly securityGroupIds: pulumi.Output<string[] | undefined>;
    /**
     * Service account to be used by the Yandex Data Processing agent to access resources of Yandex Cloud. Selected service account should have `mdb.dataproc.agent` role on the folder where the Yandex Data Processing cluster will be located.
     */
    declare public readonly serviceAccountId: pulumi.Output<string>;
    /**
     * Whether to enable UI Proxy feature.
     */
    declare public readonly uiProxy: pulumi.Output<boolean | undefined>;
    /**
     * The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.
     */
    declare public readonly zoneId: pulumi.Output<string>;

    /**
     * Create a DataprocCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataprocClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataprocClusterArgs | DataprocClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataprocClusterState | undefined;
            resourceInputs["autoscalingServiceAccountId"] = state?.autoscalingServiceAccountId;
            resourceInputs["bucket"] = state?.bucket;
            resourceInputs["clusterConfig"] = state?.clusterConfig;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["deletionProtection"] = state?.deletionProtection;
            resourceInputs["description"] = state?.description;
            resourceInputs["environment"] = state?.environment;
            resourceInputs["folderId"] = state?.folderId;
            resourceInputs["hostGroupIds"] = state?.hostGroupIds;
            resourceInputs["labels"] = state?.labels;
            resourceInputs["logGroupId"] = state?.logGroupId;
            resourceInputs["name"] = state?.name;
            resourceInputs["securityGroupIds"] = state?.securityGroupIds;
            resourceInputs["serviceAccountId"] = state?.serviceAccountId;
            resourceInputs["uiProxy"] = state?.uiProxy;
            resourceInputs["zoneId"] = state?.zoneId;
        } else {
            const args = argsOrState as DataprocClusterArgs | undefined;
            if (args?.clusterConfig === undefined && !opts.urn) {
                throw new Error("Missing required property 'clusterConfig'");
            }
            if (args?.serviceAccountId === undefined && !opts.urn) {
                throw new Error("Missing required property 'serviceAccountId'");
            }
            resourceInputs["autoscalingServiceAccountId"] = args?.autoscalingServiceAccountId;
            resourceInputs["bucket"] = args?.bucket;
            resourceInputs["clusterConfig"] = args?.clusterConfig;
            resourceInputs["deletionProtection"] = args?.deletionProtection;
            resourceInputs["description"] = args?.description;
            resourceInputs["environment"] = args?.environment;
            resourceInputs["folderId"] = args?.folderId;
            resourceInputs["hostGroupIds"] = args?.hostGroupIds;
            resourceInputs["labels"] = args?.labels;
            resourceInputs["logGroupId"] = args?.logGroupId;
            resourceInputs["name"] = args?.name;
            resourceInputs["securityGroupIds"] = args?.securityGroupIds;
            resourceInputs["serviceAccountId"] = args?.serviceAccountId;
            resourceInputs["uiProxy"] = args?.uiProxy;
            resourceInputs["zoneId"] = args?.zoneId;
            resourceInputs["createdAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataprocCluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DataprocCluster resources.
 */
export interface DataprocClusterState {
    /**
     * Service account to be used for managing hosts in an autoscaled subcluster.
     */
    autoscalingServiceAccountId?: pulumi.Input<string>;
    /**
     * Name of the Object Storage bucket to use for Yandex Data Processing jobs. Yandex Data Processing Agent saves output of job driver's process to specified bucket. In order for this to work service account (specified by the `serviceAccountId` argument) should be given permission to create objects within this bucket.
     */
    bucket?: pulumi.Input<string>;
    /**
     * Configuration and resources for hosts that should be created with the cluster.
     */
    clusterConfig?: pulumi.Input<inputs.DataprocClusterClusterConfig>;
    /**
     * The creation timestamp of the resource.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * Deployment environment of the cluster. Can be either `PRESTABLE` or `PRODUCTION`. The default is `PRESTABLE`.
     */
    environment?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * A list of host group IDs to place VMs of the cluster on.
     */
    hostGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * ID of the cloud logging group for cluster logs.
     */
    logGroupId?: pulumi.Input<string>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The list of security groups applied to resource or their components.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Service account to be used by the Yandex Data Processing agent to access resources of Yandex Cloud. Selected service account should have `mdb.dataproc.agent` role on the folder where the Yandex Data Processing cluster will be located.
     */
    serviceAccountId?: pulumi.Input<string>;
    /**
     * Whether to enable UI Proxy feature.
     */
    uiProxy?: pulumi.Input<boolean>;
    /**
     * The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DataprocCluster resource.
 */
export interface DataprocClusterArgs {
    /**
     * Service account to be used for managing hosts in an autoscaled subcluster.
     */
    autoscalingServiceAccountId?: pulumi.Input<string>;
    /**
     * Name of the Object Storage bucket to use for Yandex Data Processing jobs. Yandex Data Processing Agent saves output of job driver's process to specified bucket. In order for this to work service account (specified by the `serviceAccountId` argument) should be given permission to create objects within this bucket.
     */
    bucket?: pulumi.Input<string>;
    /**
     * Configuration and resources for hosts that should be created with the cluster.
     */
    clusterConfig: pulumi.Input<inputs.DataprocClusterClusterConfig>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * Deployment environment of the cluster. Can be either `PRESTABLE` or `PRODUCTION`. The default is `PRESTABLE`.
     */
    environment?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * A list of host group IDs to place VMs of the cluster on.
     */
    hostGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * ID of the cloud logging group for cluster logs.
     */
    logGroupId?: pulumi.Input<string>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The list of security groups applied to resource or their components.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Service account to be used by the Yandex Data Processing agent to access resources of Yandex Cloud. Selected service account should have `mdb.dataproc.agent` role on the folder where the Yandex Data Processing cluster will be located.
     */
    serviceAccountId: pulumi.Input<string>;
    /**
     * Whether to enable UI Proxy feature.
     */
    uiProxy?: pulumi.Input<boolean>;
    /**
     * The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.
     */
    zoneId?: pulumi.Input<string>;
}
