// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Allows management of [Yandex Cloud Function](https://yandex.cloud/docs/functions)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * //
 * // Create a new Yandex Cloud Function
 * //
 * const test_function = new yandex.Function("test-function", {
 *     description: "any description",
 *     userHash: "any_user_defined_string",
 *     runtime: "python37",
 *     entrypoint: "main",
 *     memory: 128,
 *     executionTimeout: "10",
 *     serviceAccountId: "ajeih**********838kk",
 *     tags: ["my_tag"],
 *     secrets: [{
 *         id: yandex_lockbox_secret.secret.id,
 *         versionId: yandex_lockbox_secret_version.secret_version.id,
 *         key: "secret-key",
 *         environmentVariable: "ENV_VARIABLE",
 *     }],
 *     content: {
 *         zipFilename: "function.zip",
 *     },
 *     mounts: [{
 *         name: "mnt",
 *         ephemeralDisk: {
 *             sizeGb: 32,
 *         },
 *     }],
 *     asyncInvocation: {
 *         retriesCount: 3,
 *         serviceAccountId: "ajeih**********838kk",
 *         ymqFailureTarget: {
 *             serviceAccountId: "ajeqr**********qb76m",
 *             arn: "yrn:yc:ymq:ru-central1:b1glr**********9hsfp:fail",
 *         },
 *         ymqSuccessTarget: {
 *             serviceAccountId: "ajeqr**********qb76m",
 *             arn: "yrn:yc:ymq:ru-central1:b1glr**********9hsfp:success",
 *         },
 *     },
 *     logOptions: {
 *         logGroupId: "e2392**********eq9fr",
 *         minLevel: "ERROR",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * The resource can be imported by using their `resource ID`. For getting the resource ID you can use Yandex Cloud [Web Console](https://console.yandex.cloud) or [YC CLI](https://yandex.cloud/docs/cli/quickstart).
 *
 * ```sh
 * $ pulumi import yandex:index/function:Function <resource Name> <resource Id>
 * ```
 *
 * ```sh
 * $ pulumi import yandex:index/function:Function test-function d4e45**********pqvd3
 * ```
 */
export class Function extends pulumi.CustomResource {
    /**
     * Get an existing Function resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FunctionState, opts?: pulumi.CustomResourceOptions): Function {
        return new Function(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/function:Function';

    /**
     * Returns true if the given object is an instance of Function.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Function {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Function.__pulumiType;
    }

    /**
     * Config for asynchronous invocations of Yandex Cloud Function.
     */
    declare public readonly asyncInvocation: pulumi.Output<outputs.FunctionAsyncInvocation | undefined>;
    /**
     * The maximum number of requests processed by a function instance at the same time.
     */
    declare public readonly concurrency: pulumi.Output<number>;
    /**
     * Function version connectivity. If specified the version will be attached to specified network.
     */
    declare public readonly connectivity: pulumi.Output<outputs.FunctionConnectivity | undefined>;
    /**
     * Version deployment content for Yandex Cloud Function code. Can be only one `package` or `content` section. Either `package` or `content` section must be specified.
     */
    declare public readonly content: pulumi.Output<outputs.FunctionContent | undefined>;
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * The resource description.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Entrypoint for Yandex Cloud Function.
     */
    declare public readonly entrypoint: pulumi.Output<string>;
    /**
     * A set of key/value environment variables for Yandex Cloud Function. Each key must begin with a letter (A-Z, a-z).
     */
    declare public readonly environment: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Execution timeout in seconds for Yandex Cloud Function.
     */
    declare public readonly executionTimeout: pulumi.Output<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    declare public readonly folderId: pulumi.Output<string>;
    /**
     * Image size for Yandex Cloud Function.
     */
    declare public /*out*/ readonly imageSize: pulumi.Output<number>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    declare public readonly labels: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Options for logging from Yandex Cloud Function.
     */
    declare public readonly logOptions: pulumi.Output<outputs.FunctionLogOptions | undefined>;
    /**
     * Memory in megabytes (**aligned to 128MB**) for Yandex Cloud Function.
     */
    declare public readonly memory: pulumi.Output<number>;
    /**
     * Options set the access mode to function's metadata endpoints.
     */
    declare public readonly metadataOptions: pulumi.Output<outputs.FunctionMetadataOptions>;
    /**
     * Mounts for Yandex Cloud Function.
     */
    declare public readonly mounts: pulumi.Output<outputs.FunctionMount[]>;
    /**
     * The resource name.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Version deployment package for Yandex Cloud Function code. Can be only one `package` or `content` section. Either `package` or `content` section must be specified.
     */
    declare public readonly package: pulumi.Output<outputs.FunctionPackage | undefined>;
    /**
     * Runtime for Yandex Cloud Function.
     */
    declare public readonly runtime: pulumi.Output<string>;
    /**
     * Secrets for Yandex Cloud Function.
     */
    declare public readonly secrets: pulumi.Output<outputs.FunctionSecret[]>;
    /**
     * [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
     */
    declare public readonly serviceAccountId: pulumi.Output<string | undefined>;
    /**
     * (**DEPRECATED**, use `mounts > objectStorage` instead). Storage mounts for Yandex Cloud Function.
     *
     * @deprecated The 'storage_mounts' field has been deprecated. Please use 'mounts' instead.
     */
    declare public readonly storageMounts: pulumi.Output<outputs.FunctionStorageMount[]>;
    /**
     * Tags for Yandex Cloud Function. Tag `$latest` isn't returned.
     */
    declare public readonly tags: pulumi.Output<string[]>;
    /**
     * Tmpfs size for Yandex Cloud Function.
     */
    declare public readonly tmpfsSize: pulumi.Output<number>;
    /**
     * User-defined string for current function version. User must change this string any times when function changed. Function will be updated when hash is changed.
     */
    declare public readonly userHash: pulumi.Output<string>;
    /**
     * Version of Yandex Cloud Function.
     */
    declare public /*out*/ readonly version: pulumi.Output<string>;

    /**
     * Create a Function resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FunctionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FunctionArgs | FunctionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FunctionState | undefined;
            resourceInputs["asyncInvocation"] = state?.asyncInvocation;
            resourceInputs["concurrency"] = state?.concurrency;
            resourceInputs["connectivity"] = state?.connectivity;
            resourceInputs["content"] = state?.content;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["description"] = state?.description;
            resourceInputs["entrypoint"] = state?.entrypoint;
            resourceInputs["environment"] = state?.environment;
            resourceInputs["executionTimeout"] = state?.executionTimeout;
            resourceInputs["folderId"] = state?.folderId;
            resourceInputs["imageSize"] = state?.imageSize;
            resourceInputs["labels"] = state?.labels;
            resourceInputs["logOptions"] = state?.logOptions;
            resourceInputs["memory"] = state?.memory;
            resourceInputs["metadataOptions"] = state?.metadataOptions;
            resourceInputs["mounts"] = state?.mounts;
            resourceInputs["name"] = state?.name;
            resourceInputs["package"] = state?.package;
            resourceInputs["runtime"] = state?.runtime;
            resourceInputs["secrets"] = state?.secrets;
            resourceInputs["serviceAccountId"] = state?.serviceAccountId;
            resourceInputs["storageMounts"] = state?.storageMounts;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tmpfsSize"] = state?.tmpfsSize;
            resourceInputs["userHash"] = state?.userHash;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as FunctionArgs | undefined;
            if (args?.entrypoint === undefined && !opts.urn) {
                throw new Error("Missing required property 'entrypoint'");
            }
            if (args?.memory === undefined && !opts.urn) {
                throw new Error("Missing required property 'memory'");
            }
            if (args?.runtime === undefined && !opts.urn) {
                throw new Error("Missing required property 'runtime'");
            }
            if (args?.userHash === undefined && !opts.urn) {
                throw new Error("Missing required property 'userHash'");
            }
            resourceInputs["asyncInvocation"] = args?.asyncInvocation;
            resourceInputs["concurrency"] = args?.concurrency;
            resourceInputs["connectivity"] = args?.connectivity;
            resourceInputs["content"] = args?.content;
            resourceInputs["description"] = args?.description;
            resourceInputs["entrypoint"] = args?.entrypoint;
            resourceInputs["environment"] = args?.environment;
            resourceInputs["executionTimeout"] = args?.executionTimeout;
            resourceInputs["folderId"] = args?.folderId;
            resourceInputs["labels"] = args?.labels;
            resourceInputs["logOptions"] = args?.logOptions;
            resourceInputs["memory"] = args?.memory;
            resourceInputs["metadataOptions"] = args?.metadataOptions;
            resourceInputs["mounts"] = args?.mounts;
            resourceInputs["name"] = args?.name;
            resourceInputs["package"] = args?.package;
            resourceInputs["runtime"] = args?.runtime;
            resourceInputs["secrets"] = args?.secrets;
            resourceInputs["serviceAccountId"] = args?.serviceAccountId;
            resourceInputs["storageMounts"] = args?.storageMounts;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["tmpfsSize"] = args?.tmpfsSize;
            resourceInputs["userHash"] = args?.userHash;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["imageSize"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Function.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Function resources.
 */
export interface FunctionState {
    /**
     * Config for asynchronous invocations of Yandex Cloud Function.
     */
    asyncInvocation?: pulumi.Input<inputs.FunctionAsyncInvocation>;
    /**
     * The maximum number of requests processed by a function instance at the same time.
     */
    concurrency?: pulumi.Input<number>;
    /**
     * Function version connectivity. If specified the version will be attached to specified network.
     */
    connectivity?: pulumi.Input<inputs.FunctionConnectivity>;
    /**
     * Version deployment content for Yandex Cloud Function code. Can be only one `package` or `content` section. Either `package` or `content` section must be specified.
     */
    content?: pulumi.Input<inputs.FunctionContent>;
    createdAt?: pulumi.Input<string>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * Entrypoint for Yandex Cloud Function.
     */
    entrypoint?: pulumi.Input<string>;
    /**
     * A set of key/value environment variables for Yandex Cloud Function. Each key must begin with a letter (A-Z, a-z).
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Execution timeout in seconds for Yandex Cloud Function.
     */
    executionTimeout?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * Image size for Yandex Cloud Function.
     */
    imageSize?: pulumi.Input<number>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Options for logging from Yandex Cloud Function.
     */
    logOptions?: pulumi.Input<inputs.FunctionLogOptions>;
    /**
     * Memory in megabytes (**aligned to 128MB**) for Yandex Cloud Function.
     */
    memory?: pulumi.Input<number>;
    /**
     * Options set the access mode to function's metadata endpoints.
     */
    metadataOptions?: pulumi.Input<inputs.FunctionMetadataOptions>;
    /**
     * Mounts for Yandex Cloud Function.
     */
    mounts?: pulumi.Input<pulumi.Input<inputs.FunctionMount>[]>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * Version deployment package for Yandex Cloud Function code. Can be only one `package` or `content` section. Either `package` or `content` section must be specified.
     */
    package?: pulumi.Input<inputs.FunctionPackage>;
    /**
     * Runtime for Yandex Cloud Function.
     */
    runtime?: pulumi.Input<string>;
    /**
     * Secrets for Yandex Cloud Function.
     */
    secrets?: pulumi.Input<pulumi.Input<inputs.FunctionSecret>[]>;
    /**
     * [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
     */
    serviceAccountId?: pulumi.Input<string>;
    /**
     * (**DEPRECATED**, use `mounts > objectStorage` instead). Storage mounts for Yandex Cloud Function.
     *
     * @deprecated The 'storage_mounts' field has been deprecated. Please use 'mounts' instead.
     */
    storageMounts?: pulumi.Input<pulumi.Input<inputs.FunctionStorageMount>[]>;
    /**
     * Tags for Yandex Cloud Function. Tag `$latest` isn't returned.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tmpfs size for Yandex Cloud Function.
     */
    tmpfsSize?: pulumi.Input<number>;
    /**
     * User-defined string for current function version. User must change this string any times when function changed. Function will be updated when hash is changed.
     */
    userHash?: pulumi.Input<string>;
    /**
     * Version of Yandex Cloud Function.
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Function resource.
 */
export interface FunctionArgs {
    /**
     * Config for asynchronous invocations of Yandex Cloud Function.
     */
    asyncInvocation?: pulumi.Input<inputs.FunctionAsyncInvocation>;
    /**
     * The maximum number of requests processed by a function instance at the same time.
     */
    concurrency?: pulumi.Input<number>;
    /**
     * Function version connectivity. If specified the version will be attached to specified network.
     */
    connectivity?: pulumi.Input<inputs.FunctionConnectivity>;
    /**
     * Version deployment content for Yandex Cloud Function code. Can be only one `package` or `content` section. Either `package` or `content` section must be specified.
     */
    content?: pulumi.Input<inputs.FunctionContent>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * Entrypoint for Yandex Cloud Function.
     */
    entrypoint: pulumi.Input<string>;
    /**
     * A set of key/value environment variables for Yandex Cloud Function. Each key must begin with a letter (A-Z, a-z).
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Execution timeout in seconds for Yandex Cloud Function.
     */
    executionTimeout?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Options for logging from Yandex Cloud Function.
     */
    logOptions?: pulumi.Input<inputs.FunctionLogOptions>;
    /**
     * Memory in megabytes (**aligned to 128MB**) for Yandex Cloud Function.
     */
    memory: pulumi.Input<number>;
    /**
     * Options set the access mode to function's metadata endpoints.
     */
    metadataOptions?: pulumi.Input<inputs.FunctionMetadataOptions>;
    /**
     * Mounts for Yandex Cloud Function.
     */
    mounts?: pulumi.Input<pulumi.Input<inputs.FunctionMount>[]>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * Version deployment package for Yandex Cloud Function code. Can be only one `package` or `content` section. Either `package` or `content` section must be specified.
     */
    package?: pulumi.Input<inputs.FunctionPackage>;
    /**
     * Runtime for Yandex Cloud Function.
     */
    runtime: pulumi.Input<string>;
    /**
     * Secrets for Yandex Cloud Function.
     */
    secrets?: pulumi.Input<pulumi.Input<inputs.FunctionSecret>[]>;
    /**
     * [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
     */
    serviceAccountId?: pulumi.Input<string>;
    /**
     * (**DEPRECATED**, use `mounts > objectStorage` instead). Storage mounts for Yandex Cloud Function.
     *
     * @deprecated The 'storage_mounts' field has been deprecated. Please use 'mounts' instead.
     */
    storageMounts?: pulumi.Input<pulumi.Input<inputs.FunctionStorageMount>[]>;
    /**
     * Tags for Yandex Cloud Function. Tag `$latest` isn't returned.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tmpfs size for Yandex Cloud Function.
     */
    tmpfsSize?: pulumi.Input<number>;
    /**
     * User-defined string for current function version. User must change this string any times when function changed. Function will be updated when hash is changed.
     */
    userHash: pulumi.Input<string>;
}
