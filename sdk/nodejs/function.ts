// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Allows management of [Yandex Cloud Function](https://cloud.yandex.com/docs/functions/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@pulumi/yandex";
 *
 * const test_function = new yandex.Function("test-function", {
 *     content: {
 *         zipFilename: "function.zip",
 *     },
 *     description: "any description",
 *     entrypoint: "main",
 *     executionTimeout: "10",
 *     memory: 128,
 *     runtime: "python37",
 *     serviceAccountId: "are1service2account3id",
 *     tags: ["my_tag"],
 *     userHash: "any_user_defined_string",
 * });
 * ```
 */
export class Function extends pulumi.CustomResource {
    /**
     * Get an existing Function resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FunctionState, opts?: pulumi.CustomResourceOptions): Function {
        return new Function(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/function:Function';

    /**
     * Returns true if the given object is an instance of Function.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Function {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Function.__pulumiType;
    }

    /**
     * Version deployment content for Yandex Cloud Function code. Can be only one `package` or `content` section.
     * * `content.0.zip_filename` - Filename to zip archive for the version.
     */
    public readonly content!: pulumi.Output<outputs.FunctionContent | undefined>;
    /**
     * Creation timestamp of the Yandex Cloud Function.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Description of the Yandex Cloud Function
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Entrypoint for Yandex Cloud Function
     */
    public readonly entrypoint!: pulumi.Output<string>;
    /**
     * A set of key/value environment variables for Yandex Cloud Function
     */
    public readonly environment!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Execution timeout in seconds for Yandex Cloud Function
     */
    public readonly executionTimeout!: pulumi.Output<string | undefined>;
    /**
     * Folder ID for the Yandex Cloud Function
     */
    public readonly folderId!: pulumi.Output<string>;
    /**
     * Image size for Yandex Cloud Function.
     */
    public /*out*/ readonly imageSize!: pulumi.Output<number>;
    /**
     * A set of key/value label pairs to assign to the Yandex Cloud Function
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Loggroup ID size for Yandex Cloud Function.
     */
    public /*out*/ readonly loggroupId!: pulumi.Output<string>;
    /**
     * Memory in megabytes (**aligned to 128MB**) for Yandex Cloud Function
     */
    public readonly memory!: pulumi.Output<number>;
    /**
     * Yandex Cloud Function name used to define trigger
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Version deployment package for Yandex Cloud Function code. Can be only one `package` or `content` section.
     * * `package.0.sha_256` - SHA256 hash of the version deployment package.
     * * `package.0.bucket_name` - Name of the bucket that stores the code for the version.
     * * `package.0.object_name` - Name of the object in the bucket that stores the code for the version.
     */
    public readonly package!: pulumi.Output<outputs.FunctionPackage | undefined>;
    /**
     * Runtime for Yandex Cloud Function
     */
    public readonly runtime!: pulumi.Output<string>;
    /**
     * Service account ID for Yandex Cloud Function
     */
    public readonly serviceAccountId!: pulumi.Output<string | undefined>;
    /**
     * Tags for Yandex Cloud Function. Tag "$latest" isn't returned.
     */
    public readonly tags!: pulumi.Output<string[]>;
    /**
     * User-defined string for current function version. User must change this string any times when function changed. Function will be updated when hash is changed.
     */
    public readonly userHash!: pulumi.Output<string>;
    /**
     * Version for Yandex Cloud Function.
     */
    public /*out*/ readonly version!: pulumi.Output<string>;

    /**
     * Create a Function resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FunctionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FunctionArgs | FunctionState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FunctionState | undefined;
            inputs["content"] = state ? state.content : undefined;
            inputs["createdAt"] = state ? state.createdAt : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["entrypoint"] = state ? state.entrypoint : undefined;
            inputs["environment"] = state ? state.environment : undefined;
            inputs["executionTimeout"] = state ? state.executionTimeout : undefined;
            inputs["folderId"] = state ? state.folderId : undefined;
            inputs["imageSize"] = state ? state.imageSize : undefined;
            inputs["labels"] = state ? state.labels : undefined;
            inputs["loggroupId"] = state ? state.loggroupId : undefined;
            inputs["memory"] = state ? state.memory : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["package"] = state ? state.package : undefined;
            inputs["runtime"] = state ? state.runtime : undefined;
            inputs["serviceAccountId"] = state ? state.serviceAccountId : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["userHash"] = state ? state.userHash : undefined;
            inputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as FunctionArgs | undefined;
            if ((!args || args.entrypoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'entrypoint'");
            }
            if ((!args || args.memory === undefined) && !opts.urn) {
                throw new Error("Missing required property 'memory'");
            }
            if ((!args || args.runtime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'runtime'");
            }
            if ((!args || args.userHash === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userHash'");
            }
            inputs["content"] = args ? args.content : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["entrypoint"] = args ? args.entrypoint : undefined;
            inputs["environment"] = args ? args.environment : undefined;
            inputs["executionTimeout"] = args ? args.executionTimeout : undefined;
            inputs["folderId"] = args ? args.folderId : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["memory"] = args ? args.memory : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["package"] = args ? args.package : undefined;
            inputs["runtime"] = args ? args.runtime : undefined;
            inputs["serviceAccountId"] = args ? args.serviceAccountId : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["userHash"] = args ? args.userHash : undefined;
            inputs["createdAt"] = undefined /*out*/;
            inputs["imageSize"] = undefined /*out*/;
            inputs["loggroupId"] = undefined /*out*/;
            inputs["version"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Function.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Function resources.
 */
export interface FunctionState {
    /**
     * Version deployment content for Yandex Cloud Function code. Can be only one `package` or `content` section.
     * * `content.0.zip_filename` - Filename to zip archive for the version.
     */
    readonly content?: pulumi.Input<inputs.FunctionContent>;
    /**
     * Creation timestamp of the Yandex Cloud Function.
     */
    readonly createdAt?: pulumi.Input<string>;
    /**
     * Description of the Yandex Cloud Function
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Entrypoint for Yandex Cloud Function
     */
    readonly entrypoint?: pulumi.Input<string>;
    /**
     * A set of key/value environment variables for Yandex Cloud Function
     */
    readonly environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Execution timeout in seconds for Yandex Cloud Function
     */
    readonly executionTimeout?: pulumi.Input<string>;
    /**
     * Folder ID for the Yandex Cloud Function
     */
    readonly folderId?: pulumi.Input<string>;
    /**
     * Image size for Yandex Cloud Function.
     */
    readonly imageSize?: pulumi.Input<number>;
    /**
     * A set of key/value label pairs to assign to the Yandex Cloud Function
     */
    readonly labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Loggroup ID size for Yandex Cloud Function.
     */
    readonly loggroupId?: pulumi.Input<string>;
    /**
     * Memory in megabytes (**aligned to 128MB**) for Yandex Cloud Function
     */
    readonly memory?: pulumi.Input<number>;
    /**
     * Yandex Cloud Function name used to define trigger
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Version deployment package for Yandex Cloud Function code. Can be only one `package` or `content` section.
     * * `package.0.sha_256` - SHA256 hash of the version deployment package.
     * * `package.0.bucket_name` - Name of the bucket that stores the code for the version.
     * * `package.0.object_name` - Name of the object in the bucket that stores the code for the version.
     */
    readonly package?: pulumi.Input<inputs.FunctionPackage>;
    /**
     * Runtime for Yandex Cloud Function
     */
    readonly runtime?: pulumi.Input<string>;
    /**
     * Service account ID for Yandex Cloud Function
     */
    readonly serviceAccountId?: pulumi.Input<string>;
    /**
     * Tags for Yandex Cloud Function. Tag "$latest" isn't returned.
     */
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * User-defined string for current function version. User must change this string any times when function changed. Function will be updated when hash is changed.
     */
    readonly userHash?: pulumi.Input<string>;
    /**
     * Version for Yandex Cloud Function.
     */
    readonly version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Function resource.
 */
export interface FunctionArgs {
    /**
     * Version deployment content for Yandex Cloud Function code. Can be only one `package` or `content` section.
     * * `content.0.zip_filename` - Filename to zip archive for the version.
     */
    readonly content?: pulumi.Input<inputs.FunctionContent>;
    /**
     * Description of the Yandex Cloud Function
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Entrypoint for Yandex Cloud Function
     */
    readonly entrypoint: pulumi.Input<string>;
    /**
     * A set of key/value environment variables for Yandex Cloud Function
     */
    readonly environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Execution timeout in seconds for Yandex Cloud Function
     */
    readonly executionTimeout?: pulumi.Input<string>;
    /**
     * Folder ID for the Yandex Cloud Function
     */
    readonly folderId?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs to assign to the Yandex Cloud Function
     */
    readonly labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Memory in megabytes (**aligned to 128MB**) for Yandex Cloud Function
     */
    readonly memory: pulumi.Input<number>;
    /**
     * Yandex Cloud Function name used to define trigger
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Version deployment package for Yandex Cloud Function code. Can be only one `package` or `content` section.
     * * `package.0.sha_256` - SHA256 hash of the version deployment package.
     * * `package.0.bucket_name` - Name of the bucket that stores the code for the version.
     * * `package.0.object_name` - Name of the object in the bucket that stores the code for the version.
     */
    readonly package?: pulumi.Input<inputs.FunctionPackage>;
    /**
     * Runtime for Yandex Cloud Function
     */
    readonly runtime: pulumi.Input<string>;
    /**
     * Service account ID for Yandex Cloud Function
     */
    readonly serviceAccountId?: pulumi.Input<string>;
    /**
     * Tags for Yandex Cloud Function. Tag "$latest" isn't returned.
     */
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * User-defined string for current function version. User must change this string any times when function changed. Function will be updated when hash is changed.
     */
    readonly userHash: pulumi.Input<string>;
}
