// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about a Yandex Application Load Balancer Backend Group. For more information, see [official documentation](https://yandex.cloud/docs/application-load-balancer/quickstart).
 *
 * This data source is used to define [Application Load Balancer Backend Groups](https://yandex.cloud/docs/application-load-balancer/concepts/backend-group) that can be used by other resources.
 *
 * > One of `backendGroupId` or `name` should be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * const myAlbBg = yandex.getAlbBackendGroup({
 *     backendGroupId: yandex_alb_backend_group.my_backend_group.id,
 * });
 * ```
 */
export function getAlbBackendGroup(args?: GetAlbBackendGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetAlbBackendGroupResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getAlbBackendGroup:getAlbBackendGroup", {
        "backendGroupId": args.backendGroupId,
        "description": args.description,
        "folderId": args.folderId,
        "grpcBackends": args.grpcBackends,
        "httpBackends": args.httpBackends,
        "labels": args.labels,
        "name": args.name,
        "sessionAffinity": args.sessionAffinity,
        "streamBackends": args.streamBackends,
    }, opts);
}

/**
 * A collection of arguments for invoking getAlbBackendGroup.
 */
export interface GetAlbBackendGroupArgs {
    /**
     * Backend Group ID.
     */
    backendGroupId?: string;
    /**
     * The resource description.
     */
    description?: string;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: string;
    grpcBackends?: inputs.GetAlbBackendGroupGrpcBackend[];
    httpBackends?: inputs.GetAlbBackendGroupHttpBackend[];
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: {[key: string]: string};
    /**
     * The resource name.
     */
    name?: string;
    sessionAffinity?: inputs.GetAlbBackendGroupSessionAffinity;
    streamBackends?: inputs.GetAlbBackendGroupStreamBackend[];
}

/**
 * A collection of values returned by getAlbBackendGroup.
 */
export interface GetAlbBackendGroupResult {
    /**
     * Backend Group ID.
     */
    readonly backendGroupId: string;
    /**
     * The creation timestamp of the resource.
     */
    readonly createdAt: string;
    /**
     * The resource description.
     */
    readonly description: string;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    readonly folderId: string;
    readonly grpcBackends: outputs.GetAlbBackendGroupGrpcBackend[];
    readonly httpBackends: outputs.GetAlbBackendGroupHttpBackend[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    readonly labels: {[key: string]: string};
    /**
     * The resource name.
     */
    readonly name: string;
    readonly sessionAffinity: outputs.GetAlbBackendGroupSessionAffinity;
    readonly streamBackends: outputs.GetAlbBackendGroupStreamBackend[];
}
/**
 * Get information about a Yandex Application Load Balancer Backend Group. For more information, see [official documentation](https://yandex.cloud/docs/application-load-balancer/quickstart).
 *
 * This data source is used to define [Application Load Balancer Backend Groups](https://yandex.cloud/docs/application-load-balancer/concepts/backend-group) that can be used by other resources.
 *
 * > One of `backendGroupId` or `name` should be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * const myAlbBg = yandex.getAlbBackendGroup({
 *     backendGroupId: yandex_alb_backend_group.my_backend_group.id,
 * });
 * ```
 */
export function getAlbBackendGroupOutput(args?: GetAlbBackendGroupOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAlbBackendGroupResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("yandex:index/getAlbBackendGroup:getAlbBackendGroup", {
        "backendGroupId": args.backendGroupId,
        "description": args.description,
        "folderId": args.folderId,
        "grpcBackends": args.grpcBackends,
        "httpBackends": args.httpBackends,
        "labels": args.labels,
        "name": args.name,
        "sessionAffinity": args.sessionAffinity,
        "streamBackends": args.streamBackends,
    }, opts);
}

/**
 * A collection of arguments for invoking getAlbBackendGroup.
 */
export interface GetAlbBackendGroupOutputArgs {
    /**
     * Backend Group ID.
     */
    backendGroupId?: pulumi.Input<string>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    grpcBackends?: pulumi.Input<pulumi.Input<inputs.GetAlbBackendGroupGrpcBackendArgs>[]>;
    httpBackends?: pulumi.Input<pulumi.Input<inputs.GetAlbBackendGroupHttpBackendArgs>[]>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    sessionAffinity?: pulumi.Input<inputs.GetAlbBackendGroupSessionAffinityArgs>;
    streamBackends?: pulumi.Input<pulumi.Input<inputs.GetAlbBackendGroupStreamBackendArgs>[]>;
}
