// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about a Yandex Compute instance. For more information, see [the official documentation](https://yandex.cloud/docs/compute/concepts/vm).
 *
 * > One of `instanceId` or `name` should be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * const myInstance = yandex.getComputeInstance({
 *     instanceId: "some_instance_id",
 * });
 * export const instanceExternalIp = myInstance.then(myInstance => myInstance.networkInterfaces?.[0]?.natIpAddress);
 * ```
 */
export function getComputeInstance(args?: GetComputeInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetComputeInstanceResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getComputeInstance:getComputeInstance", {
        "filesystems": args.filesystems,
        "folderId": args.folderId,
        "gpuClusterId": args.gpuClusterId,
        "instanceId": args.instanceId,
        "localDisks": args.localDisks,
        "maintenanceGracePeriod": args.maintenanceGracePeriod,
        "maintenancePolicy": args.maintenancePolicy,
        "metadataOptions": args.metadataOptions,
        "name": args.name,
        "placementPolicy": args.placementPolicy,
        "serviceAccountId": args.serviceAccountId,
    }, opts);
}

/**
 * A collection of arguments for invoking getComputeInstance.
 */
export interface GetComputeInstanceArgs {
    filesystems?: inputs.GetComputeInstanceFilesystem[];
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: string;
    /**
     * ID of the GPU cluster to attach this instance to.
     */
    gpuClusterId?: string;
    /**
     * The ID of a specific instance.
     */
    instanceId?: string;
    localDisks?: inputs.GetComputeInstanceLocalDisk[];
    /**
     * Time between notification via metadata service and maintenance. E.g., `60s`.
     */
    maintenanceGracePeriod?: string;
    /**
     * Behavior on maintenance events. Can be: `unspecified`, `migrate`, `restart`. The default is `unspecified`.
     */
    maintenancePolicy?: string;
    metadataOptions?: inputs.GetComputeInstanceMetadataOptions;
    /**
     * The resource name.
     */
    name?: string;
    placementPolicy?: inputs.GetComputeInstancePlacementPolicy;
    /**
     * [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
     */
    serviceAccountId?: string;
}

/**
 * A collection of values returned by getComputeInstance.
 */
export interface GetComputeInstanceResult {
    readonly bootDisks: outputs.GetComputeInstanceBootDisk[];
    /**
     * The creation timestamp of the resource.
     */
    readonly createdAt: string;
    /**
     * The resource description.
     */
    readonly description: string;
    readonly filesystems?: outputs.GetComputeInstanceFilesystem[];
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    readonly folderId: string;
    /**
     * The fully qualified DNS name of this instance.
     */
    readonly fqdn: string;
    /**
     * ID of the GPU cluster to attach this instance to.
     */
    readonly gpuClusterId: string;
    readonly hardwareGenerations: outputs.GetComputeInstanceHardwareGeneration[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The ID of a specific instance.
     */
    readonly instanceId: string;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    readonly labels: {[key: string]: string};
    readonly localDisks?: outputs.GetComputeInstanceLocalDisk[];
    /**
     * Time between notification via metadata service and maintenance. E.g., `60s`.
     */
    readonly maintenanceGracePeriod: string;
    /**
     * Behavior on maintenance events. Can be: `unspecified`, `migrate`, `restart`. The default is `unspecified`.
     */
    readonly maintenancePolicy: string;
    /**
     * Metadata key/value pairs to make available from within the instance.
     */
    readonly metadata: {[key: string]: string};
    readonly metadataOptions: outputs.GetComputeInstanceMetadataOptions;
    /**
     * The resource name.
     */
    readonly name: string;
    /**
     * Type of network acceleration. Can be `standard` or `softwareAccelerated`. The default is `standard`.
     */
    readonly networkAccelerationType: string;
    readonly networkInterfaces: outputs.GetComputeInstanceNetworkInterface[];
    readonly placementPolicy?: outputs.GetComputeInstancePlacementPolicy;
    /**
     * The type of virtual machine to create.
     */
    readonly platformId: string;
    readonly resources: outputs.GetComputeInstanceResource[];
    readonly schedulingPolicies: outputs.GetComputeInstanceSchedulingPolicy[];
    readonly secondaryDisks: outputs.GetComputeInstanceSecondaryDisk[];
    /**
     * [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
     */
    readonly serviceAccountId?: string;
    /**
     * The status of this instance.
     */
    readonly status: string;
    /**
     * The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.
     */
    readonly zone: string;
}
/**
 * Get information about a Yandex Compute instance. For more information, see [the official documentation](https://yandex.cloud/docs/compute/concepts/vm).
 *
 * > One of `instanceId` or `name` should be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * const myInstance = yandex.getComputeInstance({
 *     instanceId: "some_instance_id",
 * });
 * export const instanceExternalIp = myInstance.then(myInstance => myInstance.networkInterfaces?.[0]?.natIpAddress);
 * ```
 */
export function getComputeInstanceOutput(args?: GetComputeInstanceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetComputeInstanceResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("yandex:index/getComputeInstance:getComputeInstance", {
        "filesystems": args.filesystems,
        "folderId": args.folderId,
        "gpuClusterId": args.gpuClusterId,
        "instanceId": args.instanceId,
        "localDisks": args.localDisks,
        "maintenanceGracePeriod": args.maintenanceGracePeriod,
        "maintenancePolicy": args.maintenancePolicy,
        "metadataOptions": args.metadataOptions,
        "name": args.name,
        "placementPolicy": args.placementPolicy,
        "serviceAccountId": args.serviceAccountId,
    }, opts);
}

/**
 * A collection of arguments for invoking getComputeInstance.
 */
export interface GetComputeInstanceOutputArgs {
    filesystems?: pulumi.Input<pulumi.Input<inputs.GetComputeInstanceFilesystemArgs>[]>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * ID of the GPU cluster to attach this instance to.
     */
    gpuClusterId?: pulumi.Input<string>;
    /**
     * The ID of a specific instance.
     */
    instanceId?: pulumi.Input<string>;
    localDisks?: pulumi.Input<pulumi.Input<inputs.GetComputeInstanceLocalDiskArgs>[]>;
    /**
     * Time between notification via metadata service and maintenance. E.g., `60s`.
     */
    maintenanceGracePeriod?: pulumi.Input<string>;
    /**
     * Behavior on maintenance events. Can be: `unspecified`, `migrate`, `restart`. The default is `unspecified`.
     */
    maintenancePolicy?: pulumi.Input<string>;
    metadataOptions?: pulumi.Input<inputs.GetComputeInstanceMetadataOptionsArgs>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    placementPolicy?: pulumi.Input<inputs.GetComputeInstancePlacementPolicyArgs>;
    /**
     * [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
     */
    serviceAccountId?: pulumi.Input<string>;
}
