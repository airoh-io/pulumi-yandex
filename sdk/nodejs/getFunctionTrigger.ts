// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about a Yandex Cloud Function Trigger. For more information about Yandex Cloud Functions, see [Yandex Cloud Functions](https://yandex.cloud/docs/functions/).
 *
 * This data source is used to define [Yandex Cloud Functions Trigger](https://yandex.cloud/docs/functions/concepts/trigger) that can be used by other resources.
 *
 * > Either `triggerId` or `name` must be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh/pulumi-yandex";
 *
 * const myTrigger = yandex.getFunctionTrigger({
 *     triggerId: "a1scn**********3ur32",
 * });
 * ```
 */
export function getFunctionTrigger(args?: GetFunctionTriggerArgs, opts?: pulumi.InvokeOptions): Promise<GetFunctionTriggerResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getFunctionTrigger:getFunctionTrigger", {
        "folderId": args.folderId,
        "name": args.name,
        "triggerId": args.triggerId,
    }, opts);
}

/**
 * A collection of arguments for invoking getFunctionTrigger.
 */
export interface GetFunctionTriggerArgs {
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: string;
    /**
     * The resource name.
     */
    name?: string;
    /**
     * Yandex Cloud Functions Trigger id used to define trigger.
     */
    triggerId?: string;
}

/**
 * A collection of values returned by getFunctionTrigger.
 */
export interface GetFunctionTriggerResult {
    readonly containerRegistries: outputs.GetFunctionTriggerContainerRegistry[];
    readonly containers: outputs.GetFunctionTriggerContainer[];
    /**
     * The creation timestamp of the resource.
     */
    readonly createdAt: string;
    readonly dataStreams: outputs.GetFunctionTriggerDataStream[];
    /**
     * The resource description.
     */
    readonly description: string;
    readonly dlqs: outputs.GetFunctionTriggerDlq[];
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    readonly folderId?: string;
    readonly functions: outputs.GetFunctionTriggerFunction[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly iots: outputs.GetFunctionTriggerIot[];
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    readonly labels: {[key: string]: string};
    readonly logGroups: outputs.GetFunctionTriggerLogGroup[];
    readonly loggings: outputs.GetFunctionTriggerLogging[];
    readonly mails: outputs.GetFunctionTriggerMail[];
    readonly messageQueues: outputs.GetFunctionTriggerMessageQueue[];
    /**
     * The resource name.
     */
    readonly name?: string;
    readonly objectStorages: outputs.GetFunctionTriggerObjectStorage[];
    readonly timers: outputs.GetFunctionTriggerTimer[];
    /**
     * Yandex Cloud Functions Trigger id used to define trigger.
     */
    readonly triggerId?: string;
}
/**
 * Get information about a Yandex Cloud Function Trigger. For more information about Yandex Cloud Functions, see [Yandex Cloud Functions](https://yandex.cloud/docs/functions/).
 *
 * This data source is used to define [Yandex Cloud Functions Trigger](https://yandex.cloud/docs/functions/concepts/trigger) that can be used by other resources.
 *
 * > Either `triggerId` or `name` must be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh/pulumi-yandex";
 *
 * const myTrigger = yandex.getFunctionTrigger({
 *     triggerId: "a1scn**********3ur32",
 * });
 * ```
 */
export function getFunctionTriggerOutput(args?: GetFunctionTriggerOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFunctionTriggerResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("yandex:index/getFunctionTrigger:getFunctionTrigger", {
        "folderId": args.folderId,
        "name": args.name,
        "triggerId": args.triggerId,
    }, opts);
}

/**
 * A collection of arguments for invoking getFunctionTrigger.
 */
export interface GetFunctionTriggerOutputArgs {
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * Yandex Cloud Functions Trigger id used to define trigger.
     */
    triggerId?: pulumi.Input<string>;
}
