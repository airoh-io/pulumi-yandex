// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Generates an [IAM](https://yandex.cloud/docs/iam/) role document that may be referenced by and applied to other Yandex Cloud Platform resources, such as the `yandex.getResourcemanagerFolder` resource. For more information, see [the official documentation](https://yandex.cloud/docs/iam/concepts/access-control/roles).
 *
 * This data source is used to define [IAM](https://yandex.cloud/docs/iam/) roles in order to apply them to other resources. Currently, defining a role through a data source and referencing that role from another resource is the only way to apply an IAM role to a resource.
 */
export function getIamRole(args?: GetIamRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetIamRoleResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getIamRole:getIamRole", {
        "description": args.description,
        "roleId": args.roleId,
    }, opts);
}

/**
 * A collection of arguments for invoking getIamRole.
 */
export interface GetIamRoleArgs {
    description?: string;
    roleId?: string;
}

/**
 * A collection of values returned by getIamRole.
 */
export interface GetIamRoleResult {
    readonly description?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly roleId: string;
}
/**
 * Generates an [IAM](https://yandex.cloud/docs/iam/) role document that may be referenced by and applied to other Yandex Cloud Platform resources, such as the `yandex.getResourcemanagerFolder` resource. For more information, see [the official documentation](https://yandex.cloud/docs/iam/concepts/access-control/roles).
 *
 * This data source is used to define [IAM](https://yandex.cloud/docs/iam/) roles in order to apply them to other resources. Currently, defining a role through a data source and referencing that role from another resource is the only way to apply an IAM role to a resource.
 */
export function getIamRoleOutput(args?: GetIamRoleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetIamRoleResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("yandex:index/getIamRole:getIamRole", {
        "description": args.description,
        "roleId": args.roleId,
    }, opts);
}

/**
 * A collection of arguments for invoking getIamRole.
 */
export interface GetIamRoleOutputArgs {
    description?: pulumi.Input<string>;
    roleId?: pulumi.Input<string>;
}
