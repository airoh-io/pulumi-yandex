// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about a Yandex IoT Core Registry. For more information IoT Core, see [Yandex Cloud IoT Registry](https://yandex.cloud/docs/iot-core/quickstart).
 * This data source is used to define [Yandex Cloud IoT Registry](https://yandex.cloud/docs/iot-core/quickstart) that can be used by other resources.
 *
 * > Either `registryId` or `name` must be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * const myRegistry = yandex.getIotCoreRegistry({
 *     registryId: "are1sampleregistry11",
 * });
 * ```
 */
export function getIotCoreRegistry(args?: GetIotCoreRegistryArgs, opts?: pulumi.InvokeOptions): Promise<GetIotCoreRegistryResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getIotCoreRegistry:getIotCoreRegistry", {
        "folderId": args.folderId,
        "name": args.name,
        "registryId": args.registryId,
    }, opts);
}

/**
 * A collection of arguments for invoking getIotCoreRegistry.
 */
export interface GetIotCoreRegistryArgs {
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: string;
    /**
     * The resource name.
     */
    name?: string;
    /**
     * IoT Core Registry id used to define registry.
     */
    registryId?: string;
}

/**
 * A collection of values returned by getIotCoreRegistry.
 */
export interface GetIotCoreRegistryResult {
    /**
     * A set of certificate's fingerprints for the IoT Core Registry.
     */
    readonly certificates: string[];
    /**
     * The creation timestamp of the resource.
     */
    readonly createdAt: string;
    /**
     * The resource description.
     */
    readonly description: string;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    readonly folderId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    readonly labels: {[key: string]: string};
    readonly logOptions: outputs.GetIotCoreRegistryLogOption[];
    /**
     * The resource name.
     */
    readonly name?: string;
    /**
     * A set of passwords's id for the IoT Core Registry.
     */
    readonly passwords: string[];
    /**
     * IoT Core Registry id used to define registry.
     */
    readonly registryId?: string;
}
/**
 * Get information about a Yandex IoT Core Registry. For more information IoT Core, see [Yandex Cloud IoT Registry](https://yandex.cloud/docs/iot-core/quickstart).
 * This data source is used to define [Yandex Cloud IoT Registry](https://yandex.cloud/docs/iot-core/quickstart) that can be used by other resources.
 *
 * > Either `registryId` or `name` must be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * const myRegistry = yandex.getIotCoreRegistry({
 *     registryId: "are1sampleregistry11",
 * });
 * ```
 */
export function getIotCoreRegistryOutput(args?: GetIotCoreRegistryOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetIotCoreRegistryResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("yandex:index/getIotCoreRegistry:getIotCoreRegistry", {
        "folderId": args.folderId,
        "name": args.name,
        "registryId": args.registryId,
    }, opts);
}

/**
 * A collection of arguments for invoking getIotCoreRegistry.
 */
export interface GetIotCoreRegistryOutputArgs {
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * IoT Core Registry id used to define registry.
     */
    registryId?: pulumi.Input<string>;
}
