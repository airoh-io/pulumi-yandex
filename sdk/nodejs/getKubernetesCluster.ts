// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about a Yandex Cloud Managed Kubernetes Cluster. For more information, see [the official documentation](https://yandex.cloud/docs/managed-kubernetes/concepts/#kubernetes-cluster).
 *
 * > One of `clusterId` or `name` should be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * const myCluster = yandex.getKubernetesCluster({
 *     clusterId: "some_k8s_cluster_id",
 * });
 * export const clusterExternalV4Endpoint = myCluster.then(myCluster => myCluster.masters?.[0]?.externalV4Endpoint);
 * ```
 */
export function getKubernetesCluster(args?: GetKubernetesClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetKubernetesClusterResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getKubernetesCluster:getKubernetesCluster", {
        "clusterId": args.clusterId,
        "folderId": args.folderId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getKubernetesCluster.
 */
export interface GetKubernetesClusterArgs {
    /**
     * ID of a specific Kubernetes cluster.
     */
    clusterId?: string;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: string;
    /**
     * The resource name.
     */
    name?: string;
}

/**
 * A collection of values returned by getKubernetesCluster.
 */
export interface GetKubernetesClusterResult {
    /**
     * ID of a specific Kubernetes cluster.
     */
    readonly clusterId: string;
    /**
     * CIDR block. IP range for allocating pod addresses. It should not overlap with any subnet in the network the Kubernetes cluster located in. Static routes will be set up for this CIDR blocks in node subnets.
     */
    readonly clusterIpv4Range: string;
    /**
     * Identical to `clusterIpv4Range` but for IPv6 protocol.
     */
    readonly clusterIpv6Range: string;
    /**
     * The creation timestamp of the resource.
     */
    readonly createdAt: string;
    /**
     * The resource description.
     */
    readonly description: string;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    readonly folderId: string;
    /**
     * Health of the Kubernetes cluster.
     */
    readonly health: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Cluster KMS provider parameters.
     */
    readonly kmsProviders: outputs.GetKubernetesClusterKmsProvider[];
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    readonly labels: {[key: string]: string};
    /**
     * Log group where cluster stores cluster system logs, like audit, events, or control plane logs.
     */
    readonly logGroupId: string;
    /**
     * Kubernetes master configuration options.
     */
    readonly masters: outputs.GetKubernetesClusterMaster[];
    /**
     * The resource name.
     */
    readonly name: string;
    /**
     * The ID of the cluster network.
     */
    readonly networkId: string;
    /**
     * Network Implementation options.
     */
    readonly networkImplementations: outputs.GetKubernetesClusterNetworkImplementation[];
    /**
     * Network policy provider for the cluster. Possible values: `CALICO`.
     */
    readonly networkPolicyProvider: string;
    /**
     * Size of the masks that are assigned to each node in the cluster. Effectively limits maximum number of pods for each node.
     */
    readonly nodeIpv4CidrMaskSize: number;
    /**
     * Service account to be used by the worker nodes of the Kubernetes cluster to access Container Registry or to push node logs and metrics.
     */
    readonly nodeServiceAccountId: string;
    /**
     * Cluster release channel.
     */
    readonly releaseChannel: string;
    /**
     * Service account to be used for provisioning Compute Cloud and VPC resources for Kubernetes cluster. Selected service account should have `edit` role on the folder where the Kubernetes cluster will be located and on the folder where selected network resides.
     */
    readonly serviceAccountId: string;
    /**
     * CIDR block. IP range Kubernetes service Kubernetes cluster IP addresses will be allocated from. It should not overlap with any subnet in the network the Kubernetes cluster located in.
     */
    readonly serviceIpv4Range: string;
    /**
     * Identical to service*ipv4*range but for IPv6 protocol.
     */
    readonly serviceIpv6Range: string;
    /**
     * Status of the Kubernetes cluster.
     */
    readonly status: string;
}
/**
 * Get information about a Yandex Cloud Managed Kubernetes Cluster. For more information, see [the official documentation](https://yandex.cloud/docs/managed-kubernetes/concepts/#kubernetes-cluster).
 *
 * > One of `clusterId` or `name` should be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * const myCluster = yandex.getKubernetesCluster({
 *     clusterId: "some_k8s_cluster_id",
 * });
 * export const clusterExternalV4Endpoint = myCluster.then(myCluster => myCluster.masters?.[0]?.externalV4Endpoint);
 * ```
 */
export function getKubernetesClusterOutput(args?: GetKubernetesClusterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetKubernetesClusterResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("yandex:index/getKubernetesCluster:getKubernetesCluster", {
        "clusterId": args.clusterId,
        "folderId": args.folderId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getKubernetesCluster.
 */
export interface GetKubernetesClusterOutputArgs {
    /**
     * ID of a specific Kubernetes cluster.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
}
