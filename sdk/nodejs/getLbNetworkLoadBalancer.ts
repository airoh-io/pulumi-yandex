// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about a Yandex Load Balancer network load balancer. For more information, see [the official documentation](https://yandex.cloud/docs/load-balancer/concepts/).
 *
 * This data source is used to define [Load Balancer Network Load Balancers](https://yandex.cloud/docs/load-balancer/concepts/) that can be used by other resources.
 *
 * > One of `networkLoadBalancerId` or `name` should be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * const myNlb = yandex.getLbNetworkLoadBalancer({
 *     networkLoadBalancerId: "my-network-load-balancer",
 * });
 * ```
 */
export function getLbNetworkLoadBalancer(args?: GetLbNetworkLoadBalancerArgs, opts?: pulumi.InvokeOptions): Promise<GetLbNetworkLoadBalancerResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getLbNetworkLoadBalancer:getLbNetworkLoadBalancer", {
        "folderId": args.folderId,
        "name": args.name,
        "networkLoadBalancerId": args.networkLoadBalancerId,
    }, opts);
}

/**
 * A collection of arguments for invoking getLbNetworkLoadBalancer.
 */
export interface GetLbNetworkLoadBalancerArgs {
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: string;
    /**
     * The resource name.
     */
    name?: string;
    /**
     * Network load balancer ID.
     */
    networkLoadBalancerId?: string;
}

/**
 * A collection of values returned by getLbNetworkLoadBalancer.
 */
export interface GetLbNetworkLoadBalancerResult {
    /**
     * Flag that marks the network load balancer as available to zonal shift.
     */
    readonly allowZonalShift: boolean;
    readonly attachedTargetGroups: outputs.GetLbNetworkLoadBalancerAttachedTargetGroup[];
    /**
     * The creation timestamp of the resource.
     */
    readonly createdAt: string;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    readonly deletionProtection: boolean;
    /**
     * The resource description.
     */
    readonly description: string;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    readonly folderId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    readonly labels: {[key: string]: string};
    readonly listeners: outputs.GetLbNetworkLoadBalancerListener[];
    /**
     * The resource name.
     */
    readonly name: string;
    /**
     * Network load balancer ID.
     */
    readonly networkLoadBalancerId: string;
    /**
     * ID of the availability zone where the network load balancer resides. If omitted, default region is being used.
     */
    readonly regionId: string;
    /**
     * Type of the network load balancer. Must be one of 'external' or 'internal'. The default is 'external'.
     */
    readonly type: string;
}
/**
 * Get information about a Yandex Load Balancer network load balancer. For more information, see [the official documentation](https://yandex.cloud/docs/load-balancer/concepts/).
 *
 * This data source is used to define [Load Balancer Network Load Balancers](https://yandex.cloud/docs/load-balancer/concepts/) that can be used by other resources.
 *
 * > One of `networkLoadBalancerId` or `name` should be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * const myNlb = yandex.getLbNetworkLoadBalancer({
 *     networkLoadBalancerId: "my-network-load-balancer",
 * });
 * ```
 */
export function getLbNetworkLoadBalancerOutput(args?: GetLbNetworkLoadBalancerOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetLbNetworkLoadBalancerResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("yandex:index/getLbNetworkLoadBalancer:getLbNetworkLoadBalancer", {
        "folderId": args.folderId,
        "name": args.name,
        "networkLoadBalancerId": args.networkLoadBalancerId,
    }, opts);
}

/**
 * A collection of arguments for invoking getLbNetworkLoadBalancer.
 */
export interface GetLbNetworkLoadBalancerOutputArgs {
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * Network load balancer ID.
     */
    networkLoadBalancerId?: pulumi.Input<string>;
}
