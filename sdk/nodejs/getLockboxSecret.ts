// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about Yandex Cloud Lockbox secret. For more information, see [the official documentation](https://yandex.cloud/docs/lockbox/).
 *
 * > One of `secretId` or `name` should be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh/pulumi-yandex";
 *
 * const mySecret = yandex.getLockboxSecret({
 *     secretId: "some ID",
 * });
 * export const mySecretCreatedAt = mySecret.then(mySecret => mySecret.createdAt);
 * ```
 */
export function getLockboxSecret(args?: GetLockboxSecretArgs, opts?: pulumi.InvokeOptions): Promise<GetLockboxSecretResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getLockboxSecret:getLockboxSecret", {
        "folderId": args.folderId,
        "name": args.name,
        "secretId": args.secretId,
    }, opts);
}

/**
 * A collection of arguments for invoking getLockboxSecret.
 */
export interface GetLockboxSecretArgs {
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: string;
    /**
     * The resource name.
     */
    name?: string;
    /**
     * The Yandex Cloud Lockbox secret ID.
     */
    secretId?: string;
}

/**
 * A collection of values returned by getLockboxSecret.
 */
export interface GetLockboxSecretResult {
    /**
     * The creation timestamp of the resource.
     */
    readonly createdAt: string;
    /**
     * Current secret version.
     */
    readonly currentVersions: outputs.GetLockboxSecretCurrentVersion[];
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    readonly deletionProtection: boolean;
    /**
     * The resource description.
     */
    readonly description: string;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    readonly folderId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The KMS key used to encrypt the Yandex Cloud Lockbox secret.
     */
    readonly kmsKeyId: string;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    readonly labels: {[key: string]: string};
    /**
     * The resource name.
     */
    readonly name: string;
    readonly passwordPayloadSpecifications: outputs.GetLockboxSecretPasswordPayloadSpecification[];
    /**
     * The Yandex Cloud Lockbox secret ID.
     */
    readonly secretId?: string;
    /**
     * The Yandex Cloud Lockbox secret status.
     */
    readonly status: string;
}
/**
 * Get information about Yandex Cloud Lockbox secret. For more information, see [the official documentation](https://yandex.cloud/docs/lockbox/).
 *
 * > One of `secretId` or `name` should be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh/pulumi-yandex";
 *
 * const mySecret = yandex.getLockboxSecret({
 *     secretId: "some ID",
 * });
 * export const mySecretCreatedAt = mySecret.then(mySecret => mySecret.createdAt);
 * ```
 */
export function getLockboxSecretOutput(args?: GetLockboxSecretOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetLockboxSecretResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("yandex:index/getLockboxSecret:getLockboxSecret", {
        "folderId": args.folderId,
        "name": args.name,
        "secretId": args.secretId,
    }, opts);
}

/**
 * A collection of arguments for invoking getLockboxSecret.
 */
export interface GetLockboxSecretOutputArgs {
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The Yandex Cloud Lockbox secret ID.
     */
    secretId?: pulumi.Input<string>;
}
