// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about Yandex Cloud Lockbox secret version. For more information, see [the official documentation](https://yandex.cloud/docs/lockbox/).
 * If you're creating the secret in the same project, then you should indicate `versionId`, since otherwise you may refer to a wrong version of the secret (e.g. the first version, when it is still empty).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * const mySecretVersion = yandex.getLockboxSecretVersion({
 *     secretId: "some-secret-id",
 *     versionId: "some-version-id",
 * });
 * export const mySecretEntries = mySecretVersion.then(mySecretVersion => mySecretVersion.entries);
 * ```
 */
export function getLockboxSecretVersion(args: GetLockboxSecretVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetLockboxSecretVersionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getLockboxSecretVersion:getLockboxSecretVersion", {
        "secretId": args.secretId,
        "versionId": args.versionId,
    }, opts);
}

/**
 * A collection of arguments for invoking getLockboxSecretVersion.
 */
export interface GetLockboxSecretVersionArgs {
    /**
     * The Yandex Cloud Lockbox secret ID where to add the version.
     */
    secretId: string;
    /**
     * The Yandex Cloud Lockbox secret version ID.
     */
    versionId?: string;
}

/**
 * A collection of values returned by getLockboxSecretVersion.
 */
export interface GetLockboxSecretVersionResult {
    readonly entries: outputs.GetLockboxSecretVersionEntry[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The Yandex Cloud Lockbox secret ID where to add the version.
     */
    readonly secretId: string;
    /**
     * The Yandex Cloud Lockbox secret version ID.
     */
    readonly versionId: string;
}
/**
 * Get information about Yandex Cloud Lockbox secret version. For more information, see [the official documentation](https://yandex.cloud/docs/lockbox/).
 * If you're creating the secret in the same project, then you should indicate `versionId`, since otherwise you may refer to a wrong version of the secret (e.g. the first version, when it is still empty).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * const mySecretVersion = yandex.getLockboxSecretVersion({
 *     secretId: "some-secret-id",
 *     versionId: "some-version-id",
 * });
 * export const mySecretEntries = mySecretVersion.then(mySecretVersion => mySecretVersion.entries);
 * ```
 */
export function getLockboxSecretVersionOutput(args: GetLockboxSecretVersionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetLockboxSecretVersionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("yandex:index/getLockboxSecretVersion:getLockboxSecretVersion", {
        "secretId": args.secretId,
        "versionId": args.versionId,
    }, opts);
}

/**
 * A collection of arguments for invoking getLockboxSecretVersion.
 */
export interface GetLockboxSecretVersionOutputArgs {
    /**
     * The Yandex Cloud Lockbox secret ID where to add the version.
     */
    secretId: pulumi.Input<string>;
    /**
     * The Yandex Cloud Lockbox secret version ID.
     */
    versionId?: pulumi.Input<string>;
}
