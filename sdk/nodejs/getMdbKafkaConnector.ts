// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about a connector of the Yandex Managed Kafka cluster. For more information, see [the official documentation](https://yandex.cloud/docs/managed-kafka/concepts).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh/pulumi-yandex";
 *
 * const foo = yandex.getMdbKafkaConnector({
 *     clusterId: "some_cluster_id",
 *     name: "test",
 * });
 * export const tasksMax = foo.then(foo => foo.tasksMax);
 * ```
 */
export function getMdbKafkaConnector(args: GetMdbKafkaConnectorArgs, opts?: pulumi.InvokeOptions): Promise<GetMdbKafkaConnectorResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getMdbKafkaConnector:getMdbKafkaConnector", {
        "clusterId": args.clusterId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getMdbKafkaConnector.
 */
export interface GetMdbKafkaConnectorArgs {
    /**
     * The ID of the Kafka cluster.
     */
    clusterId: string;
    /**
     * The resource name.
     */
    name: string;
}

/**
 * A collection of values returned by getMdbKafkaConnector.
 */
export interface GetMdbKafkaConnectorResult {
    /**
     * The ID of the Kafka cluster.
     */
    readonly clusterId: string;
    /**
     * Settings for MirrorMaker2 connector.
     */
    readonly connectorConfigMirrormakers: outputs.GetMdbKafkaConnectorConnectorConfigMirrormaker[];
    /**
     * Settings for S3 Sink connector.
     */
    readonly connectorConfigS3Sinks: outputs.GetMdbKafkaConnectorConnectorConfigS3Sink[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The resource name.
     */
    readonly name: string;
    /**
     * Additional properties for connector.
     */
    readonly properties: {[key: string]: string};
    /**
     * The number of the connector's parallel working tasks. Default is the number of brokers.
     */
    readonly tasksMax: number;
}
/**
 * Get information about a connector of the Yandex Managed Kafka cluster. For more information, see [the official documentation](https://yandex.cloud/docs/managed-kafka/concepts).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh/pulumi-yandex";
 *
 * const foo = yandex.getMdbKafkaConnector({
 *     clusterId: "some_cluster_id",
 *     name: "test",
 * });
 * export const tasksMax = foo.then(foo => foo.tasksMax);
 * ```
 */
export function getMdbKafkaConnectorOutput(args: GetMdbKafkaConnectorOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMdbKafkaConnectorResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("yandex:index/getMdbKafkaConnector:getMdbKafkaConnector", {
        "clusterId": args.clusterId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getMdbKafkaConnector.
 */
export interface GetMdbKafkaConnectorOutputArgs {
    /**
     * The ID of the Kafka cluster.
     */
    clusterId: pulumi.Input<string>;
    /**
     * The resource name.
     */
    name: pulumi.Input<string>;
}
