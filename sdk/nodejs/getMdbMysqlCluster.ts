// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about a Yandex Managed MySQL cluster. For more information, see [the official documentation](https://yandex.cloud/docs/managed-mysql/).
 *
 * > Either `clusterId` or `name` should be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * const myCluster = yandex.getMdbMysqlCluster({
 *     name: "test",
 * });
 * export const networkId = myCluster.then(myCluster => myCluster.networkId);
 * ```
 */
export function getMdbMysqlCluster(args?: GetMdbMysqlClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetMdbMysqlClusterResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getMdbMysqlCluster:getMdbMysqlCluster", {
        "access": args.access,
        "clusterId": args.clusterId,
        "deletionProtection": args.deletionProtection,
        "description": args.description,
        "diskEncryptionKeyId": args.diskEncryptionKeyId,
        "folderId": args.folderId,
        "labels": args.labels,
        "mysqlConfig": args.mysqlConfig,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getMdbMysqlCluster.
 */
export interface GetMdbMysqlClusterArgs {
    /**
     * Access policy to the MySQL cluster.
     */
    access?: inputs.GetMdbMysqlClusterAccess;
    /**
     * The ID of the MySQL cluster.
     */
    clusterId?: string;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: boolean;
    /**
     * The resource description.
     */
    description?: string;
    /**
     * ID of the KMS key for cluster disk encryption. Restoring without an encryption key will disable encryption if any exists.
     */
    diskEncryptionKeyId?: string;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: string;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: {[key: string]: string};
    /**
     * MySQL cluster config block.
     */
    mysqlConfig?: {[key: string]: string};
    /**
     * The resource name.
     */
    name?: string;
}

/**
 * A collection of values returned by getMdbMysqlCluster.
 */
export interface GetMdbMysqlClusterResult {
    /**
     * Access policy to the MySQL cluster.
     */
    readonly access: outputs.GetMdbMysqlClusterAccess;
    /**
     * The period in days during which backups are stored.
     */
    readonly backupRetainPeriodDays: number;
    /**
     * Time to start the daily backup, in the UTC.
     */
    readonly backupWindowStarts: outputs.GetMdbMysqlClusterBackupWindowStart[];
    /**
     * The ID of the MySQL cluster.
     */
    readonly clusterId: string;
    /**
     * The creation timestamp of the resource.
     */
    readonly createdAt: string;
    /**
     * To manage databases, please switch to using a separate resource type `yandexMdbMysqlDatabases`.
     */
    readonly databases: outputs.GetMdbMysqlClusterDatabase[];
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    readonly deletionProtection: boolean;
    /**
     * The resource description.
     */
    readonly description?: string;
    /**
     * ID of the KMS key for cluster disk encryption. Restoring without an encryption key will disable encryption if any exists.
     */
    readonly diskEncryptionKeyId: string;
    /**
     * Cluster disk size autoscaling settings.
     */
    readonly diskSizeAutoscalings: outputs.GetMdbMysqlClusterDiskSizeAutoscaling[];
    /**
     * Deployment environment of the MySQL cluster.
     */
    readonly environment: string;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    readonly folderId: string;
    /**
     * Aggregated health of the cluster.
     */
    readonly health: string;
    /**
     * A list of host group IDs to place VMs of the cluster on.
     */
    readonly hostGroupIds: string[];
    /**
     * A host of the MySQL cluster.
     */
    readonly hosts: outputs.GetMdbMysqlClusterHost[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    readonly labels?: {[key: string]: string};
    /**
     * Maintenance policy of the MySQL cluster.
     */
    readonly maintenanceWindows: outputs.GetMdbMysqlClusterMaintenanceWindow[];
    /**
     * MySQL cluster config block.
     */
    readonly mysqlConfig: {[key: string]: string};
    /**
     * The resource name.
     */
    readonly name: string;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    readonly networkId: string;
    /**
     * Cluster performance diagnostics settings. [YC Documentation](https://yandex.cloud/docs/managed-mysql/api-ref/grpc/cluster_service#PerformanceDiagnostics).
     */
    readonly performanceDiagnostics: outputs.GetMdbMysqlClusterPerformanceDiagnostic[];
    /**
     * Resources allocated to hosts of the MySQL cluster.
     */
    readonly resources: outputs.GetMdbMysqlClusterResource[];
    /**
     * The list of security groups applied to resource or their components.
     */
    readonly securityGroupIds: string[];
    /**
     * Status of the cluster.
     */
    readonly status: string;
    /**
     * To manage users, please switch to using a separate resource type `yandex.MdbMysqlUser`.
     */
    readonly users: outputs.GetMdbMysqlClusterUser[];
    /**
     * Version of the MySQL cluster. (allowed versions are: 5.7, 8.0).
     */
    readonly version: string;
}
/**
 * Get information about a Yandex Managed MySQL cluster. For more information, see [the official documentation](https://yandex.cloud/docs/managed-mysql/).
 *
 * > Either `clusterId` or `name` should be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * const myCluster = yandex.getMdbMysqlCluster({
 *     name: "test",
 * });
 * export const networkId = myCluster.then(myCluster => myCluster.networkId);
 * ```
 */
export function getMdbMysqlClusterOutput(args?: GetMdbMysqlClusterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMdbMysqlClusterResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("yandex:index/getMdbMysqlCluster:getMdbMysqlCluster", {
        "access": args.access,
        "clusterId": args.clusterId,
        "deletionProtection": args.deletionProtection,
        "description": args.description,
        "diskEncryptionKeyId": args.diskEncryptionKeyId,
        "folderId": args.folderId,
        "labels": args.labels,
        "mysqlConfig": args.mysqlConfig,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getMdbMysqlCluster.
 */
export interface GetMdbMysqlClusterOutputArgs {
    /**
     * Access policy to the MySQL cluster.
     */
    access?: pulumi.Input<inputs.GetMdbMysqlClusterAccessArgs>;
    /**
     * The ID of the MySQL cluster.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * ID of the KMS key for cluster disk encryption. Restoring without an encryption key will disable encryption if any exists.
     */
    diskEncryptionKeyId?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * MySQL cluster config block.
     */
    mysqlConfig?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
}
