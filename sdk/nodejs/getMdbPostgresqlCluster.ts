// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about a Yandex Managed PostgreSQL cluster. For more information, see [the official documentation](https://yandex.cloud/docs/managed-postgresql/). [How to connect to the DB](https://yandex.cloud/docs/managed-postgresql/quickstart#connect). To connect, use port 6432. The port number is not configurable.
 *
 * > Either `clusterId` or `name` should be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * const myCluster = yandex.getMdbPostgresqlCluster({
 *     name: "test",
 * });
 * export const fqdn = myCluster.then(myCluster => myCluster.hosts?.[0]?.fqdn);
 * ```
 */
export function getMdbPostgresqlCluster(args?: GetMdbPostgresqlClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetMdbPostgresqlClusterResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getMdbPostgresqlCluster:getMdbPostgresqlCluster", {
        "clusterId": args.clusterId,
        "deletionProtection": args.deletionProtection,
        "description": args.description,
        "diskEncryptionKeyId": args.diskEncryptionKeyId,
        "folderId": args.folderId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getMdbPostgresqlCluster.
 */
export interface GetMdbPostgresqlClusterArgs {
    /**
     * The ID of the PostgreSQL cluster.
     */
    clusterId?: string;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: boolean;
    /**
     * The resource description.
     */
    description?: string;
    /**
     * ID of the KMS key for cluster disk encryption.
     */
    diskEncryptionKeyId?: string;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: string;
    /**
     * The name of the PostgreSQL cluster.
     */
    name?: string;
}

/**
 * A collection of values returned by getMdbPostgresqlCluster.
 */
export interface GetMdbPostgresqlClusterResult {
    /**
     * The ID of the PostgreSQL cluster.
     */
    readonly clusterId: string;
    /**
     * Configuration of the PostgreSQL cluster.
     */
    readonly configs: outputs.GetMdbPostgresqlClusterConfig[];
    /**
     * The creation timestamp of the resource.
     */
    readonly createdAt: string;
    /**
     * > Deprecated! To manage databases, please switch to using a separate resource type `yandex.MdbPostgresqlDatabase`.
     */
    readonly databases: outputs.GetMdbPostgresqlClusterDatabase[];
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    readonly deletionProtection: boolean;
    /**
     * The resource description.
     */
    readonly description?: string;
    /**
     * ID of the KMS key for cluster disk encryption.
     */
    readonly diskEncryptionKeyId: string;
    /**
     * Deployment environment of the PostgreSQL cluster.
     */
    readonly environment: string;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    readonly folderId: string;
    /**
     * Aggregated health of the cluster.
     */
    readonly health: string;
    /**
     * Host Group IDs.
     */
    readonly hostGroupIds: string[];
    /**
     * A host of the PostgreSQL cluster.
     */
    readonly hosts: outputs.GetMdbPostgresqlClusterHost[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    readonly labels: {[key: string]: string};
    /**
     * Maintenance policy of the PostgreSQL cluster.
     */
    readonly maintenanceWindows: outputs.GetMdbPostgresqlClusterMaintenanceWindow[];
    /**
     * The name of the PostgreSQL cluster.
     */
    readonly name: string;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    readonly networkId: string;
    /**
     * The list of security groups applied to resource or their components.
     */
    readonly securityGroupIds: string[];
    /**
     * Status of the cluster.
     */
    readonly status: string;
    /**
     * > Deprecated! To manage users, please switch to using a separate resource type `yandex.MdbPostgresqlUser`.
     */
    readonly users: outputs.GetMdbPostgresqlClusterUser[];
}
/**
 * Get information about a Yandex Managed PostgreSQL cluster. For more information, see [the official documentation](https://yandex.cloud/docs/managed-postgresql/). [How to connect to the DB](https://yandex.cloud/docs/managed-postgresql/quickstart#connect). To connect, use port 6432. The port number is not configurable.
 *
 * > Either `clusterId` or `name` should be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * const myCluster = yandex.getMdbPostgresqlCluster({
 *     name: "test",
 * });
 * export const fqdn = myCluster.then(myCluster => myCluster.hosts?.[0]?.fqdn);
 * ```
 */
export function getMdbPostgresqlClusterOutput(args?: GetMdbPostgresqlClusterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMdbPostgresqlClusterResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("yandex:index/getMdbPostgresqlCluster:getMdbPostgresqlCluster", {
        "clusterId": args.clusterId,
        "deletionProtection": args.deletionProtection,
        "description": args.description,
        "diskEncryptionKeyId": args.diskEncryptionKeyId,
        "folderId": args.folderId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getMdbPostgresqlCluster.
 */
export interface GetMdbPostgresqlClusterOutputArgs {
    /**
     * The ID of the PostgreSQL cluster.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * ID of the KMS key for cluster disk encryption.
     */
    diskEncryptionKeyId?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * The name of the PostgreSQL cluster.
     */
    name?: pulumi.Input<string>;
}
