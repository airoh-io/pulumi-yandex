// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about a Yandex Managed SQLServer cluster. For more information, see [the official documentation](https://yandex.cloud/docs/managed-sqlserver/).
 *
 * > Either `clusterId` or `name` should be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * const foo = yandex.getMdbSqlserverCluster({
 *     name: "test",
 * });
 * export const networkId = foo.then(foo => foo.networkId);
 * ```
 */
export function getMdbSqlserverCluster(args?: GetMdbSqlserverClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetMdbSqlserverClusterResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getMdbSqlserverCluster:getMdbSqlserverCluster", {
        "clusterId": args.clusterId,
        "deletionProtection": args.deletionProtection,
        "folderId": args.folderId,
        "name": args.name,
        "sqlcollation": args.sqlcollation,
        "sqlserverConfig": args.sqlserverConfig,
    }, opts);
}

/**
 * A collection of arguments for invoking getMdbSqlserverCluster.
 */
export interface GetMdbSqlserverClusterArgs {
    /**
     * The ID of the SQLServer cluster.
     */
    clusterId?: string;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: boolean;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: string;
    /**
     * The name of the SQLServer cluster.
     */
    name?: string;
    /**
     * SQL Collation cluster will be created with. This attribute cannot be changed when cluster is created!
     */
    sqlcollation?: string;
    /**
     * SQLServer cluster config. Detail info in `SQLServer config` section.
     */
    sqlserverConfig?: {[key: string]: string};
}

/**
 * A collection of values returned by getMdbSqlserverCluster.
 */
export interface GetMdbSqlserverClusterResult {
    readonly backupWindowStarts: outputs.GetMdbSqlserverClusterBackupWindowStart[];
    /**
     * The ID of the SQLServer cluster.
     */
    readonly clusterId: string;
    /**
     * The creation timestamp of the resource.
     */
    readonly createdAt: string;
    readonly databases: outputs.GetMdbSqlserverClusterDatabase[];
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    readonly deletionProtection: boolean;
    /**
     * The resource description.
     */
    readonly description: string;
    /**
     * Deployment environment of the SQLServer cluster. (PRODUCTION, PRESTABLE).
     */
    readonly environment: string;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    readonly folderId: string;
    /**
     * Aggregated health of the cluster.
     */
    readonly health: string;
    /**
     * A list of IDs of the host groups hosting VMs of the cluster.
     */
    readonly hostGroupIds: string[];
    readonly hosts: outputs.GetMdbSqlserverClusterHost[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    readonly labels: {[key: string]: string};
    /**
     * The name of the SQLServer cluster.
     */
    readonly name: string;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    readonly networkId: string;
    readonly resources: outputs.GetMdbSqlserverClusterResource[];
    /**
     * The list of security groups applied to resource or their components.
     */
    readonly securityGroupIds: string[];
    /**
     * SQL Collation cluster will be created with. This attribute cannot be changed when cluster is created!
     */
    readonly sqlcollation: string;
    /**
     * SQLServer cluster config. Detail info in `SQLServer config` section.
     */
    readonly sqlserverConfig: {[key: string]: string};
    /**
     * Status of the cluster.
     */
    readonly status: string;
    readonly users: outputs.GetMdbSqlserverClusterUser[];
    readonly version: string;
}
/**
 * Get information about a Yandex Managed SQLServer cluster. For more information, see [the official documentation](https://yandex.cloud/docs/managed-sqlserver/).
 *
 * > Either `clusterId` or `name` should be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * const foo = yandex.getMdbSqlserverCluster({
 *     name: "test",
 * });
 * export const networkId = foo.then(foo => foo.networkId);
 * ```
 */
export function getMdbSqlserverClusterOutput(args?: GetMdbSqlserverClusterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMdbSqlserverClusterResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("yandex:index/getMdbSqlserverCluster:getMdbSqlserverCluster", {
        "clusterId": args.clusterId,
        "deletionProtection": args.deletionProtection,
        "folderId": args.folderId,
        "name": args.name,
        "sqlcollation": args.sqlcollation,
        "sqlserverConfig": args.sqlserverConfig,
    }, opts);
}

/**
 * A collection of arguments for invoking getMdbSqlserverCluster.
 */
export interface GetMdbSqlserverClusterOutputArgs {
    /**
     * The ID of the SQLServer cluster.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * The name of the SQLServer cluster.
     */
    name?: pulumi.Input<string>;
    /**
     * SQL Collation cluster will be created with. This attribute cannot be changed when cluster is created!
     */
    sqlcollation?: pulumi.Input<string>;
    /**
     * SQLServer cluster config. Detail info in `SQLServer config` section.
     */
    sqlserverConfig?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
