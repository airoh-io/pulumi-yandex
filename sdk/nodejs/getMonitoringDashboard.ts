// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about a Yandex Monitoring dashboard.
 *
 * > One of `dashboardId` or `name` should be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh/pulumi-yandex";
 *
 * const myDashboard = yandex.getMonitoringDashboard({
 *     dashboardId: "some_instance_dashboard_id",
 * });
 * ```
 */
export function getMonitoringDashboard(args?: GetMonitoringDashboardArgs, opts?: pulumi.InvokeOptions): Promise<GetMonitoringDashboardResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getMonitoringDashboard:getMonitoringDashboard", {
        "dashboardId": args.dashboardId,
        "description": args.description,
        "folderId": args.folderId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getMonitoringDashboard.
 */
export interface GetMonitoringDashboardArgs {
    /**
     * Dashboard ID.
     */
    dashboardId?: string;
    /**
     * The resource description.
     */
    description?: string;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: string;
    /**
     * The resource name.
     */
    name?: string;
}

/**
 * A collection of values returned by getMonitoringDashboard.
 */
export interface GetMonitoringDashboardResult {
    /**
     * Dashboard ID.
     */
    readonly dashboardId?: string;
    /**
     * The resource description.
     */
    readonly description?: string;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    readonly folderId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    readonly labels: {[key: string]: string};
    /**
     * The resource name.
     */
    readonly name?: string;
    /**
     * Dashboard parametrization
     */
    readonly parametrizations: outputs.GetMonitoringDashboardParametrization[];
    /**
     * Dashboard title.
     */
    readonly title: string;
    /**
     * Widgets
     */
    readonly widgets: outputs.GetMonitoringDashboardWidget[];
}
/**
 * Get information about a Yandex Monitoring dashboard.
 *
 * > One of `dashboardId` or `name` should be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh/pulumi-yandex";
 *
 * const myDashboard = yandex.getMonitoringDashboard({
 *     dashboardId: "some_instance_dashboard_id",
 * });
 * ```
 */
export function getMonitoringDashboardOutput(args?: GetMonitoringDashboardOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMonitoringDashboardResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("yandex:index/getMonitoringDashboard:getMonitoringDashboard", {
        "dashboardId": args.dashboardId,
        "description": args.description,
        "folderId": args.folderId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getMonitoringDashboard.
 */
export interface GetMonitoringDashboardOutputArgs {
    /**
     * Dashboard ID.
     */
    dashboardId?: pulumi.Input<string>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
}
