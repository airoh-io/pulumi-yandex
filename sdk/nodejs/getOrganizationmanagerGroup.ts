// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about a Yandex Cloud Organization Manager Group. For more information, see [the official documentation](https://yandex.cloud/docs/organization/manage-groups).
 *
 * > One of `groupId` or `name` should be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * export = async () => {
 *     const group = await yandex.getOrganizationmanagerGroup({
 *         groupId: "some_group_id",
 *         organizationId: "some_organization_id",
 *     });
 *     return {
 *         "myGroup.name": group.name,
 *     };
 * }
 * ```
 */
export function getOrganizationmanagerGroup(args?: GetOrganizationmanagerGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetOrganizationmanagerGroupResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getOrganizationmanagerGroup:getOrganizationmanagerGroup", {
        "groupId": args.groupId,
        "name": args.name,
        "organizationId": args.organizationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getOrganizationmanagerGroup.
 */
export interface GetOrganizationmanagerGroupArgs {
    /**
     * ID of a Group.
     */
    groupId?: string;
    /**
     * The resource name.
     */
    name?: string;
    /**
     * Organization that the Group belongs to. If value is omitted, the default provider organization is used.
     */
    organizationId?: string;
}

/**
 * A collection of values returned by getOrganizationmanagerGroup.
 */
export interface GetOrganizationmanagerGroupResult {
    /**
     * The creation timestamp of the resource.
     */
    readonly createdAt: string;
    /**
     * The resource description.
     */
    readonly description: string;
    /**
     * ID of a Group.
     */
    readonly groupId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of members of the Group.
     */
    readonly members: outputs.GetOrganizationmanagerGroupMember[];
    /**
     * The resource name.
     */
    readonly name: string;
    /**
     * Organization that the Group belongs to. If value is omitted, the default provider organization is used.
     */
    readonly organizationId?: string;
}
/**
 * Get information about a Yandex Cloud Organization Manager Group. For more information, see [the official documentation](https://yandex.cloud/docs/organization/manage-groups).
 *
 * > One of `groupId` or `name` should be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * export = async () => {
 *     const group = await yandex.getOrganizationmanagerGroup({
 *         groupId: "some_group_id",
 *         organizationId: "some_organization_id",
 *     });
 *     return {
 *         "myGroup.name": group.name,
 *     };
 * }
 * ```
 */
export function getOrganizationmanagerGroupOutput(args?: GetOrganizationmanagerGroupOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetOrganizationmanagerGroupResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("yandex:index/getOrganizationmanagerGroup:getOrganizationmanagerGroup", {
        "groupId": args.groupId,
        "name": args.name,
        "organizationId": args.organizationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getOrganizationmanagerGroup.
 */
export interface GetOrganizationmanagerGroupOutputArgs {
    /**
     * ID of a Group.
     */
    groupId?: pulumi.Input<string>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * Organization that the Group belongs to. If value is omitted, the default provider organization is used.
     */
    organizationId?: pulumi.Input<string>;
}
