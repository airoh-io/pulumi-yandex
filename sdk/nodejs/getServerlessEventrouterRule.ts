// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about Serverless Event Router Rule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * ```
 */
export function getServerlessEventrouterRule(args?: GetServerlessEventrouterRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetServerlessEventrouterRuleResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getServerlessEventrouterRule:getServerlessEventrouterRule", {
        "name": args.name,
        "ruleId": args.ruleId,
    }, opts);
}

/**
 * A collection of arguments for invoking getServerlessEventrouterRule.
 */
export interface GetServerlessEventrouterRuleArgs {
    /**
     * Name of the rule
     */
    name?: string;
    /**
     * ID of the bus that the rule belongs to
     */
    ruleId?: string;
}

/**
 * A collection of values returned by getServerlessEventrouterRule.
 */
export interface GetServerlessEventrouterRuleResult {
    /**
     * ID of the bus that the rule belongs to
     */
    readonly busId: string;
    /**
     * ID of the cloud that the rule resides in
     */
    readonly cloudId: string;
    /**
     * ContainerTarget
     */
    readonly containers: outputs.GetServerlessEventrouterRuleContainer[];
    /**
     * Creation timestamp
     */
    readonly createdAt: string;
    /**
     * Deletion protection
     */
    readonly deletionProtection: boolean;
    /**
     * Description of the rule
     */
    readonly description: string;
    /**
     * ID of the folder that the rule resides in
     */
    readonly folderId: string;
    /**
     * FunctionTarget
     */
    readonly functions: outputs.GetServerlessEventrouterRuleFunction[];
    /**
     * GatewayWebsocketBroadcastTarget
     */
    readonly gatewayWebsocketBroadcasts: outputs.GetServerlessEventrouterRuleGatewayWebsocketBroadcast[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * JQ filter for matching events
     */
    readonly jqFilter: string;
    /**
     * Rule labels
     */
    readonly labels: {[key: string]: string};
    /**
     * LoggingTarget. Includes either log*group*id or folder_id
     */
    readonly loggings: outputs.GetServerlessEventrouterRuleLogging[];
    /**
     * Name of the rule
     */
    readonly name?: string;
    /**
     * ID of the bus that the rule belongs to
     */
    readonly ruleId?: string;
    /**
     * WorkflowTarget
     */
    readonly workflows: outputs.GetServerlessEventrouterRuleWorkflow[];
    /**
     * YdsTarget
     */
    readonly yds: outputs.GetServerlessEventrouterRuleYd[];
    /**
     * YmqTarget
     */
    readonly ymqs: outputs.GetServerlessEventrouterRuleYmq[];
}
/**
 * Get information about Serverless Event Router Rule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * ```
 */
export function getServerlessEventrouterRuleOutput(args?: GetServerlessEventrouterRuleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetServerlessEventrouterRuleResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("yandex:index/getServerlessEventrouterRule:getServerlessEventrouterRule", {
        "name": args.name,
        "ruleId": args.ruleId,
    }, opts);
}

/**
 * A collection of arguments for invoking getServerlessEventrouterRule.
 */
export interface GetServerlessEventrouterRuleOutputArgs {
    /**
     * Name of the rule
     */
    name?: pulumi.Input<string>;
    /**
     * ID of the bus that the rule belongs to
     */
    ruleId?: pulumi.Input<string>;
}
