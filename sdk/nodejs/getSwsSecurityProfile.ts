// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about SecurityProfile. For more information, see [the official documentation](https://yandex.cloud/docs/smartwebsecurity/concepts/profiles).
 *
 * This data source is used to define SecurityProfile that can be used by other resources.
 *
 * > One of `securityProfileId` or `name` should be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * const by_id = yandex.getSwsSecurityProfile({
 *     securityProfileId: yandex_sws_security_profile["my-profile"].id,
 * });
 * const by_name = yandex.getSwsSecurityProfile({
 *     name: yandex_sws_security_profile["my-profile"].name,
 * });
 * ```
 */
export function getSwsSecurityProfile(args?: GetSwsSecurityProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetSwsSecurityProfileResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getSwsSecurityProfile:getSwsSecurityProfile", {
        "cloudId": args.cloudId,
        "folderId": args.folderId,
        "name": args.name,
        "securityProfileId": args.securityProfileId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSwsSecurityProfile.
 */
export interface GetSwsSecurityProfileArgs {
    /**
     * The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
     */
    cloudId?: string;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: string;
    /**
     * The resource name.
     */
    name?: string;
    /**
     * ID of the security profile.
     */
    securityProfileId?: string;
}

/**
 * A collection of values returned by getSwsSecurityProfile.
 */
export interface GetSwsSecurityProfileResult {
    /**
     * Advanced rate limiter profile ID to use with this security profile. Set empty to use default.
     */
    readonly advancedRateLimiterProfileId: string;
    readonly analyzeRequestBodies: outputs.GetSwsSecurityProfileAnalyzeRequestBody[];
    /**
     * Captcha ID to use with this security profile. Set empty to use default.
     */
    readonly captchaId: string;
    /**
     * The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
     */
    readonly cloudId: string;
    /**
     * The creation timestamp of the resource.
     */
    readonly createdAt: string;
    /**
     * Action to perform if none of rules matched. Possible values: `ALLOW` or `DENY`.
     */
    readonly defaultAction: string;
    /**
     * The resource description.
     */
    readonly description: string;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    readonly folderId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    readonly labels: {[key: string]: string};
    /**
     * The resource name.
     */
    readonly name: string;
    /**
     * ID of the security profile.
     */
    readonly securityProfileId?: string;
    /**
     * List of security rules.
     */
    readonly securityRules: outputs.GetSwsSecurityProfileSecurityRule[];
}
/**
 * Get information about SecurityProfile. For more information, see [the official documentation](https://yandex.cloud/docs/smartwebsecurity/concepts/profiles).
 *
 * This data source is used to define SecurityProfile that can be used by other resources.
 *
 * > One of `securityProfileId` or `name` should be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * const by_id = yandex.getSwsSecurityProfile({
 *     securityProfileId: yandex_sws_security_profile["my-profile"].id,
 * });
 * const by_name = yandex.getSwsSecurityProfile({
 *     name: yandex_sws_security_profile["my-profile"].name,
 * });
 * ```
 */
export function getSwsSecurityProfileOutput(args?: GetSwsSecurityProfileOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSwsSecurityProfileResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("yandex:index/getSwsSecurityProfile:getSwsSecurityProfile", {
        "cloudId": args.cloudId,
        "folderId": args.folderId,
        "name": args.name,
        "securityProfileId": args.securityProfileId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSwsSecurityProfile.
 */
export interface GetSwsSecurityProfileOutputArgs {
    /**
     * The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
     */
    cloudId?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * ID of the security profile.
     */
    securityProfileId?: pulumi.Input<string>;
}
