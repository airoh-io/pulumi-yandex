// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about a Yandex VPC subnet. For more information, see [Yandex Cloud VPC](https://yandex.cloud/docs/vpc/concepts/index).
 *
 * This data source is used to define [VPC Subnets](https://yandex.cloud/docs/vpc/concepts/network#subnet) that can be used by other resources.
 *
 * > One of `subnetId` or `name` should be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh/pulumi-yandex";
 *
 * const admin = yandex.getVpcSubnet({
 *     subnetId: "my-subnet-id",
 * });
 * ```
 */
export function getVpcSubnet(args?: GetVpcSubnetArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcSubnetResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getVpcSubnet:getVpcSubnet", {
        "folderId": args.folderId,
        "name": args.name,
        "subnetId": args.subnetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpcSubnet.
 */
export interface GetVpcSubnetArgs {
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: string;
    /**
     * The resource name.
     */
    name?: string;
    /**
     * Subnet ID.
     */
    subnetId?: string;
}

/**
 * A collection of values returned by getVpcSubnet.
 */
export interface GetVpcSubnetResult {
    /**
     * The creation timestamp of the resource.
     */
    readonly createdAt: string;
    /**
     * The resource description.
     */
    readonly description: string;
    readonly dhcpOptions: outputs.GetVpcSubnetDhcpOption[];
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    readonly folderId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    readonly labels: {[key: string]: string};
    /**
     * The resource name.
     */
    readonly name: string;
    /**
     * ID of the network this subnet belongs to. Only networks that are in the distributed mode can have subnets.
     */
    readonly networkId: string;
    /**
     * The ID of the route table to assign to this subnet. Assigned route table should belong to the same network as this subnet.
     */
    readonly routeTableId: string;
    /**
     * Subnet ID.
     */
    readonly subnetId: string;
    /**
     * A list of blocks of internal IPv4 addresses that are owned by this subnet. Provide this property when you create the subnet. For example, `10.0.0.0/22` or `192.168.0.0/16`. Blocks of addresses must be unique and non-overlapping within a network. Minimum subnet size is `/28`, and maximum subnet size is `/16`. Only IPv4 is supported.
     */
    readonly v4CidrBlocks: string[];
    /**
     * An optional list of blocks of IPv6 addresses that are owned by this subnet.
     */
    readonly v6CidrBlocks: string[];
    /**
     * The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.
     */
    readonly zone: string;
}
/**
 * Get information about a Yandex VPC subnet. For more information, see [Yandex Cloud VPC](https://yandex.cloud/docs/vpc/concepts/index).
 *
 * This data source is used to define [VPC Subnets](https://yandex.cloud/docs/vpc/concepts/network#subnet) that can be used by other resources.
 *
 * > One of `subnetId` or `name` should be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh/pulumi-yandex";
 *
 * const admin = yandex.getVpcSubnet({
 *     subnetId: "my-subnet-id",
 * });
 * ```
 */
export function getVpcSubnetOutput(args?: GetVpcSubnetOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVpcSubnetResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("yandex:index/getVpcSubnet:getVpcSubnet", {
        "folderId": args.folderId,
        "name": args.name,
        "subnetId": args.subnetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpcSubnet.
 */
export interface GetVpcSubnetOutputArgs {
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * Subnet ID.
     */
    subnetId?: pulumi.Input<string>;
}
