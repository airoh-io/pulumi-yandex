// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * **IAM policy for a service account**
 * When managing IAM roles, you can treat a service account either as a resource or as an identity. This resource is used to add IAM policy bindings to a service account resource to configure permissions that define who can edit the service account.
 *
 * There are three different resources that help you manage your IAM policy for a service account. Each of these resources is used for a different use case:
 * * yandex_iam_service_account_iam_policy: Authoritative. Sets the IAM policy for the service account and replaces any existing policy already attached.
 * * yandex_iam_service_account_iam_binding: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the service account are preserved.
 * * yandex_iam_service_account_iam_member: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role of the service account are preserved.
 *
 * > `yandex.IamServiceAccountIamPolicy` **cannot** be used in conjunction with `yandexIamServiceAccountIamBinding` and `yandexIamServiceAccountIamMember` or they will conflict over what your policy should be.
 *
 * > `yandexIamServiceAccountIamBinding` resources **can be** used in conjunction with `yandexIamServiceAccountIamMember` resources **only if** they do not grant privileges to the same role.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh/pulumi-yandex";
 *
 * const admin = yandex.getIamPolicy({
 *     bindings: [{
 *         role: "admin",
 *         members: ["userAccount:foobar_user_id"],
 *     }],
 * });
 * const admin_account_iam = new yandex.IamServiceAccountIamPolicy("admin-account-iam", {
 *     serviceAccountId: "aje5a**********qspd3",
 *     policyData: admin.then(admin => admin.policyData),
 * });
 * ```
 *
 * ## Import
 *
 * The resource can be imported by using their `resource ID`. For getting the resource ID you can use Yandex Cloud [Web Console](https://console.yandex.cloud) or [YC CLI](https://yandex.cloud/docs/cli/quickstart).
 *
 * ```sh
 * $ pulumi import yandex:index/iamServiceAccountIamPolicy:IamServiceAccountIamPolicy <resource Name> <resource Id>
 * ```
 *
 * ```sh
 * $ pulumi import yandex:index/iamServiceAccountIamPolicy:IamServiceAccountIamPolicy admin-account-iam aje5a**********qspd3
 * ```
 */
export class IamServiceAccountIamPolicy extends pulumi.CustomResource {
    /**
     * Get an existing IamServiceAccountIamPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IamServiceAccountIamPolicyState, opts?: pulumi.CustomResourceOptions): IamServiceAccountIamPolicy {
        return new IamServiceAccountIamPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/iamServiceAccountIamPolicy:IamServiceAccountIamPolicy';

    /**
     * Returns true if the given object is an instance of IamServiceAccountIamPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IamServiceAccountIamPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IamServiceAccountIamPolicy.__pulumiType;
    }

    /**
     * Required only by `yandex.IamServiceAccountIamPolicy`. The policy data generated by a `yandex.getIamPolicy` data source.
     */
    declare public readonly policyData: pulumi.Output<string>;
    /**
     * The service account ID to apply a binding to.
     */
    declare public readonly serviceAccountId: pulumi.Output<string>;

    /**
     * Create a IamServiceAccountIamPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IamServiceAccountIamPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IamServiceAccountIamPolicyArgs | IamServiceAccountIamPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IamServiceAccountIamPolicyState | undefined;
            resourceInputs["policyData"] = state?.policyData;
            resourceInputs["serviceAccountId"] = state?.serviceAccountId;
        } else {
            const args = argsOrState as IamServiceAccountIamPolicyArgs | undefined;
            if (args?.policyData === undefined && !opts.urn) {
                throw new Error("Missing required property 'policyData'");
            }
            if (args?.serviceAccountId === undefined && !opts.urn) {
                throw new Error("Missing required property 'serviceAccountId'");
            }
            resourceInputs["policyData"] = args?.policyData;
            resourceInputs["serviceAccountId"] = args?.serviceAccountId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IamServiceAccountIamPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IamServiceAccountIamPolicy resources.
 */
export interface IamServiceAccountIamPolicyState {
    /**
     * Required only by `yandex.IamServiceAccountIamPolicy`. The policy data generated by a `yandex.getIamPolicy` data source.
     */
    policyData?: pulumi.Input<string>;
    /**
     * The service account ID to apply a binding to.
     */
    serviceAccountId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IamServiceAccountIamPolicy resource.
 */
export interface IamServiceAccountIamPolicyArgs {
    /**
     * Required only by `yandex.IamServiceAccountIamPolicy`. The policy data generated by a `yandex.getIamPolicy` data source.
     */
    policyData: pulumi.Input<string>;
    /**
     * The service account ID to apply a binding to.
     */
    serviceAccountId: pulumi.Input<string>;
}
