// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manages a MySQL cluster within the Yandex Cloud. For more information, see [the official documentation](https://yandex.cloud/docs/managed-mysql/).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh/pulumi-yandex";
 *
 * // Auxiliary resources
 * const fooVpcNetwork = new yandex.VpcNetwork("fooVpcNetwork", {});
 * const fooVpcSubnet = new yandex.VpcSubnet("fooVpcSubnet", {
 *     zone: "ru-central1-d",
 *     networkId: fooVpcNetwork.id,
 *     v4CidrBlocks: ["10.5.0.0/24"],
 * });
 * //
 * // Create a new MDB MySQL Cluster.
 * //
 * const myCluster = new yandex.MdbMysqlCluster("myCluster", {
 *     environment: "PRESTABLE",
 *     networkId: fooVpcNetwork.id,
 *     version: "8.0",
 *     resources: {
 *         resourcePresetId: "s2.micro",
 *         diskTypeId: "network-ssd",
 *         diskSize: 16,
 *     },
 *     mysqlConfig: {
 *         sql_mode: "ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION",
 *         max_connections: "100",
 *         default_authentication_plugin: "MYSQL_NATIVE_PASSWORD",
 *         innodb_print_all_deadlocks: "true",
 *     },
 *     hosts: [{
 *         zone: "ru-central1-d",
 *         subnetId: fooVpcSubnet.id,
 *     }],
 * });
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh/pulumi-yandex";
 *
 * // Auxiliary resources
 * const fooVpcNetwork = new yandex.VpcNetwork("fooVpcNetwork", {});
 * const fooVpcSubnet = new yandex.VpcSubnet("fooVpcSubnet", {
 *     zone: "ru-central1-b",
 *     networkId: fooVpcNetwork.id,
 *     v4CidrBlocks: ["10.1.0.0/24"],
 * });
 * const bar = new yandex.VpcSubnet("bar", {
 *     zone: "ru-central1-d",
 *     networkId: fooVpcNetwork.id,
 *     v4CidrBlocks: ["10.2.0.0/24"],
 * });
 * //
 * // Create a new MDB High Availability MySQL Cluster.
 * //
 * const myCluster = new yandex.MdbMysqlCluster("myCluster", {
 *     environment: "PRESTABLE",
 *     networkId: fooVpcNetwork.id,
 *     version: "8.0",
 *     resources: {
 *         resourcePresetId: "s2.micro",
 *         diskTypeId: "network-ssd",
 *         diskSize: 16,
 *     },
 *     maintenanceWindow: {
 *         type: "WEEKLY",
 *         day: "SAT",
 *         hour: 12,
 *     },
 *     hosts: [
 *         {
 *             zone: "ru-central1-b",
 *             subnetId: fooVpcSubnet.id,
 *         },
 *         {
 *             zone: "ru-central1-d",
 *             subnetId: bar.id,
 *         },
 *     ],
 * });
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh/pulumi-yandex";
 *
 * // Auxiliary resources
 * const fooVpcNetwork = new yandex.VpcNetwork("fooVpcNetwork", {});
 * const fooVpcSubnet = new yandex.VpcSubnet("fooVpcSubnet", {
 *     zone: "ru-central1-b",
 *     networkId: fooVpcNetwork.id,
 *     v4CidrBlocks: ["10.1.0.0/24"],
 * });
 * const bar = new yandex.VpcSubnet("bar", {
 *     zone: "ru-central1-d",
 *     networkId: fooVpcNetwork.id,
 *     v4CidrBlocks: ["10.2.0.0/24"],
 * });
 * //
 * // Create a new MDB HA MySQL Cluster with cascade replicas.
 * //
 * const myCluster = new yandex.MdbMysqlCluster("myCluster", {
 *     environment: "PRESTABLE",
 *     networkId: fooVpcNetwork.id,
 *     version: "8.0",
 *     resources: {
 *         resourcePresetId: "s2.micro",
 *         diskTypeId: "network-ssd",
 *         diskSize: 16,
 *     },
 *     maintenanceWindow: {
 *         type: "WEEKLY",
 *         day: "SAT",
 *         hour: 12,
 *     },
 *     hosts: [
 *         {
 *             zone: "ru-central1-b",
 *             name: "na-1",
 *             subnetId: fooVpcSubnet.id,
 *         },
 *         {
 *             zone: "ru-central1-d",
 *             name: "na-2",
 *             subnetId: fooVpcSubnet.id,
 *         },
 *         {
 *             zone: "ru-central1-b",
 *             name: "nb-1",
 *             replicationSourceName: "na-1",
 *             subnetId: bar.id,
 *         },
 *         {
 *             zone: "ru-central1-d",
 *             name: "nb-2",
 *             replicationSourceName: "nb-1",
 *             subnetId: bar.id,
 *         },
 *     ],
 * });
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh/pulumi-yandex";
 *
 * // Auxiliary resources
 * const fooVpcNetwork = new yandex.VpcNetwork("fooVpcNetwork", {});
 * const fooVpcSubnet = new yandex.VpcSubnet("fooVpcSubnet", {
 *     zone: "ru-central1-b",
 *     networkId: fooVpcNetwork.id,
 *     v4CidrBlocks: ["10.1.0.0/24"],
 * });
 * const bar = new yandex.VpcSubnet("bar", {
 *     zone: "ru-central1-d",
 *     networkId: fooVpcNetwork.id,
 *     v4CidrBlocks: ["10.2.0.0/24"],
 * });
 * //
 * // Create a new MDB MySQL Cluster with different backup priorities.
 * //
 * const myCluster = new yandex.MdbMysqlCluster("myCluster", {
 *     environment: "PRESTABLE",
 *     networkId: fooVpcNetwork.id,
 *     version: "8.0",
 *     resources: {
 *         resourcePresetId: "s2.micro",
 *         diskTypeId: "network-ssd",
 *         diskSize: 16,
 *     },
 *     maintenanceWindow: {
 *         type: "WEEKLY",
 *         day: "SAT",
 *         hour: 12,
 *     },
 *     hosts: [
 *         {
 *             zone: "ru-central1-b",
 *             name: "na-1",
 *             subnetId: fooVpcSubnet.id,
 *         },
 *         {
 *             zone: "ru-central1-d",
 *             name: "nb-1",
 *             backupPriority: 5,
 *             subnetId: bar.id,
 *         },
 *         {
 *             zone: "ru-central1-d",
 *             name: "nb-2",
 *             backupPriority: 10,
 *             subnetId: bar.id,
 *         },
 *     ],
 * });
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh/pulumi-yandex";
 *
 * // Auxiliary resources
 * const fooVpcNetwork = new yandex.VpcNetwork("fooVpcNetwork", {});
 * const fooVpcSubnet = new yandex.VpcSubnet("fooVpcSubnet", {
 *     zone: "ru-central1-b",
 *     networkId: fooVpcNetwork.id,
 *     v4CidrBlocks: ["10.1.0.0/24"],
 * });
 * const bar = new yandex.VpcSubnet("bar", {
 *     zone: "ru-central1-d",
 *     networkId: fooVpcNetwork.id,
 *     v4CidrBlocks: ["10.2.0.0/24"],
 * });
 * //
 * // Create a new MDB MySQL Cluster with different host priorities.
 * //
 * const myCluster = new yandex.MdbMysqlCluster("myCluster", {
 *     environment: "PRESTABLE",
 *     networkId: fooVpcNetwork.id,
 *     version: "8.0",
 *     resources: {
 *         resourcePresetId: "s2.micro",
 *         diskTypeId: "network-ssd",
 *         diskSize: 16,
 *     },
 *     maintenanceWindow: {
 *         type: "WEEKLY",
 *         day: "SAT",
 *         hour: 12,
 *     },
 *     hosts: [
 *         {
 *             zone: "ru-central1-b",
 *             name: "na-1",
 *             subnetId: fooVpcSubnet.id,
 *         },
 *         {
 *             zone: "ru-central1-d",
 *             name: "nb-1",
 *             priority: 5,
 *             subnetId: bar.id,
 *         },
 *         {
 *             zone: "ru-central1-d",
 *             name: "nb-2",
 *             priority: 10,
 *             subnetId: bar.id,
 *         },
 *     ],
 * });
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh/pulumi-yandex";
 *
 * // Auxiliary resources
 * const fooVpcNetwork = new yandex.VpcNetwork("fooVpcNetwork", {});
 * const fooVpcSubnet = new yandex.VpcSubnet("fooVpcSubnet", {
 *     zone: "ru-central1-b",
 *     networkId: fooVpcNetwork.id,
 *     v4CidrBlocks: ["10.5.0.0/24"],
 * });
 * //
 * // Create a new MDB MySQL Cluster with user's params.
 * //
 * const myCluster = new yandex.MdbMysqlCluster("myCluster", {
 *     environment: "PRESTABLE",
 *     networkId: fooVpcNetwork.id,
 *     version: "8.0",
 *     resources: {
 *         resourcePresetId: "s2.micro",
 *         diskTypeId: "network-ssd",
 *         diskSize: 16,
 *     },
 *     maintenanceWindow: {
 *         type: "ANYTIME",
 *     },
 *     hosts: [{
 *         zone: "ru-central1-b",
 *         subnetId: fooVpcSubnet.id,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * The resource can be imported by using their `resource ID`. For getting the resource ID you can use Yandex Cloud [Web Console](https://console.yandex.cloud) or [YC CLI](https://yandex.cloud/docs/cli/quickstart).
 *
 * ```sh
 * $ pulumi import yandex:index/mdbMysqlCluster:MdbMysqlCluster <resource Name> <resource Id>
 * ```
 *
 * ```sh
 * $ pulumi import yandex:index/mdbMysqlCluster:MdbMysqlCluster my_cluster ...
 * ```
 */
export class MdbMysqlCluster extends pulumi.CustomResource {
    /**
     * Get an existing MdbMysqlCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MdbMysqlClusterState, opts?: pulumi.CustomResourceOptions): MdbMysqlCluster {
        return new MdbMysqlCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/mdbMysqlCluster:MdbMysqlCluster';

    /**
     * Returns true if the given object is an instance of MdbMysqlCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MdbMysqlCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MdbMysqlCluster.__pulumiType;
    }

    /**
     * Access policy to the MySQL cluster.
     */
    declare public readonly access: pulumi.Output<outputs.MdbMysqlClusterAccess>;
    /**
     * Deprecated field. You can safely remove this option. There is no need to recreate host if assign*public*ip is changed.
     * Regenerate hosts after changing the assign*public*ip parameter.
     *
     * @deprecated You can safely remove this option. There is no need to recreate host if assignPublicIp is changed.
     */
    declare public readonly allowRegenerationHost: pulumi.Output<boolean | undefined>;
    /**
     * The period in days during which backups are stored.
     */
    declare public readonly backupRetainPeriodDays: pulumi.Output<number>;
    /**
     * Time to start the daily backup, in the UTC.
     */
    declare public readonly backupWindowStart: pulumi.Output<outputs.MdbMysqlClusterBackupWindowStart>;
    /**
     * The creation timestamp of the resource.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * To manage databases, please switch to using a separate resource type `yandexMdbMysqlDatabases`.
     *
     * @deprecated to manage databases, please switch to using a separate resource type yandex_mdb_mysql_database
     */
    declare public readonly databases: pulumi.Output<outputs.MdbMysqlClusterDatabase[] | undefined>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    declare public readonly deletionProtection: pulumi.Output<boolean>;
    /**
     * The resource description.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * ID of the KMS key for cluster disk encryption. Restoring without an encryption key will disable encryption if any exists.
     */
    declare public readonly diskEncryptionKeyId: pulumi.Output<string>;
    /**
     * Cluster disk size autoscaling settings.
     */
    declare public readonly diskSizeAutoscaling: pulumi.Output<outputs.MdbMysqlClusterDiskSizeAutoscaling>;
    /**
     * Deployment environment of the MySQL cluster.
     */
    declare public readonly environment: pulumi.Output<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    declare public readonly folderId: pulumi.Output<string>;
    /**
     * Aggregated health of the cluster.
     */
    declare public /*out*/ readonly health: pulumi.Output<string>;
    /**
     * A list of host group IDs to place VMs of the cluster on.
     */
    declare public readonly hostGroupIds: pulumi.Output<string[]>;
    /**
     * A host of the MySQL cluster.
     */
    declare public readonly hosts: pulumi.Output<outputs.MdbMysqlClusterHost[]>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    declare public readonly labels: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Maintenance policy of the MySQL cluster.
     */
    declare public readonly maintenanceWindow: pulumi.Output<outputs.MdbMysqlClusterMaintenanceWindow>;
    /**
     * MySQL cluster config block.
     */
    declare public readonly mysqlConfig: pulumi.Output<{[key: string]: string}>;
    /**
     * The resource name.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    declare public readonly networkId: pulumi.Output<string>;
    /**
     * Cluster performance diagnostics settings. [YC Documentation](https://yandex.cloud/docs/managed-mysql/api-ref/grpc/cluster_service#PerformanceDiagnostics).
     */
    declare public readonly performanceDiagnostics: pulumi.Output<outputs.MdbMysqlClusterPerformanceDiagnostics>;
    /**
     * Resources allocated to hosts of the MySQL cluster.
     */
    declare public readonly resources: pulumi.Output<outputs.MdbMysqlClusterResources>;
    /**
     * The cluster will be created from the specified backup.
     */
    declare public readonly restore: pulumi.Output<outputs.MdbMysqlClusterRestore | undefined>;
    /**
     * The list of security groups applied to resource or their components.
     */
    declare public readonly securityGroupIds: pulumi.Output<string[] | undefined>;
    /**
     * Status of the cluster.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * To manage users, please switch to using a separate resource type `yandex.MdbMysqlUser`.
     *
     * @deprecated to manage users, please switch to using a separate resource type yandex_mdb_mysql_user
     */
    declare public readonly users: pulumi.Output<outputs.MdbMysqlClusterUser[] | undefined>;
    /**
     * Version of the MySQL cluster. (allowed versions are: 5.7, 8.0).
     */
    declare public readonly version: pulumi.Output<string>;

    /**
     * Create a MdbMysqlCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MdbMysqlClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MdbMysqlClusterArgs | MdbMysqlClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MdbMysqlClusterState | undefined;
            resourceInputs["access"] = state?.access;
            resourceInputs["allowRegenerationHost"] = state?.allowRegenerationHost;
            resourceInputs["backupRetainPeriodDays"] = state?.backupRetainPeriodDays;
            resourceInputs["backupWindowStart"] = state?.backupWindowStart;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["databases"] = state?.databases;
            resourceInputs["deletionProtection"] = state?.deletionProtection;
            resourceInputs["description"] = state?.description;
            resourceInputs["diskEncryptionKeyId"] = state?.diskEncryptionKeyId;
            resourceInputs["diskSizeAutoscaling"] = state?.diskSizeAutoscaling;
            resourceInputs["environment"] = state?.environment;
            resourceInputs["folderId"] = state?.folderId;
            resourceInputs["health"] = state?.health;
            resourceInputs["hostGroupIds"] = state?.hostGroupIds;
            resourceInputs["hosts"] = state?.hosts;
            resourceInputs["labels"] = state?.labels;
            resourceInputs["maintenanceWindow"] = state?.maintenanceWindow;
            resourceInputs["mysqlConfig"] = state?.mysqlConfig;
            resourceInputs["name"] = state?.name;
            resourceInputs["networkId"] = state?.networkId;
            resourceInputs["performanceDiagnostics"] = state?.performanceDiagnostics;
            resourceInputs["resources"] = state?.resources;
            resourceInputs["restore"] = state?.restore;
            resourceInputs["securityGroupIds"] = state?.securityGroupIds;
            resourceInputs["status"] = state?.status;
            resourceInputs["users"] = state?.users;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as MdbMysqlClusterArgs | undefined;
            if (args?.environment === undefined && !opts.urn) {
                throw new Error("Missing required property 'environment'");
            }
            if (args?.hosts === undefined && !opts.urn) {
                throw new Error("Missing required property 'hosts'");
            }
            if (args?.networkId === undefined && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            if (args?.resources === undefined && !opts.urn) {
                throw new Error("Missing required property 'resources'");
            }
            if (args?.version === undefined && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            resourceInputs["access"] = args?.access;
            resourceInputs["allowRegenerationHost"] = args?.allowRegenerationHost;
            resourceInputs["backupRetainPeriodDays"] = args?.backupRetainPeriodDays;
            resourceInputs["backupWindowStart"] = args?.backupWindowStart;
            resourceInputs["databases"] = args?.databases;
            resourceInputs["deletionProtection"] = args?.deletionProtection;
            resourceInputs["description"] = args?.description;
            resourceInputs["diskEncryptionKeyId"] = args?.diskEncryptionKeyId;
            resourceInputs["diskSizeAutoscaling"] = args?.diskSizeAutoscaling;
            resourceInputs["environment"] = args?.environment;
            resourceInputs["folderId"] = args?.folderId;
            resourceInputs["hostGroupIds"] = args?.hostGroupIds;
            resourceInputs["hosts"] = args?.hosts;
            resourceInputs["labels"] = args?.labels;
            resourceInputs["maintenanceWindow"] = args?.maintenanceWindow;
            resourceInputs["mysqlConfig"] = args?.mysqlConfig;
            resourceInputs["name"] = args?.name;
            resourceInputs["networkId"] = args?.networkId;
            resourceInputs["performanceDiagnostics"] = args?.performanceDiagnostics;
            resourceInputs["resources"] = args?.resources;
            resourceInputs["restore"] = args?.restore;
            resourceInputs["securityGroupIds"] = args?.securityGroupIds;
            resourceInputs["users"] = args?.users;
            resourceInputs["version"] = args?.version;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["health"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MdbMysqlCluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MdbMysqlCluster resources.
 */
export interface MdbMysqlClusterState {
    /**
     * Access policy to the MySQL cluster.
     */
    access?: pulumi.Input<inputs.MdbMysqlClusterAccess>;
    /**
     * Deprecated field. You can safely remove this option. There is no need to recreate host if assign*public*ip is changed.
     * Regenerate hosts after changing the assign*public*ip parameter.
     *
     * @deprecated You can safely remove this option. There is no need to recreate host if assignPublicIp is changed.
     */
    allowRegenerationHost?: pulumi.Input<boolean>;
    /**
     * The period in days during which backups are stored.
     */
    backupRetainPeriodDays?: pulumi.Input<number>;
    /**
     * Time to start the daily backup, in the UTC.
     */
    backupWindowStart?: pulumi.Input<inputs.MdbMysqlClusterBackupWindowStart>;
    /**
     * The creation timestamp of the resource.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * To manage databases, please switch to using a separate resource type `yandexMdbMysqlDatabases`.
     *
     * @deprecated to manage databases, please switch to using a separate resource type yandex_mdb_mysql_database
     */
    databases?: pulumi.Input<pulumi.Input<inputs.MdbMysqlClusterDatabase>[]>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * ID of the KMS key for cluster disk encryption. Restoring without an encryption key will disable encryption if any exists.
     */
    diskEncryptionKeyId?: pulumi.Input<string>;
    /**
     * Cluster disk size autoscaling settings.
     */
    diskSizeAutoscaling?: pulumi.Input<inputs.MdbMysqlClusterDiskSizeAutoscaling>;
    /**
     * Deployment environment of the MySQL cluster.
     */
    environment?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * Aggregated health of the cluster.
     */
    health?: pulumi.Input<string>;
    /**
     * A list of host group IDs to place VMs of the cluster on.
     */
    hostGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A host of the MySQL cluster.
     */
    hosts?: pulumi.Input<pulumi.Input<inputs.MdbMysqlClusterHost>[]>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Maintenance policy of the MySQL cluster.
     */
    maintenanceWindow?: pulumi.Input<inputs.MdbMysqlClusterMaintenanceWindow>;
    /**
     * MySQL cluster config block.
     */
    mysqlConfig?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    networkId?: pulumi.Input<string>;
    /**
     * Cluster performance diagnostics settings. [YC Documentation](https://yandex.cloud/docs/managed-mysql/api-ref/grpc/cluster_service#PerformanceDiagnostics).
     */
    performanceDiagnostics?: pulumi.Input<inputs.MdbMysqlClusterPerformanceDiagnostics>;
    /**
     * Resources allocated to hosts of the MySQL cluster.
     */
    resources?: pulumi.Input<inputs.MdbMysqlClusterResources>;
    /**
     * The cluster will be created from the specified backup.
     */
    restore?: pulumi.Input<inputs.MdbMysqlClusterRestore>;
    /**
     * The list of security groups applied to resource or their components.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Status of the cluster.
     */
    status?: pulumi.Input<string>;
    /**
     * To manage users, please switch to using a separate resource type `yandex.MdbMysqlUser`.
     *
     * @deprecated to manage users, please switch to using a separate resource type yandex_mdb_mysql_user
     */
    users?: pulumi.Input<pulumi.Input<inputs.MdbMysqlClusterUser>[]>;
    /**
     * Version of the MySQL cluster. (allowed versions are: 5.7, 8.0).
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MdbMysqlCluster resource.
 */
export interface MdbMysqlClusterArgs {
    /**
     * Access policy to the MySQL cluster.
     */
    access?: pulumi.Input<inputs.MdbMysqlClusterAccess>;
    /**
     * Deprecated field. You can safely remove this option. There is no need to recreate host if assign*public*ip is changed.
     * Regenerate hosts after changing the assign*public*ip parameter.
     *
     * @deprecated You can safely remove this option. There is no need to recreate host if assignPublicIp is changed.
     */
    allowRegenerationHost?: pulumi.Input<boolean>;
    /**
     * The period in days during which backups are stored.
     */
    backupRetainPeriodDays?: pulumi.Input<number>;
    /**
     * Time to start the daily backup, in the UTC.
     */
    backupWindowStart?: pulumi.Input<inputs.MdbMysqlClusterBackupWindowStart>;
    /**
     * To manage databases, please switch to using a separate resource type `yandexMdbMysqlDatabases`.
     *
     * @deprecated to manage databases, please switch to using a separate resource type yandex_mdb_mysql_database
     */
    databases?: pulumi.Input<pulumi.Input<inputs.MdbMysqlClusterDatabase>[]>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * ID of the KMS key for cluster disk encryption. Restoring without an encryption key will disable encryption if any exists.
     */
    diskEncryptionKeyId?: pulumi.Input<string>;
    /**
     * Cluster disk size autoscaling settings.
     */
    diskSizeAutoscaling?: pulumi.Input<inputs.MdbMysqlClusterDiskSizeAutoscaling>;
    /**
     * Deployment environment of the MySQL cluster.
     */
    environment: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * A list of host group IDs to place VMs of the cluster on.
     */
    hostGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A host of the MySQL cluster.
     */
    hosts: pulumi.Input<pulumi.Input<inputs.MdbMysqlClusterHost>[]>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Maintenance policy of the MySQL cluster.
     */
    maintenanceWindow?: pulumi.Input<inputs.MdbMysqlClusterMaintenanceWindow>;
    /**
     * MySQL cluster config block.
     */
    mysqlConfig?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    networkId: pulumi.Input<string>;
    /**
     * Cluster performance diagnostics settings. [YC Documentation](https://yandex.cloud/docs/managed-mysql/api-ref/grpc/cluster_service#PerformanceDiagnostics).
     */
    performanceDiagnostics?: pulumi.Input<inputs.MdbMysqlClusterPerformanceDiagnostics>;
    /**
     * Resources allocated to hosts of the MySQL cluster.
     */
    resources: pulumi.Input<inputs.MdbMysqlClusterResources>;
    /**
     * The cluster will be created from the specified backup.
     */
    restore?: pulumi.Input<inputs.MdbMysqlClusterRestore>;
    /**
     * The list of security groups applied to resource or their components.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * To manage users, please switch to using a separate resource type `yandex.MdbMysqlUser`.
     *
     * @deprecated to manage users, please switch to using a separate resource type yandex_mdb_mysql_user
     */
    users?: pulumi.Input<pulumi.Input<inputs.MdbMysqlClusterUser>[]>;
    /**
     * Version of the MySQL cluster. (allowed versions are: 5.7, 8.0).
     */
    version: pulumi.Input<string>;
}
