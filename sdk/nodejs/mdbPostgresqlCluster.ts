// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * // Auxiliary resources
 * const fooVpcNetwork = new yandex.VpcNetwork("fooVpcNetwork", {});
 * const fooVpcSubnet = new yandex.VpcSubnet("fooVpcSubnet", {
 *     zone: "ru-central1-d",
 *     networkId: fooVpcNetwork.id,
 *     v4CidrBlocks: ["10.5.0.0/24"],
 * });
 * //
 * // Create a new MDB PostgreSQL Cluster.
 * //
 * const myCluster = new yandex.MdbPostgresqlCluster("myCluster", {
 *     environment: "PRESTABLE",
 *     networkId: fooVpcNetwork.id,
 *     config: {
 *         version: "15",
 *         resources: {
 *             resourcePresetId: "s2.micro",
 *             diskTypeId: "network-ssd",
 *             diskSize: 16,
 *         },
 *         postgresqlConfig: {
 *             max_connections: "395",
 *             enable_parallel_hash: "true",
 *             autovacuum_vacuum_scale_factor: "0.34",
 *             default_transaction_isolation: "TRANSACTION_ISOLATION_READ_COMMITTED",
 *             shared_preload_libraries: "SHARED_PRELOAD_LIBRARIES_AUTO_EXPLAIN,SHARED_PRELOAD_LIBRARIES_PG_HINT_PLAN",
 *         },
 *     },
 *     maintenanceWindow: {
 *         type: "WEEKLY",
 *         day: "SAT",
 *         hour: 12,
 *     },
 *     hosts: [{
 *         zone: "ru-central1-d",
 *         subnetId: fooVpcSubnet.id,
 *     }],
 * });
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * // Auxiliary resources
 * const fooVpcNetwork = new yandex.VpcNetwork("fooVpcNetwork", {});
 * const fooVpcSubnet = new yandex.VpcSubnet("fooVpcSubnet", {
 *     zone: "ru-central1-b",
 *     networkId: fooVpcNetwork.id,
 *     v4CidrBlocks: ["10.1.0.0/24"],
 * });
 * const bar = new yandex.VpcSubnet("bar", {
 *     zone: "ru-central1-d",
 *     networkId: fooVpcNetwork.id,
 *     v4CidrBlocks: ["10.2.0.0/24"],
 * });
 * //
 * // Create a new MDB High Availability PostgreSQL Cluster.
 * //
 * const myCluster = new yandex.MdbPostgresqlCluster("myCluster", {
 *     environment: "PRESTABLE",
 *     networkId: fooVpcNetwork.id,
 *     config: {
 *         version: "15",
 *         resources: {
 *             resourcePresetId: "s2.micro",
 *             diskTypeId: "network-ssd",
 *             diskSize: 16,
 *         },
 *     },
 *     maintenanceWindow: {
 *         type: "ANYTIME",
 *     },
 *     hosts: [
 *         {
 *             zone: "ru-central1-b",
 *             subnetId: fooVpcSubnet.id,
 *         },
 *         {
 *             zone: "ru-central1-d",
 *             subnetId: bar.id,
 *         },
 *     ],
 * });
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * // Auxiliary resources
 * const foo = new yandex.VpcNetwork("foo", {});
 * const vpcSubnet = new yandex.VpcSubnet("vpcSubnet", {
 *     zone: "ru-central1-a",
 *     networkId: foo.id,
 *     v4CidrBlocks: ["10.1.0.0/24"],
 * });
 * //
 * // Create a new MDB High Availability PostgreSQL Cluster.
 * //
 * const myCluster = new yandex.MdbPostgresqlCluster("myCluster", {
 *     description: "test High-Availability (HA) PostgreSQL Cluster",
 *     environment: "PRESTABLE",
 *     networkId: foo.id,
 *     config: {
 *         version: "15",
 *         resources: {
 *             resourcePresetId: "s2.micro",
 *             diskSize: 10,
 *             diskTypeId: "network-ssd",
 *         },
 *     },
 *     hosts: [
 *         {
 *             zone: "ru-central1-a",
 *             name: "host_name_a",
 *             subnetId: vpcSubnet.id,
 *         },
 *         {
 *             zone: "ru-central1-b",
 *             name: "host_name_b",
 *             replicationSourceName: "host_name_d",
 *             subnetId: index / vpcSubnetVpcSubnet.id,
 *         },
 *         {
 *             zone: "ru-central1-d",
 *             name: "host_name_d",
 *             subnetId: yandexIndex / vpcSubnetVpcSubnet.id,
 *         },
 *         {
 *             zone: "ru-central1-d",
 *             name: "host_name_d_2",
 *             subnetId: yandexIndex / vpcSubnetVpcSubnet.id,
 *         },
 *     ],
 * });
 * const index_vpcSubnetVpcSubnet = new yandex.VpcSubnet("index/vpcSubnetVpcSubnet", {
 *     zone: "ru-central1-b",
 *     networkId: foo.id,
 *     v4CidrBlocks: ["10.2.0.0/24"],
 * });
 * const yandexIndex_vpcSubnetVpcSubnet = new yandex.VpcSubnet("yandexIndex/vpcSubnetVpcSubnet", {
 *     zone: "ru-central1-d",
 *     networkId: foo.id,
 *     v4CidrBlocks: ["10.3.0.0/24"],
 * });
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * // Auxiliary resources
 * const fooVpcNetwork = new yandex.VpcNetwork("fooVpcNetwork", {});
 * const fooVpcSubnet = new yandex.VpcSubnet("fooVpcSubnet", {
 *     zone: "ru-central1-d",
 *     networkId: fooVpcNetwork.id,
 *     v4CidrBlocks: ["10.5.0.0/24"],
 * });
 * //
 * // Create a new MDB PostgreSQL Single Node Cluster from backup.
 * //
 * const myCluster = new yandex.MdbPostgresqlCluster("myCluster", {
 *     environment: "PRESTABLE",
 *     networkId: fooVpcNetwork.id,
 *     restore: {
 *         backupId: "c9q99999999999999994cm:base_000000010000005F000000B4",
 *         time: "2021-02-11T15:04:05",
 *     },
 *     config: {
 *         version: "15",
 *         resources: {
 *             resourcePresetId: "s2.micro",
 *             diskTypeId: "network-ssd",
 *             diskSize: 16,
 *         },
 *         postgresqlConfig: {
 *             max_connections: "395",
 *             enable_parallel_hash: "true",
 *             autovacuum_vacuum_scale_factor: "0.34",
 *             default_transaction_isolation: "TRANSACTION_ISOLATION_READ_COMMITTED",
 *             shared_preload_libraries: "SHARED_PRELOAD_LIBRARIES_AUTO_EXPLAIN,SHARED_PRELOAD_LIBRARIES_PG_HINT_PLAN",
 *         },
 *     },
 *     hosts: [{
 *         zone: "ru-central1-d",
 *         subnetId: fooVpcSubnet.id,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * The resource can be imported by using their `resource ID`. For getting the resource ID you can use Yandex Cloud [Web Console](https://console.yandex.cloud) or [YC CLI](https://yandex.cloud/docs/cli/quickstart).
 *
 * ```sh
 * $ pulumi import yandex:index/mdbPostgresqlCluster:MdbPostgresqlCluster <resource Name> <resource Id>
 * ```
 *
 * ```sh
 * $ pulumi import yandex:index/mdbPostgresqlCluster:MdbPostgresqlCluster my_cluster ...
 * ```
 */
export class MdbPostgresqlCluster extends pulumi.CustomResource {
    /**
     * Get an existing MdbPostgresqlCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MdbPostgresqlClusterState, opts?: pulumi.CustomResourceOptions): MdbPostgresqlCluster {
        return new MdbPostgresqlCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/mdbPostgresqlCluster:MdbPostgresqlCluster';

    /**
     * Returns true if the given object is an instance of MdbPostgresqlCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MdbPostgresqlCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MdbPostgresqlCluster.__pulumiType;
    }

    /**
     * Configuration of the PostgreSQL cluster.
     */
    declare public readonly config: pulumi.Output<outputs.MdbPostgresqlClusterConfig>;
    /**
     * The creation timestamp of the resource.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * > Deprecated! To manage databases, please switch to using a separate resource type `yandex.MdbPostgresqlDatabase`.
     *
     * @deprecated to manage databases, please switch to using a separate resource type yandex_mdb_postgresql_database
     */
    declare public readonly databases: pulumi.Output<outputs.MdbPostgresqlClusterDatabase[] | undefined>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    declare public readonly deletionProtection: pulumi.Output<boolean>;
    /**
     * The resource description.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * ID of the KMS key for cluster disk encryption. Restoring without an encryption key will disable encryption if any exists.
     */
    declare public readonly diskEncryptionKeyId: pulumi.Output<string>;
    /**
     * Deployment environment of the PostgreSQL cluster.
     */
    declare public readonly environment: pulumi.Output<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    declare public readonly folderId: pulumi.Output<string>;
    /**
     * Aggregated health of the cluster.
     */
    declare public /*out*/ readonly health: pulumi.Output<string>;
    /**
     * Host Group IDs.
     */
    declare public readonly hostGroupIds: pulumi.Output<string[]>;
    /**
     * Deprecated field. Will be removed in future versions.
     *
     * @deprecated It sets name of master host. It works only when `host.name` is set. This field does not guarantee that a specific host will always be the master. We do not recommend using it. This functionality will be removed in future versions. If you are absolutely certain that you need this functionality, please contact technical support.
     */
    declare public readonly hostMasterName: pulumi.Output<string>;
    /**
     * A host of the PostgreSQL cluster.
     */
    declare public readonly hosts: pulumi.Output<outputs.MdbPostgresqlClusterHost[]>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    declare public readonly labels: pulumi.Output<{[key: string]: string}>;
    /**
     * Maintenance policy of the PostgreSQL cluster.
     */
    declare public readonly maintenanceWindow: pulumi.Output<outputs.MdbPostgresqlClusterMaintenanceWindow>;
    /**
     * The resource name.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    declare public readonly networkId: pulumi.Output<string>;
    /**
     * The cluster will be created from the specified backup.
     */
    declare public readonly restore: pulumi.Output<outputs.MdbPostgresqlClusterRestore | undefined>;
    /**
     * The list of security groups applied to resource or their components.
     */
    declare public readonly securityGroupIds: pulumi.Output<string[]>;
    /**
     * Status of the cluster.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * > Deprecated! To manage users, please switch to using a separate resource type `yandex.MdbPostgresqlUser`.
     *
     * @deprecated to manage users, please switch to using a separate resource type yandex_mdb_postgresql_user
     */
    declare public readonly users: pulumi.Output<outputs.MdbPostgresqlClusterUser[] | undefined>;

    /**
     * Create a MdbPostgresqlCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MdbPostgresqlClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MdbPostgresqlClusterArgs | MdbPostgresqlClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MdbPostgresqlClusterState | undefined;
            resourceInputs["config"] = state?.config;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["databases"] = state?.databases;
            resourceInputs["deletionProtection"] = state?.deletionProtection;
            resourceInputs["description"] = state?.description;
            resourceInputs["diskEncryptionKeyId"] = state?.diskEncryptionKeyId;
            resourceInputs["environment"] = state?.environment;
            resourceInputs["folderId"] = state?.folderId;
            resourceInputs["health"] = state?.health;
            resourceInputs["hostGroupIds"] = state?.hostGroupIds;
            resourceInputs["hostMasterName"] = state?.hostMasterName;
            resourceInputs["hosts"] = state?.hosts;
            resourceInputs["labels"] = state?.labels;
            resourceInputs["maintenanceWindow"] = state?.maintenanceWindow;
            resourceInputs["name"] = state?.name;
            resourceInputs["networkId"] = state?.networkId;
            resourceInputs["restore"] = state?.restore;
            resourceInputs["securityGroupIds"] = state?.securityGroupIds;
            resourceInputs["status"] = state?.status;
            resourceInputs["users"] = state?.users;
        } else {
            const args = argsOrState as MdbPostgresqlClusterArgs | undefined;
            if (args?.config === undefined && !opts.urn) {
                throw new Error("Missing required property 'config'");
            }
            if (args?.environment === undefined && !opts.urn) {
                throw new Error("Missing required property 'environment'");
            }
            if (args?.hosts === undefined && !opts.urn) {
                throw new Error("Missing required property 'hosts'");
            }
            if (args?.networkId === undefined && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            resourceInputs["config"] = args?.config;
            resourceInputs["databases"] = args?.databases;
            resourceInputs["deletionProtection"] = args?.deletionProtection;
            resourceInputs["description"] = args?.description;
            resourceInputs["diskEncryptionKeyId"] = args?.diskEncryptionKeyId;
            resourceInputs["environment"] = args?.environment;
            resourceInputs["folderId"] = args?.folderId;
            resourceInputs["hostGroupIds"] = args?.hostGroupIds;
            resourceInputs["hostMasterName"] = args?.hostMasterName;
            resourceInputs["hosts"] = args?.hosts;
            resourceInputs["labels"] = args?.labels;
            resourceInputs["maintenanceWindow"] = args?.maintenanceWindow;
            resourceInputs["name"] = args?.name;
            resourceInputs["networkId"] = args?.networkId;
            resourceInputs["restore"] = args?.restore;
            resourceInputs["securityGroupIds"] = args?.securityGroupIds;
            resourceInputs["users"] = args?.users;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["health"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MdbPostgresqlCluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MdbPostgresqlCluster resources.
 */
export interface MdbPostgresqlClusterState {
    /**
     * Configuration of the PostgreSQL cluster.
     */
    config?: pulumi.Input<inputs.MdbPostgresqlClusterConfig>;
    /**
     * The creation timestamp of the resource.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * > Deprecated! To manage databases, please switch to using a separate resource type `yandex.MdbPostgresqlDatabase`.
     *
     * @deprecated to manage databases, please switch to using a separate resource type yandex_mdb_postgresql_database
     */
    databases?: pulumi.Input<pulumi.Input<inputs.MdbPostgresqlClusterDatabase>[]>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * ID of the KMS key for cluster disk encryption. Restoring without an encryption key will disable encryption if any exists.
     */
    diskEncryptionKeyId?: pulumi.Input<string>;
    /**
     * Deployment environment of the PostgreSQL cluster.
     */
    environment?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * Aggregated health of the cluster.
     */
    health?: pulumi.Input<string>;
    /**
     * Host Group IDs.
     */
    hostGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Deprecated field. Will be removed in future versions.
     *
     * @deprecated It sets name of master host. It works only when `host.name` is set. This field does not guarantee that a specific host will always be the master. We do not recommend using it. This functionality will be removed in future versions. If you are absolutely certain that you need this functionality, please contact technical support.
     */
    hostMasterName?: pulumi.Input<string>;
    /**
     * A host of the PostgreSQL cluster.
     */
    hosts?: pulumi.Input<pulumi.Input<inputs.MdbPostgresqlClusterHost>[]>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Maintenance policy of the PostgreSQL cluster.
     */
    maintenanceWindow?: pulumi.Input<inputs.MdbPostgresqlClusterMaintenanceWindow>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    networkId?: pulumi.Input<string>;
    /**
     * The cluster will be created from the specified backup.
     */
    restore?: pulumi.Input<inputs.MdbPostgresqlClusterRestore>;
    /**
     * The list of security groups applied to resource or their components.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Status of the cluster.
     */
    status?: pulumi.Input<string>;
    /**
     * > Deprecated! To manage users, please switch to using a separate resource type `yandex.MdbPostgresqlUser`.
     *
     * @deprecated to manage users, please switch to using a separate resource type yandex_mdb_postgresql_user
     */
    users?: pulumi.Input<pulumi.Input<inputs.MdbPostgresqlClusterUser>[]>;
}

/**
 * The set of arguments for constructing a MdbPostgresqlCluster resource.
 */
export interface MdbPostgresqlClusterArgs {
    /**
     * Configuration of the PostgreSQL cluster.
     */
    config: pulumi.Input<inputs.MdbPostgresqlClusterConfig>;
    /**
     * > Deprecated! To manage databases, please switch to using a separate resource type `yandex.MdbPostgresqlDatabase`.
     *
     * @deprecated to manage databases, please switch to using a separate resource type yandex_mdb_postgresql_database
     */
    databases?: pulumi.Input<pulumi.Input<inputs.MdbPostgresqlClusterDatabase>[]>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * ID of the KMS key for cluster disk encryption. Restoring without an encryption key will disable encryption if any exists.
     */
    diskEncryptionKeyId?: pulumi.Input<string>;
    /**
     * Deployment environment of the PostgreSQL cluster.
     */
    environment: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * Host Group IDs.
     */
    hostGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Deprecated field. Will be removed in future versions.
     *
     * @deprecated It sets name of master host. It works only when `host.name` is set. This field does not guarantee that a specific host will always be the master. We do not recommend using it. This functionality will be removed in future versions. If you are absolutely certain that you need this functionality, please contact technical support.
     */
    hostMasterName?: pulumi.Input<string>;
    /**
     * A host of the PostgreSQL cluster.
     */
    hosts: pulumi.Input<pulumi.Input<inputs.MdbPostgresqlClusterHost>[]>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Maintenance policy of the PostgreSQL cluster.
     */
    maintenanceWindow?: pulumi.Input<inputs.MdbPostgresqlClusterMaintenanceWindow>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    networkId: pulumi.Input<string>;
    /**
     * The cluster will be created from the specified backup.
     */
    restore?: pulumi.Input<inputs.MdbPostgresqlClusterRestore>;
    /**
     * The list of security groups applied to resource or their components.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * > Deprecated! To manage users, please switch to using a separate resource type `yandex.MdbPostgresqlUser`.
     *
     * @deprecated to manage users, please switch to using a separate resource type yandex_mdb_postgresql_user
     */
    users?: pulumi.Input<pulumi.Input<inputs.MdbPostgresqlClusterUser>[]>;
}
