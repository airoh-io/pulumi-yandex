// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manages a PostgreSQL database within the Yandex Cloud. For more information, see [the official documentation](https://yandex.cloud/docs/managed-postgresql/).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh/pulumi-yandex";
 *
 * // Auxiliary resources
 * const fooVpcNetwork = new yandex.VpcNetwork("fooVpcNetwork", {});
 * const fooVpcSubnet = new yandex.VpcSubnet("fooVpcSubnet", {
 *     zone: "ru-central1-d",
 *     networkId: fooVpcNetwork.id,
 *     v4CidrBlocks: ["10.5.0.0/24"],
 * });
 * const myCluster = new yandex.MdbPostgresqlCluster("myCluster", {
 *     environment: "PRESTABLE",
 *     networkId: fooVpcNetwork.id,
 *     config: {
 *         version: "15",
 *         resources: {
 *             resourcePresetId: "s2.micro",
 *             diskTypeId: "network-ssd",
 *             diskSize: 16,
 *         },
 *     },
 *     hosts: [{
 *         zone: "ru-central1-d",
 *         subnetId: fooVpcSubnet.id,
 *     }],
 * });
 * const myUser = new yandex.MdbPostgresqlUser("myUser", {
 *     clusterId: myCluster.id,
 *     password: "password",
 * });
 * //
 * // Create a new MDB PostgreSQL Database.
 * //
 * const myDb = new yandex.MdbPostgresqlDatabase("myDb", {
 *     clusterId: myCluster.id,
 *     owner: myUser.name,
 *     lcCollate: "en_US.UTF-8",
 *     lcType: "en_US.UTF-8",
 *     extensions: [
 *         {
 *             name: "uuid-ossp",
 *         },
 *         {
 *             name: "xml2",
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * The resource can be imported by using their `resource ID`. For getting the resource ID you can use Yandex Cloud [Web Console](https://console.yandex.cloud) or [YC CLI](https://yandex.cloud/docs/cli/quickstart).
 *
 * ```sh
 * $ pulumi import yandex:index/mdbPostgresqlDatabase:MdbPostgresqlDatabase <resource Name> <resource Id>
 * ```
 *
 * ```sh
 * $ pulumi import yandex:index/mdbPostgresqlDatabase:MdbPostgresqlDatabase my_db ...
 * ```
 */
export class MdbPostgresqlDatabase extends pulumi.CustomResource {
    /**
     * Get an existing MdbPostgresqlDatabase resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MdbPostgresqlDatabaseState, opts?: pulumi.CustomResourceOptions): MdbPostgresqlDatabase {
        return new MdbPostgresqlDatabase(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/mdbPostgresqlDatabase:MdbPostgresqlDatabase';

    /**
     * Returns true if the given object is an instance of MdbPostgresqlDatabase.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MdbPostgresqlDatabase {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MdbPostgresqlDatabase.__pulumiType;
    }

    /**
     * The ID of the PostgreSQL cluster.
     */
    declare public readonly clusterId: pulumi.Output<string>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    declare public readonly deletionProtection: pulumi.Output<string | undefined>;
    /**
     * Set of database extensions.
     */
    declare public readonly extensions: pulumi.Output<outputs.MdbPostgresqlDatabaseExtension[] | undefined>;
    /**
     * POSIX locale for string sorting order. Forbidden to change in an existing database.
     */
    declare public readonly lcCollate: pulumi.Output<string | undefined>;
    /**
     * POSIX locale for character classification. Forbidden to change in an existing database.
     */
    declare public readonly lcType: pulumi.Output<string | undefined>;
    /**
     * The resource name.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
     */
    declare public readonly owner: pulumi.Output<string>;
    /**
     * Name of the template database.
     */
    declare public readonly templateDb: pulumi.Output<string | undefined>;

    /**
     * Create a MdbPostgresqlDatabase resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MdbPostgresqlDatabaseArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MdbPostgresqlDatabaseArgs | MdbPostgresqlDatabaseState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MdbPostgresqlDatabaseState | undefined;
            resourceInputs["clusterId"] = state?.clusterId;
            resourceInputs["deletionProtection"] = state?.deletionProtection;
            resourceInputs["extensions"] = state?.extensions;
            resourceInputs["lcCollate"] = state?.lcCollate;
            resourceInputs["lcType"] = state?.lcType;
            resourceInputs["name"] = state?.name;
            resourceInputs["owner"] = state?.owner;
            resourceInputs["templateDb"] = state?.templateDb;
        } else {
            const args = argsOrState as MdbPostgresqlDatabaseArgs | undefined;
            if (args?.clusterId === undefined && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            if (args?.owner === undefined && !opts.urn) {
                throw new Error("Missing required property 'owner'");
            }
            resourceInputs["clusterId"] = args?.clusterId;
            resourceInputs["deletionProtection"] = args?.deletionProtection;
            resourceInputs["extensions"] = args?.extensions;
            resourceInputs["lcCollate"] = args?.lcCollate;
            resourceInputs["lcType"] = args?.lcType;
            resourceInputs["name"] = args?.name;
            resourceInputs["owner"] = args?.owner;
            resourceInputs["templateDb"] = args?.templateDb;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MdbPostgresqlDatabase.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MdbPostgresqlDatabase resources.
 */
export interface MdbPostgresqlDatabaseState {
    /**
     * The ID of the PostgreSQL cluster.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: pulumi.Input<string>;
    /**
     * Set of database extensions.
     */
    extensions?: pulumi.Input<pulumi.Input<inputs.MdbPostgresqlDatabaseExtension>[]>;
    /**
     * POSIX locale for string sorting order. Forbidden to change in an existing database.
     */
    lcCollate?: pulumi.Input<string>;
    /**
     * POSIX locale for character classification. Forbidden to change in an existing database.
     */
    lcType?: pulumi.Input<string>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
     */
    owner?: pulumi.Input<string>;
    /**
     * Name of the template database.
     */
    templateDb?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MdbPostgresqlDatabase resource.
 */
export interface MdbPostgresqlDatabaseArgs {
    /**
     * The ID of the PostgreSQL cluster.
     */
    clusterId: pulumi.Input<string>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: pulumi.Input<string>;
    /**
     * Set of database extensions.
     */
    extensions?: pulumi.Input<pulumi.Input<inputs.MdbPostgresqlDatabaseExtension>[]>;
    /**
     * POSIX locale for string sorting order. Forbidden to change in an existing database.
     */
    lcCollate?: pulumi.Input<string>;
    /**
     * POSIX locale for character classification. Forbidden to change in an existing database.
     */
    lcType?: pulumi.Input<string>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
     */
    owner: pulumi.Input<string>;
    /**
     * Name of the template database.
     */
    templateDb?: pulumi.Input<string>;
}
