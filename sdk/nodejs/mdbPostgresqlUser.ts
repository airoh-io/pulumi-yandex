// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manages a PostgreSQL user within the Yandex Cloud. For more information, see [the official documentation](https://yandex.cloud/docs/managed-postgresql/).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * // Auxiliary resources
 * const fooVpcNetwork = new yandex.VpcNetwork("fooVpcNetwork", {});
 * const fooVpcSubnet = new yandex.VpcSubnet("fooVpcSubnet", {
 *     zone: "ru-central1-d",
 *     networkId: fooVpcNetwork.id,
 *     v4CidrBlocks: ["10.5.0.0/24"],
 * });
 * const myCluster = new yandex.MdbPostgresqlCluster("myCluster", {
 *     environment: "PRESTABLE",
 *     networkId: fooVpcNetwork.id,
 *     config: {
 *         version: "15",
 *         resources: {
 *             resourcePresetId: "s2.micro",
 *             diskTypeId: "network-ssd",
 *             diskSize: 16,
 *         },
 *     },
 *     hosts: [{
 *         zone: "ru-central1-d",
 *         subnetId: fooVpcSubnet.id,
 *     }],
 * });
 * //
 * // Create a new MDB PostgreSQL database User.
 * //
 * const myUser = new yandex.MdbPostgresqlUser("myUser", {
 *     clusterId: myCluster.id,
 *     password: "password",
 *     connLimit: 50,
 *     settings: {
 *         default_transaction_isolation: "read committed",
 *         log_min_duration_statement: "5000",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * The resource can be imported by using their `resource ID`. For getting the resource ID you can use Yandex Cloud [Web Console](https://console.yandex.cloud) or [YC CLI](https://yandex.cloud/docs/cli/quickstart).
 *
 * ```sh
 * $ pulumi import yandex:index/mdbPostgresqlUser:MdbPostgresqlUser <resource Name> <resource Id>
 * ```
 *
 * ```sh
 * $ pulumi import yandex:index/mdbPostgresqlUser:MdbPostgresqlUser my_user ...
 * ```
 */
export class MdbPostgresqlUser extends pulumi.CustomResource {
    /**
     * Get an existing MdbPostgresqlUser resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MdbPostgresqlUserState, opts?: pulumi.CustomResourceOptions): MdbPostgresqlUser {
        return new MdbPostgresqlUser(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/mdbPostgresqlUser:MdbPostgresqlUser';

    /**
     * Returns true if the given object is an instance of MdbPostgresqlUser.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MdbPostgresqlUser {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MdbPostgresqlUser.__pulumiType;
    }

    /**
     * The ID of the PostgreSQL cluster.
     */
    declare public readonly clusterId: pulumi.Output<string>;
    /**
     * The maximum number of connections per user. (Default 50).
     */
    declare public readonly connLimit: pulumi.Output<number>;
    /**
     * Connection Manager connection configuration. Filled in by the server automatically.
     */
    declare public /*out*/ readonly connectionManager: pulumi.Output<{[key: string]: string}>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    declare public readonly deletionProtection: pulumi.Output<string | undefined>;
    /**
     * Generate password using Connection Manager. Allowed values: true or false. It's used only during user creation and is ignored during updating.
     */
    declare public readonly generatePassword: pulumi.Output<boolean | undefined>;
    /**
     * List of the user's grants.
     */
    declare public readonly grants: pulumi.Output<string[] | undefined>;
    /**
     * User's ability to login.
     */
    declare public readonly login: pulumi.Output<boolean | undefined>;
    /**
     * The name of the user.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The password of the user.
     */
    declare public readonly password: pulumi.Output<string | undefined>;
    /**
     * Set of permissions granted to the user.
     */
    declare public readonly permissions: pulumi.Output<outputs.MdbPostgresqlUserPermission[] | undefined>;
    /**
     * Map of user settings. [Full description](https://yandex.cloud/docs/managed-postgresql/api-ref/grpc/Cluster/create#yandex.cloud.mdb.postgresql.v1.UserSettings).
     *
     * * `defaultTransactionIsolation` - defines the default isolation level to be set for all new SQL transactions. One of:  - 0: `unspecified`
     *   - 1: `read uncommitted`
     *   - 2: `read committed`
     *   - 3: `repeatable read`
     *   - 4: `serializable`
     *
     * * `lockTimeout` - The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index, row or other database object (default 0)
     *
     * * `logMinDurationStatement` - This setting controls logging of the duration of statements. (default -1 disables logging of the duration of statements.)
     *
     * * `synchronousCommit` - This setting defines whether DBMS will commit transaction in a synchronous way. One of:
     *   - 0: `unspecified`
     *   - 1: `on`
     *   - 2: `off`
     *   - 3: `local`
     *   - 4: `remote write`
     *   - 5: `remote apply`
     *
     * * `tempFileLimit` - The maximum storage space size (in kilobytes) that a single process can use to create temporary files.
     *
     * * `logStatement` - This setting specifies which SQL statements should be logged (on the user level). One of:
     *   - 0: `unspecified`
     *   - 1: `none`
     *   - 2: `ddl`
     *   - 3: `mod`
     *   - 4: `all`
     *
     * * `poolMode` - Mode that the connection pooler is working in with specified user. One of:
     *   - 1: `session`
     *   - 2: `transaction`
     *   - 3: `statement`
     *
     * * `preparedStatementsPooling` - This setting allows user to use prepared statements with transaction pooling. Boolean.
     *
     * * `catchupTimeout` - The connection pooler setting. It determines the maximum allowed replication lag (in seconds). Pooler will reject connections to the replica with a lag above this threshold. Default value is 0, which disables this feature. Integer.
     *
     * * `walSenderTimeout` - The maximum time (in milliseconds) to wait for WAL replication (can be set only for PostgreSQL 12+). Terminate replication connections that are inactive for longer than this amount of time. Integer.
     *
     * * `idleInTransactionSessionTimeout` - Sets the maximum allowed idle time (in milliseconds) between queries, when in a transaction. Value of 0 (default) disables the timeout. Integer.
     *
     * * `statementTimeout` - The maximum time (in milliseconds) to wait for statement. Value of 0 (default) disables the timeout. Integer
     */
    declare public readonly settings: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a MdbPostgresqlUser resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MdbPostgresqlUserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MdbPostgresqlUserArgs | MdbPostgresqlUserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MdbPostgresqlUserState | undefined;
            resourceInputs["clusterId"] = state?.clusterId;
            resourceInputs["connLimit"] = state?.connLimit;
            resourceInputs["connectionManager"] = state?.connectionManager;
            resourceInputs["deletionProtection"] = state?.deletionProtection;
            resourceInputs["generatePassword"] = state?.generatePassword;
            resourceInputs["grants"] = state?.grants;
            resourceInputs["login"] = state?.login;
            resourceInputs["name"] = state?.name;
            resourceInputs["password"] = state?.password;
            resourceInputs["permissions"] = state?.permissions;
            resourceInputs["settings"] = state?.settings;
        } else {
            const args = argsOrState as MdbPostgresqlUserArgs | undefined;
            if (args?.clusterId === undefined && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            resourceInputs["clusterId"] = args?.clusterId;
            resourceInputs["connLimit"] = args?.connLimit;
            resourceInputs["deletionProtection"] = args?.deletionProtection;
            resourceInputs["generatePassword"] = args?.generatePassword;
            resourceInputs["grants"] = args?.grants;
            resourceInputs["login"] = args?.login;
            resourceInputs["name"] = args?.name;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["permissions"] = args?.permissions;
            resourceInputs["settings"] = args?.settings;
            resourceInputs["connectionManager"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(MdbPostgresqlUser.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MdbPostgresqlUser resources.
 */
export interface MdbPostgresqlUserState {
    /**
     * The ID of the PostgreSQL cluster.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The maximum number of connections per user. (Default 50).
     */
    connLimit?: pulumi.Input<number>;
    /**
     * Connection Manager connection configuration. Filled in by the server automatically.
     */
    connectionManager?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: pulumi.Input<string>;
    /**
     * Generate password using Connection Manager. Allowed values: true or false. It's used only during user creation and is ignored during updating.
     */
    generatePassword?: pulumi.Input<boolean>;
    /**
     * List of the user's grants.
     */
    grants?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * User's ability to login.
     */
    login?: pulumi.Input<boolean>;
    /**
     * The name of the user.
     */
    name?: pulumi.Input<string>;
    /**
     * The password of the user.
     */
    password?: pulumi.Input<string>;
    /**
     * Set of permissions granted to the user.
     */
    permissions?: pulumi.Input<pulumi.Input<inputs.MdbPostgresqlUserPermission>[]>;
    /**
     * Map of user settings. [Full description](https://yandex.cloud/docs/managed-postgresql/api-ref/grpc/Cluster/create#yandex.cloud.mdb.postgresql.v1.UserSettings).
     *
     * * `defaultTransactionIsolation` - defines the default isolation level to be set for all new SQL transactions. One of:  - 0: `unspecified`
     *   - 1: `read uncommitted`
     *   - 2: `read committed`
     *   - 3: `repeatable read`
     *   - 4: `serializable`
     *
     * * `lockTimeout` - The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index, row or other database object (default 0)
     *
     * * `logMinDurationStatement` - This setting controls logging of the duration of statements. (default -1 disables logging of the duration of statements.)
     *
     * * `synchronousCommit` - This setting defines whether DBMS will commit transaction in a synchronous way. One of:
     *   - 0: `unspecified`
     *   - 1: `on`
     *   - 2: `off`
     *   - 3: `local`
     *   - 4: `remote write`
     *   - 5: `remote apply`
     *
     * * `tempFileLimit` - The maximum storage space size (in kilobytes) that a single process can use to create temporary files.
     *
     * * `logStatement` - This setting specifies which SQL statements should be logged (on the user level). One of:
     *   - 0: `unspecified`
     *   - 1: `none`
     *   - 2: `ddl`
     *   - 3: `mod`
     *   - 4: `all`
     *
     * * `poolMode` - Mode that the connection pooler is working in with specified user. One of:
     *   - 1: `session`
     *   - 2: `transaction`
     *   - 3: `statement`
     *
     * * `preparedStatementsPooling` - This setting allows user to use prepared statements with transaction pooling. Boolean.
     *
     * * `catchupTimeout` - The connection pooler setting. It determines the maximum allowed replication lag (in seconds). Pooler will reject connections to the replica with a lag above this threshold. Default value is 0, which disables this feature. Integer.
     *
     * * `walSenderTimeout` - The maximum time (in milliseconds) to wait for WAL replication (can be set only for PostgreSQL 12+). Terminate replication connections that are inactive for longer than this amount of time. Integer.
     *
     * * `idleInTransactionSessionTimeout` - Sets the maximum allowed idle time (in milliseconds) between queries, when in a transaction. Value of 0 (default) disables the timeout. Integer.
     *
     * * `statementTimeout` - The maximum time (in milliseconds) to wait for statement. Value of 0 (default) disables the timeout. Integer
     */
    settings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a MdbPostgresqlUser resource.
 */
export interface MdbPostgresqlUserArgs {
    /**
     * The ID of the PostgreSQL cluster.
     */
    clusterId: pulumi.Input<string>;
    /**
     * The maximum number of connections per user. (Default 50).
     */
    connLimit?: pulumi.Input<number>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: pulumi.Input<string>;
    /**
     * Generate password using Connection Manager. Allowed values: true or false. It's used only during user creation and is ignored during updating.
     */
    generatePassword?: pulumi.Input<boolean>;
    /**
     * List of the user's grants.
     */
    grants?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * User's ability to login.
     */
    login?: pulumi.Input<boolean>;
    /**
     * The name of the user.
     */
    name?: pulumi.Input<string>;
    /**
     * The password of the user.
     */
    password?: pulumi.Input<string>;
    /**
     * Set of permissions granted to the user.
     */
    permissions?: pulumi.Input<pulumi.Input<inputs.MdbPostgresqlUserPermission>[]>;
    /**
     * Map of user settings. [Full description](https://yandex.cloud/docs/managed-postgresql/api-ref/grpc/Cluster/create#yandex.cloud.mdb.postgresql.v1.UserSettings).
     *
     * * `defaultTransactionIsolation` - defines the default isolation level to be set for all new SQL transactions. One of:  - 0: `unspecified`
     *   - 1: `read uncommitted`
     *   - 2: `read committed`
     *   - 3: `repeatable read`
     *   - 4: `serializable`
     *
     * * `lockTimeout` - The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index, row or other database object (default 0)
     *
     * * `logMinDurationStatement` - This setting controls logging of the duration of statements. (default -1 disables logging of the duration of statements.)
     *
     * * `synchronousCommit` - This setting defines whether DBMS will commit transaction in a synchronous way. One of:
     *   - 0: `unspecified`
     *   - 1: `on`
     *   - 2: `off`
     *   - 3: `local`
     *   - 4: `remote write`
     *   - 5: `remote apply`
     *
     * * `tempFileLimit` - The maximum storage space size (in kilobytes) that a single process can use to create temporary files.
     *
     * * `logStatement` - This setting specifies which SQL statements should be logged (on the user level). One of:
     *   - 0: `unspecified`
     *   - 1: `none`
     *   - 2: `ddl`
     *   - 3: `mod`
     *   - 4: `all`
     *
     * * `poolMode` - Mode that the connection pooler is working in with specified user. One of:
     *   - 1: `session`
     *   - 2: `transaction`
     *   - 3: `statement`
     *
     * * `preparedStatementsPooling` - This setting allows user to use prepared statements with transaction pooling. Boolean.
     *
     * * `catchupTimeout` - The connection pooler setting. It determines the maximum allowed replication lag (in seconds). Pooler will reject connections to the replica with a lag above this threshold. Default value is 0, which disables this feature. Integer.
     *
     * * `walSenderTimeout` - The maximum time (in milliseconds) to wait for WAL replication (can be set only for PostgreSQL 12+). Terminate replication connections that are inactive for longer than this amount of time. Integer.
     *
     * * `idleInTransactionSessionTimeout` - Sets the maximum allowed idle time (in milliseconds) between queries, when in a transaction. Value of 0 (default) disables the timeout. Integer.
     *
     * * `statementTimeout` - The maximum time (in milliseconds) to wait for statement. Value of 0 (default) disables the timeout. Integer
     */
    settings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
