// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Allows management of a Yandex Cloud Serverless Container.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh/pulumi-yandex";
 *
 * //
 * // Create a new Serverless Container.
 * //
 * const test_container = new yandex.ServerlessContainer("test-container", {
 *     description: "any description",
 *     memory: 256,
 *     executionTimeout: "15s",
 *     cores: 1,
 *     coreFraction: 100,
 *     serviceAccountId: "are1service2account3id",
 *     runtime: {
 *         type: "task",
 *     },
 *     secrets: [{
 *         id: yandex_lockbox_secret.secret.id,
 *         versionId: yandex_lockbox_secret_version.secret_version.id,
 *         key: "secret-key",
 *         environmentVariable: "ENV_VARIABLE",
 *     }],
 *     mounts: [{
 *         mountPointPath: "/mount/point",
 *         ephemeralDisk: {
 *             sizeGb: 5,
 *         },
 *     }],
 *     image: {
 *         url: "cr.yandex/yc/test-image:v1",
 *     },
 *     logOptions: {
 *         logGroupId: "e2392vo6d1bne2aeq9fr",
 *         minLevel: "ERROR",
 *     },
 *     provisionPolicy: {
 *         minInstances: 1,
 *     },
 * });
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh/pulumi-yandex";
 *
 * //
 * // Create a new Serverless Container with Image digest.
 * //
 * const test_container_with_digest = new yandex.ServerlessContainer("test-container-with-digest", {
 *     image: {
 *         digest: "sha256:e1d772fa8795adac847a2420c87d0d2e3d38fb02f168cab8c0b5fe2fb95c47f4",
 *         url: "cr.yandex/yc/test-image:v1",
 *     },
 *     memory: 128,
 * });
 * ```
 *
 * ## Import
 *
 * The resource can be imported by using their `resource ID`. For getting the resource ID you can use Yandex Cloud [Web Console](https://console.yandex.cloud) or [YC CLI](https://yandex.cloud/docs/cli/quickstart).
 *
 * ```sh
 * $ pulumi import yandex:index/serverlessContainer:ServerlessContainer <resource Name> <resource Id>
 * ```
 *
 * ```sh
 * $ pulumi import yandex:index/serverlessContainer:ServerlessContainer test-container ...
 * ```
 */
export class ServerlessContainer extends pulumi.CustomResource {
    /**
     * Get an existing ServerlessContainer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServerlessContainerState, opts?: pulumi.CustomResourceOptions): ServerlessContainer {
        return new ServerlessContainer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/serverlessContainer:ServerlessContainer';

    /**
     * Returns true if the given object is an instance of ServerlessContainer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServerlessContainer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServerlessContainer.__pulumiType;
    }

    /**
     * Config for asynchronous invocations of Yandex Cloud Serverless Container.
     */
    declare public readonly asyncInvocation: pulumi.Output<outputs.ServerlessContainerAsyncInvocation | undefined>;
    /**
     * Concurrency of Yandex Cloud Serverless Container.
     */
    declare public readonly concurrency: pulumi.Output<number>;
    /**
     * Network access. If specified the revision will be attached to specified network.
     */
    declare public readonly connectivity: pulumi.Output<outputs.ServerlessContainerConnectivity | undefined>;
    /**
     * Core fraction (**0...100**) of the Yandex Cloud Serverless Container.
     */
    declare public readonly coreFraction: pulumi.Output<number>;
    /**
     * Cores (**1+**) of the Yandex Cloud Serverless Container.
     */
    declare public readonly cores: pulumi.Output<number | undefined>;
    /**
     * The creation timestamp of the resource.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * The resource description.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Execution timeout in seconds (**duration format**) for Yandex Cloud Serverless Container.
     */
    declare public readonly executionTimeout: pulumi.Output<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    declare public readonly folderId: pulumi.Output<string>;
    /**
     * Revision deployment image for Yandex Cloud Serverless Container.
     */
    declare public readonly image: pulumi.Output<outputs.ServerlessContainerImage>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    declare public readonly labels: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Options for logging from Yandex Cloud Serverless Container.
     */
    declare public readonly logOptions: pulumi.Output<outputs.ServerlessContainerLogOptions | undefined>;
    /**
     * Memory in megabytes (**aligned to 128 MB**).
     */
    declare public readonly memory: pulumi.Output<number>;
    /**
     * Options set the access mode to revision's metadata endpoints.
     */
    declare public readonly metadataOptions: pulumi.Output<outputs.ServerlessContainerMetadataOptions>;
    /**
     * Mounts for Yandex Cloud Serverless Container.
     */
    declare public readonly mounts: pulumi.Output<outputs.ServerlessContainerMount[]>;
    /**
     * The resource name.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Provision policy. If specified the revision will have prepared instances.
     */
    declare public readonly provisionPolicy: pulumi.Output<outputs.ServerlessContainerProvisionPolicy | undefined>;
    /**
     * Last revision ID of the Yandex Cloud Serverless Container.
     */
    declare public /*out*/ readonly revisionId: pulumi.Output<string>;
    /**
     * Runtime for Yandex Cloud Serverless Container.
     */
    declare public readonly runtime: pulumi.Output<outputs.ServerlessContainerRuntime>;
    /**
     * Secrets for Yandex Cloud Serverless Container.
     */
    declare public readonly secrets: pulumi.Output<outputs.ServerlessContainerSecret[]>;
    /**
     * [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
     */
    declare public readonly serviceAccountId: pulumi.Output<string | undefined>;
    /**
     * (**DEPRECATED**, use `mounts.object_storage` instead) Storage mounts for Yandex Cloud Serverless Container.
     *
     * @deprecated The 'storage_mounts' field has been deprecated. Please use 'mounts' instead.
     */
    declare public readonly storageMounts: pulumi.Output<outputs.ServerlessContainerStorageMount[]>;
    /**
     * Invoke URL for the Yandex Cloud Serverless Container.
     */
    declare public /*out*/ readonly url: pulumi.Output<string>;

    /**
     * Create a ServerlessContainer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServerlessContainerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServerlessContainerArgs | ServerlessContainerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServerlessContainerState | undefined;
            resourceInputs["asyncInvocation"] = state?.asyncInvocation;
            resourceInputs["concurrency"] = state?.concurrency;
            resourceInputs["connectivity"] = state?.connectivity;
            resourceInputs["coreFraction"] = state?.coreFraction;
            resourceInputs["cores"] = state?.cores;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["description"] = state?.description;
            resourceInputs["executionTimeout"] = state?.executionTimeout;
            resourceInputs["folderId"] = state?.folderId;
            resourceInputs["image"] = state?.image;
            resourceInputs["labels"] = state?.labels;
            resourceInputs["logOptions"] = state?.logOptions;
            resourceInputs["memory"] = state?.memory;
            resourceInputs["metadataOptions"] = state?.metadataOptions;
            resourceInputs["mounts"] = state?.mounts;
            resourceInputs["name"] = state?.name;
            resourceInputs["provisionPolicy"] = state?.provisionPolicy;
            resourceInputs["revisionId"] = state?.revisionId;
            resourceInputs["runtime"] = state?.runtime;
            resourceInputs["secrets"] = state?.secrets;
            resourceInputs["serviceAccountId"] = state?.serviceAccountId;
            resourceInputs["storageMounts"] = state?.storageMounts;
            resourceInputs["url"] = state?.url;
        } else {
            const args = argsOrState as ServerlessContainerArgs | undefined;
            if (args?.image === undefined && !opts.urn) {
                throw new Error("Missing required property 'image'");
            }
            if (args?.memory === undefined && !opts.urn) {
                throw new Error("Missing required property 'memory'");
            }
            resourceInputs["asyncInvocation"] = args?.asyncInvocation;
            resourceInputs["concurrency"] = args?.concurrency;
            resourceInputs["connectivity"] = args?.connectivity;
            resourceInputs["coreFraction"] = args?.coreFraction;
            resourceInputs["cores"] = args?.cores;
            resourceInputs["description"] = args?.description;
            resourceInputs["executionTimeout"] = args?.executionTimeout;
            resourceInputs["folderId"] = args?.folderId;
            resourceInputs["image"] = args?.image;
            resourceInputs["labels"] = args?.labels;
            resourceInputs["logOptions"] = args?.logOptions;
            resourceInputs["memory"] = args?.memory;
            resourceInputs["metadataOptions"] = args?.metadataOptions;
            resourceInputs["mounts"] = args?.mounts;
            resourceInputs["name"] = args?.name;
            resourceInputs["provisionPolicy"] = args?.provisionPolicy;
            resourceInputs["runtime"] = args?.runtime;
            resourceInputs["secrets"] = args?.secrets;
            resourceInputs["serviceAccountId"] = args?.serviceAccountId;
            resourceInputs["storageMounts"] = args?.storageMounts;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["revisionId"] = undefined /*out*/;
            resourceInputs["url"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServerlessContainer.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServerlessContainer resources.
 */
export interface ServerlessContainerState {
    /**
     * Config for asynchronous invocations of Yandex Cloud Serverless Container.
     */
    asyncInvocation?: pulumi.Input<inputs.ServerlessContainerAsyncInvocation>;
    /**
     * Concurrency of Yandex Cloud Serverless Container.
     */
    concurrency?: pulumi.Input<number>;
    /**
     * Network access. If specified the revision will be attached to specified network.
     */
    connectivity?: pulumi.Input<inputs.ServerlessContainerConnectivity>;
    /**
     * Core fraction (**0...100**) of the Yandex Cloud Serverless Container.
     */
    coreFraction?: pulumi.Input<number>;
    /**
     * Cores (**1+**) of the Yandex Cloud Serverless Container.
     */
    cores?: pulumi.Input<number>;
    /**
     * The creation timestamp of the resource.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * Execution timeout in seconds (**duration format**) for Yandex Cloud Serverless Container.
     */
    executionTimeout?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * Revision deployment image for Yandex Cloud Serverless Container.
     */
    image?: pulumi.Input<inputs.ServerlessContainerImage>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Options for logging from Yandex Cloud Serverless Container.
     */
    logOptions?: pulumi.Input<inputs.ServerlessContainerLogOptions>;
    /**
     * Memory in megabytes (**aligned to 128 MB**).
     */
    memory?: pulumi.Input<number>;
    /**
     * Options set the access mode to revision's metadata endpoints.
     */
    metadataOptions?: pulumi.Input<inputs.ServerlessContainerMetadataOptions>;
    /**
     * Mounts for Yandex Cloud Serverless Container.
     */
    mounts?: pulumi.Input<pulumi.Input<inputs.ServerlessContainerMount>[]>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * Provision policy. If specified the revision will have prepared instances.
     */
    provisionPolicy?: pulumi.Input<inputs.ServerlessContainerProvisionPolicy>;
    /**
     * Last revision ID of the Yandex Cloud Serverless Container.
     */
    revisionId?: pulumi.Input<string>;
    /**
     * Runtime for Yandex Cloud Serverless Container.
     */
    runtime?: pulumi.Input<inputs.ServerlessContainerRuntime>;
    /**
     * Secrets for Yandex Cloud Serverless Container.
     */
    secrets?: pulumi.Input<pulumi.Input<inputs.ServerlessContainerSecret>[]>;
    /**
     * [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
     */
    serviceAccountId?: pulumi.Input<string>;
    /**
     * (**DEPRECATED**, use `mounts.object_storage` instead) Storage mounts for Yandex Cloud Serverless Container.
     *
     * @deprecated The 'storage_mounts' field has been deprecated. Please use 'mounts' instead.
     */
    storageMounts?: pulumi.Input<pulumi.Input<inputs.ServerlessContainerStorageMount>[]>;
    /**
     * Invoke URL for the Yandex Cloud Serverless Container.
     */
    url?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServerlessContainer resource.
 */
export interface ServerlessContainerArgs {
    /**
     * Config for asynchronous invocations of Yandex Cloud Serverless Container.
     */
    asyncInvocation?: pulumi.Input<inputs.ServerlessContainerAsyncInvocation>;
    /**
     * Concurrency of Yandex Cloud Serverless Container.
     */
    concurrency?: pulumi.Input<number>;
    /**
     * Network access. If specified the revision will be attached to specified network.
     */
    connectivity?: pulumi.Input<inputs.ServerlessContainerConnectivity>;
    /**
     * Core fraction (**0...100**) of the Yandex Cloud Serverless Container.
     */
    coreFraction?: pulumi.Input<number>;
    /**
     * Cores (**1+**) of the Yandex Cloud Serverless Container.
     */
    cores?: pulumi.Input<number>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * Execution timeout in seconds (**duration format**) for Yandex Cloud Serverless Container.
     */
    executionTimeout?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * Revision deployment image for Yandex Cloud Serverless Container.
     */
    image: pulumi.Input<inputs.ServerlessContainerImage>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Options for logging from Yandex Cloud Serverless Container.
     */
    logOptions?: pulumi.Input<inputs.ServerlessContainerLogOptions>;
    /**
     * Memory in megabytes (**aligned to 128 MB**).
     */
    memory: pulumi.Input<number>;
    /**
     * Options set the access mode to revision's metadata endpoints.
     */
    metadataOptions?: pulumi.Input<inputs.ServerlessContainerMetadataOptions>;
    /**
     * Mounts for Yandex Cloud Serverless Container.
     */
    mounts?: pulumi.Input<pulumi.Input<inputs.ServerlessContainerMount>[]>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * Provision policy. If specified the revision will have prepared instances.
     */
    provisionPolicy?: pulumi.Input<inputs.ServerlessContainerProvisionPolicy>;
    /**
     * Runtime for Yandex Cloud Serverless Container.
     */
    runtime?: pulumi.Input<inputs.ServerlessContainerRuntime>;
    /**
     * Secrets for Yandex Cloud Serverless Container.
     */
    secrets?: pulumi.Input<pulumi.Input<inputs.ServerlessContainerSecret>[]>;
    /**
     * [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
     */
    serviceAccountId?: pulumi.Input<string>;
    /**
     * (**DEPRECATED**, use `mounts.object_storage` instead) Storage mounts for Yandex Cloud Serverless Container.
     *
     * @deprecated The 'storage_mounts' field has been deprecated. Please use 'mounts' instead.
     */
    storageMounts?: pulumi.Input<pulumi.Input<inputs.ServerlessContainerStorageMount>[]>;
}
