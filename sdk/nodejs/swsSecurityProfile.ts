// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * With security profiles you can protect your infrastructure from DDoS attacks at the application level (L7).
 *
 * Creates a Security Profile in the specified folder. For more information, see [the official documentation](https://yandex.cloud/docs/smartwebsecurity/concepts/profiles).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * //
 * // Create a new SWS Security Profile (Simple).
 * //
 * const demo_profile_simple = new yandex.SwsSecurityProfile("demo-profile-simple", {
 *     defaultAction: "ALLOW",
 *     securityRules: [{
 *         name: "smart-protection",
 *         priority: 99999,
 *         smartProtection: {
 *             mode: "API",
 *         },
 *     }],
 * });
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * //
 * // Create a new SWS Security Profile (Advanced).
 * //
 * const demo_profile_advanced = new yandex.SwsSecurityProfile("demo-profile-advanced", {
 *     advancedRateLimiterProfileId: "<arl_id>",
 *     captchaId: "<captcha_id>",
 *     defaultAction: "ALLOW",
 *     securityRules: [
 *         {
 *             name: "smart-protection",
 *             priority: 99999,
 *             smartProtection: {
 *                 mode: "API",
 *             },
 *         },
 *         {
 *             name: "waf",
 *             priority: 88888,
 *             waf: {
 *                 mode: "API",
 *                 wafProfileId: "<waf_id>",
 *             },
 *         },
 *         {
 *             name: "rule-condition-1",
 *             priority: 1,
 *             ruleCondition: {
 *                 action: "ALLOW",
 *                 condition: {
 *                     authority: {
 *                         authorities: [
 *                             {
 *                                 exactMatch: "example.com",
 *                             },
 *                             {
 *                                 exactMatch: "example.net",
 *                             },
 *                         ],
 *                     },
 *                 },
 *             },
 *         },
 *         {
 *             name: "rule-condition-2",
 *             priority: 2,
 *             ruleCondition: {
 *                 action: "DENY",
 *                 condition: {
 *                     httpMethod: {
 *                         httpMethods: [
 *                             {
 *                                 exactMatch: "DELETE",
 *                             },
 *                             {
 *                                 exactMatch: "PUT",
 *                             },
 *                         ],
 *                     },
 *                 },
 *             },
 *         },
 *         {
 *             name: "rule-condition-3",
 *             priority: 3,
 *             ruleCondition: {
 *                 action: "DENY",
 *                 condition: {
 *                     headers: [
 *                         {
 *                             name: "User-Agent",
 *                             value: {
 *                                 pireRegexMatch: ".*curl.*",
 *                             },
 *                         },
 *                         {
 *                             name: "Referer",
 *                             value: {
 *                                 pireRegexNotMatch: ".*bot.*",
 *                             },
 *                         },
 *                     ],
 *                     requestUri: {
 *                         path: {
 *                             prefixMatch: "/form",
 *                         },
 *                         queries: [
 *                             {
 *                                 key: "firstname",
 *                                 value: {
 *                                     pireRegexMatch: ".*ivan.*",
 *                                 },
 *                             },
 *                             {
 *                                 key: "lastname",
 *                                 value: {
 *                                     pireRegexMatch: ".*petr.*",
 *                                 },
 *                             },
 *                         ],
 *                     },
 *                     sourceIp: {
 *                         geoIpMatch: {
 *                             locations: [
 *                                 "ru",
 *                                 "es",
 *                             ],
 *                         },
 *                         geoIpNotMatch: {
 *                             locations: [
 *                                 "us",
 *                                 "fm",
 *                                 "gb",
 *                             ],
 *                         },
 *                         ipRangesMatch: {
 *                             ipRanges: [
 *                                 "1.2.33.44",
 *                                 "2.3.4.56",
 *                             ],
 *                         },
 *                         ipRangesNotMatch: {
 *                             ipRanges: [
 *                                 "8.8.0.0/16",
 *                                 "10::1234:1abc:1/64",
 *                             ],
 *                         },
 *                     },
 *                 },
 *             },
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * The resource can be imported by using their `resource ID`. For getting the resource ID you can use Yandex Cloud [Web Console](https://console.yandex.cloud) or [YC CLI](https://yandex.cloud/docs/cli/quickstart).
 *
 * ```sh
 * $ pulumi import yandex:index/swsSecurityProfile:SwsSecurityProfile <resource Name> <resource Id>
 * ```
 *
 * ```sh
 * $ pulumi import yandex:index/swsSecurityProfile:SwsSecurityProfile demo-profile-simple ...
 * ```
 */
export class SwsSecurityProfile extends pulumi.CustomResource {
    /**
     * Get an existing SwsSecurityProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SwsSecurityProfileState, opts?: pulumi.CustomResourceOptions): SwsSecurityProfile {
        return new SwsSecurityProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/swsSecurityProfile:SwsSecurityProfile';

    /**
     * Returns true if the given object is an instance of SwsSecurityProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SwsSecurityProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SwsSecurityProfile.__pulumiType;
    }

    /**
     * Advanced rate limiter profile ID to use with this security profile. Set empty to use default.
     */
    declare public readonly advancedRateLimiterProfileId: pulumi.Output<string | undefined>;
    /**
     * Analyze request body.
     */
    declare public readonly analyzeRequestBody: pulumi.Output<outputs.SwsSecurityProfileAnalyzeRequestBody | undefined>;
    /**
     * Captcha ID to use with this security profile. Set empty to use default.
     */
    declare public readonly captchaId: pulumi.Output<string | undefined>;
    /**
     * The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
     */
    declare public readonly cloudId: pulumi.Output<string>;
    /**
     * The creation timestamp of the resource.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * Action to perform if none of rules matched. Possible values: `ALLOW` or `DENY`.
     */
    declare public readonly defaultAction: pulumi.Output<string | undefined>;
    /**
     * The resource description.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    declare public readonly folderId: pulumi.Output<string>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    declare public readonly labels: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The resource name.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * List of security rules.
     */
    declare public readonly securityRules: pulumi.Output<outputs.SwsSecurityProfileSecurityRule[] | undefined>;

    /**
     * Create a SwsSecurityProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SwsSecurityProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SwsSecurityProfileArgs | SwsSecurityProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SwsSecurityProfileState | undefined;
            resourceInputs["advancedRateLimiterProfileId"] = state?.advancedRateLimiterProfileId;
            resourceInputs["analyzeRequestBody"] = state?.analyzeRequestBody;
            resourceInputs["captchaId"] = state?.captchaId;
            resourceInputs["cloudId"] = state?.cloudId;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["defaultAction"] = state?.defaultAction;
            resourceInputs["description"] = state?.description;
            resourceInputs["folderId"] = state?.folderId;
            resourceInputs["labels"] = state?.labels;
            resourceInputs["name"] = state?.name;
            resourceInputs["securityRules"] = state?.securityRules;
        } else {
            const args = argsOrState as SwsSecurityProfileArgs | undefined;
            resourceInputs["advancedRateLimiterProfileId"] = args?.advancedRateLimiterProfileId;
            resourceInputs["analyzeRequestBody"] = args?.analyzeRequestBody;
            resourceInputs["captchaId"] = args?.captchaId;
            resourceInputs["cloudId"] = args?.cloudId;
            resourceInputs["defaultAction"] = args?.defaultAction;
            resourceInputs["description"] = args?.description;
            resourceInputs["folderId"] = args?.folderId;
            resourceInputs["labels"] = args?.labels;
            resourceInputs["name"] = args?.name;
            resourceInputs["securityRules"] = args?.securityRules;
            resourceInputs["createdAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SwsSecurityProfile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SwsSecurityProfile resources.
 */
export interface SwsSecurityProfileState {
    /**
     * Advanced rate limiter profile ID to use with this security profile. Set empty to use default.
     */
    advancedRateLimiterProfileId?: pulumi.Input<string>;
    /**
     * Analyze request body.
     */
    analyzeRequestBody?: pulumi.Input<inputs.SwsSecurityProfileAnalyzeRequestBody>;
    /**
     * Captcha ID to use with this security profile. Set empty to use default.
     */
    captchaId?: pulumi.Input<string>;
    /**
     * The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
     */
    cloudId?: pulumi.Input<string>;
    /**
     * The creation timestamp of the resource.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Action to perform if none of rules matched. Possible values: `ALLOW` or `DENY`.
     */
    defaultAction?: pulumi.Input<string>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * List of security rules.
     */
    securityRules?: pulumi.Input<pulumi.Input<inputs.SwsSecurityProfileSecurityRule>[]>;
}

/**
 * The set of arguments for constructing a SwsSecurityProfile resource.
 */
export interface SwsSecurityProfileArgs {
    /**
     * Advanced rate limiter profile ID to use with this security profile. Set empty to use default.
     */
    advancedRateLimiterProfileId?: pulumi.Input<string>;
    /**
     * Analyze request body.
     */
    analyzeRequestBody?: pulumi.Input<inputs.SwsSecurityProfileAnalyzeRequestBody>;
    /**
     * Captcha ID to use with this security profile. Set empty to use default.
     */
    captchaId?: pulumi.Input<string>;
    /**
     * The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
     */
    cloudId?: pulumi.Input<string>;
    /**
     * Action to perform if none of rules matched. Possible values: `ALLOW` or `DENY`.
     */
    defaultAction?: pulumi.Input<string>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * List of security rules.
     */
    securityRules?: pulumi.Input<pulumi.Input<inputs.SwsSecurityProfileSecurityRule>[]>;
}
