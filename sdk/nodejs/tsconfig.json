{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "albBackendGroup.ts",
        "albHttpRouter.ts",
        "albTargetGroup.ts",
        "apiGateway.ts",
        "computeDisk.ts",
        "computeDiskPlacementGroup.ts",
        "computeImage.ts",
        "computeInstance.ts",
        "computeInstanceGroup.ts",
        "computePlacementGroup.ts",
        "computeSnapshot.ts",
        "config/index.ts",
        "config/vars.ts",
        "containerRegistry.ts",
        "containerRegistryIamBinding.ts",
        "containerRepository.ts",
        "containerRepositoryIamBinding.ts",
        "dataprocCluster.ts",
        "dnsRecordSet.ts",
        "dnsZone.ts",
        "function.ts",
        "functionIamBinding.ts",
        "functionTrigger.ts",
        "getAlbBackendGroup.ts",
        "getAlbHttpRouter.ts",
        "getAlbTargetGroup.ts",
        "getApiGateway.ts",
        "getClientConfig.ts",
        "getComputeDisk.ts",
        "getComputeDiskPlacementGroup.ts",
        "getComputeImage.ts",
        "getComputeInstance.ts",
        "getComputeInstanceGroup.ts",
        "getComputePlacementGroup.ts",
        "getComputeSnapshot.ts",
        "getContainerRegistry.ts",
        "getContainerRepository.ts",
        "getDataprocCluster.ts",
        "getDnsZone.ts",
        "getFunction.ts",
        "getFunctionTrigger.ts",
        "getIamPolicy.ts",
        "getIamRole.ts",
        "getIamServiceAccount.ts",
        "getIamUser.ts",
        "getIotCoreDevice.ts",
        "getIotCoreRegistry.ts",
        "getKubernetesCluster.ts",
        "getKubernetesNodeGroup.ts",
        "getLbNetworkLoadBalancer.ts",
        "getLbTargetGroup.ts",
        "getMdbClickhouseCluster.ts",
        "getMdbKafkaCluster.ts",
        "getMdbMongodbCluster.ts",
        "getMdbMysqlCluster.ts",
        "getMdbPostgresqlCluster.ts",
        "getMdbRedisCluster.ts",
        "getMdbSqlserverCluster.ts",
        "getMessageQueue.ts",
        "getResourcemanagerCloud.ts",
        "getResourcemanagerFolder.ts",
        "getVpcAddress.ts",
        "getVpcNetwork.ts",
        "getVpcRouteTable.ts",
        "getVpcSecurityGroup.ts",
        "getVpcSubnet.ts",
        "getYdbDatabaseDedicated.ts",
        "getYdbDatabaseServerless.ts",
        "iamServiceAccount.ts",
        "iamServiceAccountApiKey.ts",
        "iamServiceAccountIamBinding.ts",
        "iamServiceAccountIamMember.ts",
        "iamServiceAccountIamPolicy.ts",
        "iamServiceAccountKey.ts",
        "iamServiceAccountStaticAccessKey.ts",
        "index.ts",
        "iotCoreDevice.ts",
        "iotCoreRegistry.ts",
        "kmsSecretCiphertext.ts",
        "kmsSymmetricKey.ts",
        "kubernetesCluster.ts",
        "kubernetesNodeGroup.ts",
        "lbNetworkLoadBalancer.ts",
        "lbTargetGroup.ts",
        "mdbClickhouseCluster.ts",
        "mdbKafkaCluster.ts",
        "mdbMongodbCluster.ts",
        "mdbMysqlCluster.ts",
        "mdbRedisCluster.ts",
        "mdbSqlServerCluster.ts",
        "messageQueue.ts",
        "provider.ts",
        "resourcemanagerCloudIamBinding.ts",
        "resourcemanagerCloudIamMember.ts",
        "resourcemanagerFolderIamBinding.ts",
        "resourcemanagerFolderIamMember.ts",
        "resourcemanagerFolderIamPolicy.ts",
        "storageBucket.ts",
        "storageObject.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "utilities.ts",
        "vpcAddress.ts",
        "vpcDefaultSecurityGroup.ts",
        "vpcNetwork.ts",
        "vpcRouteTable.ts",
        "vpcSecurityGroup.ts",
        "vpcSubnet.ts",
        "ydbDatabaseDedicated.ts",
        "ydbDatabaseServerless.ts"
    ]
}
