// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Yandex Database (dedicated) resource. For more information, see [the official documentation](https://yandex.cloud/docs/ydb/concepts/serverless_and_dedicated).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * //
 * // Create a new YDB Dedicated Database.
 * //
 * const database1 = new yandex.YdbDatabaseDedicated("database1", {
 *     folderId: data.yandex_resourcemanager_folder.test_folder.id,
 *     networkId: yandex_vpc_network["my-inst-group-network"].id,
 *     subnetIds: [yandex_vpc_subnet["my-inst-group-subnet"].id],
 *     resourcePresetId: "medium",
 *     deletionProtection: true,
 *     scalePolicy: {
 *         fixedScale: {
 *             size: 1,
 *         },
 *     },
 *     storageConfig: {
 *         groupCount: 1,
 *         storageTypeId: "ssd",
 *     },
 *     location: {
 *         region: {
 *             id: "ru-central1",
 *         },
 *     },
 * });
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * //
 * // Create a new YDB Dedicated Database with auto-scale policy.
 * //
 * const database1 = new yandex.YdbDatabaseDedicated("database1", {
 *     folderId: data.yandex_resourcemanager_folder.test_folder.id,
 *     networkId: yandex_vpc_network["my-inst-group-network"].id,
 *     subnetIds: [yandex_vpc_subnet["my-inst-group-subnet"].id],
 *     resourcePresetId: "medium",
 *     deletionProtection: true,
 *     scalePolicy: {
 *         autoScale: {
 *             minSize: 2,
 *             maxSize: 8,
 *             targetTracking: {
 *                 cpuUtilizationPercent: 70,
 *             },
 *         },
 *     },
 *     labels: {
 *         enable_autoscaling: "1",
 *     },
 *     storageConfig: {
 *         groupCount: 1,
 *         storageTypeId: "ssd",
 *     },
 *     location: {
 *         region: {
 *             id: "ru-central1",
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * The resource can be imported by using their `resource ID`. For getting the resource ID you can use Yandex Cloud [Web Console](https://console.yandex.cloud) or [YC CLI](https://yandex.cloud/docs/cli/quickstart).
 *
 * ```sh
 * $ pulumi import yandex:index/ydbDatabaseDedicated:YdbDatabaseDedicated <resource Name> <resource Id>
 * ```
 *
 * ```sh
 * $ pulumi import yandex:index/ydbDatabaseDedicated:YdbDatabaseDedicated my_ydb ...
 * ```
 */
export class YdbDatabaseDedicated extends pulumi.CustomResource {
    /**
     * Get an existing YdbDatabaseDedicated resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: YdbDatabaseDedicatedState, opts?: pulumi.CustomResourceOptions): YdbDatabaseDedicated {
        return new YdbDatabaseDedicated(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/ydbDatabaseDedicated:YdbDatabaseDedicated';

    /**
     * Returns true if the given object is an instance of YdbDatabaseDedicated.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is YdbDatabaseDedicated {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === YdbDatabaseDedicated.__pulumiType;
    }

    /**
     * Whether public IP addresses should be assigned to the Yandex Database cluster.
     */
    declare public readonly assignPublicIps: pulumi.Output<boolean | undefined>;
    /**
     * The creation timestamp of the resource.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * Full database path of the Yandex Database cluster. Useful for SDK configuration.
     */
    declare public /*out*/ readonly databasePath: pulumi.Output<string>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    declare public readonly deletionProtection: pulumi.Output<boolean | undefined>;
    /**
     * The resource description.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    declare public readonly folderId: pulumi.Output<string>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    declare public readonly labels: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Location for the Yandex Database cluster.
     */
    declare public readonly location: pulumi.Output<outputs.YdbDatabaseDedicatedLocation | undefined>;
    /**
     * Location ID for the Yandex Database cluster.
     */
    declare public readonly locationId: pulumi.Output<string>;
    /**
     * The resource name.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    declare public readonly networkId: pulumi.Output<string>;
    /**
     * The Yandex Database cluster preset. Available presets can be obtained via `yc ydb resource-preset list` command.
     */
    declare public readonly resourcePresetId: pulumi.Output<string>;
    /**
     * Scaling policy for the Yandex Database cluster.
     */
    declare public readonly scalePolicy: pulumi.Output<outputs.YdbDatabaseDedicatedScalePolicy>;
    /**
     * The list of security groups applied to resource or their components.
     */
    declare public readonly securityGroupIds: pulumi.Output<string[] | undefined>;
    declare public readonly sleepAfter: pulumi.Output<number | undefined>;
    /**
     * Status of the Yandex Database cluster.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * A list of storage configuration options for the Yandex Database cluster.
     */
    declare public readonly storageConfig: pulumi.Output<outputs.YdbDatabaseDedicatedStorageConfig>;
    /**
     * The list of VPC subnets identifiers which resource is attached.
     */
    declare public readonly subnetIds: pulumi.Output<string[]>;
    /**
     * Whether TLS is enabled for the Yandex Database cluster. Useful for SDK configuration.
     */
    declare public /*out*/ readonly tlsEnabled: pulumi.Output<boolean>;
    /**
     * API endpoint of the Yandex Database cluster. Useful for SDK configuration.
     */
    declare public /*out*/ readonly ydbApiEndpoint: pulumi.Output<string>;
    /**
     * Full endpoint of the Yandex Database cluster.
     */
    declare public /*out*/ readonly ydbFullEndpoint: pulumi.Output<string>;

    /**
     * Create a YdbDatabaseDedicated resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: YdbDatabaseDedicatedArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: YdbDatabaseDedicatedArgs | YdbDatabaseDedicatedState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as YdbDatabaseDedicatedState | undefined;
            resourceInputs["assignPublicIps"] = state?.assignPublicIps;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["databasePath"] = state?.databasePath;
            resourceInputs["deletionProtection"] = state?.deletionProtection;
            resourceInputs["description"] = state?.description;
            resourceInputs["folderId"] = state?.folderId;
            resourceInputs["labels"] = state?.labels;
            resourceInputs["location"] = state?.location;
            resourceInputs["locationId"] = state?.locationId;
            resourceInputs["name"] = state?.name;
            resourceInputs["networkId"] = state?.networkId;
            resourceInputs["resourcePresetId"] = state?.resourcePresetId;
            resourceInputs["scalePolicy"] = state?.scalePolicy;
            resourceInputs["securityGroupIds"] = state?.securityGroupIds;
            resourceInputs["sleepAfter"] = state?.sleepAfter;
            resourceInputs["status"] = state?.status;
            resourceInputs["storageConfig"] = state?.storageConfig;
            resourceInputs["subnetIds"] = state?.subnetIds;
            resourceInputs["tlsEnabled"] = state?.tlsEnabled;
            resourceInputs["ydbApiEndpoint"] = state?.ydbApiEndpoint;
            resourceInputs["ydbFullEndpoint"] = state?.ydbFullEndpoint;
        } else {
            const args = argsOrState as YdbDatabaseDedicatedArgs | undefined;
            if (args?.networkId === undefined && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            if (args?.resourcePresetId === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourcePresetId'");
            }
            if (args?.scalePolicy === undefined && !opts.urn) {
                throw new Error("Missing required property 'scalePolicy'");
            }
            if (args?.storageConfig === undefined && !opts.urn) {
                throw new Error("Missing required property 'storageConfig'");
            }
            if (args?.subnetIds === undefined && !opts.urn) {
                throw new Error("Missing required property 'subnetIds'");
            }
            resourceInputs["assignPublicIps"] = args?.assignPublicIps;
            resourceInputs["deletionProtection"] = args?.deletionProtection;
            resourceInputs["description"] = args?.description;
            resourceInputs["folderId"] = args?.folderId;
            resourceInputs["labels"] = args?.labels;
            resourceInputs["location"] = args?.location;
            resourceInputs["locationId"] = args?.locationId;
            resourceInputs["name"] = args?.name;
            resourceInputs["networkId"] = args?.networkId;
            resourceInputs["resourcePresetId"] = args?.resourcePresetId;
            resourceInputs["scalePolicy"] = args?.scalePolicy;
            resourceInputs["securityGroupIds"] = args?.securityGroupIds;
            resourceInputs["sleepAfter"] = args?.sleepAfter;
            resourceInputs["storageConfig"] = args?.storageConfig;
            resourceInputs["subnetIds"] = args?.subnetIds;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["databasePath"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tlsEnabled"] = undefined /*out*/;
            resourceInputs["ydbApiEndpoint"] = undefined /*out*/;
            resourceInputs["ydbFullEndpoint"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(YdbDatabaseDedicated.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering YdbDatabaseDedicated resources.
 */
export interface YdbDatabaseDedicatedState {
    /**
     * Whether public IP addresses should be assigned to the Yandex Database cluster.
     */
    assignPublicIps?: pulumi.Input<boolean>;
    /**
     * The creation timestamp of the resource.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Full database path of the Yandex Database cluster. Useful for SDK configuration.
     */
    databasePath?: pulumi.Input<string>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Location for the Yandex Database cluster.
     */
    location?: pulumi.Input<inputs.YdbDatabaseDedicatedLocation>;
    /**
     * Location ID for the Yandex Database cluster.
     */
    locationId?: pulumi.Input<string>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    networkId?: pulumi.Input<string>;
    /**
     * The Yandex Database cluster preset. Available presets can be obtained via `yc ydb resource-preset list` command.
     */
    resourcePresetId?: pulumi.Input<string>;
    /**
     * Scaling policy for the Yandex Database cluster.
     */
    scalePolicy?: pulumi.Input<inputs.YdbDatabaseDedicatedScalePolicy>;
    /**
     * The list of security groups applied to resource or their components.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    sleepAfter?: pulumi.Input<number>;
    /**
     * Status of the Yandex Database cluster.
     */
    status?: pulumi.Input<string>;
    /**
     * A list of storage configuration options for the Yandex Database cluster.
     */
    storageConfig?: pulumi.Input<inputs.YdbDatabaseDedicatedStorageConfig>;
    /**
     * The list of VPC subnets identifiers which resource is attached.
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether TLS is enabled for the Yandex Database cluster. Useful for SDK configuration.
     */
    tlsEnabled?: pulumi.Input<boolean>;
    /**
     * API endpoint of the Yandex Database cluster. Useful for SDK configuration.
     */
    ydbApiEndpoint?: pulumi.Input<string>;
    /**
     * Full endpoint of the Yandex Database cluster.
     */
    ydbFullEndpoint?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a YdbDatabaseDedicated resource.
 */
export interface YdbDatabaseDedicatedArgs {
    /**
     * Whether public IP addresses should be assigned to the Yandex Database cluster.
     */
    assignPublicIps?: pulumi.Input<boolean>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Location for the Yandex Database cluster.
     */
    location?: pulumi.Input<inputs.YdbDatabaseDedicatedLocation>;
    /**
     * Location ID for the Yandex Database cluster.
     */
    locationId?: pulumi.Input<string>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    networkId: pulumi.Input<string>;
    /**
     * The Yandex Database cluster preset. Available presets can be obtained via `yc ydb resource-preset list` command.
     */
    resourcePresetId: pulumi.Input<string>;
    /**
     * Scaling policy for the Yandex Database cluster.
     */
    scalePolicy: pulumi.Input<inputs.YdbDatabaseDedicatedScalePolicy>;
    /**
     * The list of security groups applied to resource or their components.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    sleepAfter?: pulumi.Input<number>;
    /**
     * A list of storage configuration options for the Yandex Database cluster.
     */
    storageConfig: pulumi.Input<inputs.YdbDatabaseDedicatedStorageConfig>;
    /**
     * The list of VPC subnets identifiers which resource is attached.
     */
    subnetIds: pulumi.Input<pulumi.Input<string>[]>;
}
