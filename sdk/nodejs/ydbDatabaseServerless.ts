// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Yandex Database (serverless) resource. For more information, see [the official documentation](https://yandex.cloud/docs/ydb/concepts/serverless_and_dedicated).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh/pulumi-yandex";
 *
 * //
 * // Create a new YDB Serverless Database.
 * //
 * const myYdb = new yandex.YdbDatabaseServerless("myYdb", {
 *     folderId: data.yandex_resourcemanager_folder.test_folder.id,
 *     deletionProtection: true,
 * });
 * ```
 *
 * ## Import
 *
 * The resource can be imported by using their `resource ID`. For getting the resource ID you can use Yandex Cloud [Web Console](https://console.yandex.cloud) or [YC CLI](https://yandex.cloud/docs/cli/quickstart).
 *
 * ```sh
 * $ pulumi import yandex:index/ydbDatabaseServerless:YdbDatabaseServerless <resource Name> <resource Id>
 * ```
 *
 * ```sh
 * $ pulumi import yandex:index/ydbDatabaseServerless:YdbDatabaseServerless my_ydb ...
 * ```
 */
export class YdbDatabaseServerless extends pulumi.CustomResource {
    /**
     * Get an existing YdbDatabaseServerless resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: YdbDatabaseServerlessState, opts?: pulumi.CustomResourceOptions): YdbDatabaseServerless {
        return new YdbDatabaseServerless(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/ydbDatabaseServerless:YdbDatabaseServerless';

    /**
     * Returns true if the given object is an instance of YdbDatabaseServerless.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is YdbDatabaseServerless {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === YdbDatabaseServerless.__pulumiType;
    }

    /**
     * The creation timestamp of the resource.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * Full database path of the Yandex Database serverless cluster. Useful for SDK configuration.
     */
    declare public /*out*/ readonly databasePath: pulumi.Output<string>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    declare public readonly deletionProtection: pulumi.Output<boolean | undefined>;
    /**
     * The resource description.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Document API endpoint of the Yandex Database serverless cluster.
     */
    declare public /*out*/ readonly documentApiEndpoint: pulumi.Output<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    declare public readonly folderId: pulumi.Output<string>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    declare public readonly labels: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Location ID for the Yandex Database serverless cluster.
     */
    declare public readonly locationId: pulumi.Output<string>;
    /**
     * The resource name.
     */
    declare public readonly name: pulumi.Output<string>;
    declare public readonly serverlessDatabases: pulumi.Output<outputs.YdbDatabaseServerlessServerlessDatabase[]>;
    declare public readonly sleepAfter: pulumi.Output<number | undefined>;
    /**
     * Status of the Yandex Database serverless cluster.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * Whether TLS is enabled for the Yandex Database serverless cluster. Useful for SDK configuration.
     */
    declare public /*out*/ readonly tlsEnabled: pulumi.Output<boolean>;
    /**
     * API endpoint of the Yandex Database serverless cluster. Useful for SDK configuration.
     */
    declare public /*out*/ readonly ydbApiEndpoint: pulumi.Output<string>;
    /**
     * Full endpoint of the Yandex Database serverless cluster.
     */
    declare public /*out*/ readonly ydbFullEndpoint: pulumi.Output<string>;

    /**
     * Create a YdbDatabaseServerless resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: YdbDatabaseServerlessArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: YdbDatabaseServerlessArgs | YdbDatabaseServerlessState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as YdbDatabaseServerlessState | undefined;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["databasePath"] = state?.databasePath;
            resourceInputs["deletionProtection"] = state?.deletionProtection;
            resourceInputs["description"] = state?.description;
            resourceInputs["documentApiEndpoint"] = state?.documentApiEndpoint;
            resourceInputs["folderId"] = state?.folderId;
            resourceInputs["labels"] = state?.labels;
            resourceInputs["locationId"] = state?.locationId;
            resourceInputs["name"] = state?.name;
            resourceInputs["serverlessDatabases"] = state?.serverlessDatabases;
            resourceInputs["sleepAfter"] = state?.sleepAfter;
            resourceInputs["status"] = state?.status;
            resourceInputs["tlsEnabled"] = state?.tlsEnabled;
            resourceInputs["ydbApiEndpoint"] = state?.ydbApiEndpoint;
            resourceInputs["ydbFullEndpoint"] = state?.ydbFullEndpoint;
        } else {
            const args = argsOrState as YdbDatabaseServerlessArgs | undefined;
            resourceInputs["deletionProtection"] = args?.deletionProtection;
            resourceInputs["description"] = args?.description;
            resourceInputs["folderId"] = args?.folderId;
            resourceInputs["labels"] = args?.labels;
            resourceInputs["locationId"] = args?.locationId;
            resourceInputs["name"] = args?.name;
            resourceInputs["serverlessDatabases"] = args?.serverlessDatabases;
            resourceInputs["sleepAfter"] = args?.sleepAfter;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["databasePath"] = undefined /*out*/;
            resourceInputs["documentApiEndpoint"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tlsEnabled"] = undefined /*out*/;
            resourceInputs["ydbApiEndpoint"] = undefined /*out*/;
            resourceInputs["ydbFullEndpoint"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(YdbDatabaseServerless.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering YdbDatabaseServerless resources.
 */
export interface YdbDatabaseServerlessState {
    /**
     * The creation timestamp of the resource.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Full database path of the Yandex Database serverless cluster. Useful for SDK configuration.
     */
    databasePath?: pulumi.Input<string>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * Document API endpoint of the Yandex Database serverless cluster.
     */
    documentApiEndpoint?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Location ID for the Yandex Database serverless cluster.
     */
    locationId?: pulumi.Input<string>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    serverlessDatabases?: pulumi.Input<pulumi.Input<inputs.YdbDatabaseServerlessServerlessDatabase>[]>;
    sleepAfter?: pulumi.Input<number>;
    /**
     * Status of the Yandex Database serverless cluster.
     */
    status?: pulumi.Input<string>;
    /**
     * Whether TLS is enabled for the Yandex Database serverless cluster. Useful for SDK configuration.
     */
    tlsEnabled?: pulumi.Input<boolean>;
    /**
     * API endpoint of the Yandex Database serverless cluster. Useful for SDK configuration.
     */
    ydbApiEndpoint?: pulumi.Input<string>;
    /**
     * Full endpoint of the Yandex Database serverless cluster.
     */
    ydbFullEndpoint?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a YdbDatabaseServerless resource.
 */
export interface YdbDatabaseServerlessArgs {
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Location ID for the Yandex Database serverless cluster.
     */
    locationId?: pulumi.Input<string>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    serverlessDatabases?: pulumi.Input<pulumi.Input<inputs.YdbDatabaseServerlessServerlessDatabase>[]>;
    sleepAfter?: pulumi.Input<number>;
}
