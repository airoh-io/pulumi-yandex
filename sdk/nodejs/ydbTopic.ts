// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manage a YDB Topic. For more information, see [the official documentation](https://yandex.cloud/docs/ydb/concepts/#ydb).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@airoh-io/pulumi-yandex";
 *
 * const databaseName = new yandex.YdbDatabaseServerless("databaseName", {locationId: "ru-central1"});
 * //
 * // Create a new YDB Topic.
 * //
 * const myTopic = new yandex.YdbTopic("myTopic", {
 *     databaseEndpoint: databaseName.ydbFullEndpoint,
 *     supportedCodecs: [
 *         "raw",
 *         "gzip",
 *     ],
 *     partitionsCount: 1,
 *     retentionPeriodMs: 2000000,
 *     consumers: [{
 *         name: "consumer-name",
 *         supportedCodecs: [
 *             "raw",
 *             "gzip",
 *         ],
 *         startingMessageTimestampMs: 0,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * The resource can be imported by using their `resource ID`. For getting the resource ID you can use Yandex Cloud [Web Console](https://console.yandex.cloud) or [YC CLI](https://yandex.cloud/docs/cli/quickstart).
 *
 * ```sh
 * $ pulumi import yandex:index/ydbTopic:YdbTopic <resource Name> <resource Id>
 * ```
 *
 * ```sh
 * $ pulumi import yandex:index/ydbTopic:YdbTopic my_topic ...
 * ```
 */
export class YdbTopic extends pulumi.CustomResource {
    /**
     * Get an existing YdbTopic resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: YdbTopicState, opts?: pulumi.CustomResourceOptions): YdbTopic {
        return new YdbTopic(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/ydbTopic:YdbTopic';

    /**
     * Returns true if the given object is an instance of YdbTopic.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is YdbTopic {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === YdbTopic.__pulumiType;
    }

    declare public readonly autoPartitioningSettings: pulumi.Output<outputs.YdbTopicAutoPartitioningSettings>;
    /**
     * Topic Readers.
     */
    declare public readonly consumers: pulumi.Output<outputs.YdbTopicConsumer[]>;
    /**
     * YDB database endpoint.
     */
    declare public readonly databaseEndpoint: pulumi.Output<string>;
    /**
     * Topic description.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Number of max active partitions. Default value `1`.
     */
    declare public readonly maxPartitionsCount: pulumi.Output<number>;
    /**
     * Resource metering mode (`reservedCapacity` - based on the allocated resources or `requestUnits` - based on actual usage). This option applies to topics in serverless databases.
     */
    declare public readonly meteringMode: pulumi.Output<string>;
    /**
     * Topic name.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Maximum allowed write speed per partition. If a write speed for a given partition exceeds this value, the write speed will be capped. Default value: `1024 (1MB)`.
     */
    declare public readonly partitionWriteSpeedKbps: pulumi.Output<number>;
    /**
     * Number of min partitions. Default value `1`.
     */
    declare public readonly partitionsCount: pulumi.Output<number>;
    /**
     * Data retention time. Default value `86400000`.
     */
    declare public readonly retentionPeriodHours: pulumi.Output<number>;
    declare public readonly retentionStorageMb: pulumi.Output<number>;
    /**
     * Supported data encodings. Can be one of `gzip`, `raw` or `zstd`.
     */
    declare public readonly supportedCodecs: pulumi.Output<string[]>;

    /**
     * Create a YdbTopic resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: YdbTopicArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: YdbTopicArgs | YdbTopicState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as YdbTopicState | undefined;
            resourceInputs["autoPartitioningSettings"] = state?.autoPartitioningSettings;
            resourceInputs["consumers"] = state?.consumers;
            resourceInputs["databaseEndpoint"] = state?.databaseEndpoint;
            resourceInputs["description"] = state?.description;
            resourceInputs["maxPartitionsCount"] = state?.maxPartitionsCount;
            resourceInputs["meteringMode"] = state?.meteringMode;
            resourceInputs["name"] = state?.name;
            resourceInputs["partitionWriteSpeedKbps"] = state?.partitionWriteSpeedKbps;
            resourceInputs["partitionsCount"] = state?.partitionsCount;
            resourceInputs["retentionPeriodHours"] = state?.retentionPeriodHours;
            resourceInputs["retentionStorageMb"] = state?.retentionStorageMb;
            resourceInputs["supportedCodecs"] = state?.supportedCodecs;
        } else {
            const args = argsOrState as YdbTopicArgs | undefined;
            if (args?.databaseEndpoint === undefined && !opts.urn) {
                throw new Error("Missing required property 'databaseEndpoint'");
            }
            resourceInputs["autoPartitioningSettings"] = args?.autoPartitioningSettings;
            resourceInputs["consumers"] = args?.consumers;
            resourceInputs["databaseEndpoint"] = args?.databaseEndpoint;
            resourceInputs["description"] = args?.description;
            resourceInputs["maxPartitionsCount"] = args?.maxPartitionsCount;
            resourceInputs["meteringMode"] = args?.meteringMode;
            resourceInputs["name"] = args?.name;
            resourceInputs["partitionWriteSpeedKbps"] = args?.partitionWriteSpeedKbps;
            resourceInputs["partitionsCount"] = args?.partitionsCount;
            resourceInputs["retentionPeriodHours"] = args?.retentionPeriodHours;
            resourceInputs["retentionStorageMb"] = args?.retentionStorageMb;
            resourceInputs["supportedCodecs"] = args?.supportedCodecs;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(YdbTopic.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering YdbTopic resources.
 */
export interface YdbTopicState {
    autoPartitioningSettings?: pulumi.Input<inputs.YdbTopicAutoPartitioningSettings>;
    /**
     * Topic Readers.
     */
    consumers?: pulumi.Input<pulumi.Input<inputs.YdbTopicConsumer>[]>;
    /**
     * YDB database endpoint.
     */
    databaseEndpoint?: pulumi.Input<string>;
    /**
     * Topic description.
     */
    description?: pulumi.Input<string>;
    /**
     * Number of max active partitions. Default value `1`.
     */
    maxPartitionsCount?: pulumi.Input<number>;
    /**
     * Resource metering mode (`reservedCapacity` - based on the allocated resources or `requestUnits` - based on actual usage). This option applies to topics in serverless databases.
     */
    meteringMode?: pulumi.Input<string>;
    /**
     * Topic name.
     */
    name?: pulumi.Input<string>;
    /**
     * Maximum allowed write speed per partition. If a write speed for a given partition exceeds this value, the write speed will be capped. Default value: `1024 (1MB)`.
     */
    partitionWriteSpeedKbps?: pulumi.Input<number>;
    /**
     * Number of min partitions. Default value `1`.
     */
    partitionsCount?: pulumi.Input<number>;
    /**
     * Data retention time. Default value `86400000`.
     */
    retentionPeriodHours?: pulumi.Input<number>;
    retentionStorageMb?: pulumi.Input<number>;
    /**
     * Supported data encodings. Can be one of `gzip`, `raw` or `zstd`.
     */
    supportedCodecs?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a YdbTopic resource.
 */
export interface YdbTopicArgs {
    autoPartitioningSettings?: pulumi.Input<inputs.YdbTopicAutoPartitioningSettings>;
    /**
     * Topic Readers.
     */
    consumers?: pulumi.Input<pulumi.Input<inputs.YdbTopicConsumer>[]>;
    /**
     * YDB database endpoint.
     */
    databaseEndpoint: pulumi.Input<string>;
    /**
     * Topic description.
     */
    description?: pulumi.Input<string>;
    /**
     * Number of max active partitions. Default value `1`.
     */
    maxPartitionsCount?: pulumi.Input<number>;
    /**
     * Resource metering mode (`reservedCapacity` - based on the allocated resources or `requestUnits` - based on actual usage). This option applies to topics in serverless databases.
     */
    meteringMode?: pulumi.Input<string>;
    /**
     * Topic name.
     */
    name?: pulumi.Input<string>;
    /**
     * Maximum allowed write speed per partition. If a write speed for a given partition exceeds this value, the write speed will be capped. Default value: `1024 (1MB)`.
     */
    partitionWriteSpeedKbps?: pulumi.Input<number>;
    /**
     * Number of min partitions. Default value `1`.
     */
    partitionsCount?: pulumi.Input<number>;
    /**
     * Data retention time. Default value `86400000`.
     */
    retentionPeriodHours?: pulumi.Input<number>;
    retentionStorageMb?: pulumi.Input<number>;
    /**
     * Supported data encodings. Can be one of `gzip`, `raw` or `zstd`.
     */
    supportedCodecs?: pulumi.Input<pulumi.Input<string>[]>;
}
